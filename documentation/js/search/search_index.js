var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.064,1,0.853]],["body/components/AddExpenseComponent.html",[0,0.113,1,1.267,2,0.872,3,0.124,4,0.124,5,0.712,6,0.864,7,0.618,8,0.618,9,0.093,10,6.292,11,5.615,12,2.4,13,0.493,14,4.934,15,0.759,16,1.982,17,2.471,18,4.261,19,1.588,20,5.061,21,2.91,22,4.14,23,1.925,24,2.581,25,0.56,26,1.503,27,1.096,28,1.191,29,1.04,30,1.558,31,0.571,32,1.009,33,3.444,34,1.455,35,1.267,36,1.822,37,4.934,38,1.009,39,4.14,40,0.124,41,0.417,42,4.934,43,4.934,44,4.934,45,4.934,46,4.934,47,4.934,48,3.785,49,4.934,50,4.934,51,0.417,52,5.457,53,5.457,54,2.161,55,3.559,56,5.457,57,5.457,58,5.457,59,4.14,60,4.14,61,0.669,62,2.4,63,4.261,64,2.856,65,3.196,66,0.786,67,4.14,68,2.471,69,2.039,70,0.753,71,0.019,72,0.325,73,0.304,74,0.669,75,3.444,76,0.539,77,2.161,78,2.414,79,0.628,80,1.145,81,2.89,82,2.793,83,0.712,84,4.14,85,0.588,86,4.41,87,4.14,88,2.793,89,2.89,90,3.559,91,3.246,92,0.669,93,2.793,94,1.558,95,1.822,96,2.039,97,3.559,98,2.793,99,1.822,100,1.047,101,2.661,102,4.261,103,2.57,104,2.793,105,2.89,106,2.354,107,2.166,108,4.14,109,2.793,110,3.559,111,2.308,112,2.793,113,2.89,114,0.789,115,1.777,116,2.57,117,4.14,118,0.429,119,2.793,120,5.457,121,5.797,122,5.457,123,4.14,124,2.793,125,2.751,126,1.667,127,4.14,128,2.308,129,2.606,130,1.395,131,2.793,132,1.281,133,1.091,134,0.774,135,0.823,136,2.793,137,4.186,138,1.149,139,2.793,140,2.793,141,2.538,142,3.809,143,2.793,144,2.581,145,2.793,146,1.822,147,0.961,148,1.1,149,2.793,150,3.508,151,2.855,152,2.793,153,0.237,154,1.949,155,1.557,156,0.108,157,1.949,158,1.299,159,1.667,160,2.793,161,1.949,162,2.4,163,0.785,164,1.795,165,0.108,166,0.124,167,0.658,168,0.642,169,2.793,170,2.793,171,1.795,172,2.793,173,2.171,174,4.14,175,4.14,176,2.793,177,0.938,178,1.949,179,4.261,180,2.793,181,2.793,182,2.058,183,2.039,184,4.691,185,2.793,186,2.793,187,2.039,188,4.934,189,2.4,190,3.176,191,2.4,192,0.823,193,1.949,194,3.559,195,2.142,196,2.793,197,2.142,198,1.227,199,2.793,200,4.14,201,2.793,202,2.793,203,2.793,204,2.793,205,2.793,206,2.793,207,2.793,208,1.106,209,2.793,210,2.793,211,2.793,212,1.557,213,1.461,214,1,215,1.682,216,2.793,217,1.949,218,2.793,219,4.934,220,2.142,221,2.793,222,1.727,223,4.14,224,2.793,225,2.793,226,4.934,227,2.793,228,2.793,229,2.793,230,2.793,231,4.14,232,4.934,233,4.14,234,2.793,235,2.793,236,2.793,237,2.793,238,4.934,239,4.14,240,2.793,241,2.793,242,2.793,243,3.176,244,4.14,245,4.14,246,4.529,247,2.166,248,1.344,249,3.559,250,3.176,251,3.809,252,3.809,253,2.308,254,3.559,255,1.925,256,2.166,257,0.648,258,0.916,259,0.714,260,1.395,261,0.714,262,0.714,263,0.648,264,0.714,265,0.618,266,1.058,267,0.68,268,0.714,269,0.648,270,0.714,271,0.714,272,0.618,273,0.532,274,1.058,275,0.648,276,0.588,277,0.714,278,0.648,279,0.714,280,0.648,281,0.714,282,0.618,283,0.714,284,0.618,285,0.588,286,0.714,287,0.648,288,0.714,289,0.648,290,0.714,291,0.714,292,0.648,293,0.714,294,0.648,295,0.714,296,0.648,297,0.68,298,0.431,299,0.714,300,0.648,301,0.714,302,0.648,303,0.714,304,0.648,305,0.68,306,0.714,307,0.648,308,0.532,309,0.714,310,0.648,311,0.68,312,0.714,313,0.68,314,0.714,315,0.648,316,0.714,317,0.532,318,0.56,319,0.618,320,0.714,321,0.714,322,0.01,323,0.01]],["title/components/AiComponent.html",[0,0.064,263,0.853]],["body/components/AiComponent.html",[0,0.117,1,0.946,2,1.137,3,0.181,4,0.181,5,0.928,7,0.901,8,0.901,9,0.136,13,0.436,19,0.946,25,0.816,26,1.55,27,1.13,28,0.7,29,0.789,30,2.032,31,0.745,32,1.315,34,1.786,35,0.946,38,1.315,40,0.181,41,0.544,51,0.544,61,0.79,66,0.696,68,3.223,70,0.562,71,0.019,72,0.304,73,0.269,74,0.499,79,0.621,80,0.946,85,0.355,99,2.376,100,0.595,106,2.369,118,0.252,130,1.38,134,0.662,135,0.703,138,1.452,147,1.253,153,0.273,156,0.158,158,1.894,163,1.145,165,0.158,166,0.181,167,0.582,168,0.703,177,0.928,192,0.788,252,3.768,257,0.946,258,1.627,259,1.041,260,1.648,261,1.041,262,1.041,263,1.497,264,1.041,265,0.901,266,1.38,267,0.992,268,1.041,269,0.946,270,1.041,271,1.041,272,0.901,273,0.776,274,1.38,275,0.946,276,0.858,277,1.041,278,0.946,279,1.041,280,0.946,281,1.041,282,0.901,283,1.041,284,0.901,285,0.858,286,1.041,287,0.946,288,1.041,289,0.946,290,1.041,291,1.041,292,0.946,293,1.041,294,0.946,295,1.041,296,0.946,297,0.992,298,0.629,299,1.041,300,0.946,301,1.041,302,0.946,303,1.041,304,0.946,305,0.992,306,1.041,307,0.946,308,0.776,309,1.041,310,0.946,311,0.992,312,1.041,313,0.992,314,1.041,315,0.946,316,1.041,317,0.776,318,0.816,319,0.901,320,1.041,321,1.041,322,0.013,323,0.013,324,3.501,325,3.875,326,5.399,327,2.824,328,4.432,329,3.206,330,1.933,331,5.399,332,5.542,333,4.641,334,5.542,335,6.448,336,3.176,337,6.894,338,3.376,339,5.205,340,5.399,341,2.511,342,5.399,343,6.056,344,6.056,345,3.168,346,6.894,347,4.073,348,4.5,349,6.894,350,6.448,351,5.399,352,3.47,353,6.056,354,4.141,355,2.032,356,5.399,357,3.47,358,4.073,359,5.399,360,5.399,361,2.252,362,5.399,363,6.448,364,1.728,365,4.641,366,4.073,367,1.933,368,5.399,369,2.006,370,3.125,371,1.322,372,4.641,373,4.073,374,3.125,375,3.501,376,4.073,377,4.073,378,4.073,379,4.073,380,2.431,381,3.501,382,6.056,383,2.131,384,4.073,385,5.399,386,4.073,387,4.073,388,4.073,389,3.47,390,5.399]],["title/components/AppComponent.html",[0,0.064,265,0.813]],["body/components/AppComponent.html",[0,0.11,1,1.261,2,0.865,3,0.182,4,0.123,5,0.707,6,0.855,7,0.611,8,0.611,9,0.092,11,2.121,13,0.491,19,0.642,25,0.554,26,1.502,27,1.114,28,0.475,29,0.601,30,1.547,31,0.75,32,1.001,34,1.447,35,0.642,36,1.809,38,1.001,40,0.123,41,0.414,51,0.414,54,2.151,61,0.666,65,3.187,66,0.772,68,1.651,70,0.801,71,0.019,72,0.324,73,0.28,74,0.711,79,0.811,80,1.261,85,0.531,92,0.51,94,1.547,95,1.809,96,2.025,100,0.404,107,3.036,114,1.2,118,0.36,126,2.453,130,1.05,133,0.611,134,0.711,135,0.756,138,1.362,141,1.286,146,1.809,147,0.954,148,1.113,153,0.289,154,1.93,156,0.159,163,0.777,164,1.778,165,0.107,166,0.123,167,0.726,168,0.861,171,1.778,192,0.535,198,0.582,248,0.898,257,0.642,258,0.909,259,0.707,260,1.388,261,0.707,262,0.707,263,1.261,264,0.707,265,1.345,266,1.05,267,1.323,268,0.707,269,1.261,270,0.707,271,0.707,272,0.611,273,0.527,274,1.05,275,0.642,276,0.582,277,0.707,278,0.642,279,0.707,280,1.261,281,0.707,282,0.611,283,0.707,284,1.201,285,1.222,286,0.707,287,0.642,288,0.707,289,0.642,290,0.707,291,0.707,292,1.261,293,0.707,294,1.261,295,1.254,296,1.139,297,1.323,298,0.427,299,0.707,300,1.261,301,0.707,302,1.261,303,0.707,304,0.642,305,0.674,306,0.707,307,0.642,308,0.527,309,0.707,310,0.642,311,0.674,312,0.707,313,1.323,314,0.707,315,1.261,316,0.707,317,0.527,318,0.554,319,1.201,320,0.707,321,0.707,322,0.01,323,0.01,329,1.911,352,2.642,355,2.289,364,0.741,371,1.334,375,2.377,391,2.377,392,1.201,393,2.421,394,2.869,395,2.025,396,4.516,397,3.036,398,4.989,399,4.016,400,4.668,401,3.236,402,4.049,403,3.153,404,5.071,405,2.444,406,4.11,407,4.906,408,4.11,409,4.217,410,4.906,411,4.906,412,4.906,413,4.906,414,4.217,415,3.763,416,2.532,417,4.906,418,4.668,419,4.906,420,4.11,421,4.11,422,3.153,423,4.11,424,4.11,425,2.377,426,3.862,427,2.675,428,3.608,429,2.435,430,6.728,431,4.516,432,4.668,433,1.654,434,4.11,435,6.611,436,1.628,437,4.989,438,1.846,439,2.735,440,4.11,441,2.996,442,1.471,443,1.714,444,3.424,445,3.153,446,3.533,447,2.869,448,1.911,449,3.533,450,2.045,451,2.869,452,1.714,453,3.153,454,3.254,455,2.765,456,3.424,457,4.11,458,4.11,459,3.153,460,3.533,461,2.025,462,2.292,463,4.11,464,3.533,465,2.765,466,4.11,467,1.846,468,6.083,469,2.765,470,1.651,471,1.362,472,2.765,473,1.778,474,2.765,475,2.121,476,2.765,477,2.869,478,5.414,479,4.615,480,1.942,481,2.765,482,1.153,483,2.281,484,1.772,485,1.362,486,2.765,487,2.453,488,2.642,489,4.11,490,3.153,491,3.153,492,2.292,493,4.11,494,4.11,495,2.765,496,2.765,497,3.242,498,2.765,499,1.628,500,2.025,501,1.846,502,2.765,503,2.765,504,5.228,505,2.177,506,4.11,507,3.464,508,2.765,509,4.11,510,4.11,511,3.533,512,2.765,513,2.642,514,2.292,515,2.642,516,2.765,517,2.377,518,2.377,519,4.11,520,2.377,521,1.542,522,1.93,523,2.765,524,2.765,525,2.765,526,2.377,527,2.377,528,2.15,529,2.377,530,2.765,531,2.765,532,2.765,533,2.765,534,2.377,535,2.765,536,2.765,537,2.765,538,2.765,539,2.765,540,2.765,541,3.153,542,2.765,543,2.765,544,1.542,545,1.778,546,1.651,547,1.93,548,2.765,549,2.121,550,2.765,551,2.377,552,2.765,553,2.377,554,1.93,555,2.765,556,2.377,557,1.362,558,1.447,559,2.765,560,2.765,561,2.377,562,2.765,563,1.471,564,2.765,565,2.765,566,2.765,567,2.765,568,2.765,569,3.533,570,4.11,571,2.765,572,2.765,573,2.025,574,2.765,575,2.765,576,2.765,577,2.765,578,1.93,579,1.651,580,4.11,581,2.121,582,1.153,583,2.765,584,2.765,585,2.765,586,1.778,587,4.166,588,1.778,589,2.765,590,2.765,591,2.765,592,1.286,593,2.765,594,2.377,595,1.542,596,2.377,597,1.93,598,2.765,599,1.778,600,4.906,601,3.533,602,2.765,603,1.778,604,2.765,605,2.765,606,2.765,607,4.11,608,3.533,609,2.765,610,2.765,611,1.778,612,2.377,613,4.11,614,1.93,615,1.93,616,2.121,617,2.765,618,2.765,619,2.869,620,2.765,621,2.642,622,2.765,623,0.815]],["title/interfaces/Budget.html",[624,0.666,625,1.618]],["body/interfaces/Budget.html",[3,0.191,4,0.191,9,0.143,13,0.348,15,0.729,28,0.963,31,0.595,40,0.191,41,0.565,51,0.434,61,0.528,71,0.019,73,0.293,76,0.561,77,1.706,79,0.645,83,0.74,85,0.489,92,0.619,111,2.402,115,1.766,118,0.469,129,2.774,133,1.548,141,2.003,148,0.702,153,0.217,156,0.167,165,0.217,166,0.191,167,0.755,168,0.729,177,1.226,192,0.729,253,3.674,298,0.961,322,0.014,323,0.014,361,2.749,371,2.139,392,0.952,405,2.228,429,2.48,436,1.706,438,1.621,442,2.552,443,2.974,450,1.818,452,2.336,467,1.621,470,2.571,471,3.065,480,1.706,482,1.797,484,1.501,485,2.122,579,2.571,624,1.127,625,3.405,626,1.895,627,3.304,628,2.108,629,4.391,630,5.24,631,3.064,632,3.064,633,2.02,634,4.774,635,4.814,636,4.814,637,2.218,638,2.93,639,5.664,640,4.599,641,2.759,642,0.645,643,2.253,644,2.122,645,4.976,646,1.542,647,2.759,648,2.253,649,2.769,650,3.304,651,1.732,652,1.155,653,3.343,654,3.006,655,3.304,656,1.797,657,1.895,658,2.336,659,2.108,660,2.003,661,1.797,662,1.895,663,1.797,664,2.571,665,3.365,666,3.304,667,2.122,668,3.702,669,4.814,670,3.702,671,2.571,672,2.571,673,3.715,674,2.571,675,2.571,676,3.006,677,5.349,678,3.715,679,2.003,680,3.006,681,3.702,682,2.759,683,3.006,684,3.715,685,2.604,686,2.003,687,3.702,688,3.343,689,4.814,690,2.464,691,3.006,692,2.571,693,3.702,694,3.006,695,3.006,696,2.003,697,3.702,698,3.702]],["title/injectables/BudgetService.html",[642,0.423,653,2.195]],["body/injectables/BudgetService.html",[3,0.172,4,0.172,9,0.129,13,0.549,15,0.823,28,1.169,31,0.721,40,0.172,51,0.637,61,0.64,66,0.749,70,0.911,71,0.019,72,0.331,73,0.293,74,0.809,76,0.68,77,2.069,79,0.728,83,0.898,85,0.616,92,0.664,111,2.913,115,1.4,118,0.452,129,2.658,133,1.614,141,2.43,148,0.852,153,0.203,156,0.15,165,0.203,166,0.172,167,0.733,168,0.823,177,1.194,192,0.68,253,3.525,298,1.05,322,0.013,323,0.013,361,2.753,371,2.293,392,0.858,405,2.529,429,2.614,436,2.069,438,1.966,442,2.663,443,3.102,450,2.052,452,2.637,467,1.459,470,3.118,471,2.91,480,2.069,482,2.179,484,1.584,485,2.573,579,3.118,624,0.946,625,3.397,627,2.975,628,1.459,629,4.466,630,5.216,631,1.803,632,1.803,633,1.259,634,4.532,635,3.333,636,3.333,637,1.536,638,2.029,639,4.491,640,3.647,641,1.91,642,0.601,643,2.029,644,2.573,645,5.191,646,1.87,647,3.348,648,2.733,649,3.358,650,4.007,651,1.956,652,1.039,653,3.773,654,3.647,655,4.007,656,2.179,657,2.782,658,2.179,659,1.966,660,1.803,661,2.179,662,2.299,663,2.179,664,3.773,665,3.25,666,2.975,667,2.573,668,4.491,669,5.434,670,4.491,671,3.118,672,3.526,673,3.526,674,2.315,675,2.315,676,2.707,677,5.078,678,3.526,679,2.43,680,3.647,681,4.491,682,3.114,683,3.647,684,3.939,685,3.069,686,2.43,687,4.491,688,3.118,689,4.491,690,2.339,691,2.707,692,3.118,693,4.491,694,2.707,695,3.647,696,2.43,697,4.491,698,3.333,699,1.322,700,5.224,701,2.707,702,3.878,703,3.878,704,3.878,705,3.878,706,3.878,707,3.878,708,3.878]],["title/components/CalendarComponent.html",[0,0.064,269,0.853]],["body/components/CalendarComponent.html",[0,0.103,1,0.666,2,0.889,3,0.127,4,0.127,5,0.726,7,0.634,8,0.634,9,0.095,13,0.497,15,0.869,16,2.424,19,0.666,21,1.672,23,1.964,24,2.622,25,0.575,26,1.507,27,1.099,28,0.493,29,0.956,31,0.396,32,1.029,34,1.478,35,0.666,38,1.029,40,0.127,41,0.426,51,0.426,54,2.189,61,0.517,64,2.804,66,0.785,70,0.813,71,0.019,72,0.319,73,0.312,74,0.722,76,0.55,79,0.678,80,0.666,83,0.726,85,0.538,91,1.858,92,0.647,94,1.589,95,1.858,96,2.08,100,0.419,103,1.672,107,2.209,114,1.272,115,1.845,116,1.672,118,0.436,130,1.079,133,1.108,134,0.818,135,0.869,138,1.241,142,2.002,148,0.901,153,0.214,156,0.111,159,1.712,163,0.806,165,0.111,166,0.127,167,0.665,168,0.373,173,1.262,192,0.869,194,4.752,198,1.494,208,1.136,214,1.512,243,3.239,247,2.209,248,1.371,257,0.666,258,0.934,259,0.733,260,1.575,261,0.733,262,0.733,263,0.666,264,0.733,265,0.634,266,1.079,267,0.699,268,0.733,269,1.431,270,0.733,271,0.733,272,0.634,273,0.547,274,1.079,275,0.666,276,0.604,277,0.733,278,0.666,279,0.733,280,0.666,281,0.733,282,0.634,283,0.733,284,0.634,285,0.604,286,0.733,287,0.666,288,0.733,289,0.666,290,0.733,291,0.733,292,0.666,293,0.733,294,0.666,295,0.733,296,0.666,297,0.699,298,0.774,299,0.733,300,0.666,301,0.733,302,0.666,303,0.733,304,0.666,305,0.699,306,0.733,307,0.666,308,0.547,309,0.733,310,0.666,311,0.699,312,0.733,313,0.699,314,0.733,315,0.666,316,0.733,317,0.547,318,0.575,319,0.634,320,0.733,321,0.733,322,0.01,323,0.01,330,1.512,341,1.964,355,1.589,357,2.715,364,1.132,367,1.027,397,3.225,400,3.63,415,3.845,416,2.59,442,1.512,443,1.762,500,2.08,501,2.218,505,1.512,544,1.599,557,2.08,573,1.413,592,1.964,621,1.844,623,1.478,631,1.964,632,2.571,633,2.261,638,1.501,641,1.413,648,1.501,663,1.762,709,2.466,710,4.752,711,3.498,712,5.081,713,1.589,714,3.554,715,4.813,716,4.223,717,2.715,718,3.63,719,4.223,720,5.012,721,5.12,722,4.752,723,4.157,724,4.241,725,3.712,726,3.903,727,4.223,728,4.223,729,5.012,730,5.893,731,3.43,732,3.845,733,3.845,734,5.012,735,5.893,736,5.012,737,5.893,738,5.012,739,4.223,740,4.223,741,4.752,742,4.223,743,4.223,744,2.466,745,4.223,746,2.593,747,2.795,748,2.868,749,2.868,750,2.469,751,1.599,752,3.3,753,3.3,754,3.3,755,4.223,756,2.868,757,3.239,758,5.893,759,2.948,760,1.964,761,3.239,762,2.868,763,2.715,764,4.223,765,2.868,766,4.223,767,2.868,768,4.223,769,2.868,770,3.601,771,4.728,772,5.066,773,2.868,774,2.355,775,2.868,776,2.948,777,3.3,778,3.63,779,2.948,780,2.868,781,3.239,782,4.223,783,2.868,784,4.223,785,2.868,786,2.868,787,2.868,788,3.239,789,2.868,790,2.715,791,2.868,792,2.868,793,3.63,794,3.63,795,3.63,796,3.63,797,3.63,798,3.63,799,3.63,800,4.223,801,3.63,802,2.2,803,2.2,804,4.223,805,5.893,806,2.868,807,2.868,808,2.2,809,4.223,810,4.752,811,2.868,812,4.223,813,4.223,814,4.223,815,5.012,816,2.868,817,2.466,818,2.868,819,2.868,820,2.868,821,2.868,822,2.868,823,2.868,824,1.334,825,2.466,826,1.439,827,2.868,828,2.466,829,2.868,830,2.868,831,2.868,832,2.868,833,3.239,834,2.868,835,2.868,836,2.868,837,4.223,838,2.868,839,2.466,840,2.868,841,2.868,842,2.868,843,4.223,844,2.521,845,1.413,846,1.334,847,2.868,848,2.868,849,4.223,850,2.002,851,2.715,852,2.715,853,2.715,854,3.239,855,2.948,856,2.948,857,2.948,858,2.948]],["title/interfaces/Category.html",[100,0.537,624,0.666]],["body/interfaces/Category.html",[3,0.171,4,0.171,9,0.128,13,0.31,15,0.676,16,2.25,29,0.92,31,0.531,40,0.171,41,0.524,51,0.388,61,0.471,71,0.019,72,0.347,73,0.308,76,0.5,77,1.522,79,0.677,83,0.661,85,0.513,92,0.592,100,1.136,111,2.144,114,0.733,118,0.471,132,1.607,133,1.393,138,1.385,141,2.415,147,1.206,148,0.627,153,0.244,156,0.149,165,0.201,166,0.171,167,0.748,168,0.766,177,1.241,182,3.099,192,0.93,198,1.238,222,2.166,298,0.973,322,0.013,323,0.013,371,1.909,392,0.85,405,2.106,416,2.371,429,2.371,436,1.522,438,1.447,442,2.481,443,2.891,450,2.25,451,2.683,452,2.166,467,1.447,470,2.295,471,2.897,480,1.522,482,1.604,483,1.788,484,1.392,485,1.894,499,2.057,500,3.103,505,1.859,586,2.471,588,2.471,623,1.134,624,1.065,626,1.692,628,2.371,633,2.25,637,2.057,642,0.598,643,2.011,644,1.894,646,1.376,647,2.558,649,2.471,651,1.189,652,1.03,656,1.604,657,1.692,658,2.166,659,1.955,660,1.788,661,2.166,662,1.692,663,1.604,664,2.295,665,3.241,671,2.295,672,2.295,673,3.511,674,2.295,675,2.295,678,3.1,679,1.788,682,1.894,684,3.511,685,2.415,686,1.788,688,2.295,690,2.057,692,2.295,695,2.683,746,1.692,826,2.403,851,2.471,859,2.949,860,3.984,861,5.655,862,3.102,863,3.512,864,4.137,865,3.511,866,3.984,867,3.339,868,4.464,869,4.464,870,3.1,871,3.625,872,2.896,873,2.896,874,4.464,875,3.305,876,3.305,877,2.907,878,2.144,879,2.683,880,2.949,881,3.305,882,2.717,883,2.683,884,2.471,885,2.683,886,1.522,887,3.781,888,3.305,889,2.011,890,2.949,891,3.305,892,3.305,893,3.305,894,3.305,895,3.305,896,2.471,897,3.339,898,3.305,899,3.305,900,4.464,901,2.683,902,1.604,903,3.305,904,3.305,905,2.683,906,2.295,907,3.305,908,3.305,909,3.305,910,3.305,911,2.683,912,5.056,913,3.305,914,3.305,915,2.683,916,2.471,917,3.305,918,3.305,919,3.305,920,2.011,921,3.305,922,3.305,923,4.464,924,3.305,925,3.625,926,3.305,927,3.305,928,3.305,929,2.949,930,3.305,931,3.305]],["title/components/CategoryDropdownComponent.html",[0,0.064,35,0.853]],["body/components/CategoryDropdownComponent.html",[0,0.116,1,0.781,2,0.997,3,0.149,4,0.149,5,0.814,6,1.041,7,1.212,8,0.744,9,0.112,13,0.506,15,0.438,19,0.781,25,0.674,26,1.528,27,1.114,28,0.578,29,0.87,30,1.783,31,0.654,32,1.154,34,1.617,35,1.382,36,2.085,38,1.154,40,0.149,41,0.478,48,4.812,51,0.478,54,2.357,61,0.672,66,0.786,68,2.828,70,0.821,71,0.019,72,0.342,73,0.323,74,0.836,79,0.749,80,0.781,85,0.547,89,4.154,92,0.661,96,2.333,99,2.085,100,1.121,101,3.045,102,5.116,103,2.703,106,1.932,118,0.403,125,3.057,126,2.828,128,2.641,130,1.521,133,1.048,134,0.903,135,0.817,138,0.997,144,2.478,146,2.085,147,1.382,148,0.97,151,3.114,153,0.231,154,2.348,155,1.876,156,0.13,161,5.116,163,0.946,165,0.13,166,0.243,167,0.642,168,0.438,190,2.581,191,2.892,192,0.438,198,0.997,257,0.781,258,1.048,259,0.86,260,1.521,261,0.86,262,0.86,263,0.781,264,0.86,265,0.744,266,1.211,267,0.82,268,0.86,269,0.781,270,0.86,271,0.86,272,0.744,273,0.641,274,1.211,275,0.781,276,0.708,277,0.86,278,0.781,279,0.86,280,0.781,281,0.86,282,0.744,283,0.86,284,0.744,285,0.708,286,0.86,287,0.781,288,0.86,289,0.781,290,0.86,291,0.86,292,0.781,293,0.86,294,0.781,295,0.86,296,0.781,297,0.82,298,0.969,299,0.86,300,0.781,301,0.86,302,0.781,303,0.86,304,0.781,305,0.82,306,0.86,307,0.781,308,0.641,309,0.86,310,0.781,311,0.82,312,0.86,313,0.82,314,0.86,315,0.781,316,0.86,317,0.641,318,0.674,319,0.744,320,0.86,321,0.86,322,0.011,323,0.011,352,3.045,395,2.333,416,2.569,422,3.634,453,2.581,454,3.054,456,4.154,462,3.057,484,1.27,521,2.641,544,1.876,587,3.634,588,2.163,877,2.954,882,3.498,887,3.045,932,6.3,933,2.892,934,3.307,935,3.552,936,3.552,937,5.483,938,4.737,939,5.483,940,5.483,941,5.952,942,4.737,943,4.737,944,5.952,945,2.203,946,6.273,947,5.483,948,2.641,949,5.483,950,4.072,951,2.892,952,4.737,953,4.154,954,4.075,955,3.365,956,4.183,957,5.952,958,4.565,959,3.365,960,3.045,961,4.072,962,4.072,963,4.737,964,3.365,965,3.552,966,3.365,967,2.892,968,4.737,969,4.713,970,3.273,971,4.206,972,3.273,973,3.365,974,3.365,975,4.737,976,4.072,977,4.737,978,3.365,979,3.365,980,3.045,981,3.365,982,4.737,983,3.365,984,2.828,985,2.348,986,1.147,987,3.365,988,4.713,989,3.365,990,4.737,991,4.737,992,4.737,993,6.273,994,3.365,995,2.892,996,2.581,997,2.581,998,3.365,999,3.365,1000,4.072,1001,4.737]],["title/injectables/CategoryService.html",[642,0.423,882,1.924]],["body/injectables/CategoryService.html",[3,0.156,4,0.156,9,0.117,13,0.533,15,0.79,16,2.198,28,0.841,29,0.932,31,0.675,40,0.156,51,0.612,61,0.599,66,0.745,70,0.881,71,0.019,72,0.351,73,0.283,74,0.782,76,0.637,77,1.937,79,0.76,83,0.841,85,0.619,92,0.649,100,1.133,111,2.727,114,0.932,118,0.452,132,1.09,133,1.498,138,1.426,141,1.638,147,0.818,148,0.798,153,0.235,156,0.137,165,0.19,166,0.156,167,0.731,168,0.83,177,1.22,182,3.077,192,0.913,198,1.183,222,1.469,298,1.066,322,0.012,323,0.012,371,2.144,392,0.779,405,2.472,416,2.598,429,2.549,436,1.937,438,1.841,442,2.626,443,3.06,450,2.305,451,2.459,452,2.533,467,1.326,470,2.92,471,2.768,480,1.937,482,2.041,483,1.638,484,1.506,485,2.41,499,1.395,500,2.41,505,1.261,586,2.264,588,2.264,623,1.039,624,0.886,628,1.841,633,2.071,637,1.395,642,0.563,643,1.843,644,2.41,646,1.751,647,3.252,649,3.145,651,1.513,652,0.944,656,2.041,657,2.672,658,2.041,659,1.841,660,1.638,661,2.533,662,2.153,663,2.041,664,3.624,665,3.143,671,2.92,672,3.355,673,3.355,674,2.103,675,2.103,678,2.92,679,2.275,682,2.41,684,3.808,685,2.967,686,2.275,688,2.103,690,1.937,692,2.92,695,3.414,699,1.2,701,2.459,746,2.153,826,1.915,851,2.264,859,2.702,860,2.702,861,4.205,862,2.473,863,1.964,864,3.808,865,3.355,866,2.702,867,2.264,868,3.028,869,3.028,870,2.103,871,2.459,872,1.964,873,1.964,874,3.028,875,3.028,876,3.028,877,2.996,878,2.727,879,3.414,880,3.752,881,4.205,882,3.177,883,3.414,884,3.145,885,3.414,886,1.937,887,4.245,888,4.205,889,2.559,890,3.752,891,4.205,892,4.205,893,4.205,894,4.205,895,5.219,896,2.264,897,3.145,898,3.028,899,3.028,900,4.205,901,2.459,902,1.469,903,3.028,904,3.028,905,2.459,906,2.103,907,3.028,908,3.028,909,3.028,910,4.205,911,3.414,912,4.831,913,4.205,914,3.028,915,3.414,916,3.145,917,4.205,918,4.205,919,3.028,920,1.843,921,3.028,922,3.028,923,4.205,924,3.028,925,3.414,926,3.028,927,3.028,928,3.028,929,3.752,930,4.205,931,3.028,1002,4.892,1003,3.523,1004,3.523,1005,3.523,1006,3.523,1007,3.523,1008,3.523,1009,3.523,1010,3.523]],["title/interfaces/ChatMessage.html",[624,0.666,1011,2.364]],["body/interfaces/ChatMessage.html",[3,0.167,4,0.167,9,0.125,13,0.303,15,0.489,20,2.622,25,1.308,40,0.167,41,0.515,61,0.46,71,0.019,72,0.351,73,0.29,76,0.489,78,2.081,79,0.589,83,0.646,85,0.587,114,1.244,118,0.44,135,0.897,138,1.574,146,1.653,153,0.261,156,0.146,165,0.198,166,0.167,167,0.726,168,0.85,177,1.184,192,0.925,198,0.791,208,1.487,214,1.345,215,1.28,255,1.747,276,1.077,285,0.791,298,0.58,308,1.189,322,0.012,323,0.014,325,2.675,327,1.965,328,4.011,329,3.261,336,2.863,345,1.965,355,1.414,364,1.007,367,2.467,369,1.85,380,4.292,383,1.965,389,2.415,392,0.831,394,2.622,426,2.242,427,3.073,433,1.307,439,2.094,441,1.85,479,4.057,505,1.345,513,2.415,522,2.622,528,1.965,545,2.415,546,2.242,563,1.83,624,1.052,626,1.653,642,0.589,651,1.582,652,1.007,659,1.414,662,1.653,663,1.567,682,1.85,686,1.747,750,2.518,761,2.881,770,1.965,774,2.094,844,3.052,845,1.85,846,1.747,870,3.052,902,1.567,1011,4.429,1012,2.881,1013,2.881,1014,3.922,1015,2.851,1016,3.132,1017,4.395,1018,2.902,1019,5.285,1020,5.379,1021,3.569,1022,2.302,1023,4.395,1024,3.241,1025,3.922,1026,4.395,1027,2.622,1028,2.881,1029,2.415,1030,3.736,1031,3.229,1032,4.459,1033,5.794,1034,2.881,1035,4.185,1036,4.395,1037,4.996,1038,4.786,1039,2.415,1040,3.229,1041,3.229,1042,3.229,1043,2.881,1044,2.881,1045,2.881,1046,2.881,1047,2.851,1048,3.229,1049,2.415,1050,1.747,1051,2.415,1052,4.459,1053,2.415,1054,3.229,1055,2.881,1056,2.094,1057,3.229,1058,3.229,1059,3.229,1060,2.881,1061,2.881,1062,2.242,1063,4.395,1064,5.788,1065,3.073,1066,3.229,1067,2.881,1068,2.622,1069,4.459,1070,3.922,1071,3.287,1072,2.851,1073,4.395,1074,3.922,1075,3.229,1076,2.094,1077,3.229,1078,2.415,1079,1.965,1080,2.518,1081,4.395,1082,5.61,1083,1.747,1084,2.622,1085,3.229,1086,2.242,1087,3.229,1088,3.229,1089,3.922,1090,3.229,1091,3.229,1092,3.229,1093,3.229,1094,3.922,1095,3.229,1096,3.229,1097,3.229,1098,3.229,1099,3.229,1100,3.229,1101,3.922,1102,4.395,1103,4.786,1104,4.395,1105,3.229,1106,2.881,1107,2.851,1108,3.922,1109,3.229,1110,3.229,1111,3.229,1112,3.229,1113,3.229,1114,3.229,1115,3.229,1116,3.229,1117,3.229,1118,3.229,1119,4.459,1120,3.229,1121,2.881,1122,2.622,1123,3.229,1124,2.622,1125,3.229,1126,2.881,1127,3.229,1128,3.229,1129,2.622,1130,2.242,1131,3.229,1132,3.229,1133,4.395,1134,2.881,1135,2.415,1136,3.229,1137,3.229,1138,2.622,1139,2.881,1140,3.229,1141,3.922,1142,3.229,1143,2.881,1144,2.881,1145,3.922,1146,2.675,1147,2.415,1148,2.518,1149,2.622,1150,3.922,1151,2.415,1152,2.881,1153,2.881,1154,4.459,1155,2.881,1156,2.881,1157,2.881,1158,2.242,1159,2.881]],["title/interfaces/CompoDocConfig.html",[624,0.666,1160,2.364]],["body/interfaces/CompoDocConfig.html",[0,0.065,3,0.165,4,0.165,5,1.286,6,0.749,7,0.535,8,0.535,9,0.223,15,0.713,17,3.03,23,1.126,24,1.944,26,0.485,31,0.624,40,0.107,41,0.456,54,0.958,61,0.297,69,1.192,71,0.019,72,0.121,73,0.327,74,0.936,92,0.477,94,0.911,115,0.996,118,0.442,125,2.522,134,0.622,144,1.266,147,1.578,148,0.828,153,0.212,155,1.349,156,0.094,165,0.094,166,0.107,168,0.874,173,1.635,177,1.095,192,0.874,198,1.413,208,2.289,212,1.349,213,1.944,214,1.96,215,2.216,222,1.55,248,1.206,273,0.862,298,0.93,308,0.461,317,0.461,318,1.345,322,0.009,323,0.009,336,3.445,345,3.25,364,1.36,367,1.96,369,1.192,383,3.461,392,0.535,461,2.228,483,1.126,484,2.073,499,0.958,507,1.445,558,1.266,563,1.33,573,1.192,579,2.218,582,1.01,595,1.349,611,1.556,614,1.689,615,3.158,619,3.158,621,2.389,623,1.497,624,0.819,626,1.065,633,1.206,656,1.01,667,1.192,679,1.126,685,1.126,690,0.958,696,2.104,717,4.315,760,1.126,776,3.822,824,1.126,826,2.401,845,2.697,846,2.104,862,1.065,878,2.522,886,0.958,956,2.389,960,2.908,1016,1.126,1018,2.104,1022,2.168,1024,2.072,1047,1.349,1050,1.126,1065,2.228,1076,3.223,1130,1.445,1146,1.266,1148,1.192,1160,2.908,1161,1.192,1162,1.349,1163,1.689,1164,3.893,1165,3.893,1166,3.893,1167,3.893,1168,3.893,1169,3.893,1170,3.893,1171,3.893,1172,3.893,1173,3.893,1174,3.893,1175,3.893,1176,3.893,1177,3.893,1178,3.893,1179,3.893,1180,3.893,1181,3.893,1182,3.893,1183,3.893,1184,3.893,1185,3.893,1186,4.201,1187,2.594,1188,1.944,1189,1.689,1190,1.944,1191,2.908,1192,1.689,1193,1.944,1194,1.445,1195,1.689,1196,2.389,1197,3.52,1198,2.851,1199,1.856,1200,1.349,1201,4.201,1202,2.072,1203,2.851,1204,1.856,1205,3.802,1206,2.908,1207,4.253,1208,2.389,1209,1.01,1210,2.072,1211,1.856,1212,1.556,1213,5.441,1214,1.349,1215,3.158,1216,2.072,1217,1.556,1218,1.856,1219,1.689,1220,1.856,1221,1.856,1222,2.389,1223,1.856,1224,2.851,1225,1.856,1226,1.856,1227,1.445,1228,3.822,1229,2.851,1230,4.981,1231,3.47,1232,3.47,1233,1.856,1234,4.951,1235,2.389,1236,1.856,1237,1.689,1238,1.856,1239,1.856,1240,1.856,1241,1.689,1242,1.689,1243,3.158,1244,3.47,1245,3.593,1246,3.45,1247,3.149,1248,4.434,1249,3.893,1250,3.9,1251,3.893,1252,4.53,1253,3.03,1254,4.201,1255,4.201,1256,4.434,1257,1.689,1258,3.893,1259,4.988,1260,4.617,1261,4.201,1262,1.856,1263,2.072,1264,1.689,1265,4.201,1266,1.556,1267,3.47,1268,1.689,1269,4.886,1270,1.856,1271,2.851,1272,3.158,1273,1.856,1274,3.263,1275,3.158,1276,1.856,1277,2.218,1278,2.594,1279,1.856,1280,1.856,1281,1.856,1282,1.856,1283,3.593,1284,1.556,1285,1.689,1286,2.908,1287,1.856,1288,1.556,1289,2.908,1290,1.856,1291,3.47,1292,1.856,1293,3.47,1294,1.856,1295,1.856,1296,1.856,1297,2.7,1298,1.856,1299,1.856,1300,2.594,1301,2.594,1302,3.47,1303,1.689,1304,2.851,1305,1.856,1306,1.856,1307,3.158,1308,3.716,1309,2.851,1310,1.349,1311,4.434,1312,1.856,1313,3.543,1314,2.851,1315,1.856,1316,1.856,1317,1.856,1318,1.445,1319,1.689,1320,1.856,1321,1.856,1322,4.765,1323,1.856,1324,1.556,1325,2.851,1326,1.856,1327,1.856,1328,1.856,1329,1.856,1330,1.856,1331,1.856,1332,1.856,1333,1.856,1334,1.856,1335,1.856,1336,1.856,1337,1.856,1338,1.856,1339,1.856,1340,2.072,1341,1.856,1342,1.856,1343,1.856,1344,1.856,1345,1.856,1346,1.856,1347,1.445,1348,1.856,1349,1.856,1350,1.856,1351,1.856,1352,1.856,1353,4.988,1354,1.856,1355,1.856,1356,1.856,1357,1.856,1358,1.856,1359,1.856,1360,1.856,1361,1.856,1362,1.856,1363,1.689,1364,3.47,1365,2.851,1366,1.856,1367,1.856,1368,3.893,1369,4.434,1370,1.856,1371,1.856,1372,1.856,1373,3.158,1374,3.158,1375,1.856,1376,1.856,1377,1.856,1378,1.856,1379,1.445,1380,1.856,1381,3.893,1382,1.856,1383,1.856,1384,1.856,1385,2.851,1386,1.856,1387,1.689,1388,1.856,1389,1.856,1390,1.856,1391,1.856,1392,1.856,1393,1.856,1394,1.856,1395,1.944,1396,1.856,1397,1.689,1398,1.856,1399,3.47,1400,1.856,1401,1.856,1402,1.856,1403,1.856,1404,1.856,1405,1.856,1406,1.856,1407,1.856,1408,1.856,1409,1.349,1410,1.856,1411,1.349,1412,1.856,1413,2.851,1414,1.856,1415,1.856,1416,2.851,1417,1.856,1418,1.556,1419,1.689,1420,1.856,1421,1.856,1422,1.856,1423,1.689,1424,1.856,1425,1.856,1426,1.856,1427,1.556,1428,1.856,1429,1.856,1430,1.856,1431,1.689,1432,1.856,1433,3.263,1434,1.856,1435,1.349,1436,1.689,1437,1.856,1438,1.445,1439,1.856,1440,1.856,1441,2.072,1442,1.856,1443,2.851,1444,1.856,1445,3.03,1446,1.856,1447,2.851,1448,1.856,1449,1.856,1450,1.856,1451,2.851,1452,1.856,1453,1.856,1454,0.786,1455,1.689,1456,1.856,1457,1.349,1458,1.689,1459,1.689,1460,1.689,1461,1.689,1462,1.689,1463,1.856,1464,1.856,1465,1.556,1466,1.856,1467,1.856,1468,1.856]],["title/injectables/ConfigService.html",[642,0.423,1469,1.811]],["body/injectables/ConfigService.html",[3,0.184,4,0.184,9,0.203,13,0.334,21,2.161,27,0.797,40,0.184,41,0.55,51,0.55,61,0.748,66,0.796,71,0.019,72,0.347,73,0.299,76,0.71,78,1.954,79,0.628,83,0.938,85,0.66,114,1.366,118,0.474,134,0.826,135,0.919,153,0.212,156,0.161,165,0.161,166,0.184,168,0.981,177,1.214,311,1.329,322,0.013,323,0.013,329,3.453,392,0.916,393,3.097,442,2.528,467,2.054,501,2.442,563,2.658,628,2.054,642,0.628,644,2.688,651,2.331,652,1.11,699,1.411,886,2.57,1027,2.89,1039,4.607,1062,3.874,1209,2.707,1227,4.215,1297,3.258,1347,4.497,1438,3.874,1469,3.197,1470,3.56,1471,3.81,1472,4.683,1473,5.248,1474,5.248,1475,5.248,1476,3.572,1477,6.49,1478,6.49,1479,6.49,1480,5.458,1481,4.141,1482,3.81,1483,3.508,1484,6.161,1485,5.954,1486,4.187,1487,5.578,1488,5.578,1489,4.187,1490,3.258,1491,5.458,1492,5.458,1493,5.458,1494,4.141,1495,4.141,1496,5.458,1497,4.141,1498,4.187,1499,5.458,1500,4.141,1501,5.458,1502,5.458,1503,5.578,1504,5.458,1505,4.141,1506,4.172,1507,5.458,1508,4.692,1509,5.458,1510,4.141,1511,4.187,1512,5.458,1513,6.105,1514,5.458,1515,4.141,1516,4.141,1517,3.56,1518,4.141]],["title/components/DownloadComponentComponent.html",[0,0.064,272,0.813]],["body/components/DownloadComponentComponent.html",[0,0.111,1,0.568,2,0.79,3,0.109,4,0.109,5,0.645,6,0.758,7,0.541,8,0.541,9,0.239,13,0.444,15,0.787,16,2.024,18,3.565,19,1.627,21,2.022,25,0.751,26,1.483,27,1.082,28,0.421,29,1.006,31,0.338,32,0.913,33,3.181,34,1.344,35,0.568,38,0.913,40,0.227,41,0.378,51,0.378,54,2.022,61,0.46,63,4.053,64,2.66,65,3.071,66,0.726,70,0.705,71,0.019,72,0.303,73,0.309,74,0.626,75,3.565,76,0.665,78,1.342,79,0.751,80,1.058,83,0.878,85,0.544,86,3.181,91,2.247,92,0.659,94,1.411,95,1.65,96,1.847,100,0.934,101,2.411,106,1.217,113,2.617,114,0.715,115,1.973,116,2.022,118,0.437,129,1.922,130,0.958,132,1.797,133,1.628,134,0.558,135,0.319,137,4.455,138,1.373,144,1.962,148,0.743,150,3.733,151,1.962,153,0.261,156,0.095,157,3.181,158,1.139,159,1.462,163,0.688,164,1.574,165,0.198,166,0.109,167,0.735,168,0.905,173,1.65,177,0.878,178,1.709,179,3.181,182,1.021,183,1.206,187,1.206,192,0.944,198,0.79,208,0.97,212,2.541,213,2.384,214,0.877,215,1.553,217,1.709,246,3.565,247,2.384,248,1.479,255,2.119,256,2.384,257,0.568,258,0.829,259,0.626,260,1.305,261,0.626,262,0.626,263,0.568,264,0.626,265,0.541,266,0.958,267,0.596,268,0.626,269,0.568,270,0.626,271,0.626,272,1.284,273,1.393,274,0.958,275,0.568,276,0.516,277,0.626,278,0.568,279,0.626,280,0.568,281,0.626,282,1.129,283,0.626,284,0.541,285,0.516,286,0.626,287,0.568,288,0.626,289,0.568,290,0.626,291,0.626,292,0.568,293,0.626,294,0.568,295,0.626,296,0.568,297,0.596,298,0.378,299,0.626,300,0.568,301,0.626,302,0.568,303,0.626,304,0.568,305,0.596,306,0.626,307,0.568,308,0.467,309,0.626,310,0.568,311,0.596,312,0.626,313,0.596,314,0.626,315,0.568,316,0.626,317,0.467,318,0.491,319,0.541,320,0.626,321,0.626,322,0.009,323,0.009,338,2.541,341,1.744,355,1.411,361,2.13,364,0.656,371,1.217,395,1.847,416,2.346,433,0.626,448,1.744,461,1.206,473,2.929,477,4.053,521,2.091,544,1.365,563,1.342,592,1.744,623,1.344,624,0.679,625,2.423,628,0.922,631,2.973,632,2.973,638,1.962,641,1.847,644,1.847,646,1.342,648,3.262,653,3.722,680,1.709,724,2.877,725,3.262,744,2.105,750,1.847,751,3.476,752,2.238,753,2.238,754,2.238,763,2.411,777,2.238,808,3.496,852,2.411,853,2.411,855,2.617,856,2.617,857,2.617,858,2.617,872,1.365,882,3.262,920,1.962,934,2.617,958,1.878,985,1.709,1022,2.022,1072,3.753,1079,1.962,1080,1.847,1083,1.744,1084,2.617,1146,2.384,1147,1.574,1148,1.206,1200,1.365,1245,2.238,1247,2.672,1266,1.574,1274,1.574,1283,1.462,1310,2.847,1441,2.541,1445,2.238,1454,0.795,1457,1.365,1465,2.929,1482,2.617,1519,4.756,1520,5.227,1521,5.227,1522,1.709,1523,3.223,1524,5.089,1525,4.903,1526,2.238,1527,2.238,1528,3.223,1529,4.992,1530,2.877,1531,2.877,1532,3.917,1533,3.917,1534,4.39,1535,4.39,1536,4.39,1537,3.75,1538,3.75,1539,4.39,1540,3.75,1541,3.75,1542,2.877,1543,2.449,1544,2.449,1545,2.449,1546,3.223,1547,3.223,1548,3.223,1549,3.223,1550,2.449,1551,3.565,1552,4.39,1553,3.223,1554,2.449,1555,4.732,1556,2.449,1557,2.449,1558,3.223,1559,3.223,1560,4.732,1561,4.992,1562,2.449,1563,3.223,1564,3.917,1565,2.449,1566,2.449,1567,3.223,1568,2.411,1569,2.877,1570,2.617,1571,1.574,1572,1.878,1573,3.496,1574,2.877,1575,2.105,1576,1.365,1577,3.539,1578,1.574,1579,3.223,1580,3.917,1581,3.917,1582,2.105,1583,2.105,1584,2.105,1585,4.455,1586,2.105,1587,2.105,1588,2.105,1589,2.105,1590,1.709,1591,2.105,1592,2.105,1593,2.105,1594,2.105,1595,2.105,1596,2.105,1597,1.574,1598,2.105,1599,2.105,1600,1.462,1601,2.105,1602,2.105,1603,2.105,1604,2.105,1605,2.105,1606,2.105,1607,2.105,1608,2.105,1609,2.105,1610,3.917,1611,2.105,1612,3.181,1613,2.105,1614,2.105,1615,2.105,1616,2.105,1617,1.878,1618,2.105,1619,2.105,1620,1.878,1621,1.878,1622,3.917,1623,1.878,1624,2.105,1625,1.878,1626,1.878,1627,1.878,1628,1.878,1629,2.105,1630,2.105,1631,2.105,1632,3.223,1633,2.105,1634,2.105,1635,2.105,1636,2.105,1637,3.917,1638,2.105,1639,2.105,1640,2.105,1641,2.105,1642,2.105,1643,2.105,1644,3.223,1645,2.105,1646,4.39,1647,2.105,1648,3.223,1649,2.411,1650,2.877,1651,2.877,1652,2.105,1653,2.105,1654,2.105,1655,2.105,1656,1.878,1657,1.878,1658,2.105,1659,2.105,1660,2.105,1661,2.105,1662,2.105,1663,2.105,1664,4.732,1665,2.105,1666,2.105,1667,2.105,1668,2.105,1669,2.105,1670,2.877,1671,2.105,1672,2.105,1673,5.494,1674,2.105,1675,2.105,1676,1.462,1677,2.105,1678,1.574,1679,1.709,1680,2.105,1681,1.709,1682,2.105,1683,2.105,1684,1.878,1685,2.105,1686,2.105,1687,2.105,1688,3.223,1689,2.105,1690,2.105,1691,2.105,1692,2.105,1693,2.105,1694,2.105,1695,2.105,1696,2.105,1697,2.105,1698,3.223,1699,2.105,1700,2.105,1701,2.105,1702,2.105,1703,3.75]],["title/interfaces/Expense.html",[29,0.537,624,0.666]],["body/interfaces/Expense.html",[3,0.156,4,0.156,9,0.117,13,0.284,15,0.881,16,2.198,21,2.614,25,0.979,28,0.605,29,1.131,31,0.486,40,0.156,41,0.493,64,2.151,71,0.019,72,0.245,73,0.321,74,0.87,76,0.458,77,2.614,79,0.563,83,0.605,85,0.576,91,2.905,92,0.528,100,1.057,111,1.962,114,0.67,115,1.966,116,2.733,118,0.479,129,2.638,132,1.512,133,1.342,141,3.148,153,0.218,156,0.136,165,0.19,166,0.156,167,0.745,168,0.458,177,1.261,182,2.532,183,2.989,187,2.989,192,0.955,193,2.456,195,2.699,198,1.425,247,2.557,248,1.587,253,3.68,255,2.273,256,2.557,322,0.012,323,0.012,330,1.26,364,1.627,371,1.142,392,0.778,405,2.011,429,2.284,433,0.899,436,1.393,438,1.324,442,1.75,450,2.241,452,1.468,467,1.324,471,2.408,482,1.468,484,1.627,623,1.038,624,1.017,626,1.548,628,1.839,629,3.142,631,1.636,632,2.273,633,1.97,637,1.935,638,1.841,640,3.412,641,1.733,642,0.563,643,1.841,647,2.408,651,1.088,652,0.943,654,2.456,657,1.548,658,2.039,659,1.839,660,1.636,661,2.039,663,2.039,664,2.1,665,3.251,667,1.733,671,2.1,672,2.1,673,3.623,674,2.1,675,2.1,676,2.456,678,3.353,679,1.636,684,3.353,685,2.273,688,2.918,690,2.403,691,3.412,692,2.1,694,3.412,746,2.151,751,3.132,752,3.807,753,3.807,754,3.623,757,2.699,826,1.666,833,2.699,851,2.262,862,2.151,865,2.918,871,4.607,872,3.68,873,2.725,877,1.393,887,2.262,889,1.841,896,2.262,897,2.262,905,2.456,906,2.1,911,2.456,925,2.456,986,1.199,1015,1.962,1051,2.262,1080,3.335,1083,1.636,1379,2.1,1454,1.142,1527,2.918,1590,2.456,1597,4.099,1600,4.35,1704,2.699,1705,5.482,1706,5.482,1707,4.202,1708,3.024,1709,3.024,1710,3.412,1711,3.024,1712,3.024,1713,3.024,1714,3.024,1715,3.024,1716,3.024,1717,3.024,1718,3.024,1719,3.024,1720,3.024,1721,3.024,1722,4.202,1723,3.024,1724,3.024,1725,3.024,1726,3.024,1727,3.024,1728,3.024,1729,3.024,1730,3.024,1731,3.024,1732,3.024,1733,3.024,1734,3.024,1735,3.024,1736,3.024,1737,4.828,1738,3.024,1739,4.828,1740,3.024,1741,3.024,1742,3.024,1743,3.024,1744,3.024,1745,4.828,1746,3.024,1747,3.024,1748,3.024,1749,3.024,1750,4.202,1751,3.024]],["title/components/ExpenseDetailsModalComponent.html",[0,0.064,275,0.853]],["body/components/ExpenseDetailsModalComponent.html",[0,0.112,1,0.683,2,1.178,3,0.131,4,0.131,5,0.739,7,0.65,8,0.65,9,0.098,13,0.41,15,0.775,16,1.396,18,3.905,19,1.606,21,2.66,23,2,24,2.66,25,0.589,26,1.511,27,1.102,28,0.505,29,1.113,30,1.618,31,0.594,32,1.048,33,3.549,34,1.499,35,1.299,38,1.048,40,0.131,41,0.434,48,3.9,51,0.434,54,2.215,55,3.697,61,0.36,62,2.527,63,4.34,66,0.779,70,0.594,71,0.019,72,0.312,73,0.303,74,0.527,75,3.549,76,0.56,79,0.495,80,0.683,83,0.739,85,0.56,86,3.549,91,2.956,92,0.67,94,1.618,95,1.892,96,2.756,97,3.697,100,1.077,102,3.002,103,2.892,106,1.816,110,3.697,114,0.819,115,1.801,116,2.66,118,0.347,129,2.604,130,1.099,133,0.951,134,0.729,135,0.662,144,2.25,146,2.736,147,0.998,148,0.829,153,0.231,156,0.167,157,2.052,158,1.367,161,2.052,162,2.527,163,0.827,165,0.114,166,0.131,167,0.464,173,1.892,178,2.052,179,4.155,182,1.794,183,1.448,184,3.697,187,1.448,189,2.527,190,2.255,192,0.383,243,3.299,246,4.596,247,3.253,248,2.272,249,3.697,250,3.299,251,3.905,252,3.905,253,2.398,254,3.697,255,2.892,256,3.253,257,0.683,258,0.951,259,0.751,260,1.43,261,0.751,262,0.751,263,0.683,264,0.751,265,0.65,266,1.099,267,0.716,268,0.751,269,0.683,270,0.751,271,0.751,272,0.65,273,0.56,274,1.099,275,1.443,276,1.623,277,0.751,278,0.683,279,0.751,280,0.683,281,0.751,282,0.65,283,0.751,284,0.65,285,0.619,286,0.751,287,0.683,288,0.751,289,0.683,290,0.751,291,0.751,292,0.683,293,0.751,294,0.683,295,0.751,296,0.683,297,0.716,298,0.454,299,0.751,300,0.683,301,0.751,302,0.683,303,0.751,304,0.683,305,0.716,306,0.751,307,0.683,308,0.56,309,0.751,310,0.683,311,0.716,312,0.751,313,0.716,314,0.751,315,0.683,316,0.751,317,0.56,318,0.589,319,0.65,320,0.751,321,0.751,322,0.01,323,0.01,330,1.54,355,1.618,364,1.153,433,1.43,436,1.703,447,3.002,450,1.396,454,3.08,483,2,484,1.153,487,2.567,488,2.764,492,2.398,505,1.54,647,3.164,686,2,696,2,725,3.661,731,3.164,741,5.117,781,3.299,854,3.299,860,3.299,886,2.215,935,3.931,936,3.339,945,2,948,2.398,965,3.834,972,3.931,980,2.764,984,3.339,986,1.002,1651,3.299,1710,3.002,1752,5.574,1753,5.574,1754,6.246,1755,2.527,1756,6.827,1757,3.299,1758,3.299,1759,4.3,1760,4.3,1761,4.3,1762,5.085,1763,5.595,1764,5.595,1765,5.595,1766,5.595,1767,5.953,1768,5.085,1769,6.171,1770,4.3,1771,4.3,1772,3.697,1773,2.94,1774,2.94,1775,2.567,1776,2.94,1777,2.94,1778,4.34,1779,3.299,1780,2.94,1781,4.3,1782,2.94,1783,5.595,1784,2.94,1785,3.299,1786,2.94,1787,2.94,1788,2.94,1789,2.94,1790,2.94,1791,4.3,1792,2.94,1793,3.697,1794,2.94,1795,4.3,1796,2.94,1797,2.94,1798,2.94,1799,2.94,1800,2.94,1801,2.94,1802,2.94,1803,2.94,1804,2.94,1805,2.94,1806,5.085,1807,2.94,1808,2.94,1809,2.94,1810,2.94,1811,2.94,1812,2.94,1813,2.94,1814,2.94,1815,2.94,1816,4.3,1817,4.3,1818,4.3,1819,4.3,1820,4.3,1821,4.3,1822,4.3]],["title/components/ExpenseListComponent.html",[0,0.064,278,0.853]],["body/components/ExpenseListComponent.html",[0,0.1,1,0.846,2,1.054,3,0.162,4,0.162,5,0.861,7,0.806,8,0.806,9,0.121,13,0.497,15,0.652,16,2.096,19,0.846,25,0.73,26,1.538,27,1.121,28,0.626,29,1.124,30,1.885,31,0.691,32,1.22,34,1.687,35,0.846,38,1.22,40,0.162,51,0.505,61,0.701,66,0.737,70,0.79,71,0.019,72,0.324,73,0.296,74,0.701,76,0.652,80,0.846,83,0.861,85,0.537,92,0.47,96,2.467,99,2.204,100,0.532,101,3.219,103,2.757,106,1.857,115,1.893,118,0.461,130,1.28,134,0.447,135,0.474,147,1.43,153,0.194,156,0.141,163,1.024,165,0.141,166,0.162,167,0.54,177,0.861,192,0.93,198,1.205,214,1.305,215,1.242,257,0.846,258,1.107,259,0.931,260,1.574,261,0.931,262,0.931,263,0.846,264,0.931,265,0.806,266,1.28,267,0.888,268,0.931,269,0.846,270,0.931,271,0.931,272,0.806,273,0.694,274,1.28,275,0.846,276,0.767,277,0.931,278,1.616,279,0.931,280,0.846,281,0.931,282,0.806,283,0.931,284,0.806,285,0.767,286,0.931,287,0.846,288,0.931,289,0.846,290,0.931,291,0.931,292,0.846,293,0.931,294,0.846,295,0.931,296,0.846,297,0.888,298,1.056,299,0.931,300,0.846,301,0.931,302,0.846,303,0.931,304,0.846,305,0.888,306,0.931,307,0.846,308,0.694,309,0.931,310,0.846,311,0.888,312,0.931,313,0.888,314,0.931,315,0.846,316,0.931,317,0.694,318,0.73,319,0.806,320,0.931,321,0.931,322,0.012,323,0.012,334,3.132,341,2.329,364,1.342,433,1.574,454,2.204,500,1.795,633,1.857,646,1.793,656,2.089,662,2.204,713,1.885,714,2.343,715,3.678,723,3.415,731,3.479,750,1.795,759,2.544,770,2.993,774,2.792,779,3.495,781,3.841,793,3.132,794,4.918,795,3.132,796,3.132,797,3.132,798,3.132,799,3.132,802,2.795,826,2.373,839,4.305,852,3.219,853,3.219,854,3.841,866,3.841,870,3.677,889,2.62,906,2.175,935,3.677,945,2.329,948,2.792,965,3.415,984,3.677,1056,2.792,1083,2.865,1200,2.032,1506,3.219,1526,2.989,1570,3.495,1676,2.175,1752,5.34,1753,5.34,1758,3.841,1778,3.495,1823,5.984,1824,3.132,1825,4.305,1826,5.722,1827,3.841,1828,3.495,1829,5.008,1830,5.008,1831,5.008,1832,5.008,1833,5.008,1834,5.008,1835,6.458,1836,5.008,1837,3.644,1838,4.305,1839,3.644,1840,5.008,1841,3.644,1842,5.008,1843,3.644,1844,3.644,1845,5.008,1846,5.008,1847,3.644,1848,3.644,1849,3.644,1850,3.644,1851,3.644,1852,2.795,1853,6.161,1854,3.644,1855,4.305,1856,5.008,1857,5.008,1858,4.389,1859,5.722,1860,5.008,1861,3.644,1862,3.841,1863,3.644,1864,3.644,1865,2.795,1866,2.795,1867,2.795,1868,2.795,1869,2.795,1870,2.795,1871,2.795,1872,2.795,1873,2.795,1874,2.795,1875,3.644,1876,3.644,1877,3.644,1878,3.644,1879,3.132,1880,5.722,1881,3.132,1882,5.722,1883,3.644,1884,5.008,1885,3.644,1886,3.644,1887,3.644,1888,3.644,1889,3.644,1890,5.008]],["title/injectables/ExpenseService.html",[64,1.618,642,0.423]],["body/injectables/ExpenseService.html",[3,0.146,4,0.146,9,0.11,13,0.537,15,0.884,16,2.341,21,1.85,25,1.182,28,1.014,29,1.133,31,0.645,40,0.146,51,0.471,61,0.404,64,2.596,66,0.745,70,0.892,71,0.019,72,0.333,73,0.287,74,0.832,76,0.608,77,2.832,79,0.679,83,0.803,85,0.638,91,2.056,92,0.607,100,1.023,111,2.605,114,0.89,115,1.979,116,2.56,118,0.473,129,2.343,132,1.02,133,1.47,141,2.896,153,0.21,156,0.128,165,0.181,166,0.146,167,0.733,168,0.706,177,1.249,182,1.376,183,1.625,187,1.625,192,0.945,193,2.302,195,2.53,198,1.4,247,1.726,248,1.071,253,3.605,255,1.534,256,1.726,322,0.011,323,0.011,330,1.672,364,1.733,371,1.517,392,0.729,405,2.431,429,2.502,433,1.194,436,1.85,438,1.758,442,2.112,450,2.341,452,1.949,467,1.241,471,1.625,482,1.949,484,1.454,623,0.973,624,0.846,628,1.241,629,2.12,631,2.173,632,2.744,633,1.517,637,1.306,638,2.444,640,4.118,641,2.301,642,0.538,643,1.726,647,3.185,651,1.445,652,0.884,654,3.261,657,2.596,658,1.949,659,1.758,660,1.534,661,2.461,663,2.461,664,3.521,665,3.185,667,2.301,671,2.788,672,3.238,673,3.521,674,1.969,675,1.969,676,2.302,678,3.238,679,2.173,684,3.717,685,2.896,688,2.788,690,2.336,691,3.261,692,2.788,694,3.261,699,1.124,701,2.302,746,2.596,751,3.605,752,3.968,753,3.968,754,3.717,757,3.583,826,1.124,833,2.53,851,3.003,862,1.452,865,1.969,871,3.786,872,3.024,873,1.839,877,1.306,887,3.003,889,2.444,896,2.12,897,2.12,905,2.302,906,1.969,911,3.261,925,2.302,986,1.124,1015,2.605,1051,3.003,1080,3.345,1083,2.173,1379,2.788,1454,1.517,1527,3.521,1590,2.302,1597,3.003,1600,4.335,1704,2.53,1705,4.016,1706,4.016,1707,2.835,1708,2.835,1709,4.016,1710,4.118,1711,4.016,1712,4.016,1713,4.016,1714,5.071,1715,2.835,1716,2.835,1717,2.835,1718,2.835,1719,2.835,1720,4.016,1721,4.016,1722,4.016,1723,2.835,1724,2.835,1725,2.835,1726,2.835,1727,2.835,1728,2.835,1729,2.835,1730,2.835,1731,2.835,1732,2.835,1733,2.835,1734,2.835,1735,2.835,1736,2.835,1737,4.662,1738,4.016,1739,4.662,1740,4.016,1741,2.835,1742,4.016,1743,4.016,1744,2.835,1745,4.662,1746,2.835,1747,2.835,1748,2.835,1749,2.835,1750,4.016,1751,2.835,1891,4.672,1892,4.672,1893,3.299,1894,3.299,1895,3.299,1896,3.299,1897,3.299,1898,3.299,1899,3.299,1900,3.299,1901,3.299]],["title/components/FooterComponent.html",[0,0.064,280,0.853]],["body/components/FooterComponent.html",[0,0.121,1,1.057,2,1.222,3,0.309,4,0.202,5,1.157,7,1.007,8,1.007,9,0.152,13,0.468,19,1.057,25,0.912,26,1.561,27,1.142,28,0.783,29,0.848,32,1.109,35,1.057,38,1.414,40,0.202,41,0.585,61,0.558,66,0.626,70,0.628,71,0.019,72,0.32,73,0.258,74,0.558,76,0.756,79,0.668,80,1.057,83,0.998,100,0.665,114,1.282,118,0.36,130,1.483,134,0.558,135,0.593,147,1.347,153,0.225,156,0.177,165,0.177,166,0.202,167,0.491,257,1.057,258,1.283,259,1.163,260,1.719,261,1.163,262,1.163,263,1.057,264,1.163,265,1.007,266,1.483,267,1.109,268,1.163,269,1.057,270,1.163,271,1.163,272,1.007,273,0.868,274,1.483,275,1.057,276,0.959,277,1.163,278,1.057,279,1.163,280,1.649,281,1.163,282,1.007,283,1.163,284,1.007,285,0.959,286,1.163,287,1.057,288,1.163,289,1.057,290,1.163,291,1.163,292,1.057,293,1.163,294,1.057,295,1.163,296,1.057,297,1.109,298,0.703,299,1.163,300,1.057,301,1.163,302,1.057,303,1.163,304,1.057,305,1.109,306,1.163,307,1.057,308,0.868,309,1.163,310,1.057,311,1.109,312,1.163,313,1.109,314,1.163,315,1.057,316,1.163,317,0.868,318,0.912,319,1.007,320,1.163,321,1.163,322,0.014,323,0.014,330,2.078,341,2.699,393,2.807,661,2.807,713,2.532,747,3.236,779,4.051,986,1.552,1022,2.298,1209,2.421,1340,3.236,1454,2.184,1469,3.725,1471,4.051,1476,3.708,1489,4.452,1498,4.452,1511,5.161,1578,3.731,1902,3.914,1903,7.105,1904,5.804,1905,4.989,1906,5.804,1907,5.804,1908,5.974,1909,3.493,1910,5.804,1911,3.493,1912,3.914,1913,3.178,1914,4.989,1915,4.989,1916,4.989]],["title/components/FormModelComponent.html",[0,0.064,282,0.813]],["body/components/FormModelComponent.html",[0,0.129,1,0.994,2,1.175,3,0.19,4,0.19,5,0.959,7,0.947,8,0.947,9,0.143,13,0.346,15,0.558,19,1.694,25,0.858,26,1.555,27,1.134,28,0.736,29,0.815,32,1.359,34,1.83,35,0.994,38,1.359,40,0.19,51,0.563,66,0.709,71,0.019,72,0.28,73,0.276,80,0.994,85,0.374,92,0.524,100,0.626,106,2.015,118,0.346,130,1.426,134,0.806,135,0.726,138,1.175,153,0.216,156,0.166,163,1.204,165,0.166,166,0.19,257,0.994,258,1.234,259,1.095,260,1.68,261,1.095,262,1.095,263,0.994,264,1.095,265,0.947,266,1.426,267,1.043,268,1.095,269,0.994,270,1.095,271,1.095,272,0.947,273,0.816,274,1.426,275,0.994,276,0.902,277,1.095,278,0.994,279,1.095,280,0.994,281,1.095,282,1.454,283,1.095,284,0.947,285,0.902,286,1.095,287,0.994,288,1.095,289,0.994,290,1.095,291,1.095,292,0.994,293,1.095,294,0.994,295,1.095,296,0.994,297,1.043,298,0.662,299,1.095,300,0.994,301,1.095,302,0.994,303,1.095,304,0.994,305,1.043,306,1.095,307,0.994,308,0.816,309,1.095,310,0.994,311,1.043,312,1.095,313,1.043,314,1.095,315,0.994,316,1.095,317,0.816,318,0.858,319,0.947,320,1.095,321,1.095,322,0.014,323,0.014,341,2.595,367,2.354,380,3.331,454,3.177,461,3.239,487,3.331,597,3.895,646,1.998,682,2.749,713,2.1,725,3.971,747,3.111,763,3.587,824,3.449,850,2.99,935,3.331,936,3.925,945,2.595,948,3.111,965,3.705,970,3.331,972,4.25,984,3.925,1247,3.44,1268,3.895,1310,4.025,1571,4.383,1772,4.797,1778,3.895,1779,5.044,1785,4.28,1917,5.861,1918,3.682,1919,4.28,1920,5.58,1921,5.58,1922,5.58,1923,6.575,1924,6.207,1925,4.284,1926,3.587,1927,3.895,1928,4.284,1929,5.58,1930,4.284,1931,4.797,1932,4.28,1933,4.284,1934,5.58,1935,4.797,1936,3.331,1937,4.797,1938,4.284]],["title/injectables/GeminiApiService.html",[348,2.566,642,0.423]],["body/injectables/GeminiApiService.html",[3,0.142,4,0.142,9,0.107,13,0.47,15,0.758,16,2.347,17,2.731,21,2.305,28,0.551,29,1.075,40,0.142,41,0.461,51,0.461,61,0.561,64,2.966,66,0.664,70,0.737,71,0.019,72,0.268,73,0.273,74,0.654,76,0.596,79,0.737,83,0.787,85,0.588,91,2.562,103,1.812,106,1.485,115,1.716,118,0.448,129,2.191,133,1.539,134,0.393,135,0.417,138,1.445,153,0.27,156,0.177,165,0.207,166,0.203,167,0.691,168,0.877,177,1.159,183,2.868,187,2.868,192,0.957,208,1.812,214,1.638,215,1.819,255,1.49,256,1.676,285,1.124,322,0.013,323,0.011,325,3.221,327,1.676,328,4.474,329,3.337,332,3.933,336,3.428,345,3.046,348,4.601,354,3.51,355,1.722,361,1.336,364,0.859,367,2.084,369,2.254,374,4.912,380,3.822,381,2.754,383,2.394,389,2.059,392,1.012,427,3.32,442,1.638,443,1.909,470,3.475,475,4.466,479,4.916,500,1.578,528,1.676,546,1.912,563,1.638,595,1.786,624,0.58,631,1.49,632,1.49,642,0.67,644,2.254,648,2.394,651,1.801,652,1.226,656,1.336,661,1.909,663,2.429,682,1.578,686,2.128,699,1.092,714,4.613,774,3.246,844,3.675,845,1.578,846,2.128,852,2.059,853,2.059,855,2.236,856,2.236,857,2.236,858,2.236,885,2.236,902,1.909,916,2.059,971,2.457,986,1.092,1011,3.431,1016,2.864,1019,4.912,1020,4.094,1022,1.812,1024,3.758,1025,4.466,1027,3.194,1028,3.51,1029,2.941,1034,3.51,1038,2.457,1043,4.466,1044,4.094,1045,4.094,1046,4.094,1047,3.246,1049,2.941,1053,3.431,1060,3.51,1065,1.578,1072,1.786,1076,2.976,1080,1.578,1083,2.128,1101,4.094,1106,3.51,1107,3.675,1121,2.457,1126,3.51,1129,2.236,1135,2.941,1138,2.236,1145,3.51,1146,3.046,1147,2.941,1148,2.868,1149,3.194,1150,3.51,1151,2.941,1152,3.51,1153,3.51,1154,4.094,1155,3.51,1156,3.51,1157,3.51,1159,2.457,1202,4.001,1482,2.236,1576,1.786,1597,3.743,1649,2.059,1650,2.457,1670,5.504,1757,3.51,1855,2.754,1939,5.504,1940,2.457,1941,4.575,1942,5.822,1943,4.575,1944,5.822,1945,5.337,1946,5.822,1947,4.575,1948,2.457,1949,4.575,1950,4.575,1951,3.204,1952,5.822,1953,6.158,1954,3.204,1955,3.51,1956,6.158,1957,3.933,1958,5.822,1959,4.723,1960,5.337,1961,4.575,1962,3.204,1963,4.575,1964,3.204,1965,3.204,1966,3.204,1967,3.204,1968,3.204,1969,4.575,1970,3.204,1971,3.204,1972,3.204,1973,3.204,1974,3.204,1975,3.204,1976,3.204,1977,2.457,1978,4.575,1979,3.204,1980,4.575,1981,2.754,1982,3.204,1983,2.754,1984,3.933,1985,4.575,1986,3.204,1987,3.204,1988,3.204,1989,3.204,1990,3.204,1991,3.204,1992,3.204,1993,4.575,1994,3.204,1995,3.204,1996,3.204,1997,3.933,1998,3.933,1999,4.575,2000,5.337,2001,3.204,2002,3.204,2003,3.204,2004,3.204,2005,3.204,2006,3.204,2007,3.204,2008,3.204,2009,3.204,2010,3.204,2011,2.754,2012,2.754,2013,2.754,2014,3.204,2015,3.204,2016,3.204,2017,3.933,2018,3.204,2019,3.204,2020,2.754,2021,4.575,2022,3.204,2023,2.457,2024,3.204,2025,3.204,2026,2.457,2027,3.204,2028,3.204,2029,4.575,2030,3.204,2031,3.204,2032,3.204,2033,3.204]],["title/components/GlobalLoaderComponent.html",[0,0.064,284,0.813]],["body/components/GlobalLoaderComponent.html",[0,0.123,1,0.976,2,1.16,3,0.187,4,0.187,5,0.947,7,0.929,8,0.929,9,0.14,13,0.496,19,0.976,25,0.842,26,1.553,27,1.133,28,0.722,29,0.805,31,0.58,32,1.342,34,1.813,35,0.976,38,1.342,40,0.187,41,0.556,51,0.556,61,0.515,66,0.731,70,0.761,71,0.019,72,0.327,73,0.273,74,0.881,76,0.717,79,0.634,80,0.976,83,0.947,85,0.481,92,0.613,100,0.614,118,0.404,130,1.408,134,0.754,135,0.8,146,2.425,147,1.515,148,1.003,153,0.238,156,0.163,163,1.181,165,0.163,166,0.187,167,0.594,257,0.976,258,1.219,259,1.074,260,1.668,261,1.074,262,1.074,263,0.976,264,1.074,265,0.929,266,1.408,267,1.024,268,1.074,269,0.976,270,1.074,271,1.074,272,0.929,273,0.801,274,1.408,275,0.976,276,0.885,277,1.074,278,0.976,279,1.074,280,0.976,281,1.074,282,0.929,283,1.074,284,1.538,285,1.6,286,1.074,287,0.976,288,1.074,289,0.976,290,1.074,291,1.074,292,0.976,293,1.074,294,0.976,295,1.074,296,0.976,297,1.024,298,0.649,299,1.074,300,0.976,301,1.074,302,0.976,303,1.074,304,0.976,305,1.024,306,1.074,307,0.976,308,0.801,309,1.074,310,0.976,311,1.024,312,1.074,313,1.024,314,1.074,315,0.976,316,1.074,317,0.801,318,0.842,319,0.929,320,1.074,321,1.074,322,0.013,323,0.013,330,1.973,341,2.563,367,2.537,395,2.715,426,4.487,427,3.642,438,2.074,492,3.639,505,1.973,515,3.543,528,3.708,545,2.702,546,2.509,592,2.563,790,3.543,846,3.344,873,3.073,954,3.896,986,1.432,1016,3.48,1049,3.543,1158,3.29,1210,3.639,1263,3.073,1454,1.789,1490,3.29,1862,4.227,1926,3.543,2034,5.978,2035,3.612,2036,5.511,2037,4.737,2038,4.737,2039,5.511,2040,5.511,2041,5.286,2042,4.203,2043,5.511,2044,3.847,2045,5.511,2046,4.203,2047,4.737,2048,4.737,2049,4.203,2050,4.203,2051,4.203,2052,4.203,2053,5.511]],["title/injectables/GlobalLoaderService.html",[427,1.811,642,0.423]],["body/injectables/GlobalLoaderService.html",[0,0.13,3,0.22,4,0.22,9,0.165,13,0.536,40,0.22,41,0.616,51,0.616,66,0.748,70,0.844,71,0.019,72,0.306,73,0.295,74,0.91,76,0.902,79,0.704,85,0.579,92,0.682,118,0.411,128,3.409,134,0.606,135,0.644,147,1.419,153,0.237,156,0.192,165,0.192,166,0.22,167,0.66,168,0.864,284,1.689,285,1.603,322,0.015,323,0.015,330,2.189,367,2.189,392,1.094,426,4.543,427,3.012,492,3.409,515,4.456,527,4.253,528,3.796,529,4.253,592,2.844,642,0.704,652,1.326,699,1.686,788,4.69,846,3.455,954,3.65,1016,3.374,1050,2.844,1210,3.865,1263,3.409,1454,1.985,1490,3.65,1932,4.69,2044,4.268,2047,5.256,2048,5.256,2054,6.123,2055,4.253,2056,4.69,2057,6.115,2058,3.931,2059,4.947,2060,6.115,2061,4.947,2062,4.947,2063,4.947,2064,4.69,2065,4.947,2066,4.947,2067,4.947]],["title/components/GraphsComponent.html",[0,0.064,287,0.853]],["body/components/GraphsComponent.html",[0,0.093,1,0.535,2,0.753,3,0.102,4,0.102,5,0.615,6,0.712,7,0.509,8,0.509,9,0.077,13,0.477,15,0.571,16,2.345,19,0.535,23,1.663,24,2.294,25,0.461,26,1.473,27,1.074,28,0.396,29,1.056,30,1.346,31,0.902,32,0.871,35,0.535,36,1.574,38,0.871,40,0.102,41,0.498,51,0.361,54,1.958,61,0.438,64,2.689,66,0.772,70,0.782,71,0.019,72,0.337,73,0.331,74,0.694,78,1.77,79,0.616,80,0.535,85,0.516,89,4.266,92,0.639,94,1.86,95,2.175,100,0.828,103,1.958,106,1.919,107,1.871,114,1.222,115,1.435,116,2.42,129,1.86,130,0.914,132,1.529,133,1.583,134,0.801,135,0.922,138,0.923,141,1.663,148,1.147,153,0.208,156,0.089,159,1.375,165,0.089,166,0.102,167,0.638,168,0.3,177,1.103,192,0.973,197,1.766,198,1.245,220,1.766,248,1.605,257,0.535,258,0.791,259,0.588,260,1.604,261,0.588,262,0.588,263,0.535,264,0.588,265,0.509,266,0.914,267,0.561,268,0.588,269,0.535,270,0.588,271,0.588,272,0.509,273,0.439,274,0.914,275,0.535,276,0.485,277,0.588,278,0.535,279,0.588,280,0.535,281,0.588,282,0.509,283,0.588,284,0.509,285,0.485,286,0.588,287,1.419,288,0.588,289,0.535,290,0.588,291,0.588,292,0.535,293,0.588,294,0.535,295,0.588,296,0.535,297,0.561,298,0.913,299,0.588,300,0.535,301,0.588,302,0.535,303,0.588,304,0.535,305,0.561,306,0.588,307,0.535,308,0.439,309,0.588,310,0.535,311,0.561,312,0.588,313,0.561,314,0.588,315,0.535,316,0.588,317,0.439,318,0.461,319,0.509,320,0.588,321,0.588,322,0.009,323,0.009,352,2.299,361,0.961,367,2.188,397,3.197,401,3.408,415,3.364,416,2.414,425,1.979,433,0.914,487,2.951,488,2.299,501,1.65,505,1.28,544,1.284,581,1.766,582,2.062,592,2.842,623,1.671,633,1.423,711,2.496,713,1.346,714,1.48,715,4.551,721,4.106,723,4.137,726,2.135,731,2.16,732,2.743,733,3.792,747,1.994,751,1.994,759,2.496,760,1.663,770,3.626,777,3.195,778,1.979,803,3.364,824,1.663,826,2.083,850,2.496,877,2.341,886,1.416,901,3.061,906,2.617,945,1.663,960,2.299,1018,1.663,1056,1.994,1065,2.16,1134,2.743,1209,2.837,1216,1.994,1245,2.617,1247,2.294,1250,1.994,1278,3.736,1288,3.8,1324,2.299,1486,2.743,1649,1.48,1757,3.792,1828,2.496,1838,4.87,1858,2.743,1865,2.743,1866,2.743,1867,2.743,1868,2.743,1869,2.743,1870,2.743,1871,2.743,1872,2.743,1873,2.743,1874,2.743,2068,1.979,2069,4.944,2070,2.496,2071,3.577,2072,3.769,2073,2.743,2074,4.385,2075,4.385,2076,3.577,2077,4.385,2078,4.385,2079,4.385,2080,4.385,2081,4.385,2082,5.353,2083,5.703,2084,4.249,2085,3.074,2086,3.074,2087,3.074,2088,3.074,2089,3.577,2090,3.364,2091,4.346,2092,2.303,2093,3.577,2094,3.577,2095,3.769,2096,3.577,2097,2.303,2098,3.577,2099,2.303,2100,2.743,2101,2.303,2102,4.522,2103,3.577,2104,2.303,2105,5.666,2106,5.666,2107,3.577,2108,2.303,2109,3.577,2110,2.303,2111,3.074,2112,4.249,2113,2.303,2114,3.074,2115,2.303,2116,3.577,2117,2.303,2118,3.577,2119,3.074,2120,2.299,2121,4.385,2122,3.577,2123,4.944,2124,3.792,2125,4.199,2126,3.577,2127,3.577,2128,2.303,2129,4.385,2130,2.303,2131,3.577,2132,4.249,2133,4.385,2134,2.303,2135,5.082,2136,4.944,2137,4.385,2138,2.303,2139,4.385,2140,2.303,2141,4.385,2142,2.303,2143,4.385,2144,3.577,2145,2.303,2146,2.743,2147,3.577,2148,4.385,2149,3.441,2150,2.303,2151,4.385,2152,2.303,2153,4.385,2154,5.353,2155,5.353,2156,2.303,2157,2.303,2158,3.074,2159,3.074,2160,2.303,2161,3.769,2162,1.979,2163,1.979,2164,3.364,2165,2.303,2166,2.303,2167,2.303,2168,2.303,2169,3.792,2170,3.074,2171,1.979,2172,3.577,2173,3.074,2174,2.743,2175,6.277,2176,1.979,2177,3.577,2178,4.601,2179,2.303,2180,3.577,2181,3.577,2182,2.303,2183,3.577,2184,4.385,2185,5.666,2186,2.303,2187,3.074,2188,4.385,2189,1.979,2190,4.385,2191,4.385,2192,2.303,2193,4.385,2194,2.303,2195,3.074,2196,1.979,2197,1.979,2198,2.303,2199,2.303,2200,4.385,2201,4.385,2202,3.577,2203,2.303,2204,4.385,2205,4.385,2206,3.577,2207,2.303,2208,2.303,2209,1.979,2210,2.303,2211,2.303,2212,2.303,2213,2.303,2214,2.303,2215,2.303,2216,2.303,2217,2.303,2218,2.303,2219,2.303,2220,2.303,2221,1.979,2222,1.979,2223,2.303,2224,2.303,2225,2.303,2226,2.303,2227,2.303,2228,2.303,2229,2.303,2230,2.303,2231,2.303,2232,2.303,2233,2.303,2234,2.303,2235,2.303,2236,2.303,2237,2.303,2238,2.303,2239,2.303,2240,2.303,2241,2.303]],["title/components/HamburgerMenuComponent.html",[0,0.064,289,0.853]],["body/components/HamburgerMenuComponent.html",[0,0.114,1,0.87,2,1.075,3,0.166,4,0.166,5,0.878,6,1.16,7,0.829,8,0.829,9,0.125,13,0.526,19,0.87,25,0.751,26,1.541,27,1.124,28,0.645,29,0.746,32,1.244,34,1.712,35,0.87,36,2.247,38,1.244,40,0.166,41,0.515,51,0.515,61,0.459,66,0.743,70,0.861,71,0.019,72,0.337,73,0.258,74,0.764,76,0.665,78,1.828,79,0.588,80,0.87,83,0.878,85,0.507,92,0.632,100,0.548,103,2.022,105,3.564,114,1.282,118,0.36,126,2.238,130,1.305,132,1.58,134,0.764,135,0.665,146,2.247,148,1.063,151,3.262,153,0.225,154,2.617,156,0.145,163,1.054,165,0.145,166,0.166,167,0.673,192,0.488,257,0.87,258,1.129,259,0.958,260,1.593,261,0.958,262,0.958,263,0.87,264,0.958,265,0.829,266,1.305,267,0.913,268,0.958,269,0.87,270,0.958,271,0.958,272,0.829,273,0.714,274,1.305,275,0.87,276,0.789,277,0.958,278,0.87,279,0.958,280,0.87,281,0.958,282,0.829,283,0.958,284,0.829,285,0.789,286,0.958,287,0.87,288,0.958,289,1.562,290,1.917,291,0.958,292,0.87,293,0.958,294,0.87,295,0.958,296,0.87,297,0.913,298,0.579,299,0.958,300,0.87,301,0.958,302,0.87,303,0.958,304,0.87,305,0.913,306,0.958,307,0.87,308,1.107,309,0.958,310,0.87,311,0.913,312,0.958,313,0.913,314,0.958,315,0.87,316,0.958,317,0.714,318,0.751,319,0.829,320,0.958,321,0.958,322,0.012,323,0.012,325,3.718,330,1.828,395,2.515,396,3.564,399,4.441,422,3.917,428,3.963,433,1.305,438,1.922,453,2.876,454,3.313,456,4.352,460,6.526,462,3.908,464,4.992,499,2.022,501,1.922,505,2.232,547,2.617,554,2.617,561,3.223,599,2.41,637,2.022,763,4.008,950,4.389,953,3.564,967,3.223,969,4.992,970,3.466,971,5.004,972,3.466,976,4.389,980,4.008,986,1.278,996,2.876,997,2.876,1018,2.375,1275,3.564,1318,3.721,1454,1.658,1483,3.283,1486,3.917,1568,3.283,1775,3.048,1926,3.283,1936,4.017,2242,6.025,2243,5.376,2244,3.223,2245,4.389,2246,3.917,2247,5.107,2248,5.107,2249,3.283,2250,4.352,2251,4.389,2252,5.807,2253,5.107,2254,5.807,2255,5.807,2256,3.917,2257,4.389,2258,6.235,2259,2.876,2260,5.107,2261,3.917,2262,4.389,2263,5.107,2264,4.992,2265,5.807,2266,3.917,2267,3.75,2268,4.389,2269,3.917,2270,3.917,2271,4.389,2272,3.75,2273,5.107,2274,4.389,2275,3.75,2276,3.75,2277,6.523,2278,5.107,2279,3.75,2280,2.876]],["title/injectables/HbsRenderService.html",[642,0.423,1193,1.924]],["body/injectables/HbsRenderService.html",[0,0.118,2,1.231,3,0.291,4,0.3,5,1.239,6,1.594,9,0.209,13,0.558,15,0.495,26,1.172,27,0.555,40,0.229,41,0.661,51,0.661,54,2.04,61,0.716,66,0.729,70,0.524,71,0.019,72,0.339,73,0.278,74,0.466,76,0.495,85,0.547,92,0.589,94,1.43,95,1.672,118,0.454,132,1.175,133,1.449,134,0.466,135,0.671,148,0.62,153,0.147,156,0.147,165,0.147,166,0.169,168,0.928,177,1.25,192,0.928,198,1.38,208,2.04,214,1.36,215,2.233,258,1.139,318,0.761,322,0.012,323,0.012,365,4.429,392,0.84,450,1.898,451,2.652,456,2.652,459,3.953,461,3.228,462,2.119,484,1.019,505,1.36,507,2.268,563,1.36,595,2.119,623,1.52,633,1.234,642,0.593,652,1.019,699,1.295,717,3.759,777,3.076,790,2.443,824,2.719,826,1.295,878,2.873,883,2.652,886,2.04,889,1.988,902,2.149,945,2.396,948,2.873,1078,4.442,1148,2.538,1161,3.404,1193,2.696,1207,2.443,1208,2.443,1214,2.873,1222,3.312,1227,2.268,1228,4.974,1234,3.597,1235,3.312,1241,3.597,1242,3.597,1250,2.873,1252,3.759,1253,2.268,1254,3.597,1255,4.081,1277,4.033,1283,3.49,1303,2.652,1307,2.652,1310,3.767,1395,2.696,1409,2.119,1431,2.652,1506,4.212,1576,2.119,1578,2.443,1758,2.915,2041,3.266,2058,4.519,2120,2.443,2257,3.266,2264,3.266,2271,3.266,2281,5.301,2282,2.915,2283,5.847,2284,6.269,2285,6.269,2286,6.269,2287,5.153,2288,5.153,2289,3.8,2290,3.8,2291,3.8,2292,5.153,2293,3.8,2294,3.8,2295,2.652,2296,3.8,2297,3.8,2298,3.8,2299,3.8,2300,3.8,2301,3.8,2302,3.8,2303,3.8,2304,5.153,2305,6.911,2306,5.389,2307,6.269,2308,6.757,2309,6.757,2310,3.8,2311,3.8,2312,5.847,2313,3.8,2314,3.8,2315,3.8,2316,3.8,2317,5.153,2318,3.8,2319,3.8,2320,3.266,2321,3.8,2322,3.597,2323,3.597,2324,3.8,2325,3.8,2326,3.8,2327,3.8,2328,3.8,2329,3.8,2330,5.153,2331,3.8,2332,3.8,2333,6.553,2334,6.269,2335,3.8,2336,3.8,2337,3.8,2338,3.8,2339,5.153,2340,3.8,2341,3.8,2342,3.266,2343,3.8,2344,3.8,2345,3.8,2346,5.153,2347,6.553,2348,3.8,2349,3.266,2350,3.8,2351,3.8,2352,3.8,2353,3.8,2354,3.953,2355,3.8,2356,3.8,2357,3.266,2358,3.8,2359,5.847,2360,3.8,2361,3.8,2362,3.8,2363,5.153,2364,5.847]],["title/components/HomeComponent.html",[0,0.064,292,0.853]],["body/components/HomeComponent.html",[0,0.102,1,0.66,2,0.884,3,0.126,4,0.126,5,0.721,6,0.88,7,0.629,8,0.629,9,0.095,13,0.513,15,0.827,19,0.66,25,0.57,26,1.506,27,1.098,28,0.489,29,0.613,30,1.579,31,0.76,32,1.022,34,1.47,35,0.66,36,1.846,38,1.022,40,0.186,41,0.423,51,0.423,66,0.77,70,0.848,71,0.019,72,0.327,73,0.332,74,0.753,78,1.971,80,0.66,85,0.618,92,0.577,99,2.423,100,0.415,103,2.433,106,2.382,113,2.929,114,1.243,115,2.019,116,1.662,118,0.439,128,3.07,130,1.57,133,0.928,134,0.799,135,0.882,138,0.884,142,2.929,147,1.278,148,1.064,151,2.88,153,0.228,156,0.11,158,1.322,163,0.799,165,0.11,166,0.126,167,0.704,173,1.251,177,1.093,192,0.764,198,0.599,257,0.66,258,0.928,259,0.727,260,1.5,261,0.727,262,0.727,263,0.66,264,0.727,265,0.629,266,1.072,267,0.693,268,0.727,269,0.66,270,0.727,271,0.727,272,0.629,273,0.542,274,1.072,275,0.66,276,0.599,277,0.727,278,0.66,279,0.727,280,0.66,281,0.727,282,0.629,283,0.727,284,0.629,285,0.599,286,0.727,287,1.278,288,0.727,289,0.66,290,0.727,291,0.727,292,1.426,293,0.727,294,0.66,295,0.727,296,0.66,297,0.693,298,0.439,299,0.727,300,0.66,301,0.727,302,0.66,303,0.727,304,1.278,305,0.693,306,0.727,307,0.66,308,0.542,309,0.727,310,0.66,311,0.693,312,0.727,313,0.693,314,0.727,315,0.66,316,0.727,317,0.542,318,0.57,319,0.629,320,0.727,321,0.727,322,0.01,323,0.01,327,2.195,338,2.78,395,2.067,397,3.854,399,3.286,433,1.667,454,3.059,461,1.401,484,1.748,491,3.219,497,2.505,499,2.18,514,3.07,521,1.585,557,2.712,592,1.951,599,1.828,623,1.874,655,3.219,686,1.951,712,2.929,713,1.579,715,4.809,723,4.454,752,3.286,753,3.286,754,2.505,760,2.56,770,3.88,810,2.444,817,2.444,826,0.969,862,1.251,945,1.951,1035,2.505,1080,2.712,1083,3.034,1107,2.34,1124,2.929,1212,3.539,1216,2.34,1250,1.585,1252,1.828,1263,2.34,1286,1.828,1297,2.977,1300,2.929,1301,2.929,1324,1.828,1419,2.929,1483,3.539,1526,3.286,1858,2.181,1865,2.181,1866,2.181,1867,2.181,1868,2.181,1869,2.181,1870,2.181,1871,2.181,1872,2.181,1873,2.181,1874,2.181,1879,2.444,2070,2.929,2073,3.219,2090,3.825,2091,3.825,2120,2.697,2164,5.332,2169,3.219,2174,2.181,2187,2.444,2189,2.444,2268,4.732,2365,2.444,2366,3.607,2367,4.987,2368,4.196,2369,4.987,2370,4.987,2371,4.987,2372,4.987,2373,4.196,2374,4.196,2375,4.196,2376,6.145,2377,5.505,2378,5.505,2379,3.607,2380,4.196,2381,4.196,2382,4.196,2383,4.987,2384,2.844,2385,4.196,2386,4.196,2387,4.196,2388,4.196,2389,4.196,2390,2.844,2391,4.196,2392,4.196,2393,2.844,2394,4.196,2395,2.844,2396,2.844,2397,2.844,2398,4.196,2399,6.523,2400,5.282,2401,2.844,2402,5.505,2403,4.196,2404,2.844,2405,4.196,2406,2.844,2407,4.196,2408,2.844,2409,2.844,2410,3.607,2411,3.607,2412,2.844,2413,4.196,2414,4.987,2415,2.844,2416,2.844,2417,2.844,2418,2.844,2419,2.844,2420,1.985,2421,2.844,2422,5.872,2423,4.196,2424,4.196,2425,4.196,2426,4.196,2427,4.196,2428,4.196,2429,2.844,2430,4.196,2431,4.196,2432,5.505,2433,4.196,2434,4.196,2435,2.844,2436,2.844,2437,4.196,2438,2.844,2439,2.844,2440,2.844,2441,2.844,2442,2.844,2443,2.844,2444,2.844,2445,6.145,2446,4.987,2447,4.196,2448,4.987,2449,2.844,2450,2.844,2451,2.844,2452,2.444,2453,2.844,2454,2.844,2455,2.844]],["title/components/InstallAppPopupComponentComponent.html",[0,0.064,294,0.853]],["body/components/InstallAppPopupComponentComponent.html",[0,0.13,1,0.887,2,1.089,3,0.17,4,0.17,5,0.89,7,0.845,8,0.845,9,0.127,13,0.418,15,0.498,19,0.887,25,0.766,26,1.543,27,1.147,28,0.657,29,0.756,30,1.947,31,0.934,32,1.26,34,1.73,35,0.887,38,1.26,40,0.17,41,0.522,51,0.522,61,0.468,66,0.73,70,0.528,71,0.019,72,0.365,73,0.279,74,0.468,76,0.674,79,0.596,80,0.887,83,0.89,85,0.451,92,0.486,99,2.277,100,0.559,106,1.68,118,0.321,130,1.322,134,0.468,135,0.498,138,1.425,148,1.071,150,3.326,151,2.707,153,0.227,156,0.148,163,1.075,165,0.148,166,0.17,167,0.412,222,2.622,257,0.887,258,1.144,259,0.977,260,1.606,261,0.977,262,0.977,263,0.887,264,0.977,265,0.845,266,1.322,267,0.931,268,0.977,269,0.887,270,0.977,271,0.977,272,0.845,273,0.729,274,1.322,275,0.887,276,0.805,277,0.977,278,0.887,279,0.977,280,0.887,281,0.977,282,0.845,283,0.977,284,0.845,285,0.805,286,0.977,287,0.887,288,0.977,289,0.887,290,0.977,291,0.977,292,0.887,293,0.977,294,1.459,295,1.965,296,1.801,297,0.931,298,0.59,299,0.977,300,0.887,301,0.977,302,0.887,303,0.977,304,0.887,305,0.931,306,0.977,307,0.887,308,0.729,309,0.977,310,0.887,311,0.931,312,0.977,313,0.931,314,0.977,315,0.887,316,0.977,317,0.729,318,0.766,319,0.845,320,0.977,321,0.977,322,0.013,323,0.013,341,2.406,393,2.622,397,2.707,404,4.821,414,5.95,418,5.645,454,3.175,462,2.885,478,5.402,484,1.387,491,3.969,492,2.885,541,5.309,597,3.612,601,3.286,648,2.707,713,1.947,725,2.707,746,2.277,747,2.885,886,2.049,935,3.751,936,3.751,945,2.406,948,2.885,965,3.501,970,3.751,984,3.089,986,1.303,1050,2.406,1062,3.089,1108,3.969,1209,2.158,1455,3.612,1469,3.586,1472,5.037,1517,3.286,1522,2.669,1530,3.969,1531,3.969,1778,3.612,1785,3.969,1909,2.933,1911,2.933,1926,4.04,1932,3.969,1936,4.041,1937,4.448,2020,4.448,2456,5.95,2457,5.174,2458,6.285,2459,6.285,2460,5.174,2461,3.823,2462,5.174,2463,4.448,2464,3.823,2465,3.823,2466,5.174,2467,3.823,2468,5.174,2469,4.448,2470,3.823,2471,3.823,2472,4.448,2473,5.174,2474,3.326,2475,5.174,2476,4.448]],["title/components/MusicComponent.html",[0,0.064,300,0.853]],["body/components/MusicComponent.html",[0,0.104,1,0.542,2,0.762,3,0.104,4,0.104,5,0.622,6,0.723,7,0.517,8,0.517,9,0.078,13,0.48,15,0.649,19,0.542,20,2.525,23,1.682,25,0.887,26,1.476,27,1.076,28,0.402,29,0.529,30,1.361,31,0.688,32,0.881,34,1.305,35,0.542,36,1.592,38,0.881,40,0.161,41,0.365,51,0.365,61,0.443,66,0.792,68,1.395,70,0.82,71,0.019,72,0.334,73,0.306,74,0.753,76,0.471,78,1.784,79,0.573,80,0.542,83,0.622,85,0.623,92,0.634,94,1.361,95,1.592,99,2.192,100,0.341,103,1.432,106,1.174,114,1.269,116,2.257,118,0.444,121,4.283,130,1.273,133,0.8,134,0.772,135,0.821,142,2.525,146,1.592,147,0.84,148,0.969,153,0.231,156,0.091,158,1.087,163,1.017,165,0.091,166,0.104,167,0.68,168,0.576,173,1.028,177,1.127,192,0.897,198,0.932,208,1.752,214,1.295,215,0.796,217,1.631,222,1.509,257,0.542,258,1.102,259,0.597,260,1.273,261,0.597,262,0.597,263,0.542,264,0.597,265,0.517,266,0.924,267,0.569,268,0.597,269,0.542,270,0.597,271,0.597,272,0.517,273,0.843,274,0.924,275,0.542,276,0.492,277,0.597,278,0.542,279,0.597,280,0.542,281,0.597,282,1.102,283,0.597,284,0.517,285,0.492,286,0.597,287,0.542,288,0.597,289,0.542,290,0.597,291,0.597,292,0.542,293,0.597,294,0.542,295,0.597,296,0.542,297,0.569,298,0.683,299,0.597,300,1.323,301,0.597,302,0.542,303,0.597,304,0.542,305,0.569,306,0.597,307,0.542,308,1.269,309,0.597,310,0.542,311,0.569,312,0.597,313,0.569,314,0.597,315,0.542,316,0.597,317,0.445,318,0.468,319,0.517,320,0.597,321,0.597,322,0.013,323,0.009,325,3.298,327,2.606,329,2.317,330,1.295,336,1.782,338,2.467,345,2.982,355,1.875,364,1.726,371,1.174,383,2.315,393,2.078,432,4.283,433,1.776,441,1.782,449,3.109,450,1.617,452,1.509,454,2.615,480,1.432,482,1.509,484,1.69,487,2.159,513,2.325,514,2.778,517,2.008,518,2.008,553,2.008,556,3.109,557,1.782,563,2.347,569,2.008,573,1.151,633,1.749,641,1.782,648,1.222,651,1.541,657,1.947,658,0.975,662,1.592,665,2.454,667,2.454,721,2.775,725,2.982,746,1.592,760,1.682,770,1.222,779,2.525,824,1.087,844,2.974,845,1.151,929,2.775,972,2.159,980,2.325,995,2.008,996,1.792,1030,3.821,1032,3.822,1033,5.884,1035,3.763,1049,2.325,1051,2.325,1052,5.372,1053,4.052,1061,2.775,1065,1.151,1067,3.395,1068,3.478,1069,1.792,1070,1.792,1072,1.303,1074,4.372,1076,2.017,1080,1.782,1083,1.682,1086,3.402,1094,3.395,1103,3.822,1119,3.822,1122,1.631,1130,1.395,1141,2.775,1144,3.395,1151,2.325,1187,3.089,1209,1.509,1253,1.395,1257,2.525,1363,3.478,1373,1.631,1374,1.631,1411,2.017,1441,2.017,1454,0.759,1457,1.303,1469,3.025,1476,1.782,1489,2.775,1498,2.775,1526,2.159,1527,2.159,1571,1.502,1572,1.792,1617,1.792,1621,1.792,1623,1.792,1625,1.792,1626,1.792,1627,1.792,1775,2.159,1852,2.775,1908,3.804,1911,1.792,1912,2.008,1913,1.631,1914,3.109,1915,3.109,1916,3.109,2013,3.109,2400,2.008,2452,2.008,2477,2.008,2478,6.141,2479,3.617,2480,5.419,2481,3.617,2482,4.425,2483,3.617,2484,6.141,2485,5.389,2486,4.425,2487,4.425,2488,4.982,2489,3.617,2490,3.617,2491,3.617,2492,6.304,2493,5.944,2494,3.617,2495,4.982,2496,4.982,2497,3.617,2498,4.982,2499,4.982,2500,4.982,2501,3.617,2502,2.337,2503,3.617,2504,3.617,2505,3.617,2506,2.337,2507,5.699,2508,3.617,2509,2.337,2510,3.617,2511,3.617,2512,2.337,2513,6.441,2514,3.617,2515,3.617,2516,2.337,2517,3.617,2518,3.617,2519,3.617,2520,2.337,2521,2.337,2522,4.982,2523,2.337,2524,3.617,2525,3.617,2526,2.337,2527,3.617,2528,3.617,2529,3.109,2530,3.089,2531,2.337,2532,5.699,2533,2.337,2534,3.617,2535,2.337,2536,3.617,2537,2.337,2538,3.617,2539,2.337,2540,2.337,2541,3.617,2542,2.337,2543,3.617,2544,2.775,2545,3.617,2546,3.109,2547,2.337,2548,3.617,2549,2.337,2550,2.337,2551,4.982,2552,2.337,2553,2.337,2554,2.337,2555,3.109,2556,3.617,2557,2.337,2558,2.337,2559,2.337,2560,4.425,2561,2.337,2562,2.337,2563,2.337,2564,2.337,2565,2.337,2566,3.617,2567,2.337,2568,2.337,2569,2.337,2570,2.337,2571,2.337,2572,2.337,2573,5.944,2574,2.337,2575,3.617,2576,4.425,2577,3.617,2578,3.617,2579,3.617,2580,2.337,2581,4.425,2582,2.337,2583,2.337,2584,2.337,2585,2.337,2586,3.617,2587,2.337,2588,2.337,2589,5.699,2590,2.337,2591,3.617,2592,2.337,2593,2.337,2594,3.109,2595,2.337,2596,4.425,2597,2.337,2598,2.337,2599,2.337,2600,3.617,2601,2.337,2602,2.337,2603,2.337,2604,2.337,2605,2.337,2606,3.617,2607,2.337,2608,2.337,2609,2.337,2610,2.337,2611,1.792,2612,2.337,2613,2.337,2614,2.337,2615,3.617,2616,3.109,2617,2.337,2618,2.337,2619,3.617,2620,2.337,2621,3.617,2622,2.337,2623,2.337,2624,2.337,2625,2.337,2626,2.337,2627,2.337,2628,2.337,2629,2.337,2630,2.337,2631,2.337,2632,2.337,2633,2.337,2634,2.337,2635,2.337,2636,2.337,2637,2.337,2638,2.337,2639,2.337,2640,2.337,2641,2.337,2642,2.337,2643,4.425,2644,2.337,2645,2.337,2646,3.617,2647,3.617,2648,5.699,2649,3.617,2650,4.982,2651,4.982,2652,4.982,2653,4.982,2654,2.337,2655,2.337,2656,2.337]],["title/components/NavbarComponent.html",[0,0.064,302,0.853]],["body/components/NavbarComponent.html",[0,0.118,1,0.97,2,1.156,3,0.185,4,0.185,5,0.944,6,1.292,7,0.924,8,0.924,9,0.139,13,0.495,17,3.276,19,0.97,25,0.837,26,1.553,27,1.132,28,0.718,29,0.951,31,0.758,32,1.337,34,1.808,35,0.97,36,2.416,38,1.337,40,0.185,41,0.553,51,0.553,61,0.512,66,0.661,70,0.758,71,0.019,72,0.326,73,0.244,74,0.673,76,0.715,78,1.965,79,0.632,80,0.97,83,0.944,85,0.364,92,0.516,99,2.416,100,0.61,105,3.831,114,1.397,118,0.38,130,1.403,132,2.014,134,0.829,135,0.544,148,0.895,153,0.253,156,0.162,163,1.174,165,0.162,166,0.185,167,0.661,257,0.97,258,1.214,259,1.067,260,1.664,261,1.067,262,1.067,263,0.97,264,1.067,265,0.924,266,1.403,267,1.018,268,1.067,269,0.97,270,1.067,271,1.067,272,0.924,273,0.796,274,1.403,275,0.97,276,0.88,277,1.067,278,0.97,279,1.067,280,0.97,281,1.067,282,0.924,283,1.067,284,0.924,285,0.88,286,1.067,287,0.97,288,1.067,289,1.612,290,1.403,291,1.067,292,0.97,293,1.067,294,0.97,295,1.067,296,0.97,297,1.018,298,0.645,299,1.067,300,0.97,301,1.067,302,1.612,303,1.067,304,0.97,305,1.018,306,1.067,307,0.97,308,0.796,309,1.067,310,0.97,311,1.018,312,1.067,313,1.018,314,1.067,315,0.97,316,1.067,317,0.796,318,0.837,319,0.924,320,1.067,321,1.067,322,0.013,323,0.013,330,1.965,395,2.704,396,3.831,399,4.533,405,1.965,428,4.05,433,1.403,441,2.704,454,3.196,462,3.061,492,3.061,497,4.037,499,2.174,504,4.718,505,2.331,514,3.061,547,2.916,554,2.916,599,2.685,637,2.174,713,2.066,790,3.529,953,3.831,970,3.276,986,1.424,1284,3.529,1411,3.061,1454,2.196,1568,3.529,1926,3.529,1936,4.144,2243,3.204,2245,4.718,2246,5.508,2249,3.529,2250,3.831,2256,4.211,2259,3.204,2261,4.211,2266,4.211,2269,4.211,2270,4.995,2280,3.204,2530,3.831,2657,3.591,2658,6.512,2659,6.943,2660,6.131,2661,5.489,2662,6.131,2663,5.489,2664,5.489,2665,4.718,2666,4.177,2667,4.718,2668,4.177,2669,4.177,2670,4.718]],["title/components/PieChartComponent.html",[0,0.064,304,0.853]],["body/components/PieChartComponent.html",[0,0.107,1,0.599,2,0.822,3,0.115,4,0.115,5,0.671,6,0.799,7,0.571,8,0.571,9,0.086,13,0.423,15,0.336,16,2.181,19,0.599,23,1.816,24,2.463,25,0.517,26,1.492,27,1.088,28,0.444,29,1.007,30,1.469,31,0.724,35,0.599,36,1.718,38,0.951,40,0.115,41,0.394,51,0.394,54,2.078,61,0.643,64,2.789,66,0.777,68,2.33,70,0.65,71,0.019,72,0.325,73,0.333,74,0.577,76,0.336,78,1.398,79,0.682,80,0.599,85,0.553,89,3.663,92,0.66,94,2.231,95,2.609,96,1.923,100,1.017,103,2.078,106,1.83,107,3.101,114,0.744,115,1.407,118,0.431,125,2.625,126,1.541,128,2.177,129,1.772,130,1.515,133,1.615,134,0.754,135,0.825,138,1.248,147,0.599,148,0.967,153,0.204,155,1.439,156,0.1,159,1.541,165,0.1,166,0.115,167,0.664,168,0.613,177,0.902,182,1.628,192,0.938,197,1.98,198,1.187,208,1.022,214,0.924,215,1.33,220,1.98,246,2.725,248,1.267,257,0.906,258,0.863,259,0.66,260,1.341,261,0.66,262,0.66,263,0.599,264,0.66,265,0.571,266,0.998,267,0.629,268,0.66,269,0.599,270,0.66,271,0.66,272,0.571,273,0.492,274,0.998,275,0.599,276,0.544,277,0.66,278,0.599,279,0.66,280,0.599,281,0.66,282,0.571,283,0.66,284,0.571,285,0.544,286,0.66,287,0.599,288,0.66,289,0.599,290,0.66,291,0.66,292,0.599,293,0.66,294,0.599,295,0.66,296,0.599,297,0.629,298,0.87,299,0.66,300,0.599,301,0.66,302,0.599,303,0.66,304,1.218,305,1.544,306,0.66,307,0.599,308,0.492,309,0.66,310,0.599,311,0.629,312,0.66,313,0.629,314,0.66,315,0.599,316,0.66,317,0.492,318,0.517,319,0.571,320,0.66,321,0.66,322,0.009,323,0.009,352,2.51,357,1.66,361,1.628,364,1.046,397,3.101,401,2.177,416,2.385,433,0.998,439,2.177,450,1.924,459,1.98,467,2.121,480,1.546,484,1.046,488,2.51,501,1.469,514,2.177,521,2.177,544,1.439,581,1.98,582,1.964,623,1.151,633,1.528,647,1.272,658,1.077,659,1.772,710,5.449,711,3.663,715,4.171,723,3.364,726,3.132,731,2.776,732,2.995,733,4.026,770,3.395,771,2.995,777,1.541,801,5.449,802,4.026,803,1.98,824,2.863,826,1.921,877,2.438,882,3.221,901,3.663,902,2.351,945,2.441,951,2.219,985,1.802,988,2.219,1000,2.219,1021,2.725,1056,2.625,1071,3.026,1079,1.351,1205,1.541,1209,1.077,1253,1.541,1277,1.541,1284,1.66,1288,1.66,1319,1.802,1340,2.177,1649,1.66,1710,2.725,1827,1.98,2070,3.286,2072,4.047,2083,2.219,2084,4.511,2085,4.511,2086,4.511,2087,4.511,2088,3.356,2090,4.323,2091,4.323,2100,4.026,2102,4.73,2111,3.356,2112,4.511,2114,3.356,2119,3.356,2135,2.219,2146,4.323,2159,3.356,2161,3.356,2162,2.219,2163,2.219,2164,3.611,2169,3.611,2170,3.356,2171,2.219,2173,3.356,2174,2.995,2176,2.219,2178,4.047,2195,3.356,2196,2.219,2197,2.219,2209,2.219,2221,2.219,2222,2.219,2295,1.802,2320,3.356,2349,3.356,2410,2.219,2411,3.356,2420,5.055,2530,3.663,2671,5.555,2672,1.98,2673,3.904,2674,3.356,2675,4.047,2676,4.708,2677,3.904,2678,4.708,2679,4.708,2680,4.708,2681,4.708,2682,4.511,2683,3.904,2684,3.904,2685,2.582,2686,2.582,2687,2.582,2688,5.928,2689,2.582,2690,2.582,2691,2.582,2692,5.248,2693,2.582,2694,2.582,2695,3.356,2696,3.904,2697,2.582,2698,4.323,2699,5.636,2700,3.904,2701,2.582,2702,2.582,2703,2.582,2704,2.582,2705,2.582,2706,3.904,2707,3.904,2708,2.582,2709,2.582,2710,2.582,2711,5.248,2712,2.582,2713,2.582,2714,2.582,2715,2.582,2716,2.582,2717,2.582,2718,4.708,2719,2.582,2720,2.582,2721,2.582,2722,2.582,2723,2.582,2724,4.708,2725,3.904,2726,4.708,2727,4.708,2728,5.928,2729,4.708,2730,4.708,2731,4.708,2732,5.928,2733,4.708,2734,4.708,2735,4.708,2736,2.582,2737,4.708,2738,3.904,2739,2.582,2740,4.708,2741,2.582,2742,3.904,2743,2.582,2744,2.582,2745,2.582,2746,2.582,2747,2.582,2748,2.582,2749,2.582,2750,2.219,2751,2.582,2752,2.582,2753,4.708,2754,2.582,2755,3.904,2756,2.582,2757,2.582,2758,2.582,2759,2.582,2760,2.582,2761,3.904,2762,2.582,2763,2.582]],["title/injectables/PostApiService.html",[431,2.566,642,0.423]],["body/injectables/PostApiService.html",[3,0.242,4,0.183,9,0.137,13,0.439,15,0.709,16,2.291,40,0.183,51,0.549,61,0.667,65,3.528,66,0.657,70,0.57,71,0.019,72,0.207,73,0.183,74,0.506,76,0.709,77,2.566,78,1.95,79,0.627,83,0.936,85,0.532,92,0.512,100,0.891,115,1.106,133,1.63,138,1.579,148,0.673,153,0.274,156,0.16,165,0.16,166,0.183,167,0.727,168,0.877,171,2.653,177,0.936,192,0.972,193,2.881,212,2.301,215,1.407,251,3.801,322,0.013,323,0.013,329,3.014,336,2.033,354,4.972,355,2.049,364,1.106,369,2.033,392,0.913,394,3.801,405,1.95,416,2.695,429,2.695,431,4.524,433,1.392,444,3.801,445,4.972,446,4.681,448,2.533,450,1.979,480,2.566,501,1.553,522,2.881,549,4.972,557,2.683,563,2.182,573,2.033,587,4.675,588,2.653,594,3.548,595,2.301,596,3.548,608,3.548,625,3.105,642,0.627,646,1.95,651,1.685,652,1.106,659,2.294,666,3.166,699,1.407,713,2.049,844,3.251,845,2.033,864,4.13,877,2.566,883,3.801,886,2.156,896,2.653,897,2.653,1024,3.858,1035,2.464,1039,3.501,1047,3.757,1056,3.036,1062,3.251,1071,3.501,1151,3.501,1202,3.398,1250,3.757,1435,3.036,1438,3.251,1469,3.528,1527,2.464,1577,3.918,1931,4.681,1940,3.166,1948,3.166,2546,4.681,2616,4.681,2764,5.571,2765,4.681,2766,5.446,2767,5.446,2768,4.178,2769,6.92,2770,6.738,2771,6.481,2772,6.481,2773,4.127,2774,5.446,2775,3.501,2776,4.127,2777,5.446,2778,5.446,2779,6.095,2780,4.127,2781,5.446,2782,5.446,2783,5.446,2784,4.524,2785,6.095,2786,4.127,2787,3.166,2788,4.127,2789,4.127,2790,4.127,2791,5.446,2792,4.127,2793,5.446,2794,4.127,2795,5.446,2796,4.127,2797,4.127,2798,4.127,2799,4.127,2800,4.127,2801,4.127,2802,4.127,2803,4.127,2804,4.127,2805,5.446,2806,4.127,2807,5.446,2808,4.127,2809,4.127,2810,4.127,2811,4.127,2812,4.127,2813,4.127,2814,4.127,2815,4.127,2816,3.166,2817,4.127,2818,3.166]],["title/injectables/SaavnService.html",[642,0.423,1030,2.364]],["body/injectables/SaavnService.html",[3,0.151,4,0.151,9,0.113,13,0.482,15,0.442,20,3.329,25,1.343,40,0.151,41,0.481,51,0.481,61,0.585,66,0.723,70,0.761,71,0.019,72,0.363,73,0.29,74,0.675,76,0.621,78,2.254,79,0.688,83,0.82,85,0.622,114,1.244,118,0.449,134,0.675,135,0.917,138,1.545,146,2.099,153,0.253,156,0.132,165,0.185,166,0.151,167,0.704,168,0.927,177,1.153,192,0.905,198,0.715,208,1.345,214,1.216,215,1.158,255,1.58,276,1.004,285,1.004,298,0.737,308,1.304,322,0.012,323,0.014,325,3.127,327,2.495,328,4.31,329,3.413,336,2.715,345,2.884,355,1.795,364,0.911,367,2.337,369,1.674,380,4.085,383,1.777,389,2.184,392,0.751,394,3.329,426,2.847,427,3.371,433,1.409,439,1.894,441,2.35,479,3.847,505,1.216,513,2.184,522,2.371,528,1.777,545,2.184,546,2.028,563,2.14,624,0.864,642,0.549,651,1.705,652,0.911,659,1.279,662,1.495,663,1.99,682,2.35,686,1.58,699,1.158,750,2.35,761,2.606,770,1.777,774,2.66,844,2.847,845,1.674,846,2.218,870,2.847,902,1.99,1011,4.399,1012,5.249,1013,2.606,1014,2.606,1015,1.894,1016,2.563,1017,2.92,1018,2.928,1019,4.585,1020,4.585,1022,1.889,1023,2.92,1024,3.64,1025,3.659,1026,4.1,1027,2.371,1028,2.606,1029,2.184,1030,4.196,1031,4.1,1032,5.007,1033,5.834,1034,3.659,1035,4.253,1036,4.738,1037,5.611,1038,5.335,1039,3.066,1040,4.738,1041,4.1,1042,4.1,1043,4.228,1044,3.659,1045,3.659,1046,3.659,1047,3.073,1048,4.1,1049,3.066,1050,2.218,1051,3.066,1052,4.829,1053,3.066,1054,4.1,1055,3.659,1056,2.66,1057,4.1,1058,2.92,1059,2.92,1060,2.606,1061,3.659,1062,2.847,1063,4.738,1064,5.763,1065,3.101,1066,4.1,1067,3.659,1068,3.329,1069,4.585,1070,4.228,1071,3.543,1072,3.073,1073,4.738,1074,4.228,1075,4.1,1076,2.66,1077,2.92,1078,2.184,1079,1.777,1080,2.35,1081,4.1,1082,5.412,1083,1.58,1084,2.371,1085,2.92,1086,2.028,1087,2.92,1088,2.92,1089,3.659,1090,2.92,1091,2.92,1092,2.92,1093,2.92,1094,3.659,1095,2.92,1096,2.92,1097,2.92,1098,2.92,1099,2.92,1100,2.92,1101,3.659,1102,4.1,1103,4.585,1104,4.1,1105,2.92,1106,2.606,1107,2.66,1108,3.659,1109,2.92,1110,2.92,1111,2.92,1112,2.92,1113,2.92,1114,2.92,1115,2.92,1116,2.92,1117,2.92,1118,2.92,1119,4.228,1120,2.92,1121,2.606,1122,2.371,1123,2.92,1124,2.371,1125,2.92,1126,2.606,1127,2.92,1128,2.92,1129,2.371,1130,2.028,1131,2.92,1132,2.92,1133,4.1,1134,2.606,1135,2.184,1136,2.92,1137,2.92,1138,2.371,1139,2.606,1140,2.92,1141,3.659,1142,2.92,1143,2.606,1144,2.606,1145,3.659,1146,2.495,1147,2.184,1148,2.35,1149,2.371,1150,3.659,1151,2.184,1152,2.606,1153,2.606,1154,4.228,1155,2.606,1156,2.606,1157,2.606,1158,2.847,1159,4.585,1948,2.606,2819,4.77,2820,4.77,2821,4.77,2822,3.398,2823,3.398,2824,3.398,2825,3.398,2826,3.398]],["title/interfaces/Schema.html",[402,2.364,624,0.666]],["body/interfaces/Schema.html",[3,0.158,4,0.158,9,0.118,13,0.286,16,2.148,21,1.405,27,0.824,29,0.519,31,0.679,41,0.614,51,0.358,66,0.383,71,0.019,72,0.246,76,0.462,77,3.023,79,0.566,83,0.61,85,0.613,91,1.562,92,0.66,100,0.519,114,0.676,115,0.951,116,1.405,118,0.44,129,1.85,132,1.884,133,1.588,134,0.861,135,0.64,138,1.537,148,0.802,153,0.219,156,0.138,165,0.138,166,0.158,167,0.746,168,0.883,177,1.276,182,2.051,183,1.748,187,1.748,192,0.943,198,1.188,322,0.012,323,0.012,330,1.27,392,0.785,402,4.867,403,3.772,405,1.27,429,1.85,433,1.256,436,2.412,438,1.335,442,2.02,443,2.353,444,3.432,448,1.65,450,1.152,467,1.335,480,2.234,482,1.48,484,0.951,485,1.748,490,5.077,501,1.335,578,3.432,582,1.48,603,2.281,624,1.022,625,2.68,626,1.562,628,1.85,630,2.477,631,1.65,632,1.65,642,0.566,645,4.619,646,1.27,651,1.745,652,0.951,657,1.562,658,2.051,659,1.85,660,1.65,661,2.541,663,2.761,690,2.234,696,2.624,731,1.748,746,1.562,747,1.979,750,1.748,774,3.146,826,1.209,862,1.562,863,2.741,864,2.118,877,2.869,886,2.234,902,3.095,915,2.477,986,1.209,1078,3.161,1079,1.856,1209,1.48,1246,3.368,1340,1.979,1347,3.636,1454,1.152,1469,3.151,1471,2.477,1476,2.779,1576,2.741,1600,2.118,1913,2.477,1955,2.722,2249,2.281,2474,2.281,2775,2.281,2787,2.722,2816,3.772,2827,2.722,2828,4.226,2829,4.226,2830,3.549,2831,3.549,2832,4.226,2833,3.05,2834,3.05,2835,3.05,2836,3.772,2837,3.05,2838,3.05,2839,3.05,2840,3.05,2841,3.05,2842,3.05,2843,3.05,2844,4.226,2845,3.05,2846,3.05,2847,4.226,2848,3.05,2849,3.05,2850,4.226,2851,2.477,2852,2.477,2853,2.477,2854,2.477,2855,2.477,2856,2.477,2857,3.05,2858,3.05,2859,4.226,2860,3.05,2861,4.85,2862,5.236,2863,3.05,2864,4.226,2865,4.226,2866,4.226,2867,4.226,2868,4.226,2869,3.05,2870,4.226,2871,4.226,2872,3.05,2873,3.05,2874,4.226,2875,4.226,2876,3.05,2877,3.05,2878,4.226,2879,4.226,2880,3.05,2881,3.05,2882,4.226,2883,3.05,2884,3.05,2885,3.05,2886,4.226,2887,3.05,2888,3.05,2889,3.05,2890,3.05,2891,4.226,2892,3.05,2893,3.05,2894,3.05,2895,3.05,2896,3.05,2897,3.05,2898,3.05,2899,3.05,2900,3.05,2901,3.05,2902,3.05,2903,3.05,2904,3.05,2905,3.05,2906,3.05,2907,3.05,2908,3.05,2909,3.05,2910,3.05,2911,3.05,2912,3.05,2913,3.05,2914,3.05]],["title/components/SearchButtonComponent.html",[0,0.064,307,0.853]],["body/components/SearchButtonComponent.html",[0,0.12,1,0.882,2,1.085,3,0.169,4,0.169,5,1.077,6,1.175,7,0.84,8,0.84,9,0.126,13,0.416,15,0.494,19,0.882,25,0.761,26,1.543,27,1.125,28,0.653,29,0.753,30,1.938,31,0.711,32,1.255,34,1.724,35,0.882,36,2.267,38,1.255,40,0.169,41,0.519,51,0.519,61,0.631,66,0.758,70,0.524,71,0.019,72,0.293,73,0.278,74,0.631,76,0.671,79,0.593,80,0.882,83,0.885,85,0.51,92,0.635,99,2.267,100,0.555,106,2.407,107,2.695,114,1.194,118,0.235,125,3.259,126,2.267,128,2.872,130,1.316,134,0.631,135,0.816,138,1.32,147,0.882,148,1.022,151,2.695,153,0.243,155,2.117,156,0.147,158,1.766,163,1.068,165,0.147,166,0.169,167,0.41,168,0.494,171,3.311,173,1.671,252,3.595,257,0.882,258,1.139,259,0.97,260,1.602,261,0.97,262,0.97,263,0.882,264,0.97,265,0.84,266,1.316,267,0.925,268,0.97,269,0.882,270,0.97,271,0.97,272,0.84,273,0.724,274,1.316,275,0.882,276,0.8,277,0.97,278,0.882,279,0.97,280,0.882,281,0.97,282,0.84,283,0.97,284,0.84,285,1.455,286,0.97,287,0.882,288,0.97,289,0.882,290,0.97,291,0.97,292,0.882,293,0.97,294,0.882,295,0.97,296,0.882,297,0.925,298,0.587,299,0.97,300,0.882,301,0.97,302,0.882,303,0.97,304,0.882,305,0.925,306,0.97,307,1.632,308,1.471,309,0.97,310,0.882,311,0.925,312,0.97,313,0.925,314,0.97,315,0.882,316,0.97,317,0.724,318,0.761,319,0.84,320,0.97,321,0.97,322,0.012,323,0.012,333,4.428,338,3.259,426,3.741,427,3.087,477,3.595,492,2.872,505,1.844,515,3.311,528,1.987,545,2.441,546,2.267,573,1.871,612,3.264,667,2.537,713,1.938,846,2.395,870,4.196,935,4.033,936,4.033,948,2.872,965,3.489,980,3.311,984,3.075,1053,4.767,1086,3.075,1263,2.872,1272,2.651,1286,2.441,1423,4.375,1490,3.075,1511,3.951,1775,3.075,1779,3.951,1793,4.428,1936,3.741,1997,5.387,2274,4.428,2379,5.387,2915,6.125,2916,6.125,2917,3.264,2918,5.151,2919,5.151,2920,5.845,2921,5.151,2922,5.845,2923,5.845,2924,6.268,2925,6.268,2926,3.798,2927,5.151,2928,5.845,2929,3.798,2930,5.151,2931,5.151,2932,5.151,2933,5.151,2934,4.808,2935,3.798,2936,5.151,2937,5.151,2938,5.151,2939,5.151,2940,3.798,2941,5.151,2942,5.151,2943,3.798,2944,3.798,2945,5.151,2946,5.151,2947,3.798,2948,5.845,2949,3.798,2950,3.798,2951,3.798,2952,5.151,2953,3.798,2954,3.798,2955,3.798,2956,3.798,2957,3.798,2958,3.798,2959,3.798,2960,3.798,2961,3.798]],["title/injectables/SectionService.html",[428,2.05,642,0.423]],["body/injectables/SectionService.html",[2,1.309,3,0.226,4,0.226,9,0.169,13,0.502,15,0.911,40,0.226,41,0.627,51,0.627,66,0.725,70,0.702,71,0.019,72,0.255,73,0.226,74,0.623,79,0.716,85,0.444,92,0.584,103,2.462,107,3.661,114,1.442,118,0.416,134,0.762,135,0.809,146,2.736,153,0.241,156,0.197,165,0.197,166,0.226,167,0.549,168,0.874,222,2.594,322,0.015,323,0.015,327,3.253,330,2.226,392,1.124,393,2.594,399,4.644,409,6.171,428,3.467,436,2.462,441,3.063,497,3.712,499,2.771,637,2.462,642,0.716,646,2.226,652,1.363,699,1.733,953,4.34,1029,3.269,1055,5.369,1219,4.34,1411,3.467,1454,2.181,2056,4.77,2665,5.345,2962,4.371,2963,6.219,2964,7.179,2965,6.999,2966,6.999,2967,6.718,2968,6.219,2969,5.085,2970,6.219,2971,5.085,2972,6.219,2973,6.219,2974,6.219,2975,5.085,2976,6.219,2977,5.345,2978,5.085]],["title/interfaces/Session.html",[624,0.666,1197,2.364]],["body/interfaces/Session.html",[0,0.069,3,0.175,4,0.175,5,1.295,6,0.81,7,0.579,8,0.579,9,0.227,15,0.738,17,1.563,23,1.218,24,2.064,26,0.525,31,0.655,40,0.116,41,0.479,54,1.037,61,0.321,69,1.29,71,0.019,72,0.131,73,0.265,92,0.497,94,0.985,115,1.058,118,0.442,125,2.647,134,0.648,144,1.37,147,1.604,148,0.862,153,0.22,155,1.46,156,0.102,165,0.102,166,0.116,168,0.889,173,1.736,177,1.12,192,0.889,198,1.439,208,2.36,212,1.46,213,2.967,214,2.03,215,2.262,222,1.646,248,1.281,273,0.905,298,0.955,308,0.499,317,0.499,318,1.369,322,0.01,323,0.01,336,3.493,345,3.331,364,1.417,367,2.03,369,1.29,383,3.527,392,0.579,461,2.339,483,1.218,484,1.988,499,1.037,507,1.563,558,1.37,563,1.413,573,1.29,579,2.355,582,1.092,595,1.46,611,1.683,614,1.828,615,3.314,619,3.314,621,2.537,623,1.559,624,0.86,626,1.152,633,1.281,656,1.092,667,1.29,679,1.218,685,1.218,690,1.037,696,2.208,717,4.392,760,1.218,776,3.958,824,1.218,826,2.433,845,2.793,846,2.208,862,1.152,878,2.647,886,1.037,956,2.537,960,3.052,1016,2.458,1018,2.208,1022,2.245,1024,2.2,1047,1.46,1050,1.218,1065,2.339,1076,3.323,1130,1.563,1146,1.37,1148,1.29,1160,2.537,1161,1.29,1162,1.46,1163,1.828,1164,2.009,1165,2.009,1166,2.009,1167,2.009,1168,2.009,1169,2.009,1170,2.009,1171,2.009,1172,2.009,1173,2.009,1174,2.009,1175,2.009,1176,2.009,1177,2.009,1178,2.009,1179,2.009,1180,2.009,1181,2.009,1182,2.009,1183,2.009,1184,2.009,1185,2.009,1186,3.027,1187,2.754,1188,2.064,1189,1.828,1190,2.064,1191,3.052,1192,1.828,1193,2.064,1194,1.563,1195,1.828,1196,2.537,1197,3.831,1198,4.35,1199,2.009,1200,1.46,1201,4.35,1202,2.2,1203,3.027,1204,2.009,1205,3.888,1206,3.052,1207,4.334,1208,2.537,1209,1.092,1210,2.2,1211,2.009,1212,1.683,1213,5.509,1214,1.46,1215,3.314,1216,2.2,1217,1.683,1218,2.009,1219,1.828,1220,2.009,1221,2.009,1222,2.537,1223,2.009,1224,3.027,1225,2.009,1226,2.009,1227,1.563,1228,3.958,1229,3.027,1230,5.04,1231,3.642,1232,3.642,1233,2.009,1234,5.013,1235,2.537,1236,2.009,1237,1.828,1238,2.009,1239,2.009,1240,2.009,1241,1.828,1242,1.828,1243,3.314,1244,3.642,1245,3.692,1246,3.558,1247,3.236,1248,4.572,1249,4.055,1250,3.954,1251,4.055,1252,4.589,1253,3.155,1254,4.318,1255,4.318,1256,4.572,1257,1.828,1258,4.055,1259,5.092,1260,4.745,1261,4.35,1262,2.009,1263,2.2,1264,1.828,1265,4.35,1266,1.683,1267,3.642,1268,1.828,1269,4.997,1270,2.009,1271,3.027,1272,3.314,1273,2.009,1274,3.398,1275,3.314,1276,2.009,1277,2.355,1278,2.754,1279,2.009,1280,2.009,1281,2.009,1282,2.009,1283,3.692,1284,1.683,1285,1.828,1286,3.052,1287,2.009,1288,1.683,1289,3.052,1290,2.009,1291,3.642,1292,2.009,1293,3.642,1294,2.009,1295,2.009,1296,2.009,1297,2.834,1298,2.009,1299,2.009,1300,2.754,1301,2.754,1302,3.642,1303,1.828,1304,3.027,1305,2.009,1306,2.009,1307,3.314,1308,3.831,1309,3.027,1310,1.46,1311,4.572,1312,2.009,1313,3.689,1314,3.027,1315,2.009,1316,2.009,1317,2.009,1318,1.563,1319,1.828,1320,2.009,1321,2.009,1322,4.884,1323,2.009,1324,1.683,1325,3.027,1326,2.009,1327,2.009,1328,2.009,1329,2.009,1330,2.009,1331,2.009,1332,2.009,1333,2.009,1334,2.009,1335,2.009,1336,2.009,1337,2.009,1338,2.009,1339,2.009,1340,2.2,1341,2.009,1342,2.009,1343,2.009,1344,2.009,1345,2.009,1346,2.009,1347,1.563,1348,2.009,1349,2.009,1350,2.009,1351,2.009,1352,2.009,1353,5.092,1354,2.009,1355,2.009,1356,2.009,1357,2.009,1358,2.009,1359,2.009,1360,2.009,1361,2.009,1362,2.009,1363,1.828,1364,3.642,1365,3.027,1366,2.009,1367,2.009,1368,4.055,1369,4.572,1370,2.009,1371,2.009,1372,2.009,1373,3.314,1374,3.314,1375,2.009,1376,2.009,1377,2.009,1378,2.009,1379,1.563,1380,2.009,1381,4.055,1382,2.009,1383,2.009,1384,2.009,1385,3.027,1386,2.009,1387,1.828,1388,2.009,1389,2.009,1390,2.009,1391,2.009,1392,2.009,1393,2.009,1394,2.009,1395,2.064,1396,2.009,1397,1.828,1398,2.009,1399,3.642,1400,2.009,1401,2.009,1402,2.009,1403,2.009,1404,2.009,1405,2.009,1406,2.009,1407,2.009,1408,2.009,1409,1.46,1410,2.009,1411,1.46,1412,2.009,1413,3.027,1414,2.009,1415,2.009,1416,3.027,1417,2.009,1418,1.683,1419,1.828,1420,2.009,1421,2.009,1422,2.009,1423,1.828,1424,2.009,1425,2.009,1426,2.009,1427,1.683,1428,2.009,1429,2.009,1430,2.009,1431,1.828,1432,2.009,1433,3.398,1434,2.009,1435,1.46,1436,1.828,1437,2.009,1438,1.563,1439,2.009,1440,2.009,1441,2.2,1442,2.009,1443,3.027,1444,2.009,1445,3.155,1446,2.009,1447,3.027,1448,2.009,1449,2.009,1450,2.009,1451,3.027,1452,2.009,1453,2.009,1454,0.85,1455,1.828,1456,2.009,1457,1.46,1458,1.828,1459,1.828,1460,1.828,1461,1.828,1462,1.828,1463,2.009,1464,2.009,1465,1.683,1466,2.009,1467,2.009,1468,2.009]],["title/components/SettingItemComponent.html",[0,0.064,310,0.853]],["body/components/SettingItemComponent.html",[0,0.13,1,1.117,2,1.266,3,0.214,4,0.214,5,1.033,7,1.064,8,1.064,9,0.16,13,0.388,19,1.117,25,0.965,26,1.566,27,1.142,28,0.827,29,0.878,30,2.262,31,0.83,32,1.173,35,1.117,38,1.464,40,0.214,66,0.519,71,0.019,72,0.301,73,0.214,80,1.117,100,0.703,106,1.951,118,0.372,130,1.536,132,1.86,147,1.395,153,0.187,156,0.187,165,0.187,166,0.214,257,1.117,258,1.329,259,1.23,260,1.754,261,1.23,262,1.23,263,1.117,264,1.23,265,1.064,266,1.536,267,1.173,268,1.23,269,1.117,270,1.23,271,1.23,272,1.064,273,0.917,274,1.536,275,1.117,276,1.014,277,1.23,278,1.117,279,1.23,280,1.117,281,1.23,282,1.064,283,1.23,284,1.064,285,1.014,286,1.23,287,1.117,288,1.23,289,1.117,290,1.23,291,1.23,292,1.117,293,1.23,294,1.117,295,1.23,296,1.117,297,1.173,298,0.743,299,1.23,300,1.117,301,1.23,302,1.117,303,1.23,304,1.117,305,1.173,306,1.23,307,1.117,308,0.917,309,1.23,310,1.594,311,1.816,312,1.23,313,1.173,314,1.23,315,1.117,316,1.23,317,0.917,318,0.965,319,1.064,320,1.23,321,1.23,322,0.015,323,0.015,367,2.152,439,3.352,501,2.262,592,2.796,682,2.961,690,2.854,824,3.467,885,4.196,936,3.588,945,2.796,1015,3.352,1022,2.38,1519,4.196,1919,4.611,1927,4.196,2469,5.167,2979,5.167,2980,5.167,2981,4.138,2982,5.167,2983,5.167,2984,6.011,2985,4.814]],["title/components/SidebarComponent.html",[0,0.064,315,0.853]],["body/components/SidebarComponent.html",[0,0.123,1,0.954,2,1.144,3,0.183,4,0.183,5,0.934,6,1.272,7,0.909,8,0.909,9,0.137,13,0.491,19,0.954,25,0.824,26,1.551,27,1.131,28,1.046,29,0.946,30,2.044,31,0.75,32,1.323,34,1.794,35,0.954,36,2.39,38,1.323,40,0.183,41,0.548,51,0.548,61,0.504,66,0.656,70,0.75,71,0.019,72,0.346,73,0.27,74,0.666,76,0.707,79,0.625,80,0.954,83,0.934,85,0.359,92,0.51,99,2.39,100,0.601,103,2.151,105,3.791,114,1.233,118,0.417,130,1.388,132,2.002,134,0.825,135,0.535,146,3.042,153,0.236,156,0.159,163,1.156,165,0.159,166,0.183,167,0.656,257,0.954,258,1.201,259,1.051,260,1.654,261,1.051,262,1.051,263,0.954,264,1.051,265,0.909,266,1.388,267,1.001,268,1.051,269,0.954,270,1.051,271,1.051,272,0.909,273,0.783,274,1.388,275,0.954,276,0.866,277,1.051,278,0.954,279,1.051,280,0.954,281,1.051,282,0.909,283,1.051,284,0.909,285,0.866,286,1.051,287,0.954,288,1.051,289,0.954,290,1.051,291,1.051,292,0.954,293,1.051,294,0.954,295,1.051,296,0.954,297,1.001,298,0.94,299,1.051,300,0.954,301,1.051,302,0.954,303,1.051,304,0.954,305,1.001,306,1.051,307,0.954,308,0.783,309,1.051,310,0.954,311,1.001,312,1.051,313,1.001,314,1.051,315,1.604,316,1.051,317,0.783,318,0.824,319,0.909,320,1.051,321,1.051,322,0.013,323,0.013,325,2.842,389,3.492,393,2.266,395,2.676,399,4.493,405,2.317,428,4.037,433,1.388,438,2.044,441,2.676,454,3.186,462,3.029,497,3.242,499,2.895,501,2.044,547,2.869,554,2.869,578,3.791,597,3.791,599,2.643,625,2.39,637,2.151,690,2.151,712,3.791,713,2.044,718,4.669,970,3.242,986,1.401,1018,2.526,1050,2.526,1124,3.791,1285,5.103,1411,3.029,1454,2.101,1568,3.492,1828,3.791,2023,4.167,2246,5.489,2250,3.791,2251,4.669,2256,4.167,2259,3.153,2261,4.167,2262,4.669,2266,4.167,2269,4.167,2270,4.167,2280,3.153,2667,4.669,2986,3.534,2987,5.432,2988,5.432,2989,4.669,2990,5.432,2991,6.083,2992,5.432,2993,6.083,2994,5.432,2995,4.111,2996,5.432,2997,5.432,2998,4.111]],["title/injectables/StorageService.html",[429,1.384,642,0.423]],["body/injectables/StorageService.html",[3,0.126,4,0.126,9,0.095,13,0.513,16,2.256,21,1.125,27,0.898,29,0.613,31,0.688,40,0.126,41,0.641,51,0.555,61,0.348,66,0.8,70,0.848,71,0.019,72,0.327,73,0.301,74,0.753,76,0.546,77,3.062,79,0.634,83,0.721,85,0.66,91,1.251,92,0.683,100,0.613,114,0.799,115,0.762,116,1.125,118,0.456,129,1.579,132,2.018,133,1.615,134,0.895,135,0.764,138,1.575,148,0.813,153,0.193,156,0.11,165,0.11,166,0.126,167,0.704,168,0.959,177,1.236,182,1.75,183,1.4,187,1.4,192,0.905,198,1.05,322,0.01,323,0.01,330,1.502,392,0.628,402,4.876,403,2.18,405,1.502,429,2.071,433,1.407,436,2.583,438,1.579,442,1.785,443,2.08,444,3.842,448,1.322,450,0.923,467,1.07,480,2.18,482,1.75,484,1.124,485,2.066,490,5.332,501,1.579,578,3.842,582,1.186,603,1.827,624,0.76,625,2.87,628,1.07,630,1.984,631,1.322,632,1.322,642,0.483,645,4.852,646,1.502,651,1.703,652,0.762,657,2.422,658,1.75,659,1.579,660,1.322,661,2.721,663,2.899,690,1.661,696,2.857,699,0.969,731,1.4,746,1.846,747,2.339,750,2.066,774,3.425,826,0.969,862,1.251,863,2.339,864,1.697,877,2.927,886,1.974,902,3.103,915,2.928,986,0.969,1078,3.538,1079,2.194,1209,1.75,1246,2.976,1340,2.78,1347,4.149,1454,0.923,1469,3.28,1471,2.928,1476,3.026,1576,1.585,1600,1.697,1909,2.18,1913,1.984,1955,3.218,2249,2.696,2474,2.696,2775,1.827,2787,2.18,2816,4.222,2827,2.18,2828,2.443,2829,2.443,2832,2.443,2833,2.443,2834,3.606,2835,3.606,2836,4.222,2837,3.606,2838,3.606,2839,4.285,2840,4.285,2841,4.285,2842,4.285,2843,4.731,2844,3.606,2845,2.443,2846,4.731,2847,3.606,2848,2.443,2849,4.731,2850,3.606,2851,1.984,2852,1.984,2853,1.984,2854,1.984,2855,1.984,2856,1.984,2857,2.443,2858,4.731,2859,3.606,2860,2.443,2861,5.046,2862,5.606,2863,3.606,2864,3.606,2865,3.606,2866,3.606,2867,3.606,2868,3.606,2869,2.443,2870,3.606,2871,3.606,2872,2.443,2873,2.443,2874,3.606,2875,3.606,2876,2.443,2877,2.443,2878,3.606,2879,3.606,2880,2.443,2881,2.443,2882,3.606,2883,2.443,2884,2.443,2885,3.606,2886,3.606,2887,2.443,2888,2.443,2889,2.443,2890,2.443,2891,3.606,2892,2.443,2893,4.731,2894,4.731,2895,2.443,2896,4.731,2897,2.443,2898,4.731,2899,2.443,2900,4.731,2901,4.731,2902,2.443,2903,4.731,2904,2.443,2905,4.731,2906,2.443,2907,3.606,2908,2.443,2909,2.443,2910,3.606,2911,2.443,2912,2.443,2913,3.606,2914,2.443,2999,4.195,3000,4.195,3001,4.195,3002,4.195,3003,4.195,3004,4.195,3005,2.842,3006,2.842,3007,2.842,3008,2.842,3009,2.842,3010,2.842,3011,2.842,3012,2.842,3013,2.842,3014,2.842,3015,2.842,3016,2.842,3017,2.842,3018,2.842,3019,2.842,3020,2.842,3021,2.842,3022,2.842,3023,2.842,3024,2.842,3025,2.842]],["title/interfaces/Template.html",[5,0.632,624,0.666]],["body/interfaces/Template.html",[0,0.069,3,0.175,4,0.175,5,1.301,6,0.809,7,0.578,8,0.578,9,0.227,15,0.738,17,1.56,23,1.216,24,2.062,26,0.524,31,0.655,40,0.116,41,0.478,54,1.035,61,0.32,69,1.288,71,0.019,72,0.265,73,0.289,92,0.496,94,0.984,115,1.056,118,0.442,125,2.645,134,0.647,144,1.368,147,1.603,148,0.861,153,0.22,155,1.458,156,0.101,165,0.101,166,0.116,168,0.889,173,1.734,177,1.119,192,0.889,198,1.438,208,2.359,212,1.458,213,2.062,214,2.029,215,2.261,222,1.644,248,1.279,273,0.904,298,0.955,308,0.498,317,0.498,318,1.368,322,0.01,323,0.01,336,3.492,345,3.329,364,1.416,367,2.029,369,1.288,383,3.526,392,0.578,461,2.337,483,1.216,484,1.975,499,1.035,507,1.56,558,1.368,563,1.411,573,1.288,579,2.352,582,1.09,595,1.458,611,1.68,614,1.825,615,3.311,619,3.311,621,2.533,623,1.557,624,0.859,626,1.15,633,1.279,656,1.09,667,1.288,679,1.216,685,2.206,690,1.035,696,2.206,717,4.39,760,1.216,776,3.955,824,1.216,826,2.432,845,2.791,846,2.206,862,1.15,878,2.645,886,1.035,956,2.533,960,3.049,1016,1.216,1018,2.206,1022,2.244,1024,2.197,1047,1.458,1050,1.216,1065,2.337,1076,3.321,1130,1.56,1146,1.368,1148,1.288,1160,2.533,1161,1.288,1162,1.458,1163,1.825,1164,2.005,1165,2.005,1166,2.005,1167,2.005,1168,2.005,1169,2.005,1170,2.005,1171,2.005,1172,2.005,1173,2.005,1174,2.005,1175,2.005,1176,2.005,1177,2.005,1178,2.005,1179,2.005,1180,2.005,1181,2.005,1182,2.005,1183,2.005,1184,2.005,1185,2.005,1186,3.023,1187,2.751,1188,2.062,1189,1.825,1190,2.062,1191,3.049,1192,1.825,1193,2.062,1194,1.56,1195,1.825,1196,3.643,1197,3.643,1198,3.023,1199,2.005,1200,1.458,1201,4.347,1202,2.197,1203,3.023,1204,2.005,1205,3.887,1206,3.049,1207,4.332,1208,2.533,1209,1.09,1210,2.197,1211,2.005,1212,1.68,1213,5.508,1214,1.458,1215,3.311,1216,2.197,1217,1.68,1218,2.005,1219,1.825,1220,2.005,1221,2.005,1222,2.533,1223,2.005,1224,3.023,1225,2.005,1226,2.005,1227,1.56,1228,3.955,1229,3.023,1230,5.039,1231,3.639,1232,3.639,1233,2.005,1234,5.012,1235,2.533,1236,2.005,1237,1.825,1238,2.005,1239,2.005,1240,2.005,1241,1.825,1242,1.825,1243,3.311,1244,3.639,1245,3.69,1246,3.555,1247,3.234,1248,4.569,1249,4.051,1250,3.953,1251,4.051,1252,4.588,1253,3.152,1254,4.315,1255,4.315,1256,4.569,1257,1.825,1258,4.051,1259,5.09,1260,4.742,1261,4.347,1262,2.005,1263,2.197,1264,1.825,1265,4.347,1266,1.68,1267,3.639,1268,1.825,1269,4.995,1270,2.005,1271,3.023,1272,3.311,1273,2.005,1274,3.395,1275,3.311,1276,2.005,1277,2.352,1278,2.751,1279,2.005,1280,2.005,1281,2.005,1282,2.005,1283,3.69,1284,1.68,1285,1.825,1286,3.049,1287,2.005,1288,1.68,1289,3.049,1290,2.005,1291,3.639,1292,2.005,1293,3.639,1294,2.005,1295,2.005,1296,2.005,1297,2.831,1298,2.005,1299,2.005,1300,2.751,1301,2.751,1302,3.639,1303,1.825,1304,3.023,1305,2.005,1306,2.005,1307,3.311,1308,3.829,1309,3.023,1310,1.458,1311,4.569,1312,2.005,1313,3.686,1314,3.023,1315,2.005,1316,2.005,1317,2.005,1318,1.56,1319,1.825,1320,2.005,1321,2.005,1322,4.881,1323,2.005,1324,1.68,1325,3.023,1326,2.005,1327,2.005,1328,2.005,1329,2.005,1330,2.005,1331,2.005,1332,2.005,1333,2.005,1334,2.005,1335,2.005,1336,2.005,1337,2.005,1338,2.005,1339,2.005,1340,2.197,1341,2.005,1342,2.005,1343,2.005,1344,2.005,1345,2.005,1346,2.005,1347,1.56,1348,2.005,1349,2.005,1350,2.005,1351,2.005,1352,2.005,1353,5.09,1354,2.005,1355,2.005,1356,2.005,1357,2.005,1358,2.005,1359,2.005,1360,2.005,1361,2.005,1362,2.005,1363,1.825,1364,3.639,1365,3.023,1366,2.005,1367,2.005,1368,4.051,1369,4.569,1370,2.005,1371,2.005,1372,2.005,1373,3.311,1374,3.311,1375,2.005,1376,2.005,1377,2.005,1378,2.005,1379,1.56,1380,2.005,1381,4.051,1382,2.005,1383,2.005,1384,2.005,1385,3.023,1386,2.005,1387,1.825,1388,2.005,1389,2.005,1390,2.005,1391,2.005,1392,2.005,1393,2.005,1394,2.005,1395,2.062,1396,2.005,1397,1.825,1398,2.005,1399,3.639,1400,2.005,1401,2.005,1402,2.005,1403,2.005,1404,2.005,1405,2.005,1406,2.005,1407,2.005,1408,2.005,1409,1.458,1410,2.005,1411,1.458,1412,2.005,1413,3.023,1414,2.005,1415,2.005,1416,3.023,1417,2.005,1418,1.68,1419,1.825,1420,2.005,1421,2.005,1422,2.005,1423,1.825,1424,2.005,1425,2.005,1426,2.005,1427,1.68,1428,2.005,1429,2.005,1430,2.005,1431,1.825,1432,2.005,1433,3.395,1434,2.005,1435,1.458,1436,1.825,1437,2.005,1438,1.56,1439,2.005,1440,2.005,1441,2.197,1442,2.005,1443,3.023,1444,2.005,1445,3.152,1446,2.005,1447,3.023,1448,2.005,1449,2.005,1450,2.005,1451,3.023,1452,2.005,1453,2.005,1454,0.849,1455,1.825,1456,2.005,1457,1.458,1458,1.825,1459,1.825,1460,1.825,1461,1.825,1462,1.825,1463,2.005,1464,2.005,1465,1.68,1466,2.005,1467,2.005,1468,2.005]],["title/injectables/TemplateEditorService.html",[642,0.423,1188,1.924]],["body/injectables/TemplateEditorService.html",[3,0.183,4,0.183,9,0.137,31,0.974,40,0.183,41,0.549,51,0.549,66,0.773,70,0.895,71,0.019,72,0.325,73,0.307,74,0.794,85,0.604,92,0.673,118,0.465,134,0.668,135,0.877,148,0.994,153,0.16,156,0.16,165,0.16,166,0.183,168,0.966,177,1.19,192,0.794,222,1.723,258,1.205,322,0.013,323,0.013,361,1.723,364,1.806,380,2.465,392,1.205,401,2.303,437,3.55,450,1.341,582,1.723,611,2.655,642,0.627,652,1.107,683,3.803,699,1.408,760,1.921,790,3.502,867,3.502,954,2.465,972,4.276,997,4.677,1022,1.635,1035,3.252,1079,2.161,1122,4.704,1143,3.168,1161,3.57,1162,4.041,1188,2.85,1194,2.465,1308,2.655,1313,4.704,1318,2.465,1387,3.803,1395,3.525,1585,5.169,1656,3.168,1775,4.367,2058,3.502,2064,3.168,2120,2.655,2125,3.502,2295,2.883,2306,5.793,3026,3.168,3027,6.097,3028,6.483,3029,5.448,3030,6.483,3031,5.448,3032,5.448,3033,4.13,3034,5.448,3035,4.13,3036,5.448,3037,4.13,3038,4.13,3039,5.448,3040,4.13,3041,5.448,3042,4.13,3043,5.448,3044,4.13,3045,4.13,3046,4.677,3047,4.13,3048,6.483,3049,4.13,3050,4.13,3051,4.13,3052,4.13,3053,4.13,3054,3.55,3055,4.13,3056,4.13,3057,4.13,3058,4.13,3059,4.13,3060,4.13,3061,4.13,3062,4.13,3063,5.448,3064,4.13,3065,4.13,3066,4.13,3067,4.13,3068,4.13,3069,4.13,3070,4.13,3071,4.13,3072,4.13,3073,5.448,3074,4.13,3075,4.13,3076,4.13,3077,4.13,3078,4.13,3079,4.13,3080,4.13,3081,3.55,3082,3.55,3083,4.13,3084,4.13,3085,4.13,3086,4.13,3087,4.13,3088,4.13,3089,4.13,3090,5.448,3091,5.448,3092,4.13,3093,6.097,3094,6.097,3095,4.13,3096,4.13,3097,4.13,3098,4.13,3099,4.13,3100,5.448,3101,6.097,3102,6.097,3103,6.483,3104,3.55,3105,4.13,3106,4.13,3107,4.13,3108,4.13,3109,4.13,3110,4.13]],["title/modules/TemplatePlaygroundModule.html",[2322,2.566,3111,2.566]],["body/modules/TemplatePlaygroundModule.html",[3,0.239,4,0.239,5,1.107,9,0.179,32,1.311,34,1.898,69,2.652,71,0.019,153,0.294,156,0.209,158,2.504,163,1.514,165,0.209,166,0.239,257,1.25,317,1.466,322,0.016,323,0.016,338,3.589,339,5.533,369,2.652,370,4.13,371,1.748,616,4.13,1161,2.652,1162,3.002,1188,3.873,1189,3.758,1190,3.873,1191,3.461,1192,3.758,1193,3.873,1194,3.214,1195,3.758,1206,3.461,1551,3.758,2124,4.938,2322,3.758,2323,3.758,3111,5.384,3112,5.919,3113,4.806,3114,5.282,3115,4.628,3116,4.628,3117,4.628,3118,4.628,3119,5.384,3120,6.437,3121,6.437,3122,5.384]],["title/components/ToastComponent.html",[0,0.064,319,0.813]],["body/components/ToastComponent.html",[0,0.125,1,0.916,2,1.113,3,0.31,4,0.175,5,0.909,7,0.873,8,0.873,9,0.131,13,0.481,19,0.916,23,2.459,25,0.791,26,1.547,27,1.128,28,0.909,29,0.772,32,0.961,35,0.916,38,1.288,40,0.175,51,0.533,61,0.484,65,3.605,66,0.643,70,0.73,71,0.019,72,0.319,73,0.319,74,0.648,76,0.829,79,0.609,80,1.752,81,3.69,83,0.909,85,0.461,92,0.598,94,1.989,95,2.326,99,2.326,100,0.577,118,0.369,130,1.523,132,1.635,134,0.484,135,0.514,147,1.227,153,0.205,156,0.153,164,2.537,165,0.153,166,0.175,167,0.687,171,2.537,192,0.776,213,3.796,215,2.329,257,0.916,258,1.169,259,1.009,260,1.627,261,1.009,262,1.009,263,0.916,264,1.009,265,0.873,266,1.351,267,0.961,268,1.009,269,0.916,270,1.009,271,1.009,272,0.873,273,0.752,274,1.351,275,0.916,276,0.831,277,1.009,278,0.916,279,1.009,280,0.916,281,1.009,282,0.873,283,1.009,284,0.873,285,0.831,286,1.009,287,0.916,288,1.009,289,0.916,290,1.009,291,1.009,292,0.916,293,1.009,294,0.916,295,1.009,296,0.916,297,0.961,298,0.61,299,1.009,300,0.916,301,1.009,302,0.916,303,1.009,304,0.916,305,0.961,306,1.009,307,0.916,308,0.752,309,1.009,310,0.916,311,0.961,312,1.009,313,0.961,314,1.009,315,0.916,316,1.009,317,0.752,318,0.791,319,1.568,320,1.009,321,1.009,322,0.013,323,0.013,341,2.459,357,3.398,367,2.279,397,2.766,448,2.459,573,3.136,633,1.935,634,3.028,644,2.604,650,4.572,679,1.836,713,1.989,750,1.944,825,3.393,828,5.473,850,2.755,878,2.201,889,2.065,916,4.392,920,2.766,956,2.537,986,1.345,1016,3.245,1018,1.836,1022,2.093,1065,2.936,1086,4.4,1158,2.356,1230,2.755,1243,2.755,1246,2.356,1247,2.065,1289,3.832,1308,3.398,1318,2.356,1397,2.755,1490,3.8,1612,4.444,1678,2.537,1919,4.055,1936,2.356,2026,4.055,2037,4.544,2038,5.124,2044,3.69,2058,3.398,2249,3.398,2354,3.028,2476,5.124,2675,5.124,2682,5.473,2695,4.544,2977,4.544,3104,4.544,3123,3.393,3124,5.286,3125,5.286,3126,5.286,3127,5.286,3128,5.961,3129,3.947,3130,3.947,3131,3.947,3132,5.286,3133,5.286,3134,5.286,3135,3.947,3136,3.947,3137,4.544,3138,5.286,3139,3.947,3140,5.286,3141,3.947,3142,3.947,3143,3.947,3144,3.393,3145,3.947,3146,3.393,3147,3.393,3148,3.393,3149,3.947,3150,3.947,3151,3.947,3152,3.947,3153,3.393,3154,3.947,3155,3.947,3156,3.947,3157,3.947,3158,3.947,3159,3.947,3160,3.947,3161,3.947,3162,3.947,3163,3.393,3164,3.947]],["title/injectables/ToastService.html",[65,1.811,642,0.423]],["body/injectables/ToastService.html",[0,0.128,3,0.319,4,0.211,9,0.158,13,0.526,27,0.871,40,0.211,41,0.601,51,0.601,65,3.366,66,0.703,70,0.823,71,0.019,72,0.299,73,0.333,74,0.731,76,0.96,79,0.686,80,1.765,85,0.52,92,0.642,118,0.404,128,3.324,132,1.844,134,0.798,135,0.618,147,1.384,153,0.231,156,0.184,165,0.184,166,0.211,167,0.737,168,0.848,213,3.918,215,2.399,319,1.681,322,0.014,323,0.014,367,2.134,392,1.441,393,2.487,447,4.162,448,3.178,487,3.559,488,3.833,526,4.084,592,3.03,633,2.115,642,0.686,652,1.273,699,1.619,713,2.244,771,4.574,788,4.574,916,4.393,920,3.119,1016,3.39,1050,2.773,1086,4.351,1210,3.324,1289,3.833,1490,3.559,1506,3.054,1612,4.77,1935,5.125,2026,4.574,2044,4.162,2058,3.833,2064,4.574,2611,4.574,2768,5.242,3137,5.125,3165,4.084,3166,5.962,3167,5.962,3168,5.962,3169,5.962,3170,4.751,3171,4.751,3172,4.751,3173,4.751,3174,4.751,3175,4.751,3176,4.751]],["title/interfaces/User.html",[138,0.774,624,0.666]],["body/interfaces/User.html",[3,0.176,4,0.176,9,0.132,13,0.32,15,0.69,27,0.775,31,0.547,40,0.176,41,0.535,51,0.4,71,0.019,72,0.343,73,0.331,76,0.516,77,1.57,79,0.688,81,3.701,83,0.682,85,0.556,92,0.498,114,0.755,118,0.483,133,1.321,135,0.891,138,1.621,147,1.231,148,0.646,153,0.206,156,0.154,165,0.206,166,0.176,167,0.717,168,0.516,177,1.236,192,0.69,248,1.721,322,0.013,323,0.013,364,1.71,371,1.721,392,0.877,393,2.661,401,2.956,405,1.898,416,1.995,429,2.4,433,1.785,436,2.1,438,1.492,439,3.331,442,2.283,443,2.914,448,2.966,450,2.071,452,2.212,467,1.492,471,2.612,473,3.408,480,2.1,482,1.654,483,2.466,484,1.782,485,2.612,499,2.1,500,3.497,501,2.248,505,2.283,557,1.953,582,2.212,586,2.548,603,4.1,624,1.082,626,1.745,628,1.995,637,2.1,642,0.61,643,2.074,646,1.419,651,1.226,652,1.063,656,2.212,657,1.745,658,2.212,659,1.995,660,1.844,661,2.492,662,2.333,665,3.142,696,1.844,726,3.165,731,3.37,746,1.745,863,3.556,865,3.165,873,2.956,879,2.767,884,2.548,902,2.854,986,1.351,1015,2.21,1107,3.814,1158,2.366,1202,2.956,1418,3.408,1476,3.142,1483,3.408,1927,4.452,1959,4.067,1977,4.583,2125,3.408,2149,3.408,2474,2.548,2544,3.041,2775,4.1,2784,4.452,2818,4.067,2851,4.452,2852,4.775,2853,4.452,2854,4.452,2855,4.452,2856,4.452,3177,3.041,3178,4.558,3179,4.558,3180,4.558,3181,4.558,3182,5.483,3183,4.558,3184,4.558,3185,4.558,3186,4.558,3187,4.067,3188,4.558,3189,4.558,3190,4.558,3191,4.558,3192,4.558,3193,3.408,3194,3.408,3195,4.558,3196,3.408,3197,3.408,3198,5.135,3199,4.558,3200,4.558,3201,3.408,3202,3.408,3203,3.408,3204,3.408,3205,3.408,3206,3.408,3207,3.408,3208,3.408]],["title/interfaces/UserData.html",[624,0.666,1577,2.364]],["body/interfaces/UserData.html",[0,0.105,3,0.136,4,0.136,6,0.947,9,0.229,13,0.247,15,0.847,16,2.047,18,3.091,19,1.546,21,2.258,25,0.613,26,0.613,27,0.447,29,0.973,31,0.423,32,0.746,33,3.091,34,1.306,38,0.746,40,0.253,41,0.447,54,1.212,61,0.375,63,3.632,64,2.509,65,2.809,71,0.019,72,0.153,73,0.306,75,3.091,76,0.577,78,1.096,79,0.696,80,0.711,83,0.761,86,3.091,91,2.509,92,0.626,94,1.152,95,1.347,96,1.508,100,1.007,101,1.968,106,0.994,113,2.137,114,0.583,115,1.871,116,2.258,118,0.391,129,2.146,132,1.61,133,1.637,134,0.375,137,3.991,138,1.469,144,1.602,148,0.722,150,3.345,151,1.602,153,0.274,156,0.119,157,3.091,158,1.424,159,1.828,163,0.861,164,1.968,165,0.202,166,0.136,167,0.768,168,0.883,173,1.949,177,0.98,178,2.137,179,3.632,182,1.277,183,1.508,187,1.508,192,0.971,198,0.933,208,1.212,212,2.901,213,2.722,214,1.096,215,1.773,217,2.137,247,2.722,248,1.689,255,2.42,256,2.722,272,0.979,273,1.33,282,0.979,322,0.011,323,0.011,338,2.469,341,1.424,355,1.152,361,2.379,364,0.821,371,0.994,395,1.508,416,2.146,433,0.782,448,1.424,461,1.508,473,3.345,477,3.632,521,1.707,544,1.707,563,1.586,592,1.424,623,1.534,624,0.942,625,2.862,626,1.347,628,1.667,631,3.024,632,3.024,638,1.602,641,1.508,644,1.508,646,1.096,648,2.983,653,3.404,680,2.137,724,2.349,725,2.983,750,1.508,751,3.179,752,1.828,753,1.828,754,1.828,763,1.968,777,2.644,808,2.349,852,2.847,853,2.847,855,3.091,856,3.091,857,3.091,858,3.091,872,1.707,882,2.983,920,1.602,934,2.137,958,2.349,985,2.137,1021,3.091,1022,1.754,1072,3.626,1079,1.602,1080,1.508,1083,1.424,1084,2.137,1146,2.722,1147,1.968,1148,1.508,1200,1.707,1245,2.644,1247,2.983,1266,1.968,1274,1.968,1283,1.828,1310,3.179,1441,2.469,1445,2.644,1454,0.994,1457,1.707,1465,3.345,1482,2.137,1519,2.137,1520,2.349,1521,2.349,1522,2.137,1523,2.632,1524,4.641,1525,4.374,1526,1.828,1527,1.828,1528,2.632,1529,4.473,1530,2.349,1531,2.349,1532,2.632,1533,2.632,1534,2.632,1535,2.632,1536,2.632,1539,2.632,1542,2.349,1546,2.632,1547,2.632,1548,2.632,1549,2.632,1551,3.091,1552,3.807,1553,2.632,1555,4.473,1558,2.632,1559,2.632,1560,4.473,1561,4.473,1563,2.632,1564,3.991,1567,2.632,1568,1.968,1569,2.349,1570,2.137,1571,1.968,1572,2.349,1573,3.991,1574,3.397,1575,2.632,1576,2.469,1577,4.362,1578,2.847,1579,5.2,1580,5.421,1581,5.421,1582,2.632,1583,2.632,1584,2.632,1585,4.838,1586,2.632,1587,2.632,1588,2.632,1589,2.632,1590,2.137,1591,2.632,1592,2.632,1593,2.632,1594,2.632,1595,2.632,1596,2.632,1597,1.968,1598,2.632,1599,2.632,1600,1.828,1601,2.632,1602,2.632,1603,2.632,1604,2.632,1605,2.632,1606,2.632,1607,2.632,1608,2.632,1609,2.632,1610,4.473,1611,2.632,1612,3.632,1613,2.632,1614,2.632,1615,2.632,1616,2.632,1617,2.349,1618,2.632,1619,2.632,1620,2.349,1621,2.349,1622,4.473,1623,2.349,1624,2.632,1625,2.349,1626,2.349,1627,2.349,1628,2.349,1629,2.632,1630,2.632,1631,2.632,1632,3.807,1633,2.632,1634,2.632,1635,2.632,1636,2.632,1637,4.473,1638,2.632,1639,2.632,1640,2.632,1641,2.632,1642,2.632,1643,2.632,1644,3.807,1645,2.632,1646,4.901,1647,2.632,1648,3.807,1649,2.847,1650,3.397,1651,3.397,1652,2.632,1653,2.632,1654,2.632,1655,2.632,1656,2.349,1657,2.349,1658,2.632,1659,2.632,1660,2.632,1661,2.632,1662,2.632,1663,2.632,1664,5.2,1665,2.632,1666,2.632,1667,2.632,1668,2.632,1669,2.632,1670,3.397,1671,2.632,1672,2.632,1673,5.833,1674,2.632,1675,2.632,1676,1.828,1677,2.632,1678,1.968,1679,2.137,1680,2.632,1681,2.137,1682,2.632,1683,2.632,1684,2.349,1685,2.632,1686,2.632,1687,2.632,1688,3.807,1689,2.632,1690,2.632,1691,2.632,1692,2.632,1693,2.632,1694,2.632,1695,2.632,1696,2.632,1697,2.632,1698,3.807,1699,2.632,1700,2.632,1701,2.632,1702,2.632]],["title/injectables/UserService.html",[416,1.384,642,0.423]],["body/injectables/UserService.html",[3,0.172,4,0.172,9,0.129,13,0.532,15,0.823,27,0.566,31,0.721,40,0.172,51,0.637,61,0.475,66,0.749,70,0.911,71,0.019,72,0.341,73,0.318,74,0.774,76,0.68,77,2.068,79,0.782,81,2.705,83,0.898,85,0.631,92,0.594,114,0.995,118,0.468,133,1.503,135,0.941,138,1.634,147,0.9,148,0.851,153,0.203,156,0.15,165,0.203,166,0.172,167,0.712,168,0.769,177,1.23,192,0.68,248,1.258,322,0.013,323,0.013,364,1.822,371,2.052,392,0.857,393,2.178,401,2.161,405,2.433,416,2.378,429,2.614,433,1.9,436,2.503,438,1.965,439,3.293,442,2.528,443,3.043,448,1.802,450,1.258,452,2.636,467,1.458,471,1.909,473,2.491,480,2.503,482,2.178,483,1.802,484,1.694,485,3.113,499,1.535,500,3.113,501,2.223,505,1.869,557,2.572,582,1.617,586,3.357,603,2.491,624,0.946,628,1.458,637,1.535,642,0.601,643,2.028,646,1.869,651,1.615,652,1.039,656,1.617,657,2.781,658,2.178,659,1.965,660,1.802,661,2.835,662,2.781,665,3.113,696,2.429,699,1.321,701,2.705,726,2.313,731,2.572,746,2.298,863,2.161,865,2.313,873,2.161,879,3.645,884,3.357,902,3.043,986,1.321,1015,2.912,1021,4.122,1107,3.293,1158,3.117,1202,2.161,1418,2.491,1476,2.572,1483,2.491,1927,4.93,1959,2.973,1977,5.061,2125,2.491,2149,2.491,2474,3.357,2544,2.973,2775,2.491,2784,3.645,2818,4.006,2851,2.705,2852,3.645,2853,2.705,2854,2.705,2855,2.705,2856,2.705,3177,2.973,3178,3.331,3179,3.331,3180,3.331,3181,3.331,3182,4.489,3183,3.331,3184,3.331,3185,3.331,3186,3.331,3187,2.973,3188,3.331,3189,3.331,3190,3.331,3191,3.331,3192,3.331,3193,4.489,3194,4.489,3195,5.077,3196,4.489,3197,4.489,3198,5.077,3199,4.489,3200,4.489,3201,3.331,3202,3.331,3203,3.331,3204,4.489,3205,5.433,3206,4.489,3207,4.489,3208,3.331,3209,5.222,3210,5.222,3211,3.876,3212,3.876,3213,3.876,3214,3.876,3215,3.876,3216,3.876,3217,3.876]],["title/injectables/ZipExportService.html",[642,0.423,1190,1.924]],["body/injectables/ZipExportService.html",[3,0.211,4,0.211,5,1.175,6,2.016,9,0.227,15,0.618,28,1.12,40,0.211,51,0.601,66,0.703,70,0.823,71,0.019,72,0.299,73,0.289,74,0.731,85,0.568,92,0.56,107,2.486,118,0.436,153,0.184,156,0.184,165,0.184,166,0.211,168,0.935,177,0.817,192,0.916,251,3.316,258,1.051,273,0.905,318,0.952,322,0.014,323,0.014,361,2.487,392,1.051,452,1.982,475,3.644,507,2.836,514,2.649,563,2.134,623,1.758,642,0.686,652,1.273,683,3.316,685,2.21,699,1.619,760,2.21,867,4.189,920,2.486,954,3.889,1056,3.633,1071,3.054,1089,3.644,1135,3.833,1139,3.644,1149,3.316,1161,3.366,1190,3.119,1191,4.525,1194,2.836,1196,3.054,1207,4.843,1208,4.686,1216,2.649,1237,3.316,1297,2.836,1395,3.119,1409,3.633,1427,3.833,1441,4.005,1445,4.079,1457,2.649,1458,3.316,1459,3.316,1460,3.316,1461,3.316,1462,3.316,1487,4.084,1576,3.324,1578,3.054,1620,3.644,1628,3.644,1676,2.836,1827,3.644,1852,3.644,1957,4.084,2023,3.644,2295,3.316,2357,4.084,2784,4.162,2983,4.084,3081,5.125,3082,5.601,3153,4.084,3218,5.242,3219,3.644,3220,5.962,3221,5.962,3222,6.834,3223,5.962,3224,4.751,3225,5.962,3226,4.751,3227,7.372,3228,4.751,3229,4.574,3230,4.751,3231,4.751,3232,4.751,3233,5.601,3234,4.751,3235,4.751,3236,4.751,3237,4.751,3238,4.751,3239,4.751,3240,4.751,3241,4.751,3242,4.751,3243,4.751,3244,4.751,3245,5.962,3246,4.751,3247,5.962,3248,4.084,3249,6.834,3250,4.751,3251,4.751,3252,4.751,3253,4.751,3254,4.751,3255,4.751,3256,4.084,3257,4.751,3258,4.751,3259,4.751,3260,4.751,3261,4.751,3262,4.084,3263,4.751,3264,4.751,3265,4.751,3266,4.751]],["title/coverage.html",[1217,3.239]],["body/coverage.html",[0,0.135,1,0.961,5,0.712,9,0.138,10,3.56,11,3.177,12,3.56,15,0.539,27,0.892,29,0.605,35,0.961,64,1.822,65,2.04,71,0.019,73,0.184,100,0.605,138,0.872,161,2.89,198,1.541,253,4.391,263,0.961,265,0.916,267,1.009,269,0.961,272,0.916,275,0.961,276,1.149,278,0.961,280,0.961,282,0.916,284,0.916,287,0.961,289,0.961,292,0.961,294,0.961,296,1.267,297,1.009,300,0.961,302,0.961,304,0.961,307,0.961,310,0.961,313,1.009,315,0.961,317,0.789,319,0.916,322,0.013,323,0.013,324,3.56,348,2.89,374,3.177,391,3.56,402,2.662,416,1.558,427,2.04,428,2.309,429,1.558,431,2.89,528,2.855,534,3.56,541,3.177,549,3.177,558,2.166,624,1.325,625,1.822,627,4.187,637,1.64,642,0.867,651,1.281,653,2.472,709,3.56,859,4.187,872,2.309,877,1.64,882,2.166,932,3.56,933,3.56,1011,2.662,1012,4.187,1013,4.187,1030,2.662,1160,2.662,1161,3.606,1162,3.862,1163,4.53,1188,2.166,1190,2.166,1193,2.166,1197,2.662,1205,2.472,1217,2.662,1395,2.166,1409,2.309,1469,2.04,1470,3.56,1519,4.261,1520,4.187,1521,4.187,1522,4.261,1571,2.662,1577,2.662,1704,4.187,1752,4.187,1753,4.187,1754,3.56,1755,3.56,1823,3.56,1824,3.56,1902,3.56,1917,3.56,1918,3.56,1939,3.56,1940,4.187,2034,3.56,2035,3.56,2054,3.56,2055,3.56,2068,3.56,2102,2.662,2242,3.56,2243,3.177,2244,3.56,2281,4.187,2282,4.187,2365,3.56,2420,3.81,2456,3.56,2477,3.56,2657,3.56,2671,4.187,2672,4.187,2764,3.56,2827,4.187,2915,3.56,2916,3.56,2917,3.56,2962,3.56,2979,3.56,2980,3.56,2981,3.56,2986,3.56,3026,4.187,3046,3.177,3113,2.89,3123,3.56,3165,3.56,3177,4.187,3218,4.187,3219,4.187,3229,3.177,3267,4.141,3268,4.141,3269,7.587,3270,6.105,3271,4.141,3272,4.141,3273,4.141,3274,6.105,3275,5.458,3276,4.692,3277,7.534,3278,3.56,3279,3.56,3280,3.56,3281,3.56,3282,3.56,3283,3.56,3284,4.141,3285,6.745,3286,4.141,3287,4.141,3288,6.926,3289,5.458,3290,5.458,3291,5.458,3292,4.141,3293,4.141,3294,4.141,3295,4.141,3296,4.141,3297,4.141,3298,4.141,3299,4.141,3300,5.458,3301,4.141,3302,6.926,3303,5.458,3304,5.458,3305,3.56,3306,4.141,3307,4.141,3308,5.458,3309,3.56,3310,3.56,3311,5.798,3312,3.56,3313,3.56,3314,3.56,3315,3.56,3316,4.141]],["title/dependencies.html",[69,2.181,1433,1.967]],["body/dependencies.html",[69,2.789,71,0.019,156,0.22,158,2.634,163,1.592,322,0.016,323,0.016,355,2.131,370,5.396,371,2.153,372,4.868,520,4.868,551,4.868,1029,3.64,1435,3.157,1564,4.344,1573,5.088,1574,4.344,1905,4.868,2070,3.953,2132,5.701,2158,4.868,2698,4.344,3317,7.651,3318,5.663,3319,5.663,3320,5.663,3321,5.663,3322,5.663,3323,5.663,3324,5.663,3325,5.663,3326,4.868,3327,5.663,3328,5.663,3329,5.663,3330,5.663,3331,5.663,3332,5.663,3333,5.663,3334,5.663,3335,5.663,3336,5.663,3337,5.663,3338,5.663,3339,5.663,3340,5.663,3341,5.663]],["title/index.html",[40,0.163,3233,3.16]],["body/index.html",[2,0.896,15,0.554,16,2.433,19,0.988,21,1.686,27,0.904,28,1.128,29,1.065,69,2.097,71,0.019,77,2.597,78,1.524,90,3.659,91,2.446,100,1.039,102,2.972,106,1.382,115,1.871,116,2.201,129,2.092,133,1.612,138,1.47,141,2.878,147,0.988,150,2.737,153,0.165,165,0.165,222,1.776,247,3.237,248,2.13,255,2.585,256,3.237,273,0.811,276,0.896,296,0.988,298,1.013,305,1.037,308,1.059,322,0.013,323,0.013,327,2.227,329,1.98,330,1.99,355,2.092,361,1.776,393,2.911,396,4.319,397,3.848,401,2.374,404,3.266,405,1.99,441,2.097,443,2.318,445,4.263,447,2.972,480,1.686,500,2.097,501,2.092,511,3.659,515,3.573,521,3.099,557,2.097,582,1.776,623,1.255,625,3.128,628,1.602,629,2.737,638,2.227,641,2.097,646,1.524,647,3.048,649,2.737,656,2.318,686,1.98,711,4.579,712,4.319,713,2.092,714,2.737,722,3.659,723,2.541,725,2.908,726,3.694,751,2.374,759,2.972,867,3.573,877,2.45,880,4.263,884,2.737,890,3.266,934,2.972,954,2.541,961,4.777,962,3.659,1014,3.266,1018,2.585,1050,2.878,1068,2.972,1072,2.374,1107,2.374,1129,4.319,1138,2.972,1210,2.374,1212,3.978,1214,2.374,1215,3.879,1222,2.737,1277,3.694,1379,3.317,1409,3.45,1427,2.737,1435,2.374,1524,3.266,1525,3.266,1526,2.541,1569,3.266,1570,2.972,1676,2.541,1678,2.737,1679,2.972,1681,2.972,1769,4.777,1775,3.317,1825,3.659,1828,3.879,1862,3.266,1981,3.659,1983,3.659,1984,3.659,1998,3.659,2011,4.777,2012,3.659,2017,3.659,2056,3.266,2073,4.747,2100,4.263,2102,2.737,2120,2.737,2146,3.266,2149,2.737,2250,3.879,2342,3.659,2366,3.659,2463,3.659,2472,3.659,2480,3.659,2529,3.659,2530,2.972,2670,4.777,2674,3.659,2750,5.319,2765,3.659,2768,3.266,2982,3.659,2989,3.659,3144,3.659,3163,3.659,3187,3.266,3248,3.659,3256,4.777,3262,3.659,3342,4.257,3343,4.257,3344,4.257,3345,5.558,3346,5.558,3347,7.21,3348,4.257,3349,4.257,3350,4.257,3351,4.257,3352,5.558,3353,4.257,3354,4.257,3355,3.659,3356,4.257,3357,4.257,3358,4.257,3359,5.558,3360,4.257,3361,4.257,3362,4.257,3363,4.257,3364,4.257,3365,4.257,3366,4.257,3367,4.257,3368,4.257,3369,4.257,3370,5.558,3371,4.257,3372,4.257,3373,4.257,3374,4.257,3375,4.257,3376,4.257,3377,3.659,3378,3.659,3379,3.659,3380,4.257,3381,4.257,3382,4.257,3383,4.257,3384,4.257,3385,4.257,3386,4.257,3387,4.257,3388,5.558,3389,4.257,3390,4.257,3391,4.257,3392,4.257,3393,4.257,3394,4.257,3395,4.257,3396,4.257,3397,5.558,3398,4.257,3399,4.257,3400,4.257,3401,4.257,3402,4.257,3403,4.257,3404,4.257,3405,4.257,3406,4.257,3407,4.257,3408,4.257,3409,4.257,3410,4.257,3411,3.659,3412,4.257,3413,4.257,3414,4.257,3415,4.257,3416,4.257,3417,4.257,3418,4.257,3419,4.257,3420,4.257,3421,4.257,3422,4.257,3423,4.257,3424,4.257,3425,4.257,3426,4.257,3427,4.257,3428,4.257,3429,5.558,3430,4.257,3431,4.257,3432,4.257,3433,4.257,3434,4.257,3435,4.257]],["title/modules.html",[2323,3.517]],["body/modules.html",[71,0.017,322,0.017,323,0.017,371,1.975,2323,4.246,3111,4.246,3436,6.084,3437,6.084,3438,6.084]],["title/overview.html",[1214,2.809]],["body/overview.html",[2,1.22,69,2.854,71,0.018,198,1.22,257,1.345,317,1.446,322,0.016,323,0.016,616,4.445,623,1.709,626,2.55,699,1.975,1188,3.715,1190,3.715,1193,3.715,1206,3.725,1214,3.231,1551,4.045,2124,5.156,2322,4.692,2934,4.445,3111,5.399,3112,4.981,3113,4.045,3114,4.445,3115,4.981,3116,4.981,3117,4.981,3118,4.981,3439,5.795,3440,4.981]],["title/properties.html",[41,0.446,1433,1.967]],["body/properties.html",[41,0.615,71,0.018,322,0.017,323,0.017,1476,3.003,3441,6.096]],["title/routes.html",[558,2.636]],["body/routes.html",[71,0.017,322,0.017,323,0.017,558,3.198]],["title/miscellaneous/variables.html",[3442,2.631,3443,3.806]],["body/miscellaneous/variables.html",[0,0.086,9,0.119,15,0.466,21,1.419,27,0.938,31,1.04,40,0.159,71,0.019,72,0.377,73,0.319,76,0.466,78,1.283,114,1.081,132,1.109,134,0.896,135,0.951,148,0.584,182,3.124,198,1.577,214,1.283,222,1.495,248,1.607,250,2.749,265,1.095,322,0.012,323,0.012,325,1.875,328,2.303,329,3.087,355,2.134,357,3.182,361,1.495,371,1.607,393,3.027,398,3.08,433,0.916,441,1.765,442,2.298,452,1.495,467,1.348,483,1.666,497,2.139,513,3.182,514,1.998,557,2.438,558,3.358,563,1.772,623,1.057,651,1.986,662,1.577,760,1.666,772,3.08,826,2.552,862,3.296,863,4.176,864,4.47,877,2.246,889,1.875,902,2.065,920,1.875,1022,1.419,1039,3.182,1062,2.955,1135,2.303,1161,2.793,1162,1.998,1196,3.932,1200,1.998,1205,3.385,1209,2.678,1216,1.998,1227,3.385,1235,2.303,1264,2.501,1395,2.59,1435,3.794,1436,3.455,1438,2.955,1472,2.749,1473,3.08,1474,3.08,1475,3.08,1476,2.438,1484,4.255,1485,4.255,1488,3.08,1503,5.96,1506,3.182,1508,5.518,1542,3.797,1657,2.749,1676,2.139,1678,2.303,1679,2.501,1681,2.501,1684,2.749,1881,3.08,2095,3.08,2102,3.182,2125,2.303,2149,3.182,2281,2.749,2282,3.797,2354,3.797,2420,2.501,2555,3.08,2594,3.08,2611,4.35,2671,2.749,2672,3.797,2698,2.749,2836,2.749,2934,2.749,3026,3.797,3046,3.797,3054,3.08,3113,3.958,3114,3.797,3146,4.875,3147,4.255,3148,3.08,3218,2.749,3219,3.797,3229,3.797,3276,3.08,3278,4.875,3279,3.08,3280,4.255,3281,3.08,3282,4.255,3283,3.08,3305,3.08,3309,3.08,3310,3.08,3311,3.08,3312,4.255,3313,4.255,3314,4.255,3315,4.255,3326,4.255,3355,3.08,3377,3.08,3378,3.08,3379,3.08,3411,3.08,3440,3.08,3442,4.255,3443,3.08,3444,6.419,3445,3.583,3446,3.583,3447,3.583,3448,3.583,3449,4.95,3450,3.583,3451,3.583,3452,3.583,3453,3.583,3454,3.583,3455,3.583,3456,3.583,3457,3.583,3458,3.583,3459,3.583,3460,3.583,3461,4.95,3462,4.95,3463,3.583,3464,3.583,3465,3.583,3466,3.583,3467,3.583,3468,3.583,3469,3.583,3470,3.583,3471,3.583,3472,4.95,3473,3.583,3474,3.583,3475,3.583,3476,3.583,3477,3.583,3478,3.583,3479,3.583,3480,3.583,3481,3.583,3482,3.583,3483,3.583,3484,3.583,3485,3.583,3486,3.583,3487,3.583,3488,3.583,3489,3.583,3490,4.95,3491,3.583,3492,3.583,3493,3.583,3494,3.583,3495,3.583,3496,3.583,3497,3.583,3498,3.583,3499,3.583,3500,3.583,3501,4.95,3502,3.583,3503,3.583,3504,4.95,3505,3.583,3506,3.583,3507,3.583,3508,3.583,3509,4.95,3510,3.583,3511,4.95,3512,3.583,3513,3.583,3514,3.583,3515,3.583,3516,3.583,3517,3.583,3518,3.583,3519,3.583,3520,3.583,3521,3.583,3522,3.583,3523,3.583,3524,3.583,3525,3.583,3526,3.583,3527,3.583,3528,3.583,3529,3.583,3530,3.583,3531,3.583,3532,3.583,3533,3.583,3534,3.583,3535,3.583,3536,3.583,3537,3.583,3538,3.583,3539,3.583,3540,3.583,3541,3.583,3542,3.583,3543,3.583,3544,3.583,3545,3.583,3546,3.583,3547,3.583,3548,3.583,3549,3.583,3550,3.583]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":813,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":3441,"title":{},"body":{"properties.html":{}}}],["0.125rem",{"_index":1316,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15.0",{"_index":3341,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":1304,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.18.5",{"_index":3339,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3",{"_index":2747,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.375rem",{"_index":1323,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.543.0",{"_index":3331,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":1296,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":1269,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":1309,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":1311,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":1260,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":3270,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":3273,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":3272,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3274,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3268,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3271,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":1330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":1329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":1307,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["009688",{"_index":3523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":821,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":1886,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":1885,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0–1",{"_index":1850,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":811,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":817,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":3333,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1298,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1/1",{"_index":3277,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2934,"title":{},"body":{"components/SearchButtonComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":3303,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["100,000,000",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["1000",{"_index":2798,"title":{},"body":{"injectables/PostApiService.html":{}}}],["100px",{"_index":2453,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":1233,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":2352,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["10rem",{"_index":963,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":772,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["110",{"_index":1682,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["111",{"_index":2753,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1317,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["13",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":3291,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3054,"title":{},"body":{"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["14/14",{"_index":3307,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":1661,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["145",{"_index":1662,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["15",{"_index":3440,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":3332,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3284,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1881,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":3296,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/17",{"_index":3275,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":3527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":3317,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":3321,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":3295,"title":{},"body":{"coverage.html":{}}}],["1c7430",{"_index":1337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":1336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":1282,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":1254,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":1248,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1st",{"_index":1857,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["2",{"_index":361,"title":{},"body":{"components/AiComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1045,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":3338,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3292,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":3289,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1273,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2025",{"_index":779,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["20px",{"_index":2347,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["2196f3",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":3286,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":1663,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["23px",{"_index":2455,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":2769,"title":{},"body":{"injectables/PostApiService.html":{}}}],["24/24",{"_index":3306,"title":{},"body":{"coverage.html":{}}}],["25.9.21",{"_index":3544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250px",{"_index":1287,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["255",{"_index":1669,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["26",{"_index":3439,"title":{},"body":{"overview.html":{}}}],["28/28",{"_index":3300,"title":{},"body":{"coverage.html":{}}}],["28a745",{"_index":1267,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["29",{"_index":1973,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["2rem",{"_index":1249,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1676,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":3328,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3308,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1670,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["300",{"_index":1349,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3000",{"_index":1612,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["300ms",{"_index":1350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["31/31",{"_index":3294,"title":{},"body":{"coverage.html":{}}}],["320kbps",{"_index":2519,"title":{},"body":{"components/MusicComponent.html":{}}}],["320kbps')?.url",{"_index":2572,"title":{},"body":{"components/MusicComponent.html":{}}}],["33",{"_index":1674,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["350",{"_index":2122,"title":{},"body":{"components/GraphsComponent.html":{}}}],["38/38",{"_index":3299,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1678,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.0.3",{"_index":3324,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":3327,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3325,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3322,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3302,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":958,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["46",{"_index":1675,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["48",{"_index":1685,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["495057",{"_index":1292,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e555b",{"_index":1334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":1303,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1679,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":3329,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3285,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["500",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["5000",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["545b62",{"_index":1333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["55",{"_index":1677,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["58",{"_index":1644,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["59",{"_index":1750,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":1681,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6/6",{"_index":3304,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2616,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["600",{"_index":1291,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["607d8b",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":3521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c757d",{"_index":1261,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":1684,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":3336,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3287,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1654,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8",{"_index":1200,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":3335,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3288,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1680,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8bc34a",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1657,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["9/9",{"_index":3290,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1751,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":2229,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.click",{"_index":1461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":1459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.expense_count",{"_index":908,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.href",{"_index":1458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.name",{"_index":2636,"title":{},"body":{"components/MusicComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":909,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.style.display",{"_index":3266,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a.time.split(\":\").map(number",{"_index":2203,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a4",{"_index":1636,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["ability",{"_index":3404,"title":{},"body":{"index.html":{}}}],["above",{"_index":1491,"title":{},"body":{"injectables/ConfigService.html":{}}}],["acc",{"_index":840,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accepted",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["accepts",{"_index":331,"title":{},"body":{"components/AiComponent.html":{}}}],["acceptsuggestiononenter",{"_index":3069,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":2474,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accessed",{"_index":650,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["accesses",{"_index":2774,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":2095,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1124,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["account",{"_index":3186,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accurate",{"_index":1104,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":1423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":1268,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["activation",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["activepath",{"_index":2993,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual",{"_index":2462,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["actual_component",{"_index":321,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":919,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["add(data",{"_index":671,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["added",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["additional",{"_index":1139,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["address",{"_index":3185,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["adjusted",{"_index":1712,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["afterviewinit",{"_index":2675,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["again",{"_index":1431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["aggregates",{"_index":2688,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ahours",{"_index":2200,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":325,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":264,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":342,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":340,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":263,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasybkbmhcsvna6d8bpyjqqhbpdymn7_nvm2w",{"_index":3539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1069,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["albumname",{"_index":1090,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1117,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["align",{"_index":1245,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["alignment",{"_index":1929,"title":{},"body":{"components/FormModelComponent.html":{}}}],["all.filter(c",{"_index":927,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":694,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.map(item",{"_index":688,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":675,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.some(c",{"_index":924,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allow",{"_index":2045,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["allowed/day",{"_index":3400,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":3354,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2056,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["alongside",{"_index":1904,"title":{},"body":{"components/FooterComponent.html":{}}}],["alphabetically",{"_index":893,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["already",{"_index":1143,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":683,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["amber",{"_index":3526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":2201,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":1838,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{}}}],["amt",{"_index":1882,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":1956,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["analyze",{"_index":1101,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":1967,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["anchor",{"_index":2269,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":355,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":369,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":3318,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":370,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":3319,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":3320,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":3312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":3159,"title":{},"body":{"components/ToastComponent.html":{}}}],["animation",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":2127,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":2001,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":1986,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":2718,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2748,"title":{},"body":{"components/PieChartComponent.html":{}}}],["aoa",{"_index":1691,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(headerrow",{"_index":1695,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(object.values(row",{"_index":1697,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["apexaxischartseries",{"_index":2129,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":2121,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":2132,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":2139,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":2141,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexstroke",{"_index":2143,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":2148,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":2151,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":2153,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":2133,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":2137,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":329,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":375,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":1940,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:103",{"_index":1954,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2773,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:23",{"_index":1949,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:37",{"_index":2780,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:45",{"_index":1964,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:74",{"_index":1962,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:76",{"_index":2776,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":374,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2785,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service",{"_index":2564,"title":{},"body":{"components/MusicComponent.html":{}}}],["api/saavan.service.ts",{"_index":1013,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:153",{"_index":2822,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:34",{"_index":2826,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:39",{"_index":2825,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:44",{"_index":2821,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:63",{"_index":2823,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:80",{"_index":2824,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":1354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["api_response_app_version",{"_index":2805,"title":{},"body":{"injectables/PostApiService.html":{}}}],["apiurl",{"_index":1043,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["app_current_version",{"_index":2807,"title":{},"body":{"injectables/PostApiService.html":{}}}],["app_version",{"_index":2856,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":265,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig",{"_index":3280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":2012,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["appearance",{"_index":3246,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":1236,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1147,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["applicationconfig",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":3543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{}}}],["appname",{"_index":1472,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1482,"title":{},"body":{"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["appversion",{"_index":1908,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["apr",{"_index":1867,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":2234,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":2069,"title":{},"body":{"components/GraphsComponent.html":{}}}],["args",{"_index":2327,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":2329,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":2328,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arguments",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["arial",{"_index":2346,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":663,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":2182,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":2226,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":2216,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1074,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artist.name).join",{"_index":1098,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artists",{"_index":1070,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname",{"_index":1094,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname)}${formatfield('is",{"_index":1118,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artistsname.split(',')[0].trim",{"_index":2601,"title":{},"body":{"components/MusicComponent.html":{}}}],["aseconds",{"_index":2202,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":2018,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":2028,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":1999,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assign",{"_index":3196,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["assigned",{"_index":888,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["assist",{"_index":2025,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":389,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["associated",{"_index":865,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["associates",{"_index":910,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["async",{"_index":345,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["attached",{"_index":1720,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attaches",{"_index":1709,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attempting",{"_index":921,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["attribute.name",{"_index":3101,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":3103,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["audio",{"_index":2484,"title":{},"body":{"components/MusicComponent.html":{}}}],["aug",{"_index":1870,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":2237,"title":{},"body":{"components/GraphsComponent.html":{}}}],["authentication",{"_index":1042,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["auto",{"_index":1289,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["autoclosingbrackets",{"_index":3066,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":3108,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":3067,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatic",{"_index":3541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":667,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":3051,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autotable",{"_index":1574,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["autotable(doc",{"_index":1652,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["available",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["averages",{"_index":1991,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":3399,"title":{},"body":{"index.html":{}}}],["await",{"_index":383,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["axis",{"_index":2136,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":906,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":907,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":2207,"title":{},"body":{"components/GraphsComponent.html":{}}}],["back",{"_index":2659,"title":{},"body":{"components/NavbarComponent.html":{}}}],["backend",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1250,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backgroundcolor",{"_index":2743,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2732,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":2443,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":2386,"title":{},"body":{"components/HomeComponent.html":{}}}],["backup",{"_index":2784,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["backup_frequency",{"_index":2851,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["backups",{"_index":3180,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":1315,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bar",{"_index":2530,"title":{},"body":{"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1039,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseinstructions",{"_index":1978,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":1040,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["bash",{"_index":3251,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":2345,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["before",{"_index":920,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2762,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":2013,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{}}}],["behavior",{"_index":2270,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["behaviorsubject",{"_index":2964,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":2974,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["below",{"_index":1647,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["best",{"_index":1137,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1129,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["between",{"_index":1018,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":828,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":2204,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":3149,"title":{},"body":{"components/ToastComponent.html":{}}}],["blinkmacsystemfont",{"_index":1238,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":1441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["blob([content",{"_index":1619,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["block",{"_index":2961,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockcomment",{"_index":3106,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["blockkey",{"_index":2373,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":2382,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":2005,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":3147,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":2205,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1148,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["bodystyles",{"_index":1671,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1266,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["boolean",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":3113,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1252,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bordercolor",{"_index":2737,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2744,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":1253,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["box",{"_index":368,"title":{},"body":{"components/AiComponent.html":{}}}],["boxes",{"_index":3398,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":3107,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":2307,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["brightness",{"_index":1848,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["broadcast",{"_index":2665,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["broadcasting",{"_index":2262,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["browse",{"_index":3438,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":371,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/server",{"_index":2505,"title":{},"body":{"components/MusicComponent.html":{}}}],["browserdistfolder",{"_index":3313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":3121,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["browser’s",{"_index":3422,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":2206,"title":{},"body":{"components/GraphsComponent.html":{}}}],["btn",{"_index":1322,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["budget",{"_index":625,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["budget'},{'name",{"_index":268,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget_id",{"_index":630,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcomponent",{"_index":267,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetdata",{"_index":1581,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["budgetkey",{"_index":2841,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgets",{"_index":645,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetschema",{"_index":2859,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":653,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["build",{"_index":1542,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":1771,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["bullet",{"_index":2006,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":1936,"title":{},"body":{"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["button'},{'name",{"_index":309,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":2920,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":2921,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":2917,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":2943,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2944,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":2947,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":2927,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2940,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":2935,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":2929,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":2916,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":925,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculates",{"_index":720,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses",{"_index":739,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":748,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":712,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":728,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":727,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":269,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":729,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":730,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":1434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":3043,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["callbacks",{"_index":2754,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"injectables/ToastService.html":{}}}],["calls",{"_index":1048,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["cancel",{"_index":1703,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["canvas",{"_index":2692,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvasref",{"_index":2678,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvg",{"_index":3323,"title":{},"body":{"dependencies.html":{}}}],["care",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2306,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["cash",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1725,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":2717,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":1001,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":1000,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1730,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1729,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1728,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["categories",{"_index":877,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1726,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1708,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":992,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1705,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1706,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1597,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["categorycolors",{"_index":2679,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydata",{"_index":1580,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":923,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2839,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":2680,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":939,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2844,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":949,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":882,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["categorytotals",{"_index":2724,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":2728,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":946,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":2726,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2735,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cellwidth",{"_index":1673,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["center",{"_index":1247,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["certain",{"_index":2387,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":760,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":2114,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changemonth",{"_index":740,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":755,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/ZipExportService.html":{}}}],["changes['currentdate",{"_index":2163,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":2162,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":2102,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":306,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":2421,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":2676,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":2677,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":2672,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:101",{"_index":2686,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:116",{"_index":2689,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:140",{"_index":2687,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:160",{"_index":2690,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:188",{"_index":2697,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:22",{"_index":2710,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":2704,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:28",{"_index":2702,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:31",{"_index":2709,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:34",{"_index":2705,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:37",{"_index":2703,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:40",{"_index":2708,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:43",{"_index":2701,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:46",{"_index":2685,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:49",{"_index":2684,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:69",{"_index":2694,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:85",{"_index":2691,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:94",{"_index":2693,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2698,"title":{},"body":{"components/PieChartComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart/pie",{"_index":2420,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":2077,"title":{},"body":{"components/GraphsComponent.html":{}}}],["charts",{"_index":2070,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":2078,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":2079,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":2080,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":2032,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1011,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{}}}],["checks",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["choiceresult.outcome",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["chosen",{"_index":3382,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["classes",{"_index":825,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["cleanedsong",{"_index":2592,"title":{},"body":{"components/MusicComponent.html":{}}}],["clear",{"_index":1397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["clearinterval(this.interval",{"_index":2581,"title":{},"body":{"components/MusicComponent.html":{}}}],["clears",{"_index":764,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleartimeout(this.savetimeout",{"_index":1365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["clickedinside",{"_index":2278,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicking",{"_index":2247,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":970,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close",{"_index":972,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["closed",{"_index":1779,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/SearchButtonComponent.html":{}}}],["closedownloaddatamodal",{"_index":1534,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["closemodal",{"_index":741,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["closemodel",{"_index":1923,"title":{},"body":{"components/FormModelComponent.html":{}}}],["closeplayermodal",{"_index":2488,"title":{},"body":{"components/MusicComponent.html":{}}}],["closes",{"_index":763,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/UserData.html":{}}}],["closing",{"_index":1759,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":3115,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":3117,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":3116,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":3118,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":656,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["color",{"_index":826,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":2449,"title":{},"body":{"components/HomeComponent.html":{}}}],["colors",{"_index":1827,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{}}}],["column",{"_index":1232,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":1279,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columnstyles",{"_index":1672,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["combining",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1092,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["comment",{"_index":3093,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":3063,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":2299,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["communicates",{"_index":2990,"title":{},"body":{"components/SidebarComponent.html":{}}}],["communicating",{"_index":1941,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["compact",{"_index":2245,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{}}}],["compare",{"_index":2302,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":2342,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["compliant",{"_index":2834,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["compodoc",{"_index":1208,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":1160,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":3132,"title":{},"body":{"components/ToastComponent.html":{}}}],["component'},{'name",{"_index":274,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["component.component",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["component.component.css",{"_index":1531,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.html",{"_index":1530,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.ts",{"_index":1522,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component.component.ts:107",{"_index":1545,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:119",{"_index":1544,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:191",{"_index":1562,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:210",{"_index":1557,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:224",{"_index":1543,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:235",{"_index":1554,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:26",{"_index":2461,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:302",{"_index":1550,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:32",{"_index":2467,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:40",{"_index":2460,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:56",{"_index":1565,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:57",{"_index":2465,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:61",{"_index":1566,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:66",{"_index":2464,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:67",{"_index":1541,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:94",{"_index":1556,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/download",{"_index":1521,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component/form",{"_index":2565,"title":{},"body":{"components/MusicComponent.html":{}}}],["component/graphs/graphs.component",{"_index":2418,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/install",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["component/pie",{"_index":2419,"title":{},"body":{"components/HomeComponent.html":{}}}],["component_template",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["components/download",{"_index":1520,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["components/setting",{"_index":2979,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["computed",{"_index":869,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["conditional",{"_index":2312,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditions",{"_index":1492,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config",{"_index":1205,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":2787,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["configservice",{"_index":1469,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["configurable",{"_index":3125,"title":{},"body":{"components/ToastComponent.html":{}}}],["configuration",{"_index":1209,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm('are",{"_index":1420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirmanddownload",{"_index":1535,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["connects",{"_index":2057,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["consider",{"_index":1123,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["consistency",{"_index":881,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["console.error(\"chart.js",{"_index":2722,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2763,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":834,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('download",{"_index":1617,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('error",{"_index":845,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('gemini",{"_index":1971,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2865,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["console.error('no",{"_index":1430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('submit",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["console.log('backup",{"_index":2813,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":2950,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('creating",{"_index":1432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('posting",{"_index":2799,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('reset",{"_index":1428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":1371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":1464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('user",{"_index":608,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["console.warn('failed",{"_index":2598,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('user",{"_index":2815,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":926,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":1446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["constructor(categoryservice",{"_index":951,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(configservice",{"_index":1909,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(expenseservice",{"_index":744,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":2926,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":2042,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":1948,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":986,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(saavnservice",{"_index":2502,"title":{},"body":{"components/MusicComponent.html":{}}}],["constructor(sectionservice",{"_index":2259,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":701,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":3129,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructors",{"_index":1221,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructs",{"_index":2093,"title":{},"body":{"components/GraphsComponent.html":{}}}],["contain",{"_index":1840,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["container",{"_index":1318,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1056,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["contains",{"_index":1487,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ZipExportService.html":{}}}],["content",{"_index":1022,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["contentdisposition",{"_index":1447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":1452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1149,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["context",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2757,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2756,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2755,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":2027,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":3433,"title":{},"body":{"index.html":{}}}],["control",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["controlled",{"_index":2037,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["conversation",{"_index":1037,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["convert",{"_index":2641,"title":{},"body":{"components/MusicComponent.html":{}}}],["converts",{"_index":334,"title":{},"body":{"components/AiComponent.html":{},"components/ExpenseListComponent.html":{}}}],["copyright",{"_index":2631,"title":{},"body":{"components/MusicComponent.html":{}}}],["count",{"_index":892,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["counts",{"_index":894,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["cover",{"_index":2656,"title":{},"body":{"components/MusicComponent.html":{}}}],["coverage",{"_index":1217,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":878,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["created",{"_index":1372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["createnoderequesthandler(app",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["createsession",{"_index":1366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["creation",{"_index":1437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crypto.randomuuid",{"_index":674,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":867,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["ctx",{"_index":2738,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":731,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":2090,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["currentmonth",{"_index":732,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":2171,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":2176,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":3198,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":3200,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1067,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1091,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1096,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1097,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.primary[0]?.name",{"_index":2651,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.artists?.all",{"_index":1095,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1116,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1113,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.isliked",{"_index":1120,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1114,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1115,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name",{"_index":2650,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1110,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1111,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1112,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentyear",{"_index":733,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":2221,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":2222,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1300,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["curve",{"_index":2144,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":954,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["customfavicon",{"_index":1164,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customizable",{"_index":1920,"title":{},"body":{"components/FormModelComponent.html":{}}}],["customization",{"_index":3256,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["customization.html",{"_index":3265,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":3258,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":3241,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":3245,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["cyan",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":1880,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["d.quality",{"_index":2571,"title":{},"body":{"components/MusicComponent.html":{}}}],["daily",{"_index":726,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark:text",{"_index":3156,"title":{},"body":{"components/ToastComponent.html":{}}}],["darken",{"_index":1826,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor",{"_index":1832,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":1841,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkened",{"_index":1851,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkens",{"_index":1844,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":2366,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.album?.name",{"_index":2633,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.artists?.primary",{"_index":2634,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.copyright",{"_index":2632,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.duration",{"_index":2626,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.label",{"_index":2627,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.language",{"_index":2630,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.map((exp",{"_index":1648,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["data.name",{"_index":2623,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.playcount",{"_index":2629,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.type",{"_index":2624,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.year",{"_index":2625,"title":{},"body":{"components/MusicComponent.html":{}}}],["data/categories",{"_index":2833,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["datablock",{"_index":2029,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":2081,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2742,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2745,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2746,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2749,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["date().getfullyear",{"_index":784,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":782,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().toisostring().replace(/[:.]/g",{"_index":1622,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date().toisostring().split('t')[0",{"_index":1583,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date(`${a.date}t${a.time",{"_index":1732,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1734,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":1864,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1744,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1746,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2794,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":2428,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(todate",{"_index":1590,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{}}}],["date(value",{"_index":2435,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":810,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getdate",{"_index":1877,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date.getfullyear",{"_index":1879,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":2441,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:'short",{"_index":1204,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datea",{"_index":1731,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1736,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1733,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1735,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":1570,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["datestr",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":723,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":849,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":2192,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":2168,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":2181,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":2179,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":2180,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayname",{"_index":1875,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days",{"_index":714,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":2183,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[date.getday",{"_index":1876,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days[value",{"_index":2186,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":812,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":754,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ddd",{"_index":2349,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["ddthh:mm:ss",{"_index":1713,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["debounce",{"_index":1351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":1389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dec",{"_index":1874,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":2240,"title":{},"body":{"components/GraphsComponent.html":{}}}],["decimal",{"_index":635,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["decimals",{"_index":669,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["declarations",{"_index":3112,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":2295,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":1326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["decreases",{"_index":1847,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dee2e6",{"_index":1256,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deep",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1490,"title":{},"body":{"injectables/ConfigService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defaultschema",{"_index":2862,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultschema[key",{"_index":2882,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultviewtype",{"_index":2369,"title":{},"body":{"components/HomeComponent.html":{}}}],["deferredprompt",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["define",{"_index":3144,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["defines",{"_index":2828,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["definitions",{"_index":3075,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["delay",{"_index":2942,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["delegate",{"_index":3168,"title":{},"body":{"injectables/ToastService.html":{}}}],["delete",{"_index":647,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":2444,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":693,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":918,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1742,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deleted",{"_index":1781,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["deletes",{"_index":692,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deleting",{"_index":1760,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["deletion",{"_index":922,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delimiter",{"_index":3102,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":2362,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1483,"title":{},"body":{"injectables/ConfigService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["deploying",{"_index":3537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depth",{"_index":2317,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["design",{"_index":3412,"title":{},"body":{"index.html":{}}}],["designed",{"_index":3346,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":3419,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":3028,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["destruction",{"_index":2524,"title":{},"body":{"components/MusicComponent.html":{}}}],["detailed",{"_index":3429,"title":{},"body":{"index.html":{}}}],["details",{"_index":276,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["detect",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["detection",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":2664,"title":{},"body":{"components/NavbarComponent.html":{}}}],["determines",{"_index":1486,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["dev",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":3432,"title":{},"body":{"index.html":{}}}],["development",{"_index":1508,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1473,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["device's",{"_index":3383,"title":{},"body":{"index.html":{}}}],["devices",{"_index":3413,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1528,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["different",{"_index":2989,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["differentiation",{"_index":3530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1231,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":320,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directory",{"_index":3249,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1213,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":1165,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":1166,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":1167,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":1168,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":1169,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":1170,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":1171,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":1172,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":1173,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":1174,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":1175,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":1176,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":1177,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":1178,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disables",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["disablesearch",{"_index":1179,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":1180,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":1181,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":1182,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disappears",{"_index":3138,"title":{},"body":{"components/ToastComponent.html":{}}}],["dismiss",{"_index":2476,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{}}}],["dismissed",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["dismisses",{"_index":1937,"title":{},"body":{"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["dismissinstall",{"_index":2458,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["displayed",{"_index":1926,"title":{},"body":{"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{}}}],["displaying",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displays",{"_index":713,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["disposition",{"_index":1449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["distinct",{"_index":3529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":3376,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":1633,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1638,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.save(`expenses",{"_index":1686,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(10",{"_index":1642,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(14",{"_index":1640,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(sub",{"_index":1643,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(title",{"_index":1641,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doctype",{"_index":3095,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":2264,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":1460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.appendchild(link",{"_index":1625,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["document.body.removechild(a",{"_index":1462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(link",{"_index":1627,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["document.createelement('a",{"_index":1457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('div",{"_index":3150,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":3141,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":950,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":967,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["documentation/.../hbs",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":1161,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":2358,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":350,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2699,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["downloadblob",{"_index":3220,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":3223,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadcomponentcomponent",{"_index":272,"title":{"components/DownloadComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["downloaddata",{"_index":1536,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaddataform",{"_index":1532,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaded",{"_index":1465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["downloading",{"_index":1466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloads",{"_index":2510,"title":{},"body":{"components/MusicComponent.html":{}}}],["downloadsong",{"_index":2489,"title":{},"body":{"components/MusicComponent.html":{}}}],["downloadsong(song",{"_index":2508,"title":{},"body":{"components/MusicComponent.html":{}}}],["drinks",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":271,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":937,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":938,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":933,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":978,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":968,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":966,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":964,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":959,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":955,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":981,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":983,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":952,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":974,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":973,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":979,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":947,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":1086,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["during",{"_index":2611,"title":{},"body":{"components/MusicComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1905,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":3124,"title":{},"body":{"components/ToastComponent.html":{}}}],["e",{"_index":833,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1727,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["e9ecef",{"_index":1271,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":889,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["easily",{"_index":3348,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1769,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["edited",{"_index":1783,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editform",{"_index":1762,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editing",{"_index":1756,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editor",{"_index":1313,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":1189,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":3026,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":3045,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":3037,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":3033,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":3040,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":3042,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":3035,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":3038,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":3044,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":1341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":1355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["education",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":2562,"title":{},"body":{"components/MusicComponent.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["email",{"_index":2852,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":935,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitted",{"_index":1778,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["emitting",{"_index":2951,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":2004,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":3349,"title":{},"body":{"index.html":{}}}],["empty",{"_index":662,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":2125,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3189,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":641,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["endpoint",{"_index":1438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhances",{"_index":1106,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["enhancing",{"_index":1128,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["ensures",{"_index":2838,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["ensuring",{"_index":649,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["enter",{"_index":2937,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":2945,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":3206,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["entries",{"_index":3380,"title":{},"body":{"index.html":{}}}],["entry",{"_index":629,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"index.html":{}}}],["environment",{"_index":651,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":1509,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.appname",{"_index":1496,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.developmentenvironment",{"_index":1499,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.liveapiurl",{"_index":1504,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.localapiurl",{"_index":1507,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":3546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":1027,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":844,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["error('failed",{"_index":1374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":2356,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["etc",{"_index":1071,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["event",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":996,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":2279,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.innerwidth",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.value",{"_index":2430,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.url",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["event.urlafterredirects",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":965,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["events",{"_index":1758,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{}}}],["example",{"_index":1506,"title":{},"body":{"injectables/ConfigService.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["excel",{"_index":1525,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["exceldata",{"_index":1688,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exceldata.length",{"_index":1692,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exchanged",{"_index":1017,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["excluding",{"_index":911,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["exist",{"_index":915,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["existing",{"_index":679,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["exists",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["exp",{"_index":839,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":852,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.category_icon",{"_index":1890,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":853,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.date",{"_index":1649,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["exp.isextraspending",{"_index":1650,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.location",{"_index":857,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.note",{"_index":856,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.payment_mode",{"_index":858,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.time",{"_index":855,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["expands",{"_index":2919,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expected",{"_index":2544,"title":{},"body":{"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":262,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.amount",{"_index":1591,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_id",{"_index":1599,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_name",{"_index":1598,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.component",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.date",{"_index":1592,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.expense_id",{"_index":1601,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.isextraspending",{"_index":1602,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.location",{"_index":1594,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.note",{"_index":1595,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.payment_mode",{"_index":1596,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.service",{"_index":875,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense.time",{"_index":1593,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":861,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1600,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["expensecountmap",{"_index":898,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":904,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedata",{"_index":1579,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expensedetailsmodalcomponent",{"_index":275,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2840,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":278,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":299,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["expenses.component.ts",{"_index":3298,"title":{},"body":{"coverage.html":{}}}],["expenses.filter(exp",{"_index":2198,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":2172,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1723,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":899,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1753,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2847,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":1835,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["expensewise",{"_index":3535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["experience",{"_index":1108,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1140,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":3387,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["export.service",{"_index":1192,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":3219,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":3226,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":3228,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":3224,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporting",{"_index":1523,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exports",{"_index":1551,"title":{},"body":{"components/DownloadComponentComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["exporttemplates",{"_index":3221,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":3225,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttoexcel",{"_index":1537,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttoexcel(data",{"_index":1549,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exporttopdf",{"_index":1538,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttopdf(data",{"_index":1553,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exportzip",{"_index":1429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":3326,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extension",{"_index":1561,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["externally",{"_index":3134,"title":{},"body":{"components/ToastComponent.html":{}}}],["extra",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["extract",{"_index":1089,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["exwise",{"_index":1489,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["f0f8ff",{"_index":2351,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f8f9fa",{"_index":1251,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fade",{"_index":3160,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1235,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":3424,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["features",{"_index":330,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["features/add",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["features/ai/ai.component",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["features/budget/budget.component",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["features/calendar/calendar.component",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["features/home/home.component",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["features/list",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["features/music/music.component",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["features/settings/settings.component",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["feb",{"_index":1866,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":2232,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":648,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["fetch(song.url",{"_index":2638,"title":{},"body":{"components/MusicComponent.html":{}}}],["fetched",{"_index":2468,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["fetches",{"_index":1942,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["fetching",{"_index":1157,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff0000",{"_index":1849,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["ff4081",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":1264,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2752,"title":{},"body":{"components/PieChartComponent.html":{}}}],["fff5f5",{"_index":2355,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":870,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["fieldname",{"_index":1082,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":686,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.content",{"_index":3232,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":1445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":1451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":1453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":3227,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":3230,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1585,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fillcolor",{"_index":1660,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["filter(loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredexpensedata",{"_index":1606,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2871,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["filtering",{"_index":2098,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["final",{"_index":1604,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finaldata",{"_index":1605,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finalize",{"_index":1026,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finally",{"_index":2612,"title":{},"body":{"components/MusicComponent.html":{}}}],["finance",{"_index":3356,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1981,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["firstday",{"_index":809,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstsong",{"_index":2606,"title":{},"body":{"components/MusicComponent.html":{}}}],["firstvaluefrom",{"_index":1028,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1152,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fit",{"_index":1130,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fits",{"_index":1105,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fixed",{"_index":2654,"title":{},"body":{"components/MusicComponent.html":{}}}],["flag",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":2407,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1046,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":1230,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["flexibility",{"_index":3405,"title":{},"body":{"index.html":{}}}],["floating",{"_index":2918,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2463,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["focus",{"_index":2939,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":2024,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":2941,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["folder",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":1234,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":3260,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1656,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fontstyle",{"_index":1667,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["food",{"_index":3377,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1903,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":1907,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1906,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":280,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":2413,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":2370,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":2126,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["format",{"_index":1080,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["formatdateforinput",{"_index":2374,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":2389,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1085,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1109,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":2375,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":2392,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1526,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["formatted",{"_index":1083,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["formattedexpense",{"_index":1722,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":2185,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formattime",{"_index":2490,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(duration",{"_index":2653,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(progress",{"_index":2652,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(seconds",{"_index":2511,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(song.duration",{"_index":2649,"title":{},"body":{"components/MusicComponent.html":{}}}],["formatting",{"_index":1141,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formmodelcomponent",{"_index":282,"title":{"components/FormModelComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["forms",{"_index":1772,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{}}}],["formsmodule",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["forwards",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":851,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["frame",{"_index":1321,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":3360,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":3179,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fri",{"_index":798,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["friendly",{"_index":1998,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1748,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":631,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":1972,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":3359,"title":{},"body":{"index.html":{}}}],["full",{"_index":1158,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fullnames",{"_index":2230,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":2241,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fully",{"_index":3133,"title":{},"body":{"components/ToastComponent.html":{}}}],["function",{"_index":1079,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["functionality",{"_index":1427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["functions",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":1569,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["g",{"_index":1883,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gap",{"_index":1258,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gathers",{"_index":2777,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":328,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":353,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":3538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":348,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generate",{"_index":3236,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["generateexpenseanalysisprompt",{"_index":1945,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":1951,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generatereadme",{"_index":3222,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generates",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{}}}],["generateuserid",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["generating",{"_index":3243,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":3242,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":1211,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generic",{"_index":2829,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getall",{"_index":664,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getallbudgets",{"_index":2894,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":2893,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":2898,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiurl",{"_index":1477,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappname",{"_index":1478,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":2903,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":1891,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1740,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getcategorykey",{"_index":2900,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":2376,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":2901,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":1833,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":1853,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1159,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlanguagefromfiletype",{"_index":3029,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":3034,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlast30daysexpenses",{"_index":1946,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlocalisostring",{"_index":1714,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getmockdata",{"_index":2284,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getresponse",{"_index":1947,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":1963,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsongurl",{"_index":2491,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsongurl(song",{"_index":2515,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":895,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getuser",{"_index":2896,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdata",{"_index":3205,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2771,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":2905,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":3209,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":3204,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":1479,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gifts",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":750,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["global",{"_index":285,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":2928,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":284,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":427,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["globally",{"_index":2038,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["go",{"_index":3357,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":2377,"title":{},"body":{"components/HomeComponent.html":{}}}],["google",{"_index":1034,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["goprevious",{"_index":2378,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1215,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["graphs",{"_index":2073,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":288,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":2075,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":2076,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":287,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":827,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":3146,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":3371,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":1994,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1278,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["groceries",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":860,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["grouped",{"_index":2106,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":848,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":957,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["h3",{"_index":1290,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":1314,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["halign",{"_index":1664,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["hamburger",{"_index":290,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":289,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":883,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{}}}],["handlebars",{"_index":1395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":2298,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":3092,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":2283,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handler",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["handling",{"_index":3194,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hashed",{"_index":3191,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hbs",{"_index":1194,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":1193,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":1357,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["head",{"_index":1655,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["header",{"_index":776,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headerrow",{"_index":1693,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["headers",{"_index":1146,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["headstyles",{"_index":1659,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["health",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":960,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hello",{"_index":1996,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":1984,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":1078,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["helpers",{"_index":2300,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpful",{"_index":1980,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":2017,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hex",{"_index":866,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{}}}],["hh:mm:ss",{"_index":1707,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["hi",{"_index":1995,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hidden",{"_index":1275,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hiddeninput",{"_index":2451,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":2454,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1210,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["hidedarkmodetoggle",{"_index":1183,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":1184,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hides",{"_index":2047,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["hiding",{"_index":1932,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["highest",{"_index":2517,"title":{},"body":{"components/MusicComponent.html":{}}}],["highlights",{"_index":718,"title":{},"body":{"components/CalendarComponent.html":{},"components/SidebarComponent.html":{}}}],["history",{"_index":1038,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["holding",{"_index":2976,"title":{},"body":{"injectables/SectionService.html":{}}}],["holds",{"_index":2996,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":2367,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":2368,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":292,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["hooks",{"_index":1220,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":3059,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":2960,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":976,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":2210,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2770,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":2214,"title":{},"body":{"components/GraphsComponent.html":{}}}],["href",{"_index":2364,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["htmlaudioelement",{"_index":2548,"title":{},"body":{"components/MusicComponent.html":{}}}],["htmlelement",{"_index":997,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["htmlinputelement",{"_index":2400,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["http",{"_index":1047,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["http://localhost:8000",{"_index":1484,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1024,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":339,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["httpheaders",{"_index":1025,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://compodoc.app/guides/template",{"_index":3264,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1485,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1044,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1041,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":1855,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":3522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":2016,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":862,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":637,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identifying",{"_index":1988,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ignores",{"_index":359,"title":{},"body":{"components/AiComponent.html":{}}}],["img",{"_index":2655,"title":{},"body":{"components/MusicComponent.html":{}}}],["immediately",{"_index":3385,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":1418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["include",{"_index":1138,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/NavbarComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":1185,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["including",{"_index":1757,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{}}}],["incorrect",{"_index":3410,"title":{},"body":{"index.html":{}}}],["independent",{"_index":3363,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2830,"title":{},"body":{"interfaces/Schema.html":{}}}],["indicate",{"_index":2555,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":873,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["indicating",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["indicator",{"_index":1263,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indicators",{"_index":1950,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["indigo",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1063,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":1578,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["informative",{"_index":3396,"title":{},"body":{"index.html":{}}}],["init",{"_index":2411,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["initform",{"_index":1763,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initial",{"_index":1558,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["initialization",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["initialize",{"_index":3047,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initialized",{"_index":2977,"title":{},"body":{"injectables/SectionService.html":{},"components/ToastComponent.html":{}}}],["initializeeditor",{"_index":1387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":3036,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":2285,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["initializing",{"_index":1362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{}}}],["inject(platform_id",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["injectable",{"_index":642,"title":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":699,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injected",{"_index":2094,"title":{},"body":{"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["input[type=\"date",{"_index":2446,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":2448,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":2391,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":2394,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":2399,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":2432,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":945,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["inr",{"_index":3184,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":2469,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":1944,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["install",{"_index":295,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["installapp",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installapppopupcomponentcomponent",{"_index":294,"title":{"components/InstallAppPopupComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["installation",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installing",{"_index":2475,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["instances",{"_index":2706,"title":{},"body":{"components/PieChartComponent.html":{}}}],["instructions",{"_index":1957,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["integrates",{"_index":2249,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{}}}],["integrating",{"_index":1031,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["intended",{"_index":2765,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interact",{"_index":2504,"title":{},"body":{"components/MusicComponent.html":{}}}],["interacting",{"_index":654,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["interaction",{"_index":326,"title":{},"body":{"components/AiComponent.html":{}}}],["interactive",{"_index":3372,"title":{},"body":{"index.html":{}}}],["interface",{"_index":624,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":626,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["internal",{"_index":1219,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["intersect",{"_index":2155,"title":{},"body":{"components/GraphsComponent.html":{}}}],["interval",{"_index":2485,"title":{},"body":{"components/MusicComponent.html":{}}}],["intuitive",{"_index":3414,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1084,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["is_active",{"_index":863,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_app_updated",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_backup",{"_index":2853,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isappupdated",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["isbrowser",{"_index":657,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":940,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":830,"title":{},"body":{"components/CalendarComponent.html":{}}}],["iscurrentsongliked",{"_index":2486,"title":{},"body":{"components/MusicComponent.html":{}}}],["isdarkmode",{"_index":2681,"title":{},"body":{"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditopen",{"_index":1767,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["isinitial",{"_index":2339,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":2337,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isliked",{"_index":2492,"title":{},"body":{"components/MusicComponent.html":{}}}],["ismenuopen",{"_index":2254,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["ismusicroute",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":2440,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":2436,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":2439,"title":{},"body":{"components/HomeComponent.html":{}}}],["iso",{"_index":640,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["isopen",{"_index":2922,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["istabenabled",{"_index":2331,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":2041,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{}}}],["italic",{"_index":1312,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":690,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["item'},{'name",{"_index":312,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":2178,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":689,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":914,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":2984,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":2981,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":2985,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":2173,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1739,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.name",{"_index":1468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.note?.trim",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.time.split",{"_index":2213,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2873,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["item/setting",{"_index":2980,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":2881,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["itemdate",{"_index":1745,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1747,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":1246,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["jan",{"_index":1865,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":2231,"title":{},"body":{"components/GraphsComponent.html":{}}}],["javascript",{"_index":3082,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["job",{"_index":1100,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["js",{"_index":3081,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json",{"_index":1072,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["json.parse(cleanedsong",{"_index":2597,"title":{},"body":{"components/MusicComponent.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2867,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":2895,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2870,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":2899,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":2897,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":678,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["json.stringify(budgets",{"_index":2912,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(categories",{"_index":2909,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(currentsettings",{"_index":3202,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(finaldata",{"_index":1608,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["json.stringify(last15daysexpenses",{"_index":2030,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":2892,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(updated",{"_index":928,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":2884,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(user",{"_index":2914,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsondata",{"_index":1607,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jspdf",{"_index":1573,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1634,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jszip",{"_index":3229,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jul",{"_index":1869,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":2236,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":1868,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":2235,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":1243,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["keep",{"_index":2023,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SidebarComponent.html":{},"injectables/ZipExportService.html":{}}}],["key",{"_index":902,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":2388,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":2383,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyed",{"_index":2707,"title":{},"body":{"components/PieChartComponent.html":{}}}],["keyframes",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":655,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/HomeComponent.html":{}}}],["keyword",{"_index":3091,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":3393,"title":{},"body":{"index.html":{}}}],["label",{"_index":824,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{}}}],["labelalignment",{"_index":1924,"title":{},"body":{"components/FormModelComponent.html":{}}}],["labels",{"_index":801,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["lang.id",{"_index":3086,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1122,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["laptop",{"_index":3418,"title":{},"body":{"index.html":{}}}],["last",{"_index":1202,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["last15daysexpenses",{"_index":1952,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2775,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2793,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2797,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2791,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastsaved",{"_index":1203,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["latest",{"_index":3187,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["launch",{"_index":3370,"title":{},"body":{"index.html":{}}}],["layout",{"_index":3261,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["leave",{"_index":3540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1310,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["legend",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["length",{"_index":2932,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["letter",{"_index":1294,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["let’s",{"_index":2022,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":3434,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":3358,"title":{},"body":{"index.html":{}}}],["lg",{"_index":3155,"title":{},"body":{"components/ToastComponent.html":{}}}],["li",{"_index":1299,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":1306,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":1305,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["light",{"_index":2149,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":3362,"title":{},"body":{"index.html":{}}}],["liked",{"_index":1119,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["line",{"_index":2146,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["linebreak",{"_index":1658,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linenumbers",{"_index":3056,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":1454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["link.click",{"_index":1626,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["link.download",{"_index":1623,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["link.href",{"_index":1621,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["linked",{"_index":868,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["links",{"_index":2987,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":1831,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":1830,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":1824,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":1839,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:28",{"_index":1837,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:33",{"_index":1836,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:49",{"_index":1861,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:60",{"_index":1854,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:95",{"_index":1843,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1823,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SidebarComponent.html":{}}}],["listener",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["listening",{"_index":1102,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":969,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["listexpensescomponent",{"_index":297,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":3386,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1021,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["live",{"_index":1227,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["liveapiurl",{"_index":1474,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["loadcategories",{"_index":941,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loaddata",{"_index":2084,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":2085,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":2103,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":2410,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["loader",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":286,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":2040,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":2039,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":2035,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:23",{"_index":2050,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:28",{"_index":2043,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":2049,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:55",{"_index":2046,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":2055,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:17",{"_index":2063,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2061,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:33",{"_index":2062,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:40",{"_index":2059,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loading",{"_index":846,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadmonthdata",{"_index":2086,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":2107,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadsessionconfig",{"_index":1383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":1375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":2087,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":2109,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["localapiurl",{"_index":1475,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1488,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":2883,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.budgetkey",{"_index":2911,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.categorykey",{"_index":2908,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":677,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":912,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1737,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":3201,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":2891,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":1965,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2788,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2789,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":3430,"title":{},"body":{"index.html":{}}}],["logged",{"_index":917,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["logic",{"_index":3367,"title":{},"body":{"index.html":{}}}],["long",{"_index":820,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":847,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lucide",{"_index":3330,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":1216,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["mainartist",{"_index":2600,"title":{},"body":{"components/MusicComponent.html":{}}}],["mainartist}`).subscribe",{"_index":2603,"title":{},"body":{"components/MusicComponent.html":{}}}],["maintains",{"_index":2963,"title":{},"body":{"injectables/SectionService.html":{}}}],["making",{"_index":3262,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["manage",{"_index":953,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["management",{"_index":3345,"title":{},"body":{"index.html":{}}}],["manager",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["managing",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["map",{"_index":901,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["map((a",{"_index":2635,"title":{},"body":{"components/MusicComponent.html":{}}}],["map((category",{"_index":903,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1724,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":2174,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":900,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":388,"title":{},"body":{"components/AiComponent.html":{}}}],["mapping",{"_index":2320,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["mar",{"_index":1858,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":2233,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":1283,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["mark",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":335,"title":{},"body":{"components/AiComponent.html":{}}}],["marked",{"_index":372,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":384,"title":{},"body":{"components/AiComponent.html":{}}}],["marks",{"_index":1547,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["match",{"_index":1131,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matches",{"_index":680,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["matching",{"_index":323,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(seconds",{"_index":2615,"title":{},"body":{"components/MusicComponent.html":{}}}],["math.max(b",{"_index":1889,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":1888,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.round(data.amount",{"_index":676,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":691,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":956,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":2933,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2759,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":291,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":2668,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":2252,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":2253,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":2244,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:26",{"_index":2275,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":2260,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":2272,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":2263,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:75",{"_index":2267,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":2243,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":3531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merged",{"_index":3532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merges",{"_index":681,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["message",{"_index":1016,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":2026,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["met",{"_index":1493,"title":{},"body":{"injectables/ConfigService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["metatag",{"_index":3097,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":3096,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":1934,"title":{},"body":{"components/FormModelComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["middle",{"_index":1666,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["milliseconds",{"_index":3137,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mime",{"_index":1563,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["mimetype",{"_index":1560,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["min",{"_index":2614,"title":{},"body":{"components/MusicComponent.html":{}}}],["minimal",{"_index":1186,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":3052,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minimumfractiondigits",{"_index":2758,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minmax(200px",{"_index":1281,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minute",{"_index":2211,"title":{},"body":{"components/GraphsComponent.html":{}}}],["min}:${sec.tostring().padstart(2",{"_index":2618,"title":{},"body":{"components/MusicComponent.html":{}}}],["miscellaneous",{"_index":3442,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":2816,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["mm",{"_index":753,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mm:ss",{"_index":2514,"title":{},"body":{"components/MusicComponent.html":{}}}],["mobile",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["mock",{"_index":2353,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["modal",{"_index":725,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["modal'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1761,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1755,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":1790,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:112",{"_index":1784,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:117",{"_index":1789,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1776,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1773,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1774,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1777,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:36",{"_index":1780,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1782,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:42",{"_index":1794,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:45",{"_index":1770,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:57",{"_index":1787,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:62",{"_index":1786,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:80",{"_index":1788,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:88",{"_index":1792,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/expense",{"_index":1754,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":734,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modaltitle",{"_index":735,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":380,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["model'},{'name",{"_index":283,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["model.component",{"_index":1572,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["model.component.css",{"_index":1922,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.html",{"_index":1921,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts",{"_index":1918,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["model.component.ts:23",{"_index":1925,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:29",{"_index":1928,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:37",{"_index":1930,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:45",{"_index":1933,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model/form",{"_index":1571,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["modelreply",{"_index":1154,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modern",{"_index":3361,"title":{},"body":{"index.html":{}}}],["modify",{"_index":3259,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":2322,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["modules",{"_index":2323,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["mon",{"_index":794,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["monaco",{"_index":3046,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":3049,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":3078,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":3085,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":3087,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":3105,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":3088,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["money",{"_index":3343,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":3431,"title":{},"body":{"index.html":{}}}],["monospace",{"_index":1262,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["month",{"_index":715,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":819,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":3428,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":2071,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":2220,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":2228,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":2225,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":2224,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":711,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["monthname",{"_index":2188,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":2187,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":2223,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":2189,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":759,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":2227,"title":{},"body":{"components/GraphsComponent.html":{}}}],["months[date.getmonth",{"_index":1878,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["monthstr",{"_index":815,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1064,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{},"injectables/ZipExportService.html":{}}}],["mouse",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["mouseevent",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["msg",{"_index":385,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":382,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":379,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":3394,"title":{},"body":{"index.html":{}}}],["music",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["music'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component.css",{"_index":2482,"title":{},"body":{"components/MusicComponent.html":{}}}],["music.component.html",{"_index":2483,"title":{},"body":{"components/MusicComponent.html":{}}}],["musiccomponent",{"_index":300,"title":{"components/MusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1716,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["n.tostring().padstart(2",{"_index":1717,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["navbar",{"_index":2658,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":2660,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":2661,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":302,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2250,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["navigateandclose",{"_index":2256,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":2266,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":2268,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{}}}],["navigating",{"_index":2988,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navigation",{"_index":2246,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["navtabs",{"_index":2333,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":2335,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":2340,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":2341,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["need",{"_index":3423,"title":{},"body":{"index.html":{}}}],["negative",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":684,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newest",{"_index":1721,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newurl",{"_index":2608,"title":{},"body":{"components/MusicComponent.html":{}}}],["next",{"_index":1035,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["nextsong",{"_index":2493,"title":{},"body":{"components/MusicComponent.html":{}}}],["nextsong.trim",{"_index":2591,"title":{},"body":{"components/MusicComponent.html":{}}}],["ng",{"_index":2158,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":3334,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":2682,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":2074,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngmodule",{"_index":3120,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngonchanges",{"_index":2088,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":2111,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["node.js",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1297,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notice",{"_index":2350,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["notify",{"_index":1785,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["nov",{"_index":1873,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":2239,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2796,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2811,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":364,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["num",{"_index":1884,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":633,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number(item.amount",{"_index":832,"title":{},"body":{"components/CalendarComponent.html":{}}}],["number(target.value",{"_index":2620,"title":{},"body":{"components/MusicComponent.html":{}}}],["object",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2730,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2733,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2875,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["object.keys(exceldata[0",{"_index":1694,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["object.values(categorytotals",{"_index":2731,"title":{},"body":{"components/PieChartComponent.html":{}}}],["objects",{"_index":774,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["observable",{"_index":1055,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{}}}],["observe",{"_index":1442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["occurs",{"_index":2265,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["oct",{"_index":1872,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":2238,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offline",{"_index":2473,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["offset",{"_index":758,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":672,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2768,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["onchangecallback",{"_index":3027,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onchanges",{"_index":2072,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":2257,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":2271,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclickinstallapp",{"_index":2459,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["ondelete",{"_index":1764,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1187,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ondocumentclick",{"_index":942,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":975,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninputchange",{"_index":2379,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":2398,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":2380,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":2403,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(event",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":2924,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onseek",{"_index":2494,"title":{},"body":{"components/MusicComponent.html":{}}}],["onseek(event",{"_index":2525,"title":{},"body":{"components/MusicComponent.html":{}}}],["onselect",{"_index":1834,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":1860,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsongfinished",{"_index":2495,"title":{},"body":{"components/MusicComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["opacity",{"_index":621,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1775,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["open/closed",{"_index":2273,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["opendownloaddatamodal",{"_index":1539,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["opened",{"_index":1793,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["openmodal",{"_index":742,"title":{},"body":{"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":766,"title":{},"body":{"components/CalendarComponent.html":{}}}],["openplayermodal",{"_index":2496,"title":{},"body":{"components/MusicComponent.html":{}}}],["opens",{"_index":724,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["operations",{"_index":884,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["operator",{"_index":2304,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimized",{"_index":3416,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":1277,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["options.fn(this",{"_index":2308,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":2309,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["orange",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1645,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["organization",{"_index":3408,"title":{},"body":{"index.html":{}}}],["original",{"_index":1852,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/MusicComponent.html":{},"injectables/ZipExportService.html":{}}}],["orlength",{"_index":2325,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["others",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["outline",{"_index":2450,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":984,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":948,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":971,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":3373,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":1274,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1214,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":3061,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["owns",{"_index":874,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["p",{"_index":3153,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["p.text).join('\\n\\n",{"_index":1156,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":1433,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pad",{"_index":1715,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1719,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getmonth",{"_index":1718,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["padding",{"_index":717,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":3254,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":2983,"title":{},"body":{"components/SettingItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["pagewidth",{"_index":1637,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pairs",{"_index":2832,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["panel",{"_index":1270,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":1276,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["paragraph",{"_index":2009,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["parameterhints",{"_index":3065,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["parent",{"_index":936,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{}}}],["parse",{"_index":2599,"title":{},"body":{"components/MusicComponent.html":{}}}],["parsed",{"_index":2434,"title":{},"body":{"components/HomeComponent.html":{}}}],["parseint(exp.amount",{"_index":841,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":2177,"title":{},"body":{"components/GraphsComponent.html":{}}}],["part",{"_index":871,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":685,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":3255,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["parts",{"_index":1019,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1155,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2782,"title":{},"body":{"injectables/PostApiService.html":{}}}],["password",{"_index":3190,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2869,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pastdata.filter((item",{"_index":2872,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["path",{"_index":1196,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/section",{"_index":2997,"title":{},"body":{"components/SidebarComponent.html":{}}}],["path/to/custom/templates",{"_index":3253,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["patterns",{"_index":1990,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pause",{"_index":2479,"title":{},"body":{"components/MusicComponent.html":{}}}],["pauses",{"_index":2536,"title":{},"body":{"components/MusicComponent.html":{}}}],["payment",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["payment_mode",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["pdf",{"_index":1524,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["per",{"_index":722,"title":{},"body":{"components/CalendarComponent.html":{},"index.html":{}}}],["percent",{"_index":1842,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":1845,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["perform",{"_index":1931,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/PostApiService.html":{}}}],["performed",{"_index":3188,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["period",{"_index":639,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["persist",{"_index":3193,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["persistent",{"_index":3368,"title":{},"body":{"index.html":{}}}],["personal",{"_index":3355,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":3406,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1953,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":2402,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":305,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["pie/doughnut",{"_index":2673,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartcomponent",{"_index":304,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(filter(event",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["places",{"_index":636,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["plain",{"_index":3192,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["platform_id",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["platformid",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["play",{"_index":2478,"title":{},"body":{"components/MusicComponent.html":{}}}],["playback",{"_index":2528,"title":{},"body":{"components/MusicComponent.html":{}}}],["playcount",{"_index":2628,"title":{},"body":{"components/MusicComponent.html":{}}}],["player",{"_index":2507,"title":{},"body":{"components/MusicComponent.html":{}}}],["playground",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":3122,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":1163,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":3119,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":2281,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":1162,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":3218,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playing",{"_index":1068,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["plays",{"_index":2532,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong",{"_index":2497,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong(url",{"_index":2534,"title":{},"body":{"components/MusicComponent.html":{}}}],["please",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["plugins",{"_index":2751,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1301,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["points",{"_index":2007,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":1979,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":1992,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":2015,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pop",{"_index":3094,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["popup",{"_index":296,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":1319,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["positive",{"_index":761,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1502,"title":{},"body":{"injectables/ConfigService.html":{}}}],["post",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":431,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2804,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2812,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2781,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2772,"title":{},"body":{"injectables/PostApiService.html":{}}}],["predefined",{"_index":2836,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["predict",{"_index":1985,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":1987,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preferences",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["preferred",{"_index":3182,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prepare",{"_index":1603,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pressed",{"_index":2522,"title":{},"body":{"components/MusicComponent.html":{}}}],["presses",{"_index":2936,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevent",{"_index":1568,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["preventing",{"_index":2667,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["prevents",{"_index":2385,"title":{},"body":{"components/HomeComponent.html":{}}}],["preview",{"_index":1228,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":1343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":1352,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["previous/next",{"_index":716,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevmonthdays",{"_index":814,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":1327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":1328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["privacy",{"_index":3427,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["process",{"_index":2020,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["processes",{"_index":2105,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":333,"title":{},"body":{"components/AiComponent.html":{},"components/SearchButtonComponent.html":{}}}],["production",{"_index":1503,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":3178,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["progress",{"_index":2480,"title":{},"body":{"components/MusicComponent.html":{},"index.html":{}}}],["promise",{"_index":1076,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["prompt",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":2031,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompting",{"_index":2457,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["prompts",{"_index":1943,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":2723,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"properties.html":{}}}],["property",{"_index":1927,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1218,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provide",{"_index":1133,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":682,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{}}}],["providedin",{"_index":652,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["providehttpclient",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3114,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":646,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":3533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":3534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1471,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pt",{"_index":1635,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["public",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":1983,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["purposes",{"_index":1829,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["pwa",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["q",{"_index":2566,"title":{},"body":{"components/MusicComponent.html":{}}}],["quality",{"_index":2518,"title":{},"body":{"components/MusicComponent.html":{}}}],["query",{"_index":1053,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":1960,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":2021,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quickly",{"_index":3391,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":3062,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":1302,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["random",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":751,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["raw",{"_index":381,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactively",{"_index":2973,"title":{},"body":{"injectables/SectionService.html":{}}}],["read",{"_index":879,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["read/write",{"_index":3425,"title":{},"body":{"index.html":{}}}],["readable",{"_index":1856,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["readme",{"_index":3233,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":1347,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["ready",{"_index":1961,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recent",{"_index":2019,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":3528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommend",{"_index":1125,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["recommendation",{"_index":1036,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":3195,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["records",{"_index":1552,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":2354,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":3547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/ToastService.html":{}}}],["reflected",{"_index":3384,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1229,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":1414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":1410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":2058,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":2060,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":3169,"title":{},"body":{"injectables/ToastService.html":{}}}],["registered",{"_index":2064,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{}}}],["registerhandlebarslanguage",{"_index":3030,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":2286,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registering",{"_index":3167,"title":{},"body":{"injectables/ToastService.html":{}}}],["registers",{"_index":2044,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":885,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/SettingItemComponent.html":{}}}],["relative",{"_index":1320,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":2315,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["release",{"_index":3411,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2546,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["reloads",{"_index":2119,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["remaining",{"_index":3403,"title":{},"body":{"index.html":{}}}],["remove",{"_index":3163,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["removes",{"_index":2938,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["render",{"_index":771,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["render.service",{"_index":1195,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":2282,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":2293,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":2290,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":2289,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":2291,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":2288,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendercalendar",{"_index":743,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":768,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":2683,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":2696,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendered",{"_index":365,"title":{},"body":{"components/AiComponent.html":{},"injectables/HbsRenderService.html":{}}}],["rendering",{"_index":357,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["rendermode",{"_index":3549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":3550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renders",{"_index":710,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["rendertemplate",{"_index":2287,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":2292,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rent",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat",{"_index":1142,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["repeat(auto",{"_index":1280,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["replace",{"_index":2594,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["replace(/^```json",{"_index":2593,"title":{},"body":{"components/MusicComponent.html":{}}}],["replaced",{"_index":3545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":695,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["reply",{"_index":2002,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["report",{"_index":1555,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["representing",{"_index":628,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["represents",{"_index":1014,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["reqhandler",{"_index":3314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":354,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["required",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PieChartComponent.html":{}}}],["requires",{"_index":3166,"title":{},"body":{"injectables/ToastService.html":{}}}],["res",{"_index":1151,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["res.app_version",{"_index":2806,"title":{},"body":{"injectables/PostApiService.html":{}}}],["res.blob",{"_index":2640,"title":{},"body":{"components/MusicComponent.html":{}}}],["res.data?.results",{"_index":2604,"title":{},"body":{"components/MusicComponent.html":{}}}],["res.ok",{"_index":2639,"title":{},"body":{"components/MusicComponent.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1153,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":1915,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["reset",{"_index":1206,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["resetting",{"_index":1419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":1417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resize",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve(serverdistfolder",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":1993,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":336,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":1443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":1386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":1448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":1370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":1369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":1378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsehtml",{"_index":343,"title":{},"body":{"components/AiComponent.html":{}}}],["responsetype",{"_index":1440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsibilities",{"_index":1121,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":644,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["responsive",{"_index":2750,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restart",{"_index":2538,"title":{},"body":{"components/MusicComponent.html":{}}}],["restartsong",{"_index":2498,"title":{},"body":{"components/MusicComponent.html":{}}}],["restricts",{"_index":2931,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["result",{"_index":2305,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":322,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":2605,"title":{},"body":{"components/MusicComponent.html":{}}}],["results.map(exp",{"_index":1976,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["results[0",{"_index":2607,"title":{},"body":{"components/MusicComponent.html":{}}}],["ret",{"_index":2314,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["retrieve",{"_index":746,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":1498,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["retrieves",{"_index":661,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":2096,"title":{},"body":{"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["returned",{"_index":362,"title":{},"body":{"components/AiComponent.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["reusable",{"_index":1919,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"components/ToastComponent.html":{}}}],["rgb",{"_index":1846,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["rgb(${math.max(r",{"_index":1887,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["rights",{"_index":1914,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["roboto",{"_index":1240,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":1020,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":266,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":634,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["roundedselection",{"_index":3057,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["rounds",{"_index":668,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["route",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":558,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1696,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rows",{"_index":1646,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["run",{"_index":2766,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":2695,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["rxjs",{"_index":1029,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavn",{"_index":1032,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1030,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safe",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["safehtml",{"_index":363,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1081,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["same",{"_index":891,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["sample",{"_index":2359,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":2360,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sanitized",{"_index":337,"title":{},"body":{"components/AiComponent.html":{}}}],["sanitizer",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["sans",{"_index":1241,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sat",{"_index":799,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["save",{"_index":696,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["save_delay",{"_index":1348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveddata",{"_index":2866,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["saveddata.map((item",{"_index":2877,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings",{"_index":2886,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings[key",{"_index":2889,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedtheme",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["savetemplate(content",{"_index":1405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":1346,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":1201,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scales",{"_index":2760,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schedule",{"_index":1400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":1396,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":402,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["schemakeys",{"_index":2874,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemakeys.foreach((key",{"_index":2879,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemas",{"_index":2837,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["screen",{"_index":2036,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["screens",{"_index":2982,"title":{},"body":{"components/SettingItemComponent.html":{},"index.html":{}}}],["screenshots",{"_index":3435,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":3247,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollable",{"_index":962,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":3058,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":3053,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":3080,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seamless",{"_index":2472,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["search",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["searchbuttoncomponent",{"_index":307,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":1892,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1743,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searches",{"_index":1051,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["searching",{"_index":1711,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searchinput",{"_index":2923,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchsong",{"_index":2499,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsongs",{"_index":2819,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1057,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sec",{"_index":2617,"title":{},"body":{"components/MusicComponent.html":{}}}],["second",{"_index":2212,"title":{},"body":{"components/GraphsComponent.html":{}}}],["secondary",{"_index":1331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":1332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seconds",{"_index":2513,"title":{},"body":{"components/MusicComponent.html":{}}}],["seconds\\n",{"_index":1087,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sections",{"_index":2251,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":428,"title":{"injectables/SectionService.html":{}},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionservice.currentsection",{"_index":2261,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionsource",{"_index":2967,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":3536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":2529,"title":{},"body":{"components/MusicComponent.html":{},"index.html":{}}}],["seeking",{"_index":2481,"title":{},"body":{"components/MusicComponent.html":{}}}],["seeks",{"_index":2527,"title":{},"body":{"components/MusicComponent.html":{}}}],["seektime",{"_index":2619,"title":{},"body":{"components/MusicComponent.html":{}}}],["segoe",{"_index":1239,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["selectcategory",{"_index":943,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":977,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1768,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1816,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1817,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1818,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1822,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1820,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1821,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1819,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedfile",{"_index":1344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":1225,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":1226,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":1392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selecting",{"_index":934,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":346,"title":{},"body":{"components/AiComponent.html":{}}}],["sender",{"_index":1023,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sendmessage(message",{"_index":2033,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sends",{"_index":332,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2778,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":2008,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":1871,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1093,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["september",{"_index":778,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["series",{"_index":2131,"title":{},"body":{"components/GraphsComponent.html":{}}}],["serif",{"_index":1242,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":1435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":3278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":3315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":3548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":3282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["service/backend",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["service/config/config.service",{"_index":1911,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{}}}],["service/gemini",{"_index":373,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":1575,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/category.service",{"_index":985,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/storage.service",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/saavan",{"_index":2563,"title":{},"body":{"components/MusicComponent.html":{}}}],["service/section/section.service",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["services",{"_index":352,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["session",{"_index":1197,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":1198,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":1199,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["seteditorcontent",{"_index":3031,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":3039,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setinterval",{"_index":2583,"title":{},"body":{"components/MusicComponent.html":{}}}],["setonchangecallback",{"_index":3032,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":3041,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["sets",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["setsection",{"_index":2966,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":2968,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":311,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":310,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["settings'},{'name",{"_index":314,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":2381,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":2405,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":3154,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":2154,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/global",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/toast/toast.component",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":3379,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":1997,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shorter",{"_index":360,"title":{},"body":{"components/AiComponent.html":{}}}],["shouldbackup",{"_index":2795,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/SettingItemComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["show(message",{"_index":3171,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":2048,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["show/hide",{"_index":1049,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["showaibutton",{"_index":2255,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":2662,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showconfigpanel",{"_index":1345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["showdownloaddatamodal",{"_index":1533,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["showing",{"_index":788,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["showinstallbutton",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":736,"title":{},"body":{"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showplayermodal",{"_index":2487,"title":{},"body":{"components/MusicComponent.html":{}}}],["shows",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{}}}],["shows/hides",{"_index":2248,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showtoast",{"_index":3128,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":3135,"title":{},"body":{"components/ToastComponent.html":{}}}],["side",{"_index":1436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":1285,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["sidebar'},{'name",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":2991,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2992,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":315,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signal",{"_index":2560,"title":{},"body":{"components/MusicComponent.html":{}}}],["signal(0",{"_index":2551,"title":{},"body":{"components/MusicComponent.html":{}}}],["signature",{"_index":2363,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["silently",{"_index":2767,"title":{},"body":{"injectables/PostApiService.html":{}}}],["similar",{"_index":1127,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["simple",{"_index":2318,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["simplechanges",{"_index":2112,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["single",{"_index":1015,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["size",{"_index":1259,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skipped",{"_index":2814,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2817,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["sm",{"_index":1338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["small",{"_index":3417,"title":{},"body":{"index.html":{}}}],["smart",{"_index":1099,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":3353,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":1134,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":2959,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":2147,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sole",{"_index":1982,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["solid",{"_index":1255,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["something",{"_index":1126,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["song",{"_index":1033,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song'}.mp3",{"_index":2644,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.artists.primary[0]?.name",{"_index":2647,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.downloadurl?.find((d",{"_index":2570,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.name",{"_index":2643,"title":{},"body":{"components/MusicComponent.html":{}}}],["song?.url",{"_index":2637,"title":{},"body":{"components/MusicComponent.html":{}}}],["songdetails",{"_index":2596,"title":{},"body":{"components/MusicComponent.html":{}}}],["songname",{"_index":1144,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1052,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song’s",{"_index":1136,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sort",{"_index":880,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["sort((a",{"_index":905,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":3390,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":887,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":1244,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":1295,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specific",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":3352,"title":{},"body":{"index.html":{}}}],["specified",{"_index":757,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["specify",{"_index":3250,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spending",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["spent",{"_index":3395,"title":{},"body":{"index.html":{}}}],["spent/day",{"_index":3401,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.ts",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:121",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:174",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:185",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:193",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:203",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":3276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":3279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":3281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":3283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":932,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/form",{"_index":1917,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":2068,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":2152,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":2150,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":2156,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":2092,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":2157,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":2115,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":2113,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":2117,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":2101,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":2108,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":2104,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":2099,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":2097,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":2110,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":2130,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":2138,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":2142,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":2128,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":2134,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":2140,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":2145,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/install",{"_index":2456,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1752,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":2671,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":2915,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/settings",{"_index":1519,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":324,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:27",{"_index":366,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:30",{"_index":351,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:48",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":3293,"title":{},"body":{"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":709,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:141",{"_index":749,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:156",{"_index":767,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:171",{"_index":762,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":785,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:27",{"_index":783,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:30",{"_index":775,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":791,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:36",{"_index":773,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:39",{"_index":789,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:42",{"_index":787,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:45",{"_index":786,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:48",{"_index":780,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:51",{"_index":745,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:61",{"_index":792,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:67",{"_index":765,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:76",{"_index":756,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:94",{"_index":769,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":2365,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":2395,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":2401,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":2404,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":2390,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":2393,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":2384,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":2409,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":2415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":2416,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":2417,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":2408,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":2412,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":2406,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":2397,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":2396,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":3297,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":2477,"title":{},"body":{"components/MusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts:101",{"_index":2535,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:125",{"_index":2531,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:174",{"_index":2512,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:185",{"_index":2526,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:199",{"_index":2542,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:218",{"_index":2523,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:228",{"_index":2540,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:237",{"_index":2520,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:242",{"_index":2509,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:264",{"_index":2559,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:267",{"_index":2533,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:272",{"_index":2506,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:277",{"_index":2537,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:28",{"_index":2558,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:287",{"_index":2521,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:31",{"_index":2561,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:34",{"_index":2549,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:37",{"_index":2550,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:40",{"_index":2557,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:43",{"_index":2552,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:46",{"_index":2553,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:49",{"_index":2547,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:52",{"_index":2554,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:55",{"_index":2503,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:76",{"_index":2539,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:91",{"_index":2516,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":3301,"title":{},"body":{"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":2361,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/service/backend",{"_index":2764,"title":{},"body":{"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts",{"_index":1470,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts:19",{"_index":1500,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:24",{"_index":1497,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:29",{"_index":1510,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:36",{"_index":1505,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:43",{"_index":1480,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:61",{"_index":1481,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:84",{"_index":1494,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:93",{"_index":1495,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/gemini",{"_index":1939,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":2054,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":627,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:109",{"_index":708,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":702,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:43",{"_index":706,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:52",{"_index":705,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:63",{"_index":703,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:79",{"_index":707,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:97",{"_index":704,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":859,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:103",{"_index":1004,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:119",{"_index":1009,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:132",{"_index":1005,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:152",{"_index":1010,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:41",{"_index":1003,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:60",{"_index":1008,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:70",{"_index":1007,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:92",{"_index":1006,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":3305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1704,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:119",{"_index":1894,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:133",{"_index":1901,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:147",{"_index":1897,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:157",{"_index":1895,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:171",{"_index":1900,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:55",{"_index":1893,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:69",{"_index":1899,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:78",{"_index":1898,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:89",{"_index":1896,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2827,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:114",{"_index":3014,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:130",{"_index":3019,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:162",{"_index":3017,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:185",{"_index":3006,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:194",{"_index":3005,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:203",{"_index":3011,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:212",{"_index":3007,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:217",{"_index":3009,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:220",{"_index":3010,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:223",{"_index":3008,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:226",{"_index":3012,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:233",{"_index":3021,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:242",{"_index":3020,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:251",{"_index":3022,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:29",{"_index":3024,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:32",{"_index":3025,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:35",{"_index":3023,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:38",{"_index":3004,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:52",{"_index":3013,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:59",{"_index":3015,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:74",{"_index":3016,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:9",{"_index":2831,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:92",{"_index":3018,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":3177,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:102",{"_index":3214,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:112",{"_index":3213,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:122",{"_index":3217,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:53",{"_index":3211,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:68",{"_index":3215,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:77",{"_index":3212,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:88",{"_index":3216,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1012,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":2962,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:21",{"_index":2975,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:27",{"_index":2971,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:34",{"_index":2969,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":3165,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:19",{"_index":3174,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:27",{"_index":3170,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:39",{"_index":3172,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1902,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:22",{"_index":1910,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":2034,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":2242,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":2657,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:25",{"_index":2663,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:48",{"_index":2666,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2986,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:25",{"_index":2994,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:48",{"_index":2995,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":3123,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:17",{"_index":3130,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:30",{"_index":3131,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:41",{"_index":3136,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":3309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":3310,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":3311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":3365,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":638,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["starty",{"_index":1653,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["state",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["statements",{"_index":3267,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FooterComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["status",{"_index":1257,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["stays",{"_index":3426,"title":{},"body":{"index.html":{}}}],["stops",{"_index":3344,"title":{},"body":{"index.html":{}}}],["storage",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storage.service",{"_index":643,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2861,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["storageservice",{"_index":429,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["storageservice.isbrowser",{"_index":2864,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["store",{"_index":929,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["stores",{"_index":1511,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/SearchButtonComponent.html":{}}}],["stream",{"_index":2972,"title":{},"body":{"injectables/SectionService.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["string(date.getmonth",{"_index":2442,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":816,"title":{},"body":{"components/CalendarComponent.html":{}}}],["strings",{"_index":3064,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["stroke",{"_index":2082,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1576,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["structured",{"_index":1955,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["style",{"_index":1065,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":3244,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":1828,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["sub",{"_index":1639,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["submitedit",{"_index":1765,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["subscribe",{"_index":2965,"title":{},"body":{"injectables/SectionService.html":{}}}],["subscribe((event",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["success:hover",{"_index":1335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":2783,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["such",{"_index":747,"title":{},"body":{"components/CalendarComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["suffix",{"_index":1859,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["suggest",{"_index":1103,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":1073,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested/day",{"_index":3402,"title":{},"body":{"index.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/MusicComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suggestnextsong",{"_index":2820,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1075,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestontriggercharacters",{"_index":3068,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suggests",{"_index":1061,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suitable",{"_index":1066,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":831,"title":{},"body":{"components/CalendarComponent.html":{}}}],["summary",{"_index":3397,"title":{},"body":{"index.html":{}}}],["sun",{"_index":793,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["support",{"_index":3436,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1710,"title":{},"body":{"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{}}}],["sure",{"_index":1421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surface",{"_index":829,"title":{},"body":{"components/CalendarComponent.html":{}}}],["surroundingpairs",{"_index":3109,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":3437,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2120,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["switches",{"_index":2118,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":2089,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":2116,"title":{},"body":{"components/GraphsComponent.html":{}}}],["swupdate",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["symbol",{"_index":781,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["sync",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncbudgetwithschema",{"_index":2858,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synccategorieswithschema",{"_index":2843,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced",{"_index":2878,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced[key",{"_index":2880,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings",{"_index":2887,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings['app_version",{"_index":2890,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings[key",{"_index":2888,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncexpenseswithschema",{"_index":2846,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncing",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuser",{"_index":2999,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncuser(storagekey",{"_index":2885,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuserwithschema",{"_index":2849,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncwithschema",{"_index":3000,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncwithschema(storagekey",{"_index":2863,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syntax",{"_index":2357,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":1237,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":1977,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["t.id",{"_index":2336,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":3099,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":1222,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["tabcompletion",{"_index":3070,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":2334,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":872,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3316,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3098,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tailored",{"_index":3351,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":961,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2786,"title":{},"body":{"injectables/PostApiService.html":{}}}],["taken",{"_index":1501,"title":{},"body":{"injectables/ConfigService.html":{}}}],["tap",{"_index":3388,"title":{},"body":{"index.html":{}}}],["target",{"_index":995,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{}}}],["teal",{"_index":3524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":3364,"title":{},"body":{"index.html":{}}}],["technology",{"_index":3366,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{"interfaces/Template.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":1223,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":1224,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":2294,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":1188,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":3111,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":1207,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":3240,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["term",{"_index":1054,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["text",{"_index":367,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["textcolor",{"_index":1668,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["that's",{"_index":2010,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["theme_mode",{"_index":2855,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["then((content",{"_index":3238,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["thinking",{"_index":390,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":2998,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.appname",{"_index":1517,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.appversion",{"_index":1912,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["this.audio",{"_index":2573,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.currenttime",{"_index":2621,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.onended",{"_index":2585,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.pause",{"_index":2577,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.paused",{"_index":2575,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.play",{"_index":2576,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.src",{"_index":2578,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.budgetkey",{"_index":2904,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":822,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":807,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":823,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":818,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2739,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":988,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":991,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":2714,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2734,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":2716,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2868,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":2715,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":2727,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":998,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":999,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryselected.emit(category",{"_index":994,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":2712,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":989,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":990,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2740,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2741,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":2193,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":2191,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.close.emit",{"_index":1938,"title":{},"body":{"components/FormModelComponent.html":{}}}],["this.closedownloaddatamodal",{"_index":1610,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.closemodal.emit",{"_index":1814,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.config",{"_index":1385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.getapiurl",{"_index":2800,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.configservice.getappname",{"_index":2470,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.configservice.getversion",{"_index":1913,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.confirmanddownload",{"_index":1588,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.createsession",{"_index":1358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currency",{"_index":802,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate",{"_index":2422,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":2196,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":2169,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":2170,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":2425,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":2427,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":2426,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":2429,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":805,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentsong",{"_index":2579,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentsong?.url",{"_index":2574,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentyear",{"_index":806,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":2414,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.deferredprompt",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.prompt",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.userchoice.then((choiceresult",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1815,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1512,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.downloadblob(content",{"_index":3239,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.downloaddataform",{"_index":1584,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.invalid",{"_index":1586,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markallastouched",{"_index":1587,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markaspristine",{"_index":1630,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markasuntouched",{"_index":1631,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.reset",{"_index":1629,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.value",{"_index":1589,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.duration.set(song.duration",{"_index":2580,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1812,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1796,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1805,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1808,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1811,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editor",{"_index":3048,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":3110,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":3072,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":3079,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":1388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":1394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":1390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":2902,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":2713,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2736,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":2725,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseselected.emit(expense",{"_index":1863,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":836,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":1974,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.exporttoexcel(filteredexpensedata",{"_index":1615,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.exporttopdf(filteredexpensedata",{"_index":1613,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["this.filteredlocationsuggestions",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":2433,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":2437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":1970,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generatereadme",{"_index":3234,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.generateuserid",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":3199,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":673,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getall().find(item",{"_index":1741,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":3077,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.getlast30daysexpenses",{"_index":1968,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getsongurl(firstsong",{"_index":2609,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2801,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":2956,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":2955,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":2065,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":2067,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":2066,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1060,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":2051,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":1966,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1058,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1077,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.handlebarsinstance",{"_index":2297,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":2343,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":2303,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":2313,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":2338,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":2332,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":2326,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":2316,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":2311,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.history",{"_index":1150,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1145,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1059,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":1384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":1393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":1376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":1367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":1408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":1439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":1406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(url",{"_index":2802,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1795,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.initializeeditor",{"_index":1361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":2296,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.installapp.emit",{"_index":2471,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.interval",{"_index":2582,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isappupdated",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isbrowser",{"_index":665,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":993,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.iscurrentsongliked",{"_index":2589,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isdarkmode",{"_index":2711,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.iseditopen",{"_index":1806,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.isexpenseroute",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":2277,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismusicroute",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isopen",{"_index":2948,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isvisible",{"_index":2053,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.lastsaved",{"_index":1403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.liveapiurl",{"_index":1514,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.loadcategories",{"_index":987,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":2161,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":2721,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":2166,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmonthdata",{"_index":2719,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":2165,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsessionconfig",{"_index":1360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":1359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":2720,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":2167,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.localapiurl",{"_index":1513,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.locationsuggestions",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":2052,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":387,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":837,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":838,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":842,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onchangecallback",{"_index":3073,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":3074,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onsongfinished",{"_index":2586,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.playsong(newurl",{"_index":2610,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["this.previewframe.nativeelement.src",{"_index":1416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":1415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.progress.set(0",{"_index":2613,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(seektime",{"_index":2622,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(this.audio.currenttime",{"_index":2584,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query",{"_index":2952,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":2958,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim",{"_index":2567,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query.trim().length",{"_index":2957,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.registerhandlebarslanguage",{"_index":3076,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":2301,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":804,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2729,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.router.events",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["this.saavnservice.searchsongs(`${songname",{"_index":2602,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.searchsongs(q).subscribe((res",{"_index":2568,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.suggestnextsong(transformeddata",{"_index":2590,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":386,"title":{},"body":{"components/AiComponent.html":{}}}],["this.save_delay",{"_index":1404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":1402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":1364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":1399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":1391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.search.emit(this.query",{"_index":2953,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":2954,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":2949,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":2280,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":2970,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":2978,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1810,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1807,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1797,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1798,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1799,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1804,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1803,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1801,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1802,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1800,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedfile",{"_index":1381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":1382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":1353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":1450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showaibutton",{"_index":2276,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":2669,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showconfigpanel",{"_index":1413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showdownloaddatamodal",{"_index":1632,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.showinstallbutton",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.showlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":843,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showplayermodal",{"_index":2646,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.songs.set(res.data.results",{"_index":2569,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":666,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":897,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":896,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getuser",{"_index":2818,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.syncbudgetwithschema",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.synccategorieswithschema",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncexpenseswithschema",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncuserwithschema",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.updatebudgets(budgets",{"_index":698,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["this.storageservice.updatecategories(categories",{"_index":931,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.storageservice.updateuser(user",{"_index":3208,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.syncuser(this.userkey",{"_index":2857,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.budgetkey",{"_index":2860,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.categorykey",{"_index":2845,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.expensekey",{"_index":2848,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.templates",{"_index":1377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":1380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.theme.mode",{"_index":2160,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":2190,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":3175,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":3176,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":3139,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["this.toastservice.show('error",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('excel",{"_index":1616,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('expense",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('failed",{"_index":1618,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('json",{"_index":1611,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('pdf",{"_index":1614,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.today",{"_index":1582,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toggleedit",{"_index":1813,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":2184,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":835,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.transformsongdata(this.currentsong",{"_index":2588,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.triggerdownload(jsondata",{"_index":1609,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.userinput.trim",{"_index":377,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":2906,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('app_version",{"_index":2808,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('currency",{"_index":803,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2792,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('is_app_updated",{"_index":2809,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.update('last_backup",{"_index":2810,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":1518,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.viewtype",{"_index":2164,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":2423,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":2424,"title":{},"body":{"components/HomeComponent.html":{}}}],["though",{"_index":3420,"title":{},"body":{"index.html":{}}}],["through",{"_index":3381,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["thu",{"_index":797,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["ticks",{"_index":2761,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["timeamountmap",{"_index":2194,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":2218,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":2208,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":2215,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeout",{"_index":1398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["times",{"_index":850,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":2217,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":2219,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["timestamp}.${extension",{"_index":1624,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.pdf",{"_index":1687,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.xlsx",{"_index":1701,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestr",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["tips",{"_index":3257,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":777,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["titlecase",{"_index":2445,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1749,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["toast.classname",{"_index":3151,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":3127,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":3126,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":3161,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":3164,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.service",{"_index":2790,"title":{},"body":{"injectables/PostApiService.html":{}}}],["toastcomponent",{"_index":319,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":3140,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":3162,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":3143,"title":{},"body":{"components/ToastComponent.html":{}}}],["toasts",{"_index":3142,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["todate",{"_index":632,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["todate.toisostring",{"_index":1975,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":808,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["todaysexpenses",{"_index":2197,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":2209,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":2199,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":2195,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["today’s",{"_index":719,"title":{},"body":{"components/CalendarComponent.html":{}}}],["todo",{"_index":1425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":1212,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":944,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleconfigpanel",{"_index":1412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleedit",{"_index":1766,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglelike",{"_index":2500,"title":{},"body":{"components/MusicComponent.html":{}}}],["togglemenu",{"_index":2258,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":980,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":2925,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["token",{"_index":3090,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":3089,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tomato",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":2003,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":2123,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":2083,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":1284,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":1368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":721,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{}}}],["totalamount",{"_index":2175,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalexpenses",{"_index":737,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":3415,"title":{},"body":{"index.html":{}}}],["touched",{"_index":1548,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trackbyname(index",{"_index":1467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tracker",{"_index":2670,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{}}}],["tracks",{"_index":2274,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["transform",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transformed",{"_index":2545,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformeddata",{"_index":2587,"title":{},"body":{"components/MusicComponent.html":{}}}],["transforms",{"_index":2543,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata",{"_index":2501,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata(data",{"_index":2541,"title":{},"body":{"components/MusicComponent.html":{}}}],["transition",{"_index":1272,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["translatey(0",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":2319,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":2321,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":2324,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":1324,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["travel",{"_index":3378,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":1989,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["trigger",{"_index":1455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["triggerdownload",{"_index":1540,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["triggerdownload(content",{"_index":1559,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggered",{"_index":2466,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["triggering",{"_index":1546,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["trim",{"_index":2595,"title":{},"body":{"components/MusicComponent.html":{}}}],["trimmedinput",{"_index":376,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":378,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["ts",{"_index":3083,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":3252,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["tslib",{"_index":3337,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":795,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["two",{"_index":890,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeclasses",{"_index":3145,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":3158,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":3157,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":658,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typeparam",{"_index":3203,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":3084,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["typically",{"_index":1935,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/ToastService.html":{}}}],["typing",{"_index":3392,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1050,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["ui/ux",{"_index":3350,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":854,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":659,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["undone",{"_index":1424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unique",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["universal",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":2648,"title":{},"body":{"components/MusicComponent.html":{}}}],["unless",{"_index":2310,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unrelated",{"_index":2000,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":3409,"title":{},"body":{"index.html":{}}}],["up",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":687,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":913,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1738,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":3197,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateallbudgets",{"_index":700,"title":{},"body":{"injectables/BudgetService.html":{}}}],["updateallbudgets(budgets",{"_index":697,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["updateallcategories",{"_index":1002,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateallcategories(categories",{"_index":930,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["updatebudgets",{"_index":3001,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatebudgets(budgets",{"_index":2910,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatecategories",{"_index":3002,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatecategories(categories",{"_index":2907,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateconfig",{"_index":1407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2876,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatedexpense",{"_index":1809,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":1969,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":3003,"title":{},"body":{"injectables/StorageService.html":{}}}],["updateuser(user",{"_index":2913,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateuserdata",{"_index":3210,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdata(user",{"_index":3207,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":1411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["upi",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":3407,"title":{},"body":{"index.html":{}}}],["upon",{"_index":3369,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1293,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["url.createobjecturl(blob",{"_index":2642,"title":{},"body":{"components/MusicComponent.html":{}}}],["url.createobjecturl(zipblob",{"_index":1456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(link.href",{"_index":2645,"title":{},"body":{"components/MusicComponent.html":{}}}],["url.revokeobjecturl(url",{"_index":1463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.startswith('/music",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["urls",{"_index":2556,"title":{},"body":{"components/MusicComponent.html":{}}}],["usage",{"_index":3248,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["usd",{"_index":3183,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1135,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":1107,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.service",{"_index":876,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2779,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":864,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_password",{"_index":2854,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":1577,"title":{"interfaces/UserData.html":{}},"body":{"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2803,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":344,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2842,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userquery",{"_index":1958,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":3347,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":2850,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":416,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":2159,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":1959,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uses",{"_index":1062,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":327,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["utilities",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":1825,"title":{},"body":{"components/ExpenseListComponent.html":{},"index.html":{}}}],["val?.tolowercase().trim",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1791,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["validates",{"_index":1529,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validation",{"_index":1567,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["validators.max(100000000",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(100",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["valign",{"_index":1665,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2330,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["value.split",{"_index":2438,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":2431,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":886,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["value}\\n",{"_index":1088,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":260,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":3269,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3443,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1476,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":3542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":3060,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["via",{"_index":1862,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"index.html":{}}}],["vibe",{"_index":1132,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":2700,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":982,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('editorcontainer",{"_index":1339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":1342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('searchinput",{"_index":2946,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":2674,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["viewtype",{"_index":2091,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":2371,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":2372,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["visible",{"_index":790,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":3263,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visualizes",{"_index":3375,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2011,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":3050,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["v{{appversion",{"_index":1916,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["w",{"_index":3104,"title":{},"body":{"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["w+)(\\s*=\\s",{"_index":3100,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":1422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":916,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["warning)defaults",{"_index":3173,"title":{},"body":{"injectables/ToastService.html":{}}}],["way",{"_index":2835,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":2014,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":2447,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":796,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["weekday",{"_index":800,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":738,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekly",{"_index":3181,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":1265,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["whenever",{"_index":2930,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["white",{"_index":1308,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["whole",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1286,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('beforeinstallprompt",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["window.innerwidth",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["window.localstorage",{"_index":660,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window.location.href.includes(\"exwise",{"_index":1516,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.location.href.includes(\"localhost",{"_index":1515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.settimeout(async",{"_index":1401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1620,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1628,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window:resize",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize(event",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["wise",{"_index":3374,"title":{},"body":{"index.html":{}}}],["wisely",{"_index":3342,"title":{},"body":{"index.html":{}}}],["within",{"_index":1527,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{}}}],["without",{"_index":670,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["wordbasedsuggestions",{"_index":3071,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":3055,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["workbook",{"_index":1689,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["worker",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":3421,"title":{},"body":{"index.html":{}}}],["worksheet",{"_index":1698,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["wrap",{"_index":2344,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":2348,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wraps",{"_index":1683,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":2135,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xlsx",{"_index":1564,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["xlsx.utils.aoa_to_sheet(aoa",{"_index":1699,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_append_sheet(workbook",{"_index":1700,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_new",{"_index":1690,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.writefile(workbook",{"_index":1702,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xs",{"_index":3152,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1288,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["year",{"_index":770,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["yearly",{"_index":2100,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["years",{"_index":3389,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":3148,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1651,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["yyyy",{"_index":752,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":2452,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["zip",{"_index":1191,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":3235,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":3231,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":3237,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":1444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":1190,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":1356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":3340,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2124,"title":{},"body":{"components/GraphsComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0), Validators.max(100000000)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n\n                \n                    Amount cannot exceed 100,000,000\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount cannot exceed 100,000,000                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for AI interaction using Gemini API.\nFeatures:\n\nAccepts user input.\nSends input to Gemini API for processing.\nConverts AI Markdown response to sanitized HTML for display.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor to inject services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles AI requests.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular sanitizer for safe HTML rendering.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends the user input to the Gemini API.\n\nIgnores input shorter than 2 characters.\nConverts returned Markdown to sanitized HTML.\n\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:30\n                        \n                    \n\n            \n                \n                    AI response rendered as sanitized HTML\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:27\n                        \n                    \n\n            \n                \n                    User input from the text box\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n/**\n * Component for AI interaction using Gemini API.\n * \n * Features:\n * - Accepts user input.\n * - Sends input to Gemini API for processing.\n * - Converts AI Markdown response to sanitized HTML for display.\n */\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n\n  /** User input from the text box */\n  userInput = '';\n\n  /** AI response rendered as sanitized HTML */\n  responseHtml: SafeHtml | null = null;\n\n  /**\n   * Constructor to inject services.\n   * \n   * @param geminiApi Service that handles AI requests.\n   * @param sanitizer Angular sanitizer for safe HTML rendering.\n   */\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Sends the user input to the Gemini API.\n   * - Ignores input shorter than 2 characters.\n   * - Converts returned Markdown to sanitized HTML.\n   */\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                                GlobalLoaderComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                CalendarComponent\n                                AiComponent\n                                MusicComponent\n                                InstallAppPopupComponentComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                deferredPrompt\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMobile\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                showInstallButton\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                installApp\n                            \n                            \n                                isAppUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, sectionService: SectionService, storageService: StorageService, router: Router, postApiService: PostApiService, toastService: ToastService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:75\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Local storage schema sync service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router to track route changes\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying toast notifications\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installApp\n                        \n                    \n                \n            \n            \n                \ninstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Triggers the PWA installation prompt if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppUpdated\n                        \n                    \n                \n            \n            \n                \nisAppUpdated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Checks if the application is updated.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the app is updated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:50\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deferredPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n            \n                \n                     PWA installation prompt event\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:60\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:55\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInstallButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:75\n                        \n                    \n\n            \n                \n                     Flag to control the display of the installation prompt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:92\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { ToastComponent } from './shared/toast/toast.component';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { AddExpenseComponent } from './features/add-expense/add-expense.component';\nimport { SettingsComponent } from './features/settings/settings.component';\nimport { ListExpensesComponent } from './features/list-expenses/list-expenses.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CalendarComponent } from './features/calendar/calendar.component';\nimport { BudgetComponent } from './features/budget/budget.component';\nimport { AiComponent } from './features/ai/ai.component';\nimport { MusicComponent } from './features/music/music.component';\nimport { InstallAppPopupComponentComponent } from './component/install-app-popup-component/install-app-popup-component.component';\n\nimport { StorageService } from './service/localStorage/storage.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { SectionService } from './service/section/section.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\nimport { ToastService } from './service/toast/toast.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent,\n    GlobalLoaderComponent, CommonModule, AddExpenseComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent, CalendarComponent, AiComponent, MusicComponent, InstallAppPopupComponentComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   *  PWA installation prompt event\n   */\n  deferredPrompt: any;\n\n  /**\n   *  Flag to control the display of the installation prompt\n   */\n  showInstallButton = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param sectionService Service to track current section changes\n   * @param storageService Local storage schema sync service\n   * @param router Angular Router to track route changes\n   * @param postApiService Backend API post service\n   * @param swUpdate Service Worker update manager\n   * @param platformId Angular platform ID to check if running in browser\n   * @param toastService Service for displaying toast notifications\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private sectionService: SectionService,\n    private storageService: StorageService,\n    private router: Router,\n    private postApiService: PostApiService,\n    private toastService: ToastService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n\n    // Track route changes to detect page-specific routes\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        const url = event.urlAfterRedirects || event.url;\n        this.isExpenseRoute = url === '/';\n        this.isMusicRoute = url.startsWith('/music');\n      });\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth  {\n        this.loader.hide();\n      }, 500);\n\n      // Sync schema for stored data\n      this.storageService.syncCategoriesWithSchema();\n      this.storageService.syncExpensesWithSchema();\n      this.storageService.syncUserWithSchema();\n      this.storageService.syncBudgetWithSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n\n      // Show update toast if app is not updated\n      if (!this.isAppUpdated()) {\n        setTimeout(() => {\n          this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n        }, 500);\n      }\n\n      // Listen for PWA installation prompt\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.deferredPrompt = event;\n        this.showInstallButton = true;\n      });\n    }\n  }\n\n  /**\n   * Event listener for window resize to update mobile view detection.\n   * @param event Resize event object\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = event.target.innerWidth ('is_app_updated') ?? false;\n  }\n\n  /**\n   * Triggers the PWA installation prompt if available.\n   */\n  installApp() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt();\n      this.deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.showInstallButton = false;\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n        this.deferredPrompt = null;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n    \n      \n      \n        \n          \n          \n            \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n    \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a budget entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget amount (rounded to 2 decimal places).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the budget.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing budgets in local storage.\nProvides methods to add, update, delete, and fetch budgets,\nwhile ensuring data is only accessed in the browser environment.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllBudgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Adds a new budget entry to local storage.\nAutomatically generates a unique budget_id and rounds the amount to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The budget data (without budget_id) to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Deletes a budget entry from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets stored in local storage.\n\n\n                        \n                            Returns :         Budget[]\n\n                        \n                            \n                                A list of all saved budgets, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Updates an existing budget entry in local storage.\nMatches by budget_id and merges with the provided data.\nThe amount is always rounded to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial budget fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllBudgets\n                        \n                    \n                \n            \n            \n                \nupdateAllBudgets(budgets: Budget[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Replaces all budgets in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                            Budget[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that renders a monthly calendar view with expense tracking.\nFeatures:\n\nDisplays days of the current month with previous/next month padding.\nHighlights today’s date.\nCalculates total expenses per month and per day.\nOpens modal to view daily expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of CalendarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve expenses from local storage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user settings such as currency.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Calculates the total expenses for a given date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date (YYYY-MM-DD)\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Changes the calendar month by a specified offset.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of months to change (positive or negative)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Closes the daily expenses modal and clears modal data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that initializes the calendar view\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Opens the modal to show expenses for a specific day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date string (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Renders the calendar for a given year and month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Year to render\n\n                                            \n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Month to render (0-11)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of calendar day objects for rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:30\n                        \n                    \n\n            \n                \n                    Calendar header title (e.g., \"September 2025\")\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:48\n                        \n                    \n\n            \n                \n                    Currency symbol from user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:27\n                        \n                    \n\n            \n                \n                    Current month of the calendar (0-11)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n            \n                \n                    Current year of the calendar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:45\n                        \n                    \n\n            \n                \n                    List of expenses for the selected day in the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:42\n                        \n                    \n\n            \n                \n                    Title of the modal showing daily expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:39\n                        \n                    \n\n            \n                \n                    Whether the daily expense modal is visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n            \n                \n                    Total expenses in the current month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:61\n                        \n                    \n\n            \n                \n                    Service to retrieve user settings such as currency.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                        \n                    \n\n            \n                \n                    Weekday labels\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Component that renders a monthly calendar view with expense tracking.\n *\n * Features:\n * - Displays days of the current month with previous/next month padding.\n * - Highlights today’s date.\n * - Calculates total expenses per month and per day.\n * - Opens modal to view daily expenses.\n */\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\nexport class CalendarComponent implements OnInit {\n\n  /** Current year of the calendar */\n  currentYear = new Date().getFullYear();\n\n  /** Current month of the calendar (0-11) */\n  currentMonth = new Date().getMonth();\n\n  /** Calendar header title (e.g., \"September 2025\") */\n  calendarTitle = '';\n\n  /** Total expenses in the current month */\n  totalExpenses = 0;\n\n  /** Array of calendar day objects for rendering */\n  calendarDays: any[] = [];\n\n  /** Whether the daily expense modal is visible */\n  showModal = false;\n\n  /** Title of the modal showing daily expenses */\n  modalTitle = '';\n\n  /** List of expenses for the selected day in the modal */\n  modalExpenses: any[] = [];\n\n  /** Currency symbol from user settings */\n  currency: string | null;\n\n  /** Weekday labels */\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  /**\n   * Creates an instance of CalendarComponent.\n   *\n   * @param expenseService Service to retrieve expenses from local storage.\n   * @param userService Service to retrieve user settings such as currency.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /** Angular lifecycle hook that initializes the calendar view */\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Changes the calendar month by a specified offset.\n   *\n   * @param offset Number of months to change (positive or negative)\n   */\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Renders the calendar for a given year and month.\n   *\n   * @param year Year to render\n   * @param month Month to render (0-11)\n   */\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Render previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Render current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  /**\n   * Opens the modal to show expenses for a specific day.\n   *\n   * @param dateStr Date string (YYYY-MM-DD)\n   */\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  /**\n   * Closes the daily expenses modal and clears modal data.\n   */\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a category used to group expenses.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category (e.g., hex or CSS color).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of expenses linked to this category.\n(This is a computed field and not part of the stored table.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon representing the category (e.g., from an icon set).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the category is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display name of the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user ID that owns this category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing categories in local storage.\nProvides methods to create, read, update, delete, and sort categories,\nensuring data consistency with associated expenses.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle local storage operations.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user-related values (like user ID).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Adds a new category to local storage.\nGenerates a unique category_id and associates it with the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Category data excluding category_id and user_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Deletes a category from local storage by its ID.\nIf the category does not exist, a warning is logged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from local storage.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                List of all categories, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories sorted by the number of expenses assigned to each.\nIf two categories have the same count, they are sorted alphabetically by name.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                Sorted list of categories with expense counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment\nwith localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Updates an existing category in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial category fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllCategories\n                        \n                    \n                \n            \n            \n                \nupdateAllCategories(categories: Category[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Replaces all categories in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                            Category[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of categories to store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ChatMessage interface\nRepresents a single message exchanged between the user and the model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text content of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role of the message sender (user or model).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appName\n                            \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                            \n                                    Private\n                                    Readonly\n                                liveAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                localAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                            \n                                getAppName\n                            \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/config/config.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL depending on the environment.\n\n\"local\" → http://localhost:8000\n\"live\" → https://exwiseapi.onrender.com\nAny other value → Determines based on current window location.\nIf the URL contains \"localhost\", returns http://localhost:8000.\nIf the URL contains \"exwise\", returns https://exwiseapi.onrender.com.\nDefaults to http://localhost:8000 if none of the above conditions are met.\n\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Returns the application name defined in environment settings.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The application name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:24\n                        \n                    \n\n            \n                \n                    The application name, retrieved from environment settings.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:19\n                        \n                    \n\n            \n                \n                    The current environment setting taken from environment configuration.\nPossible values:\n\n\"local\" → Uses localhost API endpoint.\n\"live\" → Uses production API endpoint.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        liveAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.liveAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:36\n                        \n                    \n\n            \n                \n                    The production (live) API base URL.\nExample: https://exwiseapi.onrender.com\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        localAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.localAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:43\n                        \n                    \n\n            \n                \n                    The local development API base URL.\nExample: http://localhost:8000\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:29\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting taken from environment configuration.\n   * \n   * Possible values:\n   * - `\"local\"` → Uses localhost API endpoint.\n   * - `\"live\"` → Uses production API endpoint.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n\n  /** \n   * The application name, retrieved from environment settings. \n   */\n  private readonly appName: string = environment.appName;\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  private readonly liveAPIUrl: string = environment.liveAPIUrl;\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  private readonly localAPIUrl: string = environment.localAPIUrl;\n\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL depending on the environment.\n   *\n   * - `\"local\"` → `http://localhost:8000`\n   * - `\"live\"` → `https://exwiseapi.onrender.com`\n   * - Any other value → Determines based on current window location.\n   * - If the URL contains `\"localhost\"`, returns `http://localhost:8000`.\n   * - If the URL contains `\"exwise\"`, returns `https://exwiseapi.onrender.com`.\n   * - Defaults to `http://localhost:8000` if none of the above conditions are met.\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return this.localAPIUrl;\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return this.liveAPIUrl;\n    }\n    else {\n      if (window.location.href.includes(\"localhost\")) {\n        return this.localAPIUrl;\n      }\n      else if (window.location.href.includes(\"exwise\")) {\n        return this.liveAPIUrl;\n      }\n      return this.localAPIUrl;\n    }\n  }\n\n  /**\n   * Returns the application name defined in environment settings.\n   *\n   * @returns {string} The application name.\n   */\n  getAppName(): string {\n    return this.appName;\n  }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadComponentComponent.html":{"url":"components/DownloadComponentComponent.html","title":"component - DownloadComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DownloadComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/download-component/download-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for exporting user expenses\ninto JSON, PDF, or Excel formats within a given date range.\nThis component provides a modal dialog with a form\nto select a date range and file type, validates the input,\nand triggers the download of filtered expense data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-component\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            ReactiveFormsModule\n                                FormModelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./download-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                downloadDataForm\n                            \n                            \n                                showDownloadDataModal\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDownloadDataModal\n                            \n                            \n                                confirmAndDownload\n                            \n                            \n                                downloadData\n                            \n                            \n                                    Private\n                                exportToExcel\n                            \n                            \n                                    Private\n                                exportToPDF\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDownloadDataModal\n                            \n                            \n                                    Private\n                                triggerDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, fb: FormBuilder, toastService: ToastService, categoryService: CategoryService, userService: UserService, budgetService: BudgetService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadComponentComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch and filter expenses.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder to build the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch category data.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch user data.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch budget data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDownloadDataModal\n                        \n                    \n                \n            \n            \n                \ncloseDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Closes the download modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmAndDownload\n                        \n                    \n                \n            \n            \n                \nconfirmAndDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Validates date range and triggers the appropriate\nexport function (JSON, PDF, Excel) based on user selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadData\n                        \n                    \n                \n            \n            \n                \ndownloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Validates the form before triggering data download.\nMarks all controls as touched if the form is invalid.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToExcel(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:302\n                        \n                    \n\n\n            \n                \n                        Exports expense data to an Excel file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToPDF\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToPDF(data: any[], fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Exports expense data to a formatted PDF file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date of the report.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date of the report.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the form\nwith default controls and validators.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDownloadDataModal\n                        \n                    \n                \n            \n            \n                \nopenDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Opens the modal and resets the download form\nto its initial state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        triggerDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerDownload(content: string, mimeType: string, extension: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Creates a file blob and triggers the browser to download it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File content to download.\n\n                                            \n                                        \n                                        \n                                                mimeType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    MIME type of the file.\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File extension (json, pdf, xlsx).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadDataForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:56\n                        \n                    \n\n            \n                \n                    Reactive form instance for selecting date range and file type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDownloadDataModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:61\n                        \n                    \n\n            \n                \n                    Controls the visibility of the download data modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                        \n                    \n\n            \n                \n                    Current date in yyyy-MM-dd format,\nused for validation to prevent future dates.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n\n    \n        From Date\n        \n        \n            From Date is required\n        \n\n        To Date\n        \n\n        \n            To Date is required\n        \n\n        File Type\n        \n            JSON\n            PDF\n            EXCEL\n        \n\n        \n            Cancel\n            Download\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                From Date                            From Date is required                To Date                            To Date is required                File Type                    JSON            PDF            EXCEL                            Cancel            Download            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an expense entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense amount\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category color (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category icon (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category ID associated with this expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category name (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the expense in YYYY-MM-DD format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this is extra spending\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional location of the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional note about the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Payment mode used for the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the expense in HH:MM:SS format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal component for displaying and editing expense details.\nFeatures:\n\nShows details of a selected expense.\nSupports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\nEmits events to parent components for closing, deleting, or editing expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseDetailsModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder service for building reactive forms.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Currency symbol to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:30\n                            \n                        \n                \n                    \n                        Whether the edit mode is currently open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:24\n                            \n                        \n                \n                    \n                        The currently selected expense object\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when the modal should be closed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:36\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense should be deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:39\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense has been edited\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Emits the closeModal event to notify parent to close the modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the reactive edit form with default or selected expense values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Updates the form when a new category is selected from the dropdown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Emits the delete event with the selected expense ID\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Submits the edited expense if the form is valid.\nEmits the edit event with the updated expense data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Toggles the edit mode of the modal.\nInitializes the form with current expense values if edit mode is opened.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    Form group for editing the expense\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:42\n                        \n                    \n\n            \n                \n                    Name of the currently selected category for editing\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n/**\n * Modal component for displaying and editing expense details.\n *\n * Features:\n * - Shows details of a selected expense.\n * - Supports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\n * - Emits events to parent components for closing, deleting, or editing expenses.\n */\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n\n  /** The currently selected expense object */\n  @Input() selectedExpense: any;\n\n  /** Currency symbol to display in the modal */\n  @Input() currency: string | null = '';\n\n  /** Whether the edit mode is currently open */\n  @Input() isEditOpen: boolean = false;\n\n  /** Event emitted when the modal should be closed */\n  @Output() closeModal = new EventEmitter();\n\n  /** Event emitted when the selected expense should be deleted */\n  @Output() delete = new EventEmitter();\n\n  /** Event emitted when the selected expense has been edited */\n  @Output() edit = new EventEmitter();\n\n  /** Name of the currently selected category for editing */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Form group for editing the expense */\n  editForm!: FormGroup;\n\n  /**\n   * Creates an instance of ExpenseDetailsModalComponent.\n   *\n   * @param fb FormBuilder service for building reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  /** Angular lifecycle hook called on component initialization */\n  ngOnInit(): void {}\n\n  /**\n   * Initializes the reactive edit form with default or selected expense values.\n   */\n  initForm(): void {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  /**\n   * Updates the form when a new category is selected from the dropdown.\n   *\n   * @param category The selected category object.\n   */\n  onCategorySelected(category: any): void {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  /**\n   * Toggles the edit mode of the modal.\n   * Initializes the form with current expense values if edit mode is opened.\n   */\n  toggleEdit(): void {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  /**\n   * Submits the edited expense if the form is valid.\n   * Emits the `edit` event with the updated expense data.\n   */\n  submitEdit(): void {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  /** Emits the `closeModal` event to notify parent to close the modal */\n  close(): void {\n    this.closeModal.emit();\n  }\n\n  /** Emits the `delete` event with the selected expense ID */\n  onDelete(): void {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        ExpenseListComponent\nDisplays a list of expenses with formatted dates and emits\nevents when an expense is selected. Also provides a utility\nto darken colors for styling purposes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseListComponent.\nInitializes the currency to an empty string.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:28\n                            \n                        \n                \n                    \n                        The currency symbol or code to display with expense amounts.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                            \n                        \n                \n                    \n                        The list of expense objects to display.\nEach expense should contain at least a date field.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when an expense is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Darkens a given HEX color by a percentage.\nConverts the color to RGB and decreases brightness.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HEX color string (e.g., #FF0000).\n\n                                            \n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The percentage (0–1) to darken the color.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The darkened color as an RGB string, or the original color on error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Formats the date of an expense into a human-readable string.\nExample: Mon 1st Mar 2025\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object containing a date field.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string with day, suffix, month, and year.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an expense.\nEmits the selected expense via the expenseSelected output.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object that was selected.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * ExpenseListComponent\n *\n * Displays a list of expenses with formatted dates and emits\n * events when an expense is selected. Also provides a utility\n * to darken colors for styling purposes.\n */\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\nexport class ExpenseListComponent {\n  /**\n   * The list of expense objects to display.\n   * Each expense should contain at least a `date` field.\n   */\n  @Input() expenses: any[] = [];\n\n  /**\n   * The currency symbol or code to display with expense amounts.\n   */\n  @Input() currency: string | null;\n\n  /**\n   * Event emitted when an expense is selected.\n   */\n  @Output() expenseSelected = new EventEmitter();\n\n  /**\n   * Creates an instance of ExpenseListComponent.\n   * Initializes the currency to an empty string.\n   */\n  constructor() {\n    this.currency = '';\n  }\n\n  /**\n   * Handles the selection of an expense.\n   * Emits the selected expense via the `expenseSelected` output.\n   *\n   * @param expense The expense object that was selected.\n   */\n  onSelect(expense: any): void {\n    this.expenseSelected.emit(expense);\n  }\n\n  /**\n   * Formats the date of an expense into a human-readable string.\n   * Example: `Mon 1st Mar 2025`\n   *\n   * @param exp The expense object containing a `date` field.\n   * @returns A formatted date string with day, suffix, month, and year.\n   */\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const months = [\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n\n    const dayName = days[date.getDay()];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n\n    const suffix = (d: number): string => {\n      if (d > 3 && d > 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing expenses stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve expenses.\nAutomatically attaches category metadata to each expense.\nSupports searching expenses by date range.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Adds a new expense to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Expense data excluding expense_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Deletes an expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage with category metadata attached.\n\n\n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of formatted {@link Expense} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Retrieves a single expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                The expense object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Searches expenses within a date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of expenses within the specified date range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Updates an existing expense by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial data to update the expense with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer component that displays application information such as version.\nFeatures:\n\nRetrieves the app version from ConfigService.\nDisplays static footer content alongside dynamic version info.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of FooterComponent.\nRetrieves the current app version from ConfigService and\nstores it in appVersion for display in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing configuration and version info.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the current application version retrieved from ConfigService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Footer component that displays application information such as version.\n *\n * Features:\n * - Retrieves the app version from {@link ConfigService}.\n * - Displays static footer content alongside dynamic version info.\n */\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n  /**\n   * Stores the current application version retrieved from {@link ConfigService}.\n   */\n  appVersion: string = '';\n\n  /**\n   * Creates an instance of FooterComponent.\n   *\n   * Retrieves the current app version from {@link ConfigService} and\n   * stores it in {@link appVersion} for display in the template.\n   *\n   * @param configService Service providing configuration and version info.\n   */\n  constructor(private configService: ConfigService) {\n    this.appVersion = this.configService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormModelComponent.html":{"url":"components/FormModelComponent.html","title":"component - FormModelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FormModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/form-model/form-model.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable modal component for forms.\nThis component displays a modal with a customizable label\nand provides an output event to notify when the modal is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-model\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-model.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-model.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelAlignment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:23\n                            \n                        \n                \n                    \n                        The label text displayed in the form modal.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelAlignment\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"center\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:29\n                            \n                        \n                \n                    \n                        Alignment of the label text: 'left', 'center', or 'right'.\nDefault is 'left'.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:37\n                            \n                        \n                \n                    \n                        Event emitted when the modal is closed.\nThe parent component can listen to this event\nto perform actions such as hiding the modal.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModel\n                        \n                    \n                \n            \n            \n                \ncloseModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/form-model/form-model.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Closes the modal and emits the close event.\nThis method is typically called when the user\nclicks a close button or dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * A reusable modal component for forms.\n * \n * This component displays a modal with a customizable label\n * and provides an output event to notify when the modal is closed.\n */\n@Component({\n  selector: 'app-form-model',\n  imports: [CommonModule],\n  templateUrl: './form-model.component.html',\n  styleUrl: './form-model.component.css'\n})\nexport class FormModelComponent {\n\n  /**\n   * The label text displayed in the form modal.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label: string = '';\n\n  /** Alignment of the label text: 'left', 'center', or 'right'.\n   * \n   * Default is 'left'.\n   */\n  @Input() labelAlignment: 'left' | 'center' | 'right' = 'left';\n\n  /**\n   * Event emitted when the modal is closed.\n   * \n   * The parent component can listen to this event\n   * to perform actions such as hiding the modal.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Closes the modal and emits the `close` event.\n   * \n   * This method is typically called when the user\n   * clicks a close button or dismisses the modal.\n   */\n  closeModel(): void {\n    this.close.emit();\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ label }}\n            \n        \n\n        \n        \n            &times;\n        \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ label }}                                                ×                    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GeminiApiService\nThis service is responsible for communicating with the\nGoogle Gemini API to analyze the user's expense data.\nIt fetches the last 30 days of expenses, generates prompts,\nand retrieves AI-generated insights for the user.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of GeminiApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API requests.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to show/hide global loading indicators.\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch expense data from local storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Generates a structured AI prompt for expense analysis.\nIncludes instructions for the model and the last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s input or question.\n\n                                            \n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of expense objects from the last 30 days.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string prompt ready for Gemini API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Fetches the user's expenses from the last 30 days.\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n\n                        \n                            Returns :     Pick[]\n\n                        \n                            \n                                An array of expense objects with selected fields:\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Sends a prompt to the Gemini API and returns the generated response.\nEnhances the prompt with the user's last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s query or message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A string response from Gemini with analysis or insights.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                        \n                    \n\n            \n                \n                    API URL for the Gemini model including the environment API key.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n/**\n * GeminiApiService\n *\n * This service is responsible for communicating with the\n * Google Gemini API to analyze the user's expense data.\n * It fetches the last 30 days of expenses, generates prompts,\n * and retrieves AI-generated insights for the user.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  /**\n   * API URL for the Gemini model including the environment API key.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of GeminiApiService.\n   *\n   * @param http Angular HttpClient for API requests.\n   * @param globalLoaderService Service to show/hide global loading indicators.\n   * @param expenseService Service to fetch expense data from local storage.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService,\n    private expenseService: ExpenseService\n  ) {}\n\n  /**\n   * Sends a prompt to the Gemini API and returns the generated response.\n   * Enhances the prompt with the user's last 30 days of expenses.\n   *\n   * @param prompt The user’s query or message.\n   * @returns A string response from Gemini with analysis or insights.\n   */\n  async getResponse(prompt: string): Promise {\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  /**\n   * Fetches the user's expenses from the last 30 days.\n   *\n   * @returns An array of expense objects with selected fields:\n   * amount, note, location, date, category_name, payment_mode, isExtraSpending.\n   */\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  /**\n   * Generates a structured AI prompt for expense analysis.\n   * Includes instructions for the model and the last 30 days of expenses.\n   *\n   * @param userQuery The user’s input or question.\n   * @param last15DaysExpenses Array of expense objects from the last 30 days.\n   * @returns A formatted string prompt ready for Gemini API.\n   */\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global loader component to display a full-screen loading indicator.\nFeatures:\n\nShows a loading message with optional custom text.\nCan be controlled globally via GlobalLoaderService.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of GlobalLoaderComponent.\nRegisters this component with the GlobalLoaderService\nto allow global show/hide control.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing the global loader state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional custom message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Loading...'\n                                            \n\n                                            \n                                                    Optional message to display; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates whether the loader is currently visible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                        \n                    \n\n            \n                \n                    Text message displayed on the loader.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Global loader component to display a full-screen loading indicator.\n *\n * Features:\n * - Shows a loading message with optional custom text.\n * - Can be controlled globally via {@link GlobalLoaderService}.\n */\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n\n  /**\n   * Indicates whether the loader is currently visible.\n   */\n  isVisible = false;\n\n  /**\n   * Text message displayed on the loader.\n   */\n  message = '';\n\n  /**\n   * Creates an instance of GlobalLoaderComponent.\n   *\n   * Registers this component with the {@link GlobalLoaderService}\n   * to allow global show/hide control.\n   *\n   * @param globalLoaderService Service for managing the global loader state.\n   */\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  /**\n   * Shows the global loader with an optional custom message.\n   *\n   * @param text Optional message to display; defaults to \"Loading...\".\n   */\n  show(text: string = 'Loading...'): void {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.isVisible = false;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to control the global loading indicator component.\nFeatures:\n\nAllows showing and hiding a global loader with optional custom message.\nConnects with GlobalLoaderComponent to display the loader UI.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Registers the global loader component instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The GlobalLoaderComponent instance to control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                            \n                                                    Optional loading message; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:17\n                        \n                    \n\n            \n                \n                    Reference to the registered global loader component\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n/**\n * Service to control the global loading indicator component.\n *\n * Features:\n * - Allows showing and hiding a global loader with optional custom message.\n * - Connects with {@link GlobalLoaderComponent} to display the loader UI.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  /** Reference to the registered global loader component */\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  /**\n   * Registers the global loader component instance.\n   *\n   * @param component The {@link GlobalLoaderComponent} instance to control.\n   */\n  register(component: GlobalLoaderComponent): void {\n    this.globalLoaderComponent = component;\n  }\n  \n  /**\n   * Shows the global loader with an optional message.\n   *\n   * @param text Optional loading message; defaults to \"Loading...\".\n   */\n  show(text: string = \"Loading...\"): void {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.globalLoaderComponent?.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hamburger menu component for mobile or compact navigation.\nFeatures:\n\nToggles visibility of the menu.\nCloses menu when clicking outside of it.\nShows/hides AI button depending on the current section.\nIntegrates with SectionService to navigate between sections.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of HamburgerMenuComponent.\nSubscribes to SectionService.currentSection$ to manage the\nvisibility of the AI button based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the selected section and closes the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default anchor behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Toggles the hamburger menu open/closed state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Tracks whether the hamburger menu is currently open.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:26\n                        \n                    \n\n            \n                \n                    Determines whether the AI button should be displayed.\nHidden when the current section is 'ai'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Hamburger menu component for mobile or compact navigation.\n *\n * Features:\n * - Toggles visibility of the menu.\n * - Closes menu when clicking outside of it.\n * - Shows/hides AI button depending on the current section.\n * - Integrates with {@link SectionService} to navigate between sections.\n */\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  /**\n   * Determines whether the AI button should be displayed.\n   * Hidden when the current section is 'ai'.\n   */\n  showAIButton = false;\n\n  /**\n   * Tracks whether the hamburger menu is currently open.\n   */\n  isMenuOpen = false;\n\n  /**\n   * Creates an instance of HamburgerMenuComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to manage the\n   * visibility of the AI button based on the current section.\n   *\n   * @param sectionService Service for managing and broadcasting the active section.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n\n  /**\n   * Toggles the hamburger menu open/closed state.\n   */\n  toggleMenu(): void {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  /**\n   * Listens for clicks on the document to close the menu\n   * if the click occurs outside the hamburger menu container.\n   *\n   * @param event The mouse click event.\n   */\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent): void {\n    const clickedInside = event.target instanceof HTMLElement \n      && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  /**\n   * Navigates to the selected section and closes the menu.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default anchor behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstallAppPopupComponentComponent.html":{"url":"components/InstallAppPopupComponentComponent.html","title":"component - InstallAppPopupComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  InstallAppPopupComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that displays a popup prompting the user to install the app as a PWA.\nThis component shows a modal with the app name and an install button when\nshowInstallButton is set to true. It uses the ConfigService to retrieve\nthe application name and emits an event when the user clicks install.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-install-app-popup-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./install-app-popup-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./install-app-popup-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissInstall\n                            \n                            \n                                onClickinstallApp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showInstallButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                installApp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of the install popup component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch configuration values such as the app name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showInstallButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:26\n                            \n                        \n                \n                    \n                        Controls the visibility of the install popup.\nWhen set to true, the popup will be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        installApp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when the user clicks on the \"Install\" button.\nThe parent component can listen to this event to trigger\nthe actual PWA installation flow.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissInstall\n                        \n                    \n                \n            \n            \n                \ndismissInstall()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Dismisses the install popup.\nSets showInstallButton to false, hiding the popup from view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickinstallApp\n                        \n                    \n                \n            \n            \n                \nonClickinstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Handles the click event of the \"Install\" button.\nEmits the installApp event to notify the parent component\nthat the installation process should be triggered.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:32\n                        \n                    \n\n            \n                \n                    The application name fetched from ConfigService.\nDisplayed inside the popup UI.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Component that displays a popup prompting the user to install the app as a PWA.\n * \n * This component shows a modal with the app name and an install button when \n * `showInstallButton` is set to true. It uses the `ConfigService` to retrieve \n * the application name and emits an event when the user clicks install.\n */\n@Component({\n  selector: 'app-install-app-popup-component',\n  imports: [CommonModule],\n  templateUrl: './install-app-popup-component.component.html',\n  styleUrl: './install-app-popup-component.component.css',\n  standalone: true,\n})\nexport class InstallAppPopupComponentComponent {\n\n  /**\n   * Controls the visibility of the install popup.\n   * \n   * When set to true, the popup will be displayed.\n   */\n  @Input() showInstallButton: boolean = false;\n\n  /**\n   * The application name fetched from `ConfigService`.\n   * Displayed inside the popup UI.\n   */\n  appName: string;\n\n  /**\n   * Event emitted when the user clicks on the \"Install\" button.\n   * \n   * The parent component can listen to this event to trigger\n   * the actual PWA installation flow.\n   */\n  @Output() installApp = new EventEmitter();\n\n  /**\n   * Creates an instance of the install popup component.\n   *\n   * @param configService Service to fetch configuration values such as the app name.\n   */\n  constructor(private configService: ConfigService) {\n    this.appName = this.configService.getAppName();\n  }\n\n  /**\n   * Handles the click event of the \"Install\" button.\n   * \n   * Emits the `installApp` event to notify the parent component\n   * that the installation process should be triggered.\n   */\n  onClickinstallApp() {\n    this.installApp.emit();\n  }\n\n  /**\n   * Dismisses the install popup.\n   * \n   * Sets `showInstallButton` to false, hiding the popup from view.\n   */\n  dismissInstall() {\n    this.showInstallButton = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ✕\n\n    \n    Install {{ appName }}\n    \n    \n      Get a seamless experience and offline access by installing this app.\n    \n\n    \n    \n      \n        Install\n      \n      \n        Dismiss\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ✕        Install {{ appName }}              Get a seamless experience and offline access by installing this app.                          Install                    Dismiss            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstallAppPopupComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MusicComponent.html":{"url":"components/MusicComponent.html","title":"component - MusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to search, play, and suggest songs using Saavn API and AI suggestions.\nFeatures:\n\nSearch for songs by query.\nPlay, pause, and track song progress.\nAutomatically suggest next song based on AI suggestion.\nHandles time formatting and seeking within a song.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                FormModelComponent\n                \n            \n\n            \n                styleUrls\n                ./music.component.css\n            \n\n\n\n            \n                templateUrl\n                ./music.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                            \n                                audio\n                            \n                            \n                                currentSong\n                            \n                            \n                                duration\n                            \n                            \n                                interval\n                            \n                            \n                                isBrowser\n                            \n                            \n                                isCurrentSongLiked\n                            \n                            \n                                progress\n                            \n                            \n                                query\n                            \n                            \n                                showPlayerModal\n                            \n                            \n                                songs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePlayerModal\n                            \n                            \n                                    Async\n                                downloadSong\n                            \n                            \n                                formatTime\n                            \n                            \n                                getSongUrl\n                            \n                            \n                                isLiked\n                            \n                            \n                                nextSong\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSeek\n                            \n                            \n                                    Async\n                                onSongFinished\n                            \n                            \n                                openPlayerModal\n                            \n                            \n                                playSong\n                            \n                            \n                                restartSong\n                            \n                            \n                                searchSong\n                            \n                            \n                                toggleLike\n                            \n                            \n                                transformSongData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(saavnService: SaavnService, configService: ConfigService, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/music/music.component.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of MusicComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        saavnService\n                                                  \n                                                        \n                                                                        SaavnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Saavn API.\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve application configuration.\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to detect browser/server environment.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePlayerModal\n                        \n                    \n                \n            \n            \n                \nclosePlayerModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:272\n                        \n                    \n\n\n            \n                \n                        Close the player modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadSong(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Downloads a song\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Formats seconds into MM:SS string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of seconds\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted time string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongUrl\n                        \n                    \n                \n            \n            \n                \ngetSongUrl(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Returns the highest quality 320kbps download URL of a song.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                URL string or empty string if not available\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n            \n                \nisLiked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:237\n                        \n                    \n\n\n            \n                \n                        Checks if a song is liked\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextSong\n                        \n                    \n                \n            \n            \n                \nnextSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Play next song when Next is pressed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:218\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component destruction\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Seeks the audio playback to a specific time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input change event from the seek bar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSongFinished\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSongFinished()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Handles the end of a song. Suggests the next song using AI and automatically plays it.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPlayerModal\n                        \n                    \n                \n            \n            \n                \nopenPlayerModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:267\n                        \n                    \n\n\n            \n                \n                        Open the player modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(url: string, song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Plays or pauses a song. If a new song is selected, plays it from the beginning.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL of the song to play\n\n                                            \n                                        \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restartSong\n                        \n                    \n                \n            \n            \n                \nrestartSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:277\n                        \n                    \n\n\n            \n                \n                        Restart current song when Previous is pressed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSong\n                        \n                    \n                \n            \n            \n                \nsearchSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Searches for songs based on the current query.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLike\n                        \n                    \n                \n            \n            \n                \ntoggleLike()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Toggles the like status of a song\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformSongData\n                        \n                    \n                \n            \n            \n                \ntransformSongData(data: any, isLiked: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:199\n                        \n                    \n\n\n            \n                \n                        Transforms a song object to the expected format for AI suggestion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Original song object\n\n                                            \n                                        \n                                        \n                                                isLiked\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Transformed object with relevant song metadata\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:49\n                        \n                    \n\n            \n                \n                    Current application version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLAudioElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML audio element for playing songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:37\n                        \n                    \n\n            \n                \n                    Currently playing song object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:43\n                        \n                    \n\n            \n                \n                    Total duration of the current song in seconds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:46\n                        \n                    \n\n            \n                \n                    Interval ID for updating song progress\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:52\n                        \n                    \n\n            \n                \n                    Flag to indicate if running in browser environment\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentSongLiked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:55\n                        \n                    \n\n            \n                \n                    Set to store URLs of liked songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:40\n                        \n                    \n\n            \n                \n                    Progress of the current song in seconds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:28\n                        \n                    \n\n            \n                \n                    Current search query for songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlayerModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:264\n                        \n                    \n\n            \n                \n                    Flag to show/hide the player modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:31\n                        \n                    \n\n            \n                \n                    List of songs retrieved from search results\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal, effect, OnDestroy, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SaavnService } from '../../service/saavan-api/saavan.service';\nimport { ConfigService } from '../../service/config/config.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { FormModelComponent } from '../../component/form-model/form-model.component';\n\n/**\n * Component to search, play, and suggest songs using Saavn API and AI suggestions.\n *\n * Features:\n * - Search for songs by query.\n * - Play, pause, and track song progress.\n * - Automatically suggest next song based on AI suggestion.\n * - Handles time formatting and seeking within a song.\n */\n@Component({\n  selector: 'app-music',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FormModelComponent],\n  templateUrl: './music.component.html',\n  styleUrls: ['./music.component.css']\n})\nexport class MusicComponent implements OnDestroy {\n\n  /** Current search query for songs */\n  query = '';\n\n  /** List of songs retrieved from search results */\n  songs = signal([]);\n\n  /** HTML audio element for playing songs */\n  audio: HTMLAudioElement | null = null;\n\n  /** Currently playing song object */\n  currentSong: any = null;\n\n  /** Progress of the current song in seconds */\n  progress = signal(0);\n\n  /** Total duration of the current song in seconds */\n  duration = signal(0);\n\n  /** Interval ID for updating song progress */\n  interval: any = null;\n\n  /** Current application version */\n  appVersion: string;\n\n  /** Flag to indicate if running in browser environment */\n  isBrowser: boolean;\n\n  /** Set to store URLs of liked songs */\n  isCurrentSongLiked: boolean = false;\n\n  /**\n   * Creates an instance of MusicComponent.\n   *\n   * @param saavnService Service to interact with Saavn API.\n   * @param configService Service to retrieve application configuration.\n   * @param platformId Angular platform ID to detect browser/server environment.\n   */\n  constructor(\n    private saavnService: SaavnService,\n    private configService: ConfigService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.appVersion = this.configService.getVersion();\n    this.isBrowser = isPlatformBrowser(this.platformId);\n  }\n\n  /**\n   * Searches for songs based on the current query.\n   */\n  searchSong(): void {\n    const q = this.query.trim();\n    if (q) {\n      this.saavnService.searchSongs(q).subscribe((res) => {\n        this.songs.set(res.data.results || []);\n      });\n    }\n  }\n\n  /**\n   * Returns the highest quality 320kbps download URL of a song.\n   *\n   * @param song Song object\n   * @returns URL string or empty string if not available\n   */\n  getSongUrl(song: any): string {\n    return song.downloadUrl?.find((d: any) => d.quality === '320kbps')?.url || '';\n  }\n\n  /**\n   * Plays or pauses a song. If a new song is selected, plays it from the beginning.\n   *\n   * @param url URL of the song to play\n   * @param song Song object\n   */\n  playSong(url: string, song: any): void {\n    if (!this.isBrowser) return;\n    if (!this.audio) this.audio = new Audio();\n\n    if (this.currentSong?.url === url) {\n      this.audio.paused ? this.audio.play() : this.audio.pause();\n    } else {\n      this.audio.src = url;\n      this.audio.play();\n      this.currentSong = { ...song, url };\n      this.duration.set(song.duration);\n    }\n\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.audio) this.progress.set(this.audio.currentTime);\n    }, 500);\n\n    this.audio.onended = () => this.onSongFinished();\n  }\n\n  /**\n   * Handles the end of a song. Suggests the next song using AI and automatically plays it.\n   */\n  async onSongFinished(): Promise {\n    if (!this.isBrowser) return;\n    try {\n      const transformedData = this.transformSongData(this.currentSong, this.isCurrentSongLiked);\n      const nextSong = await this.saavnService.suggestNextSong(transformedData);\n\n      if (!nextSong || typeof nextSong !== 'string' || nextSong.trim() === '') return;\n\n      let cleanedSong = nextSong.trim()\n        .replace(/^```json/, '').replace(/^```/, '')\n        .replace(/```$/, '').trim();\n\n      let songDetails: { songName: string; artistsName: string };\n      try {\n        songDetails = JSON.parse(cleanedSong);\n      } catch {\n        console.warn('Failed to parse AI response as JSON');\n        return;\n      }\n\n      const { songName, artistsName } = songDetails || {};\n      const mainArtist = artistsName ? artistsName.split(',')[0].trim() : '';\n      if (!songName || !mainArtist) return;\n\n      this.saavnService.searchSongs(`${songName} ${mainArtist}`).subscribe({\n        next: (res) => {\n          const results = res.data?.results || [];\n          if (results.length > 0) {\n            const firstSong = results[0];\n            const newUrl = this.getSongUrl(firstSong);\n            this.playSong(newUrl, firstSong);\n          }\n        },\n        error: (err) => console.error('Error during song search:', err)\n      });\n    } finally {\n      this.currentSong = null;\n      this.progress.set(0);\n      clearInterval(this.interval);\n      this.isCurrentSongLiked = false;\n    }\n  }\n\n  /**\n   * Formats seconds into MM:SS string for display.\n   *\n   * @param seconds Number of seconds\n   * @returns Formatted time string\n   */\n  formatTime(seconds: number): string {\n    const min = Math.floor(seconds / 60);\n    const sec = Math.floor(seconds % 60);\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  }\n\n  /**\n   * Seeks the audio playback to a specific time.\n   *\n   * @param event Input change event from the seek bar\n   */\n  onSeek(event: Event): void {\n    if (!this.isBrowser || !this.audio) return;\n    const target = event.target as HTMLInputElement;\n    const seekTime = Number(target.value);\n    this.audio.currentTime = seekTime;\n    this.progress.set(seekTime);\n  }\n\n  /**\n   * Transforms a song object to the expected format for AI suggestion.\n   *\n   * @param data Original song object\n   * @returns Transformed object with relevant song metadata\n   */\n  transformSongData(data: any, isLiked: boolean): any {\n    return {\n      name: data.name,\n      type: data.type,\n      year: data.year,\n      duration: data.duration,\n      label: data.label,\n      playCount: data.playCount,\n      language: data.language,\n      copyright: data.copyright,\n      album: { name: data.album?.name || '' },\n      artists: {\n        all: (data.artists?.primary || []).map((a: any) => ({ name: a.name }))\n      },\n      isLiked: isLiked\n    };\n  }\n\n  /** Angular lifecycle hook called on component destruction */\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.src = '';\n      this.audio = null;\n    }\n  }\n\n  /** Toggles the like status of a song */\n  toggleLike() {\n    if (this.isCurrentSongLiked) {\n      this.isCurrentSongLiked = false;\n    } else {\n      this.isCurrentSongLiked = true;\n    }\n  }\n\n  /** Checks if a song is liked */\n  isLiked(): boolean {\n    return this.isCurrentSongLiked;\n  }\n\n  /** Downloads a song */\n  async downloadSong(song: any) {\n    if (!song?.url) return;\n\n    try {\n      const res = await fetch(song.url);\n      if (!res.ok) throw new Error('Failed to fetch song');\n\n      const blob = await res.blob(); // Convert response to Blob\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `${song.name || 'song'}.mp3`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(link.href);\n\n    } catch (err) {\n      console.error('Download failed:', err);\n    }\n  }\n\n  /** Flag to show/hide the player modal */\n  showPlayerModal = false;\n\n  /** Open the player modal */\n  openPlayerModal() {\n    this.showPlayerModal = true;\n  }\n\n  /** Close the player modal */\n  closePlayerModal() {\n    this.showPlayerModal = false;\n  }\n\n  /** Restart current song when Previous is pressed */\n  restartSong() {\n    if (this.audio) {\n      this.audio.currentTime = 0;\n      if (this.audio.paused) {\n        this.audio.play();\n      }\n    }\n  }\n\n  /** Play next song when Next is pressed */\n  nextSong() {\n    this.onSongFinished();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Search\n    \n  \n\n  \n  \n    \n      \n\n      \n        \n      \n    \n\n    \n      {{ song.name }}\n      {{ song.artists.primary[0]?.name || 'Unknown Artist' }}\n    \n\n    {{ formatTime(song.duration) }}\n  \n\n\n\n\n\n\n  \n  \n\n  \n  \n    \n      \n        {{ currentSong.name }}\n        \n          {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n        \n      \n\n      \n        \n          {{ formatTime(progress()) }} / {{ formatTime(duration()) }}\n        \n\n        \n        \n          \n        \n\n        \n        \n          \n        \n\n        \n          \n        \n\n      \n    \n\n    \n    \n  \n\n\n\n  © 2025 exwise. All rights reserved. v{{appVersion}}\n\n\n\n\n  \n\n    \n    \n\n    \n    \n      \n        {{ currentSong.name }}\n      \n      \n        {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n      \n    \n\n    \n    \n\n      \n      \n        \n      \n\n      \n      \n        \n        \n          {{ formatTime(progress()) }}\n          {{ formatTime(duration()) }}\n        \n      \n\n      \n      \n        \n      \n    \n\n    \n    \n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./music.component.css\n                \n                /* Optional: Style the bottom bar */\n.fixed {\n  z-index: 50;\n}\n\nimg {\n  object-fit: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search                                                      {{ song.name }}      {{ song.artists.primary[0]?.name || \\'Unknown Artist\\' }}        {{ formatTime(song.duration) }}                            {{ currentSong.name }}                  {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                      {{ formatTime(progress()) }} / {{ formatTime(duration()) }}                                                                                                                            © 2025 exwise. All rights reserved. v{{appVersion}}                                {{ currentSong.name }}                    {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                                                                  {{ formatTime(progress()) }}          {{ formatTime(duration()) }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navbar component that displays the top navigation bar.\nFeatures:\n\nShows a back button when the current section is not 'home'.\nIntegrates with SectionService to track and update the current section.\nIncludes the HamburgerMenuComponent for mobile or compact navigation.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavbarComponent.\nSubscribes to SectionService.currentSection$ to determine\nwhether the back button should be visible based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage and broadcast the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles navigation link clicks by updating the current section\nand preventing default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Flag indicating whether the back button should be displayed.\nTrue when the current section is not 'home'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n/**\n * Navbar component that displays the top navigation bar.\n *\n * Features:\n * - Shows a back button when the current section is not 'home'.\n * - Integrates with {@link SectionService} to track and update the current section.\n * - Includes the {@link HamburgerMenuComponent} for mobile or compact navigation.\n */\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  /**\n   * Flag indicating whether the back button should be displayed.\n   * True when the current section is not 'home'.\n   */\n  showBackButton = false;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to determine\n   * whether the back button should be visible based on the current section.\n   *\n   * @param sectionService Service used to manage and broadcast the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  /**\n   * Handles navigation link clicks by updating the current section\n   * and preventing default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to render a pie/doughnut chart of expenses by category.\nSupports monthly, daily, and yearly views.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject required services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get category data\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get expense data\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get user preferences\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n                \n                    \n                        Current date to filter expenses\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:46\n                            \n                        \n                \n                    \n                        View type: 'month' | 'day' | 'year'\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the selected view type\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders daily expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders monthly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders yearly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook after view initialization.\nLoads chart data after canvas element is available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook for input changes.\nReloads chart if viewType or currentDate changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed inputs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook runs on component init.\nInitializes theme, categories, expenses, and category mapping.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Renders a Chart.js chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart ID\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart type ('doughnut', 'line', 'bar', etc.)\n\n                                            \n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:43\n                        \n                    \n\n            \n                \n                    Reference to the canvas element for Chart.js\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:28\n                        \n                    \n\n            \n                \n                    List of all categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Map of category name to its color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Map of category_id to category name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:34\n                        \n                    \n\n            \n                \n                    Chart instances keyed by chart ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:40\n                        \n                    \n\n            \n                \n                    User-selected currency\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:31\n                        \n                    \n\n            \n                \n                    List of all expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    Dark mode flag from user settings\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/** Chart.js instance */\ndeclare const Chart: any;\n\n/**\n * Component to render a pie/doughnut chart of expenses by category.\n * Supports monthly, daily, and yearly views.\n */\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /** Dark mode flag from user settings */\n  isDarkMode: boolean = false;\n\n  /** Map of category_id to category name */\n  categoryMap: any = {};\n\n  /** List of all categories */\n  categories: Category[] = [];\n\n  /** List of all expenses */\n  expenses: Expense[] = [];\n\n  /** Chart instances keyed by chart ID */\n  charts: { [key: string]: any } = {};\n\n  /** Map of category name to its color */\n  categoryColors: { [key: string]: string } = {};\n\n  /** User-selected currency */\n  currency: string | null;\n\n  /** Reference to the canvas element for Chart.js */\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n\n  /** View type: 'month' | 'day' | 'year' */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /** Current date to filter expenses */\n  @Input() currentDate!: Date;\n\n  /**\n   * Constructor to inject required services.\n   * @param categoryService Service to get category data\n   * @param expenseService Service to get expense data\n   * @param userService Service to get user preferences\n   */\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /**\n   * Lifecycle hook runs on component init.\n   * Initializes theme, categories, expenses, and category mapping.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  /**\n   * Lifecycle hook after view initialization.\n   * Loads chart data after canvas element is available.\n   */\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook for input changes.\n   * Reloads chart if viewType or currentDate changes.\n   * @param changes Object containing changed inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /** Loads chart data based on the selected view type */\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  /** Aggregates and renders monthly expense data */\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders daily expense data */\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders yearly expense data */\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /**\n   * Renders a Chart.js chart\n   * @param id Chart ID\n   * @param type Chart type ('doughnut', 'line', 'bar', etc.)\n   * @param config Chart configuration containing labels, data, colors, etc.\n   */\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\nimport { ToastService } from '../../toast/toast.service';\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   * @param toastService Displays notifications to the user\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService,\n    private toastService: ToastService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      // console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: (res: any) => {\n          console.log('User data posted successfully. Response:', res);\n          const api_response_app_version = res.app_version;\n          const app_current_version = this.userService.getValue('app_version');\n          if (api_response_app_version != app_current_version) {\n            this.userService.update('is_app_updated', false);\n            setTimeout(() => {\n              this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n            }, 500);\n          }\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SaavnService\nService for integrating with Saavn API (song search) and\nGoogle Gemini API (next song recommendation).\nIt manages search, AI-based suggestions, and conversation history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of SaavnService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API calls.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader service to show/hide loading UI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Returns the full conversation history between user and model.\n\n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                            \n                                An array of ChatMessage objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Searches for songs using the Saavn API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search term provided by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable containing the list of matching songs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Suggests the next song based on the current song metadata.\nUses Gemini API to infer mood and style, and returns the most suitable next track.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently playing song object with metadata (name, album, artists, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A JSON string with the suggested song name and artist.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                        \n                    \n\n            \n                \n                    Gemini API URL with authentication key from environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:39\n                        \n                    \n\n            \n                \n                    Base URL for Saavn song search API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:34\n                        \n                    \n\n            \n                \n                    Conversation history between user and AI model.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema interface for local storage items.\nDefines a generic structure for syncing data with default values.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:9\n                            \n                        \n                \n                    \n                        Key-value pairs representing item properties\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { ConfigService } from '../config/config.service';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\ninterface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Syncs categories, expenses, user, and budget data with predefined schemas.\n * - Provides helper methods to get and update local storage items.\n * - Ensures default values exist for missing properties.\n * - Integrates with {@link ConfigService} to retrieve app version for user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /**\n   * Creates an instance of StorageService.\n   *\n   * @param configService Service providing app configuration such as version.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Checks if the current environment has access to localStorage.\n   *\n   * @returns `true` if localStorage is available, `false` otherwise.\n   */\n  private static isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Syncs categories in localStorage with the default schema and predefined categories.\n   */\n  syncCategoriesWithSchema(): void {\n    const categorySchema: Schema = {\n      category_id: \"\",\n      name: \"\",\n      icon: \"\",\n      color: \"\",\n      is_active: \"\",\n      user_id: \"\"\n    };\n    return this.syncWithSchema(this.categoryKey, categorySchema);\n  }\n\n  /**\n   * Syncs expenses in localStorage with the default schema.\n   */\n  syncExpensesWithSchema(): void {\n    const expenseSchema: Schema = {\n      expense_id: \"\",\n      category_id: \"\",\n      amount: \"\",\n      date: \"\",\n      location: \"\",\n      note: \"\",\n      payment_mode: \"\",\n      time: \"\",\n      isExtraSpending: false\n    };\n    return this.syncWithSchema(this.expenseKey, expenseSchema);\n  }\n\n  /**\n   * Syncs user data in localStorage with the default schema.\n   */\n  syncUserWithSchema(): void {\n    const userSchema: Schema = {\n      id: \"\",\n      backup_frequency: \"\",\n      email: \"\",\n      is_active: \"\",\n      is_backup: \"\",\n      last_backup: \"\",\n      name: \"\",\n      notifications: \"\",\n      user_password: \"\",\n      theme_mode: \"dark\",\n      currency: \"₹\",\n      app_version: \"0\",\n      is_app_updated: true\n    };\n    return this.syncUser(this.userKey, userSchema);\n  }\n\n  /**\n   * Syncs budget data in localStorage with the default schema.\n   */\n  syncBudgetWithSchema(): void {\n    const budgetSchema: Schema = {\n      budget_id: \"\",\n      amount: 0,\n      fromDate: \"\",\n      toDate: \"\"\n    };\n    return this.syncWithSchema(this.budgetKey, budgetSchema);\n  }\n\n  /**\n   * Helper function to sync any localStorage data array with a given schema.\n   *\n   * @param storageKey The localStorage key to sync.\n   * @param defaultSchema The default schema to apply to missing properties.\n   */\n  private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    if (storageKey === this.categoryKey) {\n      const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n      const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n      savedData = [...filteredPastData, ...Categories];\n    }\n\n    const schemaKeys = Object.keys(defaultSchema);\n    const updatedData = savedData.map((item: Schema) => {\n      const synced: Schema = {};\n      schemaKeys.forEach((key: string) => {\n        synced[key] = key in item ? item[key] : defaultSchema[key];\n      });\n      return synced;\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(updatedData));\n  }\n\n  /**\n   * Syncs user data in localStorage with a schema and updates the app version.\n   *\n   * @param storageKey The localStorage key for the user.\n   * @param defaultSchema The default schema to apply.\n   */\n  private syncUser(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n    const schemaKeys = Object.keys(defaultSchema);\n    const syncedSettings: Schema = {};\n\n    schemaKeys.forEach((key: string) => {\n      syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n    });\n    syncedSettings['app_version'] = this.configService.getVersion();\n\n    localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n  }\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage and broadcast the current active section of the application.\nFeatures:\n\nMaintains the currently selected section using a BehaviorSubject.\nProvides an observable currentSection$ to subscribe to section changes.\nAllows updating the current section with setSection.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Updates the current active section.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new section identifier to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable stream of the current section.\nComponents can subscribe to reactively track section changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:21\n                        \n                    \n\n            \n                \n                    Internal BehaviorSubject holding the current section.\nInitialized with 'home'.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service to manage and broadcast the current active section of the application.\n *\n * Features:\n * - Maintains the currently selected section using a {@link BehaviorSubject}.\n * - Provides an observable {@link currentSection$} to subscribe to section changes.\n * - Allows updating the current section with {@link setSection}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n\n  /**\n   * Internal BehaviorSubject holding the current section.\n   * Initialized with 'home'.\n   */\n  private sectionSource = new BehaviorSubject('home');\n\n  /**\n   * Observable stream of the current section.\n   * Components can subscribe to reactively track section changes.\n   */\n  currentSection$ = this.sectionSource.asObservable();\n\n  /**\n   * Updates the current active section.\n   *\n   * @param section The new section identifier to set.\n   */\n  setSection(section: string): void {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/setting-item/setting-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable component to display a single setting item.\nThis component can be used inside settings screens or\npreferences pages to show a label or related content.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/settings-components/setting-item/setting-item.component.ts:22\n                            \n                        \n                \n                    \n                        The text label for the setting item.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * A reusable component to display a single setting item.\n * \n * This component can be used inside settings screens or\n * preferences pages to show a label or related content.\n */\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n\n  /**\n   * The text label for the setting item.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label!: string;\n\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidebar navigation component.\nThis component:\n\nDisplays sidebar links for navigating between different application sections.\nHighlights the currently active section.\nCommunicates with SectionService to update and listen to the current active section.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of SidebarComponent.\nSubscribes to SectionService.currentSection$ to keep track of\nthe currently selected section and update the UI accordingly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles sidebar link clicks by updating the current section\nand preventing the default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default navigation).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                        \n                    \n\n            \n                \n                    Holds the name of the currently active navigation path/section.\nUsed to apply active styling to the sidebar item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Sidebar navigation component.\n *\n * This component:\n * - Displays sidebar links for navigating between different application sections.\n * - Highlights the currently active section.\n * - Communicates with {@link SectionService} to update and listen to the current active section.\n */\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  /**\n   * Holds the name of the currently active navigation path/section.\n   * Used to apply active styling to the sidebar item.\n   */\n  activePath: string = '';\n\n  /**\n   * Creates an instance of SidebarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to keep track of\n   * the currently selected section and update the UI accordingly.\n   *\n   * @param sectionService Service for managing and broadcasting the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  /**\n   * Handles sidebar link clicks by updating the current section\n   * and preventing the default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default navigation).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing LocalStorage data in a structured and schema-compliant way.\nFeatures:\n\nSyncs categories, expenses, user, and budget data with predefined schemas.\nProvides helper methods to get and update local storage items.\nEnsures default values exist for missing properties.\nIntegrates with ConfigService to retrieve app version for user data.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                isBrowser\n                            \n                            \n                                syncBudgetWithSchema\n                            \n                            \n                                syncCategoriesWithSchema\n                            \n                            \n                                syncExpensesWithSchema\n                            \n                            \n                                    Private\n                                syncUser\n                            \n                            \n                                syncUserWithSchema\n                            \n                            \n                                    Private\n                                syncWithSchema\n                            \n                            \n                                updateBudgets\n                            \n                            \n                                updateCategories\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of StorageService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing app configuration such as version.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of budget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:185\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of category objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:212\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of expense objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:223\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for budgets\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for categories\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:220\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for expenses\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Retrieves user data from localStorage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                User object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the current environment has access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if localStorage is available, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncBudgetWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncBudgetWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Syncs budget data in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCategoriesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncCategoriesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Syncs categories in localStorage with the default schema and predefined categories.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncExpensesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncExpensesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Syncs expenses in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:162\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with a schema and updates the app version.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key for the user.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUserWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncUserWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Helper function to sync any localStorage data array with a given schema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key to sync.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply to missing properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBudgets\n                        \n                    \n                \n            \n            \n                \nupdateBudgets(budgets: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:242\n                        \n                    \n\n\n            \n                \n                        Updates the budgets in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategories\n                        \n                    \n                \n            \n            \n                \nupdateCategories(categories: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:233\n                        \n                    \n\n\n            \n                \n                        Updates the categories in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of categories to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Updates the user data in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:35\n                        \n                    \n\n            \n                \n                    LocalStorage key for budgets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:29\n                        \n                    \n\n            \n                \n                    LocalStorage key for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:32\n                        \n                    \n\n            \n                \n                    LocalStorage key for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:38\n                        \n                    \n\n            \n                \n                    LocalStorage key for user settings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { ConfigService } from '../config/config.service';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\ninterface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Syncs categories, expenses, user, and budget data with predefined schemas.\n * - Provides helper methods to get and update local storage items.\n * - Ensures default values exist for missing properties.\n * - Integrates with {@link ConfigService} to retrieve app version for user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /**\n   * Creates an instance of StorageService.\n   *\n   * @param configService Service providing app configuration such as version.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Checks if the current environment has access to localStorage.\n   *\n   * @returns `true` if localStorage is available, `false` otherwise.\n   */\n  private static isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Syncs categories in localStorage with the default schema and predefined categories.\n   */\n  syncCategoriesWithSchema(): void {\n    const categorySchema: Schema = {\n      category_id: \"\",\n      name: \"\",\n      icon: \"\",\n      color: \"\",\n      is_active: \"\",\n      user_id: \"\"\n    };\n    return this.syncWithSchema(this.categoryKey, categorySchema);\n  }\n\n  /**\n   * Syncs expenses in localStorage with the default schema.\n   */\n  syncExpensesWithSchema(): void {\n    const expenseSchema: Schema = {\n      expense_id: \"\",\n      category_id: \"\",\n      amount: \"\",\n      date: \"\",\n      location: \"\",\n      note: \"\",\n      payment_mode: \"\",\n      time: \"\",\n      isExtraSpending: false\n    };\n    return this.syncWithSchema(this.expenseKey, expenseSchema);\n  }\n\n  /**\n   * Syncs user data in localStorage with the default schema.\n   */\n  syncUserWithSchema(): void {\n    const userSchema: Schema = {\n      id: \"\",\n      backup_frequency: \"\",\n      email: \"\",\n      is_active: \"\",\n      is_backup: \"\",\n      last_backup: \"\",\n      name: \"\",\n      notifications: \"\",\n      user_password: \"\",\n      theme_mode: \"dark\",\n      currency: \"₹\",\n      app_version: \"0\",\n      is_app_updated: true\n    };\n    return this.syncUser(this.userKey, userSchema);\n  }\n\n  /**\n   * Syncs budget data in localStorage with the default schema.\n   */\n  syncBudgetWithSchema(): void {\n    const budgetSchema: Schema = {\n      budget_id: \"\",\n      amount: 0,\n      fromDate: \"\",\n      toDate: \"\"\n    };\n    return this.syncWithSchema(this.budgetKey, budgetSchema);\n  }\n\n  /**\n   * Helper function to sync any localStorage data array with a given schema.\n   *\n   * @param storageKey The localStorage key to sync.\n   * @param defaultSchema The default schema to apply to missing properties.\n   */\n  private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    if (storageKey === this.categoryKey) {\n      const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n      const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n      savedData = [...filteredPastData, ...Categories];\n    }\n\n    const schemaKeys = Object.keys(defaultSchema);\n    const updatedData = savedData.map((item: Schema) => {\n      const synced: Schema = {};\n      schemaKeys.forEach((key: string) => {\n        synced[key] = key in item ? item[key] : defaultSchema[key];\n      });\n      return synced;\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(updatedData));\n  }\n\n  /**\n   * Syncs user data in localStorage with a schema and updates the app version.\n   *\n   * @param storageKey The localStorage key for the user.\n   * @param defaultSchema The default schema to apply.\n   */\n  private syncUser(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n    const schemaKeys = Object.keys(defaultSchema);\n    const syncedSettings: Schema = {};\n\n    schemaKeys.forEach((key: string) => {\n      syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n    });\n    syncedSettings['app_version'] = this.configService.getVersion();\n\n    localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n  }\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        ToastComponent\nA reusable component responsible for rendering toast notifications.\nIt integrates with ToastService to display messages dynamically\nand handles auto-dismiss after a configurable duration.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of ToastComponent.\nso that it can be accessed globally.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to register this component instance\nso that it can be accessed globally.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component's view has been fully initialized.\nRegisters this component with the ToastService so it can be controlled externally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with a message, style, and duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text content of the toast\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning), defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before the toast disappears, defaults to 3000\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n * ToastComponent\n *\n * A reusable component responsible for rendering toast notifications.\n * It integrates with `ToastService` to display messages dynamically\n * and handles auto-dismiss after a configurable duration.\n */\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent implements AfterViewInit {\n\n  /**\n   * Creates an instance of ToastComponent.\n   * @param toastService Service used to register this component instance\n   * so that it can be accessed globally.\n   */\n  constructor(private toastService: ToastService) { }\n\n  /**\n   * Lifecycle hook that runs after component's view has been fully initialized.\n   * Registers this component with the `ToastService` so it can be controlled externally.\n   */\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n\n  /**\n   * Displays a toast notification with a message, style, and duration.\n   *\n   * @param message The text content of the toast\n   * @param type The type of toast (`success` | `error` | `info` | `warning`), defaults to `'success'`\n   * @param duration Duration in milliseconds before the toast disappears, defaults to `3000`\n   */\n  showToast(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      // Clear any existing toasts\n      toastContainer.innerHTML = '';\n\n      // Define style classes for each toast type\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      // Create toast element\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      // Add message and dismiss button\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      // Auto-remove toast after the given duration\n      setTimeout(() => {\n        toast.remove();\n      }, duration);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ToastService\nA service for displaying toast notifications in the application.\nIt requires registering a ToastComponent instance so it can delegate\nshowing messages to the UI component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Registers the toast component instance.\nMust be called once, typically from the root component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Instance of ToastComponent used to render notifications\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Displays a toast message.\nExample :        Defaults to `'success'`\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The message text to display\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning)Defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before auto-hide (default: 3000)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:19\n                        \n                    \n\n            \n                \n                    Reference to the toast component instance.\nThis is registered once during app initialization.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n/**\n * ToastService\n *\n * A service for displaying toast notifications in the application.\n * It requires registering a `ToastComponent` instance so it can delegate\n * showing messages to the UI component.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  /**\n   * Reference to the toast component instance.\n   * This is registered once during app initialization.\n   */\n  private toastComponent!: ToastComponent;\n\n  /**\n   * Registers the toast component instance.\n   * Must be called once, typically from the root component.\n   *\n   * @param toast Instance of `ToastComponent` used to render notifications\n   */\n  register(toast: ToastComponent): void {\n    this.toastComponent = toast;\n  }\n\n  /**\n   * Displays a toast message.\n   *\n   * @param message The message text to display\n   * @param type The type of toast (`success` | `error` | `info` | `warning`)  \n   *             Defaults to `'success'`\n   * @param duration Duration in milliseconds before auto-hide (default: `3000`)\n   */\n  show(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    this.toastComponent?.showToast(message, type, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user profile and application settings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_app_updated\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Application version associated with the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Frequency of backups (e.g., daily, weekly).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred currency code (e.g., USD, INR).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_app_updated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_app_updated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user’s app has been updated to the latest version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if backup is enabled for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last performed backup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's display name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification preferences (e.g., enabled/disabled).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred theme mode (e.g., light, dark).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password (hashed or plain depending on storage implementation).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/settings-components/download-component/download-component.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the structure of user data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            budgetData\n                                        \n                                \n                                \n                                        \n                                            categoryData\n                                        \n                                \n                                \n                                        \n                                            expenseData\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        budgetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budgetData:         Budget[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Budget[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryData:         Category[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expenseData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expenseData:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         User | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user data and preferences in local storage.\nProvides methods to read, update, and persist user settings.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getUserData\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for handling local storage operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user object from storage.\n\n\n                        \n                            Returns :     Record\n\n                        \n                            \n                                User data object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Retrieves full user data.\n\n\n                        \n                            Returns :         User | literal type\n\n                        \n                            \n                                The user object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:102\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a specific user property by key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The value if it exists, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Checks if the service is running in a browser environment\nwith access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Updates a single user property in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to update.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value to assign.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserData\n                        \n                    \n                \n            \n            \n                \nupdateUserData(user: User | literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Updates the entire user object in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new user object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/component/form-model/form-model.component.ts\n            \n            component\n            FormModelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                        src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n            \n            component\n            InstallAppPopupComponentComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            component\n            DownloadComponentComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            interface\n            UserData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                        src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                        src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            canvg : ^4.0.3\n        \n            chart.js : ^4.5.0\n        \n            express : ^4.18.2\n        \n            jspdf : ^3.0.2\n        \n            jspdf-autotable : ^5.0.2\n        \n            lucide-angular : ^0.543.0\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            xlsx : ^0.18.5\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).\n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data in pdf, json, excel formats)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage (though it works as PWA).\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:\n👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n            \n                \n                    Angular Universal Node.js app engine\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n            \n                \n                    Express server\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n            \n                \n                    Browser distribution folder\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n            \n                \n                    Server distribution folder\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Application configuration\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Bootstrap the Angular application with server-specific configuration\n\n                \n            \n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n            \n                \n                    Predefined categories for the application\n\n                \n            \n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Chart.js instance\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Merged application configuration for server-side rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n            \n                \n                    Server-specific application configuration\n\n                \n            \n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** \n   * Name of the application. \n   */\n  appName: 'ExpenseWise',\n\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyBkBmHCsVna6d8bPYjQQhbpdymn7_Nvm2w',\n\n  /**\n   * Current environment type.\n   * - 'local' for local development (uses localhost API endpoint)\n   * - 'live' for production (uses production API endpoint)\n   * - leave empty for automatic detection based on current window location\n   */\n  developmentEnvironment: '', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.9.21', // Current application version\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  liveAPIUrl: \"https://exwiseapi.onrender.com\",\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  localAPIUrl: \"http://localhost:8000\"\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: '', component: AppComponent }, // your main app content\n    { path: 'music', component: AppComponent }, // for music\n    { path: '**', redirectTo: '' }, // catch-all\n]\n                    \n                \n\n            \n                \n                    Application routes\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n            \n                \n                    Application routes for server-side rendering\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
