var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.045,1,0.83]],["body/components/AddExpenseComponent.html",[0,0.079,1,1.239,2,0.856,3,0.123,4,0.123,5,0.7,6,0.887,7,0.608,8,0.608,9,0.092,10,6.336,11,5.658,12,2.44,13,0.485,14,4.292,15,0.745,16,1.925,17,2.511,18,3.969,19,1.549,20,4.703,21,2.949,22,4.193,23,1.856,24,2.469,25,0.551,26,1.467,27,1.073,28,1.165,29,1.018,30,1.514,31,0.563,32,0.989,33,3.215,34,1.488,35,1.239,36,1.856,37,4.989,38,0.989,39,4.193,40,0.123,41,0.412,42,4.989,43,4.989,44,4.989,45,4.989,46,4.989,47,4.989,48,3.832,49,4.989,50,4.989,51,0.412,52,4.742,53,5.512,54,2.091,55,3.607,56,5.512,57,4.742,58,5.512,59,4.193,60,4.193,61,0.658,62,2.44,63,3.969,64,2.746,65,3.058,66,0.771,67,4.193,68,2.511,69,2.076,70,0.74,71,0.019,72,0.32,73,0.299,74,0.658,75,3.215,76,0.531,77,2.091,78,2.337,79,0.618,80,1.122,81,2.933,82,2.836,83,0.7,84,4.193,85,0.578,86,4.106,87,4.193,88,2.836,89,2.703,90,3.607,91,3.286,92,0.656,93,2.836,94,1.514,95,1.761,96,1.961,97,3.607,98,2.836,99,1.761,100,1.025,101,2.703,102,4.307,103,2.609,104,2.836,105,2.933,106,2.281,107,2.076,108,4.193,109,2.836,110,3.607,111,2.347,112,2.836,113,2.703,114,0.815,115,1.73,116,2.609,117,4.193,118,0.422,119,2.836,120,5.512,121,5.845,122,4.742,123,4.193,124,2.836,125,2.792,126,1.698,127,4.193,128,2.347,129,2.518,130,1.362,131,2.836,132,1.251,133,1.069,134,0.807,135,0.856,136,2.836,137,4.234,138,1.125,139,2.836,140,2.836,141,2.44,142,4.234,143,2.836,144,2.621,145,2.836,146,1.761,147,0.989,148,1.135,149,2.836,150,3.301,151,2.728,152,2.836,153,0.233,154,1.984,155,1.587,156,0.107,157,1.828,158,1.256,159,1.587,160,2.836,161,1.984,162,2.44,163,0.807,164,1.698,165,0.107,166,0.123,167,0.647,168,0.632,169,2.836,170,2.44,171,1.698,172,2.836,173,2.095,174,4.193,175,4.193,176,2.836,177,0.921,178,1.828,179,3.969,180,2.44,181,2.836,182,2.095,183,2.076,184,4.742,185,2.836,186,2.836,187,2.076,188,4.989,189,2.44,190,3.221,191,2.44,192,0.807,193,1.984,194,3.607,195,2.179,196,2.836,197,2.179,198,1.201,199,2.836,200,4.193,201,2.836,202,2.836,203,2.836,204,2.836,205,2.836,206,2.836,207,2.836,208,1.076,209,2.836,210,2.836,211,2.44,212,1.49,213,1.404,214,0.975,215,1.636,216,2.44,217,1.984,218,2.44,219,4.989,220,1.984,221,2.836,222,1.761,223,4.193,224,2.836,225,2.836,226,4.989,227,2.836,228,2.836,229,2.836,230,2.836,231,4.193,232,4.989,233,4.193,234,2.836,235,2.836,236,2.836,237,2.836,238,4.989,239,4.193,240,2.836,241,2.836,242,2.836,243,2.933,244,4.193,245,4.193,246,4.215,247,2.203,248,1.311,249,3.607,250,3.221,251,3.855,252,3.855,253,2.203,254,3.607,255,1.961,256,2.076,257,0.638,258,0.899,259,0.701,260,1.362,261,0.701,262,0.701,263,0.638,264,0.701,265,0.608,266,1.036,267,0.638,268,0.701,269,0.638,270,0.701,271,0.701,272,0.608,273,0.525,274,1.036,275,0.638,276,0.579,277,0.701,278,0.638,279,0.701,280,0.638,281,0.701,282,0.608,283,0.701,284,0.608,285,0.579,286,0.701,287,0.638,288,0.701,289,0.638,290,0.701,291,0.701,292,0.638,293,0.701,294,0.638,295,0.701,296,0.638,297,0.669,298,0.426,299,0.701,300,0.638,301,0.701,302,0.638,303,0.701,304,0.638,305,0.669,306,0.701,307,0.638,308,0.525,309,0.701,310,0.638,311,0.669,312,0.701,313,0.669,314,0.701,315,0.638,316,0.701,317,0.525,318,0.551,319,0.608,320,0.701,321,0.701,322,0.01,323,0.01]],["title/components/AiComponent.html",[0,0.045,263,0.83]],["body/components/AiComponent.html",[0,0.081,1,0.926,2,1.112,3,0.179,4,0.179,5,0.91,7,0.883,8,0.883,9,0.134,13,0.429,19,0.926,25,0.801,26,1.512,27,1.105,28,0.688,29,0.774,30,1.967,31,0.732,32,1.285,34,1.821,35,0.926,38,1.285,40,0.179,41,0.535,51,0.535,61,0.775,66,0.683,68,3.263,70,0.553,71,0.019,72,0.299,73,0.265,74,0.492,79,0.611,80,0.926,85,0.351,99,2.288,100,0.586,106,2.295,118,0.249,130,1.347,134,0.69,135,0.732,138,1.417,147,1.285,153,0.268,156,0.156,158,1.824,163,1.172,165,0.156,166,0.179,167,0.573,168,0.69,177,0.91,192,0.774,252,3.811,257,0.926,258,1.586,259,1.018,260,1.606,261,1.018,262,1.018,263,1.46,264,1.018,265,0.883,266,1.347,267,0.926,268,1.018,269,0.926,270,1.018,271,1.018,272,0.883,273,0.762,274,1.347,275,0.926,276,0.841,277,1.018,278,0.926,279,1.018,280,0.926,281,1.018,282,0.883,283,1.018,284,0.883,285,0.841,286,1.018,287,0.926,288,1.018,289,0.926,290,1.018,291,1.018,292,0.926,293,1.018,294,0.926,295,1.018,296,0.926,297,0.971,298,0.619,299,1.018,300,0.926,301,1.018,302,0.926,303,1.018,304,0.926,305,0.971,306,1.018,307,0.926,308,0.762,309,1.018,310,0.926,311,0.971,312,1.018,313,0.971,314,1.018,315,0.926,316,1.018,317,0.762,318,0.801,319,0.883,320,1.018,321,1.018,322,0.013,323,0.013,324,3.544,325,3.914,326,5.448,327,2.863,328,4.473,329,3.245,330,1.874,331,5.448,332,5.588,333,4.687,334,5.588,335,4.99,336,3.215,337,6.94,338,3.416,339,5.251,340,5.448,341,2.412,342,5.448,343,6.104,344,6.104,345,3.207,346,6.94,347,4.12,348,4.543,349,6.94,350,6.496,351,5.448,352,3.512,353,6.104,354,4.185,355,1.967,356,5.448,357,3.512,358,4.12,359,5.448,360,5.448,361,2.288,362,5.448,363,6.496,364,1.683,365,4.687,366,4.12,367,1.874,368,5.448,369,2.039,370,3.165,371,1.351,372,4.687,373,4.12,374,3.165,375,3.544,376,4.12,377,4.12,378,4.12,379,4.12,380,2.467,381,3.544,382,6.104,383,2.165,384,4.12,385,5.448,386,4.12,387,4.12,388,4.12,389,3.512,390,5.448]],["title/components/AppComponent.html",[0,0.045,265,0.792]],["body/components/AppComponent.html",[0,0.077,1,1.233,2,0.85,3,0.181,4,0.122,5,0.695,6,0.878,7,0.602,8,0.602,9,0.091,11,2.158,13,0.483,19,0.631,25,0.546,26,1.466,27,1.089,28,0.469,29,0.592,30,1.503,31,0.737,32,0.982,34,1.479,35,0.631,36,1.843,38,0.982,40,0.122,41,0.409,51,0.409,54,2.081,61,0.655,65,3.05,66,0.757,68,1.682,70,0.787,71,0.019,72,0.319,73,0.275,74,0.699,79,0.796,80,1.233,85,0.522,92,0.502,94,1.503,95,1.748,96,1.947,100,0.399,107,2.9,114,1.235,118,0.354,126,2.493,130,1.029,133,0.602,134,0.742,135,0.787,138,1.332,141,1.243,146,1.748,147,0.982,148,1.148,153,0.284,154,1.964,156,0.158,163,0.799,164,1.682,165,0.106,166,0.122,167,0.712,168,0.844,171,1.682,192,0.528,198,0.573,248,0.878,257,0.631,258,0.892,259,0.694,260,1.356,261,0.694,262,0.694,263,1.233,264,0.694,265,1.315,266,1.029,267,1.233,268,0.694,269,1.233,270,0.694,271,0.694,272,0.602,273,0.519,274,1.029,275,0.631,276,0.573,277,0.694,278,0.631,279,0.694,280,1.233,281,0.694,282,0.602,283,0.694,284,1.176,285,1.196,286,0.694,287,0.631,288,0.694,289,0.631,290,0.694,291,0.694,292,1.233,293,0.694,294,1.233,295,1.226,296,1.115,297,1.293,298,0.422,299,0.694,300,1.233,301,0.694,302,1.233,303,0.694,304,0.631,305,0.662,306,0.694,307,0.631,308,0.519,309,0.694,310,0.631,311,0.662,312,0.694,313,1.293,314,0.694,315,1.233,316,0.694,317,0.519,318,0.546,319,1.176,320,0.694,321,0.694,322,0.01,323,0.01,329,1.947,352,2.683,355,2.215,364,0.728,371,1.365,375,2.416,391,2.416,392,1.233,393,2.46,394,2.912,395,2.061,396,4.562,397,3.078,398,5.039,399,3.793,400,4.214,401,3.078,402,4.093,403,3.198,404,5.118,405,2.365,406,4.163,407,4.961,408,4.163,409,4.267,410,4.961,411,4.961,412,4.961,413,4.961,414,4.267,415,3.811,416,2.447,417,4.961,418,4.719,419,4.961,420,4.163,421,4.163,422,3.198,423,4.163,424,4.163,425,2.416,426,3.906,427,2.715,428,3.65,429,2.474,430,6.778,431,4.562,432,4.719,433,1.69,434,4.163,435,6.662,436,1.579,437,5.039,438,1.791,439,3.197,440,4.163,441,3.037,442,1.503,443,1.748,444,3.469,445,3.198,446,3.581,447,2.683,448,1.843,449,3.581,450,2.082,451,2.683,452,1.748,453,3.198,454,3.293,455,2.809,456,3.469,457,4.163,458,3.581,459,3.198,460,3.581,461,2.187,462,2.33,463,4.163,464,3.581,465,2.809,466,4.163,467,1.881,468,6.136,469,2.809,470,1.682,471,1.39,472,2.809,473,1.81,474,2.809,475,2.158,476,2.809,477,2.912,478,5.463,479,4.659,480,1.978,481,2.809,482,1.243,483,2.196,484,1.726,485,1.39,486,2.809,487,2.33,488,2.493,489,4.163,490,3.198,491,2.912,492,2.33,493,4.163,494,4.163,495,2.809,496,2.809,497,3.285,498,2.809,499,1.579,500,2.061,501,1.791,502,2.809,503,2.809,504,5.278,505,2.327,506,4.163,507,3.508,508,2.809,509,4.163,510,4.163,511,3.581,512,2.809,513,2.683,514,2.33,515,2.683,516,2.809,517,2.416,518,2.416,519,4.163,520,2.416,521,1.476,522,1.964,523,2.809,524,2.809,525,2.809,526,2.416,527,2.416,528,2.187,529,2.416,530,2.809,531,2.809,532,2.809,533,2.809,534,2.416,535,2.809,536,2.809,537,2.809,538,2.809,539,2.809,540,2.809,541,3.198,542,2.809,543,2.809,544,1.476,545,1.81,546,1.682,547,1.964,548,2.809,549,2.158,550,2.809,551,2.416,552,2.809,553,2.416,554,1.964,555,2.809,556,2.416,557,1.313,558,1.476,559,2.809,560,2.809,561,2.416,562,2.809,563,1.503,564,2.809,565,2.809,566,2.809,567,2.809,568,2.809,569,3.581,570,4.163,571,2.809,572,2.809,573,1.947,574,2.809,575,2.809,576,2.809,577,2.809,578,1.81,579,1.682,580,3.581,581,1.964,582,1.12,583,2.809,584,2.809,585,2.809,586,1.682,587,4.214,588,1.81,589,2.809,590,2.809,591,2.809,592,1.313,593,2.809,594,2.416,595,1.572,596,2.416,597,1.964,598,2.809,599,1.81,600,4.961,601,3.581,602,2.809,603,1.81,604,2.809,605,2.809,606,2.809,607,4.163,608,3.581,609,2.809,610,2.809,611,1.81,612,2.158,613,4.163,614,1.964,615,1.964,616,1.964,617,2.809,618,2.809,619,2.912,620,2.809,621,2.683,622,2.809,623,0.799]],["title/interfaces/Budget.html",[624,0.683,625,1.551]],["body/interfaces/Budget.html",[3,0.189,4,0.189,9,0.142,13,0.343,15,0.716,28,0.943,31,0.585,40,0.189,41,0.555,51,0.428,61,0.519,71,0.019,73,0.288,76,0.552,77,1.651,79,0.633,83,0.727,85,0.481,92,0.608,111,2.436,115,1.719,118,0.46,129,2.676,133,1.51,141,1.927,148,0.727,153,0.214,156,0.165,165,0.214,166,0.189,167,0.741,168,0.716,177,1.198,192,0.716,253,3.487,298,0.942,322,0.013,323,0.013,361,2.786,371,2.175,392,0.979,405,2.157,429,2.517,436,1.651,438,1.572,442,2.59,443,3.012,450,1.852,452,2.372,467,1.651,470,2.607,471,3.104,480,1.736,482,1.927,484,1.463,485,2.155,579,2.607,624,1.16,625,3.266,626,1.927,627,3.344,628,2.142,629,4.117,630,5.28,631,2.938,632,2.938,633,1.96,634,4.817,635,4.859,636,4.859,637,2.253,638,2.968,639,5.097,640,4.641,641,2.796,642,0.674,643,2.287,644,2.036,645,4.623,646,1.572,647,2.641,648,2.436,649,2.806,650,3.344,651,1.766,652,1.182,653,3.161,654,3.045,655,3.344,656,1.736,657,1.927,658,2.372,659,2.142,660,2.036,661,1.828,662,1.927,663,1.736,664,2.607,665,3.404,666,3.344,667,2.155,668,3.745,669,4.859,670,3.745,671,2.607,672,2.607,673,3.755,674,2.607,675,2.607,676,3.045,677,5.394,678,3.755,679,1.927,680,3.045,681,3.745,682,2.796,683,3.045,684,3.755,685,2.641,686,1.927,687,3.745,688,3.382,689,4.859,690,2.501,691,3.045,692,2.436,693,3.745,694,3.045,695,3.045,696,1.927,697,3.745,698,3.745]],["title/components/BudgetComponent.html",[0,0.045,267,0.83]],["body/components/BudgetComponent.html",[0,0.07,1,0.484,2,0.694,3,0.093,4,0.093,5,0.568,7,0.462,8,0.462,9,0.07,13,0.268,14,4.11,15,0.7,16,1.727,18,3.728,19,1.513,20,2.191,23,1.505,24,2.083,25,0.419,26,1.424,27,1.041,28,1.03,29,0.679,30,1.227,31,0.848,32,0.801,33,2.713,34,1.255,35,0.484,38,0.801,40,0.093,41,0.334,51,0.334,52,4.11,54,1.812,57,4.11,61,0.406,63,3.561,64,2.59,65,2.803,66,0.767,70,0.289,71,0.019,72,0.206,73,0.292,74,0.257,75,3.08,76,0.605,77,2.274,78,1.789,79,0.672,80,0.484,83,0.798,85,0.565,86,3.728,89,3.08,92,0.639,94,1.227,95,1.427,96,1.589,99,1.427,100,0.306,106,1.494,107,1.682,113,2.191,115,1.722,118,0.289,122,2.924,129,2.582,130,0.84,132,1.014,133,1.184,134,0.842,135,0.944,138,1.181,141,2.115,146,1.427,148,1.11,150,3.309,151,2.365,153,0.219,156,0.082,157,1.389,158,0.954,159,1.206,163,0.613,164,1.29,165,0.082,166,0.182,167,0.547,168,0.659,170,1.854,171,1.29,173,0.905,177,0.703,178,1.389,179,2.713,180,1.854,192,0.885,198,1.46,208,0.817,211,1.854,212,2.211,213,2.083,214,0.741,215,1.38,216,1.854,217,1.507,218,1.854,220,1.507,222,0.905,243,2.377,246,3.561,248,1.874,253,2.732,256,2.967,257,0.484,258,0.728,259,0.533,260,1.181,261,0.533,262,0.533,263,0.484,264,0.533,265,0.462,266,0.84,267,1.242,268,0.533,269,0.484,270,0.533,271,0.533,272,0.462,273,0.399,274,0.84,275,0.484,276,0.44,277,0.533,278,0.484,279,0.533,280,0.484,281,0.533,282,0.462,283,0.533,284,0.462,285,0.44,286,0.533,287,0.484,288,0.533,289,0.484,290,0.533,291,0.533,292,0.484,293,0.533,294,0.484,295,0.533,296,0.484,297,0.508,298,0.869,299,0.533,300,0.484,301,0.533,302,0.484,303,0.533,304,0.484,305,0.508,306,0.533,307,0.484,308,0.399,309,0.533,310,0.484,311,0.508,312,0.533,313,0.508,314,0.533,315,0.484,316,0.533,317,0.399,318,0.419,319,0.462,320,0.533,321,0.533,322,0.008,323,0.008,330,1.169,341,1.505,355,1.227,364,0.881,367,1.169,399,2.674,400,2.611,401,2.211,405,1.789,416,2.28,436,2.096,438,1.227,447,3.08,448,1.505,451,1.389,458,2.924,483,0.954,484,0.881,487,1.902,488,2.035,491,2.377,499,1.289,501,1.877,505,1.812,521,1.132,544,1.132,557,1.589,573,2.584,578,1.389,580,2.924,581,1.507,582,1.679,586,2.861,612,1.655,616,1.507,623,1.36,625,3.268,629,2.035,631,2.654,632,2.561,633,1.727,639,4.605,644,1.589,645,4.152,647,2.432,653,3.535,656,1.356,663,1.356,679,1.505,686,1.505,692,1.902,696,1.505,699,1.854,700,2.377,701,4.11,702,5.546,703,3.621,704,2.511,705,5.784,706,4.605,707,3.766,708,4.245,709,2.611,710,5.2,711,5.541,712,2.91,713,2.611,714,3.399,715,3.976,716,2.611,717,2.377,718,5.526,719,6.006,720,2.035,721,2.91,722,3.399,723,3.399,724,4.209,725,4.209,726,4.209,727,4.209,728,4.209,729,5.2,730,4.209,731,3.146,732,4.209,733,3.621,734,5.2,735,4.209,736,4.209,737,3.621,738,4.209,739,4.778,740,4.778,741,3.67,742,4.778,743,4.778,744,4.778,745,4.11,746,1.655,747,3.399,748,4.11,749,3.399,750,2.511,751,2.924,752,3.399,753,3.399,754,2.155,755,4.778,756,3.399,757,4.209,758,3.399,759,2.155,760,2.924,761,4.443,762,3.399,763,2.377,764,2.377,765,5.716,766,4.245,767,2.446,768,3.399,769,1.705,770,2.302,771,2.155,772,2.035,773,4.778,774,3.318,775,2.155,776,2.611,777,3.399,778,2.155,779,4.417,780,3.399,781,2.155,782,3.399,783,2.155,784,2.155,785,3.399,786,2.611,787,3.399,788,2.155,789,3.342,790,3.399,791,3.399,792,2.155,793,2.155,794,2.377,795,3.399,796,2.155,797,4.778,798,3.399,799,3.621,800,2.611,801,2.155,802,2.611,803,3.399,804,4.245,805,3.233,806,2.155,807,2.035,808,3.621,809,2.155,810,2.377,811,2.191,812,2.155,813,3.399,814,2.155,815,2.115,816,2.155,817,2.924,818,2.155,819,1.786,820,2.611,821,2.377,822,2.377,823,2.035,824,3.399,825,2.155,826,2.035,827,2.155,828,1.786,829,2.155,830,2.377,831,2.924,832,2.155,833,1.786,834,3.399,835,3.399,836,2.155,837,2.611,838,2.155,839,2.035,840,3.399,841,1.655,842,2.155,843,2.155,844,1.507,845,1.507,846,1.854,847,2.155,848,1.29,849,2.924,850,4.209,851,2.155,852,4.209,853,3.621,854,2.155,855,2.155,856,4.209,857,4.209,858,2.155,859,2.155,860,2.155,861,2.155,862,4.209,863,2.155,864,3.399,865,1.507,866,2.155,867,2.155,868,3.399,869,2.155,870,2.155,871,2.155,872,2.155,873,4.778,874,2.155,875,2.155,876,2.155,877,1.132,878,2.155,879,2.155,880,1.854,881,1.854,882,2.155,883,2.155,884,2.155,885,0.817,886,4.209,887,3.399,888,4.209,889,1.389,890,1.854,891,1.854,892,1.854,893,2.155,894,0.954,895,2.155,896,4.778,897,1.507,898,1.655,899,1.507,900,1.655,901,1.854,902,1.507,903,3.399,904,2.155,905,3.399,906,2.155,907,2.155,908,2.155,909,2.155,910,2.155,911,3.399,912,2.155,913,3.399,914,2.924,915,3.67,916,2.924,917,1.507,918,4.209,919,2.155,920,3.399,921,2.155,922,2.155,923,2.155,924,2.155,925,1.902,926,2.155,927,4.778,928,1.507,929,3.399,930,4.209,931,1.854,932,1.854,933,2.155,934,2.155,935,2.155,936,1.507,937,1.507,938,1.507,939,2.155,940,1.854,941,3.399,942,2.924,943,3.399,944,3.399,945,3.399,946,1.389,947,2.924]],["title/injectables/BudgetService.html",[642,0.441,653,2.067]],["body/injectables/BudgetService.html",[3,0.17,4,0.17,9,0.128,13,0.539,15,0.807,28,1.143,31,0.708,40,0.17,51,0.626,61,0.629,66,0.735,70,0.893,71,0.019,72,0.325,73,0.288,74,0.793,76,0.668,77,2.001,79,0.714,83,0.881,85,0.605,92,0.651,111,2.952,115,1.367,118,0.444,129,2.567,133,1.573,141,2.335,148,0.881,153,0.2,156,0.149,165,0.2,166,0.17,167,0.719,168,0.807,177,1.168,192,0.668,253,3.347,298,1.028,322,0.012,323,0.012,361,2.791,371,2.331,392,0.882,405,2.445,429,2.652,436,2.001,438,1.904,442,2.701,443,3.141,450,2.089,452,2.675,467,1.489,470,3.159,471,2.949,480,2.104,482,2.335,484,1.544,485,2.611,579,3.159,624,0.976,625,3.259,627,3.015,628,1.489,629,4.188,630,5.256,631,1.738,632,1.738,633,1.227,634,4.577,635,3.376,636,3.376,637,1.565,638,2.062,639,4.052,640,3.689,641,1.943,642,0.629,643,2.062,644,2.467,645,4.821,646,1.904,647,3.201,648,2.952,649,3.4,650,4.052,651,1.992,652,1.066,653,3.565,654,3.689,655,4.052,656,2.104,657,2.82,658,2.215,659,2.001,660,1.835,661,2.215,662,2.335,663,2.104,664,3.815,665,3.29,666,3.015,667,2.611,668,4.538,669,5.48,670,4.538,671,3.159,672,3.568,673,3.568,674,2.35,675,2.35,676,2.745,677,5.125,678,3.568,679,2.335,680,3.689,681,4.538,682,3.153,683,3.689,684,3.98,685,3.108,686,2.335,687,4.538,688,3.159,689,4.538,690,2.376,691,2.745,692,2.952,693,4.538,694,2.745,695,3.689,696,2.335,697,4.538,698,3.376,948,1.35,949,5.275,950,2.745,951,3.925,952,3.925,953,3.925,954,3.925,955,3.925,956,3.925,957,3.925]],["title/components/CalendarComponent.html",[0,0.045,269,0.83]],["body/components/CalendarComponent.html",[0,0.072,1,0.655,2,0.873,3,0.126,4,0.126,5,0.714,7,0.624,8,0.624,9,0.095,13,0.489,15,0.852,16,2.348,19,0.655,21,1.705,23,1.893,24,2.508,25,0.566,26,1.471,27,1.075,28,0.486,29,0.937,31,0.391,32,1.008,34,1.511,35,0.655,38,1.008,40,0.126,41,0.42,51,0.42,54,2.118,61,0.51,64,2.698,66,0.77,70,0.799,71,0.019,72,0.314,73,0.307,74,0.71,76,0.542,79,0.667,80,0.655,83,0.714,85,0.529,91,1.893,92,0.635,94,1.544,95,1.796,96,2,100,0.414,103,1.705,107,2.117,114,1.307,115,1.796,116,1.705,118,0.428,130,1.057,133,1.086,134,0.852,135,0.903,138,1.214,142,2.237,148,0.932,153,0.212,156,0.11,159,1.63,163,0.829,165,0.11,166,0.126,167,0.653,168,0.369,173,1.223,192,0.852,194,4.803,198,1.458,208,1.105,214,1.471,243,2.991,247,2.247,248,1.337,257,0.655,258,0.916,259,0.72,260,1.537,261,0.72,262,0.72,263,0.655,264,0.72,265,0.624,266,1.057,267,0.655,268,0.72,269,1.398,270,0.72,271,0.72,272,0.624,273,0.539,274,1.057,275,0.655,276,0.595,277,0.72,278,0.655,279,0.72,280,0.655,281,0.72,282,0.624,283,0.72,284,0.624,285,0.595,286,0.72,287,0.655,288,0.72,289,0.655,290,0.72,291,0.72,292,0.655,293,0.72,294,0.655,295,0.72,296,0.655,297,0.687,298,0.761,299,0.72,300,0.655,301,0.72,302,0.655,303,0.72,304,0.655,305,0.687,306,0.72,307,0.655,308,0.539,309,0.72,310,0.655,311,0.687,312,0.72,313,0.687,314,0.72,315,0.655,316,0.72,317,0.539,318,0.566,319,0.624,320,0.72,321,0.72,322,0.01,323,0.01,330,1.471,341,1.893,355,1.544,357,2.756,364,1.108,367,1.002,397,3.266,400,3.285,415,3.892,416,2.503,442,1.544,443,1.796,500,2.117,501,2.147,505,1.622,544,1.53,557,2,573,1.362,592,2,621,1.877,623,1.442,631,1.893,632,2.472,633,2.192,638,1.53,641,1.442,648,1.63,663,1.705,704,2.662,706,4.289,707,3.924,712,3.688,731,3.279,737,4.359,741,4.289,745,3.678,746,2.237,760,4.359,764,4.704,769,1.402,772,2.561,774,3.753,789,3.905,804,2.237,821,2.991,839,3.343,844,2.037,845,2.037,853,3.678,877,1.53,881,2.505,894,1.893,917,2.037,946,1.877,958,2.505,959,4.803,960,3.544,961,5.123,962,1.622,963,4.854,964,4.276,965,2.756,966,3.678,967,4.276,968,4.276,969,4.276,970,5.067,971,5.947,972,3.892,973,3.892,974,5.067,975,5.947,976,5.947,977,5.067,978,4.276,979,4.276,980,4.276,981,4.276,982,2.633,983,2.912,984,2.912,985,2.508,986,3.343,987,3.343,988,3.343,989,4.276,990,2.912,991,3.285,992,5.947,993,2.991,994,3.285,995,2.912,996,4.276,997,2.912,998,4.276,999,2.912,1000,4.276,1001,2.912,1002,3.642,1003,4.775,1004,5.116,1005,2.912,1006,2.393,1007,2.912,1008,2.991,1009,3.343,1010,3.678,1011,2.991,1012,2.912,1013,4.276,1014,2.912,1015,4.276,1016,2.912,1017,2.912,1018,2.912,1019,3.285,1020,2.912,1021,2.756,1022,2.912,1023,2.912,1024,3.678,1025,3.678,1026,3.678,1027,3.678,1028,3.678,1029,3.678,1030,3.678,1031,4.276,1032,3.678,1033,4.276,1034,5.947,1035,2.912,1036,2.912,1037,4.276,1038,4.803,1039,2.912,1040,4.276,1041,4.276,1042,4.276,1043,5.067,1044,2.912,1045,2.505,1046,2.912,1047,2.912,1048,2.912,1049,2.912,1050,2.912,1051,2.912,1052,1.362,1053,2.505,1054,2.912,1055,2.912,1056,2.912,1057,2.912,1058,3.285,1059,2.912,1060,2.912,1061,2.912,1062,4.276,1063,2.912,1064,2.505,1065,2.912,1066,2.912,1067,2.912,1068,2.561,1069,1.442,1070,1.362,1071,2.912,1072,2.912,1073,4.276,1074,2.756,1075,2.756,1076,2.756,1077,3.285,1078,2.991,1079,2.991,1080,2.991,1081,2.991]],["title/interfaces/Category.html",[100,0.525,624,0.683]],["body/interfaces/Category.html",[3,0.169,4,0.169,9,0.127,13,0.306,15,0.665,16,2.182,29,0.902,31,0.523,40,0.169,41,0.515,51,0.382,61,0.464,71,0.019,72,0.342,73,0.303,76,0.493,77,1.476,79,0.665,83,0.65,85,0.505,92,0.581,100,1.111,111,2.178,114,0.756,118,0.463,132,1.564,133,1.361,138,1.353,141,2.322,147,1.237,148,0.65,153,0.241,156,0.147,165,0.199,166,0.169,167,0.733,168,0.752,177,1.214,182,3.137,192,0.911,198,1.211,222,2.202,298,0.953,322,0.012,323,0.012,371,1.945,392,0.875,405,2.04,416,2.292,429,2.408,436,1.476,438,1.405,442,2.519,443,2.93,450,2.288,451,2.508,452,2.202,467,1.476,470,2.33,471,2.936,480,1.552,482,1.723,483,1.723,484,1.359,485,1.926,499,1.989,500,3.142,505,1.989,586,2.33,588,2.508,623,1.107,624,1.097,626,1.723,628,2.408,633,2.182,637,2.092,642,0.626,643,2.045,644,1.82,646,1.405,647,2.452,649,2.508,651,1.217,652,1.057,656,1.552,657,1.723,658,2.202,659,1.989,660,1.82,661,2.202,662,1.723,663,1.552,664,2.33,665,3.28,671,2.33,672,2.33,673,3.552,674,2.33,675,2.33,678,3.141,679,1.723,682,1.926,684,3.552,685,2.452,686,1.723,688,2.33,690,2.092,692,2.178,695,2.722,769,2.326,802,2.989,807,3.141,810,3.668,811,2.508,828,2.756,885,1.476,982,1.723,1074,2.508,1082,2.989,1083,5.701,1084,3.141,1085,3.553,1086,4.178,1087,3.552,1088,4.029,1089,4.512,1090,4.512,1091,3.141,1092,3.668,1093,2.935,1094,4.512,1095,3.347,1096,3.347,1097,2.945,1098,2.178,1099,2.722,1100,2.989,1101,3.347,1102,2.756,1103,2.508,1104,2.722,1105,3.823,1106,3.347,1107,2.045,1108,2.989,1109,3.347,1110,3.347,1111,3.347,1112,3.347,1113,3.347,1114,2.508,1115,3.38,1116,3.347,1117,3.347,1118,4.512,1119,2.722,1120,1.634,1121,3.347,1122,3.347,1123,2.722,1124,2.33,1125,3.347,1126,3.347,1127,3.347,1128,3.347,1129,2.722,1130,5.103,1131,3.347,1132,3.347,1133,2.722,1134,2.508,1135,3.347,1136,3.347,1137,2.045,1138,3.347,1139,3.347,1140,4.512,1141,3.347,1142,3.668,1143,3.347,1144,3.347,1145,3.347,1146,3.347,1147,3.347,1148,3.347]],["title/components/CategoryDropdownComponent.html",[0,0.045,35,0.83]],["body/components/CategoryDropdownComponent.html",[0,0.081,1,0.767,2,0.978,3,0.148,4,0.148,5,0.8,6,1.066,7,1.186,8,0.731,9,0.111,13,0.498,15,0.432,19,0.767,25,0.663,26,1.491,27,1.09,28,0.57,29,0.853,30,1.729,31,0.643,32,1.129,34,1.651,35,1.35,36,2.12,38,1.129,40,0.148,41,0.471,48,4.858,51,0.471,54,2.277,61,0.661,66,0.77,68,2.868,70,0.806,71,0.019,72,0.336,73,0.318,74,0.82,79,0.735,80,0.767,85,0.538,89,3.869,92,0.648,96,2.24,99,2.011,100,1.096,101,3.087,102,5.157,103,2.742,106,1.877,118,0.396,125,3.098,126,2.868,128,2.681,130,1.484,133,1.027,134,0.939,135,0.849,138,0.978,144,2.517,146,2.011,147,1.415,148,1.003,151,2.972,153,0.227,154,2.386,155,1.909,156,0.129,161,5.157,163,0.971,165,0.129,166,0.24,167,0.631,168,0.432,190,2.62,191,2.934,192,0.432,198,0.978,257,0.767,258,1.027,259,0.843,260,1.484,261,0.843,262,0.843,263,0.767,264,0.843,265,0.731,266,1.184,267,0.767,268,0.843,269,0.767,270,0.843,271,0.843,272,0.731,273,0.631,274,1.184,275,0.767,276,0.696,277,0.843,278,0.767,279,0.843,280,0.767,281,0.843,282,0.731,283,0.843,284,0.731,285,0.696,286,0.843,287,0.767,288,0.843,289,0.767,290,0.843,291,0.843,292,0.767,293,0.843,294,0.767,295,0.843,296,0.767,297,0.804,298,0.95,299,0.843,300,0.767,301,0.843,302,0.767,303,0.843,304,0.767,305,0.804,306,0.843,307,0.767,308,0.631,309,0.843,310,0.767,311,0.804,312,0.843,313,0.804,314,0.843,315,0.767,316,0.843,317,0.631,318,0.663,319,0.731,320,0.843,321,0.843,322,0.011,323,0.011,352,3.087,395,2.371,416,2.482,422,3.679,453,2.62,454,3.093,456,4.199,462,3.098,484,1.241,521,2.517,544,1.792,587,3.679,588,2.198,928,4.199,1097,2.993,1102,3.539,1105,3.087,1149,6.343,1150,2.934,1151,3.35,1152,3.595,1153,3.595,1154,5.536,1155,4.79,1156,5.536,1157,5.536,1158,6.003,1159,4.79,1160,4.79,1161,6.003,1162,2.24,1163,6.324,1164,5.536,1165,2.681,1166,5.536,1167,4.12,1168,2.934,1169,4.79,1170,4.199,1171,4.116,1172,3.411,1173,4.226,1174,6.003,1175,3.411,1176,3.087,1177,4.12,1178,4.12,1179,4.79,1180,3.411,1181,3.595,1182,3.411,1183,2.934,1184,4.79,1185,4.762,1186,3.315,1187,4.253,1188,3.568,1189,3.411,1190,3.411,1191,4.79,1192,4.12,1193,4.79,1194,3.411,1195,3.411,1196,3.35,1197,3.411,1198,4.79,1199,3.411,1200,2.868,1201,2.386,1202,1.173,1203,3.411,1204,4.762,1205,3.411,1206,4.79,1207,4.79,1208,4.79,1209,6.324,1210,3.411,1211,2.934,1212,2.62,1213,2.62,1214,3.411,1215,3.411,1216,4.12,1217,4.79]],["title/injectables/CategoryService.html",[642,0.441,1102,1.941]],["body/injectables/CategoryService.html",[3,0.155,4,0.155,9,0.116,13,0.524,15,0.776,16,2.132,28,0.826,29,0.914,31,0.664,40,0.155,51,0.602,61,0.59,66,0.731,70,0.864,71,0.019,72,0.345,73,0.279,74,0.767,76,0.626,77,1.875,79,0.746,83,0.826,85,0.608,92,0.637,100,1.108,111,2.767,114,0.961,118,0.443,132,1.064,133,1.462,138,1.393,141,1.58,147,0.842,148,0.826,153,0.232,156,0.135,165,0.187,166,0.155,167,0.717,168,0.815,177,1.193,182,3.116,192,0.894,198,1.158,222,1.499,298,1.044,322,0.012,323,0.012,371,2.181,392,0.802,405,2.391,416,2.51,429,2.587,436,1.875,438,1.785,442,2.665,443,3.099,450,2.343,451,2.3,452,2.571,467,1.354,470,2.96,471,2.808,480,1.972,482,2.189,483,1.58,484,1.47,485,2.447,499,1.354,500,2.447,505,1.354,586,2.137,588,2.3,623,1.016,624,0.914,628,1.875,633,2.01,637,1.424,642,0.59,643,1.875,644,2.312,646,1.785,647,3.11,649,3.186,651,1.546,652,0.969,656,1.972,657,2.711,658,2.076,659,1.875,660,1.669,661,2.571,662,2.189,663,1.972,664,3.667,665,3.183,671,2.96,672,3.396,673,3.396,674,2.137,675,2.137,678,2.96,679,2.189,682,2.447,684,3.85,685,3.007,686,2.189,688,2.137,690,1.972,692,2.767,695,3.458,769,1.86,802,2.742,807,2.137,810,2.496,811,3.186,828,1.875,885,1.875,948,1.228,950,2.496,982,2.189,1074,2.3,1082,2.742,1083,4.253,1084,2.511,1085,1.997,1086,3.85,1087,3.396,1088,2.742,1089,3.07,1090,3.07,1091,2.137,1092,2.496,1093,1.997,1094,3.07,1095,3.07,1096,3.07,1097,3.034,1098,2.767,1099,3.458,1100,3.798,1101,4.253,1102,3.217,1103,3.186,1104,3.458,1105,4.287,1106,4.253,1107,2.598,1108,3.798,1109,4.253,1110,4.253,1111,4.253,1112,4.253,1113,5.267,1114,2.3,1115,3.186,1116,3.07,1117,3.07,1118,4.253,1119,2.496,1120,1.499,1121,3.07,1122,3.07,1123,2.496,1124,2.137,1125,3.07,1126,3.07,1127,3.07,1128,4.253,1129,3.458,1130,4.879,1131,4.253,1132,3.07,1133,3.458,1134,3.186,1135,4.253,1136,4.253,1137,1.875,1138,3.07,1139,3.07,1140,4.253,1141,3.07,1142,3.458,1143,3.07,1144,3.07,1145,3.07,1146,4.253,1147,4.253,1148,3.07,1218,4.944,1219,3.569,1220,3.569,1221,3.569,1222,3.569,1223,3.569,1224,3.569,1225,3.569,1226,3.569]],["title/interfaces/ChatMessage.html",[624,0.683,1227,2.381]],["body/interfaces/ChatMessage.html",[3,0.167,4,0.167,9,0.126,13,0.304,15,0.489,20,2.488,25,1.285,40,0.167,41,0.513,61,0.461,71,0.019,72,0.341,73,0.287,76,0.489,78,2.032,79,0.585,83,0.645,85,0.579,114,1.285,118,0.434,135,0.935,138,1.516,146,1.621,153,0.258,156,0.146,165,0.198,166,0.167,167,0.716,168,0.838,177,1.163,192,0.909,198,0.788,208,1.464,214,1.328,215,1.266,255,1.805,276,0.788,285,0.788,298,0.58,308,1.17,322,0.012,323,0.014,325,2.741,327,2.028,328,4.079,329,3.312,335,2.966,336,2.925,345,2.028,355,1.394,364,1,367,2.395,369,1.911,380,4.345,383,2.028,389,2.488,392,0.868,394,2.7,426,2.312,427,3.132,433,1.352,441,1.911,479,4.133,513,2.488,522,2.7,528,2.028,545,2.488,546,2.312,563,1.883,624,1.093,626,1.709,642,0.622,651,1.631,652,1.048,659,1.464,662,1.709,663,1.54,682,1.911,686,1.709,713,4.007,766,4.007,767,1.709,770,3.016,794,2.7,815,2.801,819,2.028,925,2.161,985,2.582,994,2.966,1002,2.028,1006,2.161,1068,3.124,1069,1.911,1070,1.805,1091,3.124,1120,1.621,1227,4.488,1228,2.966,1229,2.966,1230,4.007,1231,2.92,1232,4.488,1233,5.349,1234,5.441,1235,3.649,1236,2.357,1237,4.488,1238,3.307,1239,4.007,1240,4.488,1241,2.7,1242,2.966,1243,2.488,1244,3.808,1245,3.321,1246,4.539,1247,5.761,1248,2.966,1249,4.17,1250,4.488,1251,5.083,1252,4.861,1253,2.488,1254,3.321,1255,3.321,1256,3.321,1257,2.966,1258,2.966,1259,2.966,1260,2.966,1261,2.92,1262,3.321,1263,2.7,1264,2.488,1265,4.539,1266,2.488,1267,3.321,1268,2.966,1269,2.161,1270,3.321,1271,3.321,1272,3.321,1273,2.966,1274,2.966,1275,2.312,1276,4.488,1277,5.686,1278,3.132,1279,3.321,1280,2.966,1281,2.7,1282,4.539,1283,4.007,1284,3.362,1285,2.92,1286,4.007,1287,3.321,1288,2.161,1289,3.321,1290,2.488,1291,2.028,1292,2.582,1293,4.488,1294,5.686,1295,1.805,1296,2.7,1297,3.321,1298,3.321,1299,3.321,1300,4.007,1301,3.321,1302,3.321,1303,3.321,1304,3.321,1305,4.539,1306,3.321,1307,3.321,1308,3.321,1309,3.321,1310,3.321,1311,3.321,1312,4.007,1313,4.488,1314,4.007,1315,4.488,1316,3.321,1317,2.966,1318,4.007,1319,3.321,1320,3.321,1321,3.321,1322,3.321,1323,3.321,1324,3.321,1325,3.321,1326,3.321,1327,3.321,1328,2.966,1329,3.321,1330,2.7,1331,3.321,1332,3.321,1333,2.488,1334,3.321,1335,3.321,1336,2.7,1337,2.966,1338,3.321,1339,4.007,1340,3.321,1341,2.966,1342,3.321,1343,2.966,1344,4.007,1345,2.741,1346,2.488,1347,2.582,1348,2.7,1349,4.007,1350,2.488,1351,2.966,1352,2.966,1353,4.539,1354,2.966,1355,2.966,1356,2.966,1357,2.312,1358,2.966]],["title/interfaces/CompoDocConfig.html",[624,0.683,1359,2.381]],["body/interfaces/CompoDocConfig.html",[0,0.045,3,0.163,4,0.163,5,1.257,6,0.769,7,0.527,8,0.527,9,0.22,15,0.701,17,3.073,23,1.089,24,1.865,26,0.478,31,0.615,40,0.107,41,0.45,54,0.933,61,0.294,69,1.218,71,0.019,72,0.12,73,0.322,74,0.916,92,0.47,94,0.888,115,0.976,118,0.434,125,2.563,134,0.65,144,1.293,147,1.614,148,0.857,153,0.21,155,1.377,156,0.093,165,0.093,166,0.107,168,0.857,173,1.582,177,1.073,192,0.857,198,1.381,208,2.213,212,1.293,213,1.865,214,1.903,215,2.149,222,1.582,248,1.178,273,0.847,298,0.912,308,0.455,317,0.455,318,1.315,322,0.009,323,0.009,336,3.486,345,3.292,364,1.33,367,1.903,369,1.218,383,3.503,392,0.553,461,2.406,483,1.089,484,2.014,499,0.933,507,1.474,558,1.293,563,1.361,573,1.151,579,2.257,582,0.981,595,1.377,611,1.586,614,1.721,615,3.203,619,3.203,621,2.429,623,1.46,624,0.847,626,1.089,633,1.178,656,0.981,667,1.218,679,1.089,685,1.151,690,0.981,696,2.027,700,1.721,750,1.293,767,1.089,769,2.326,770,1.089,815,2.027,833,1.98,865,3.869,885,0.933,889,1.586,894,1.089,902,1.721,936,1.721,937,1.721,938,1.721,965,4.359,1008,3.869,1052,1.151,1069,2.738,1070,2.141,1084,1.089,1098,2.563,1173,2.429,1176,2.952,1236,2.206,1238,2.109,1261,1.377,1278,2.267,1288,3.266,1345,1.293,1347,1.218,1359,2.952,1360,1.218,1361,1.377,1362,1.721,1363,3.942,1364,3.942,1365,3.942,1366,3.942,1367,3.942,1368,3.942,1369,3.942,1370,3.942,1371,3.942,1372,3.942,1373,3.942,1374,3.942,1375,3.942,1376,3.942,1377,3.942,1378,3.942,1379,3.942,1380,3.942,1381,3.942,1382,3.942,1383,3.942,1384,3.942,1385,4.25,1386,2.636,1387,1.98,1388,1.721,1389,1.98,1390,2.952,1391,1.721,1392,1.98,1393,1.474,1394,1.721,1395,2.429,1396,3.566,1397,2.895,1398,1.89,1399,1.377,1400,2.109,1401,2.895,1402,1.89,1403,3.846,1404,2.952,1405,4.297,1406,2.429,1407,1.033,1408,2.109,1409,1.89,1410,1.586,1411,5.486,1412,1.377,1413,3.203,1414,1.586,1415,1.89,1416,1.721,1417,1.89,1418,1.89,1419,2.429,1420,1.89,1421,2.895,1422,1.89,1423,1.89,1424,1.474,1425,3.869,1426,2.895,1427,5.024,1428,3.518,1429,3.518,1430,1.89,1431,4.995,1432,2.429,1433,1.89,1434,1.721,1435,1.89,1436,1.89,1437,1.89,1438,1.721,1439,1.721,1440,3.203,1441,3.518,1442,3.637,1443,3.494,1444,3.399,1445,4.483,1446,3.942,1447,3.942,1448,3.942,1449,4.573,1450,3.073,1451,4.248,1452,4.248,1453,4.483,1454,3.942,1455,5.035,1456,4.666,1457,4.25,1458,1.89,1459,2.109,1460,1.721,1461,4.25,1462,1.586,1463,3.518,1464,1.721,1465,4.934,1466,1.89,1467,2.895,1468,3.203,1469,1.89,1470,3.308,1471,3.203,1472,1.89,1473,2.257,1474,2.636,1475,1.89,1476,1.89,1477,1.721,1478,1.89,1479,1.89,1480,3.637,1481,1.586,1482,1.721,1483,2.952,1484,1.89,1485,1.586,1486,2.952,1487,1.89,1488,3.518,1489,1.89,1490,3.518,1491,1.89,1492,1.89,1493,1.89,1494,2.742,1495,1.89,1496,1.89,1497,2.636,1498,2.636,1499,3.518,1500,1.721,1501,2.895,1502,1.89,1503,1.89,1504,3.203,1505,3.761,1506,2.895,1507,1.474,1508,4.483,1509,1.89,1510,3.589,1511,2.895,1512,1.89,1513,1.89,1514,1.89,1515,1.474,1516,1.721,1517,1.89,1518,1.89,1519,4.813,1520,1.89,1521,1.586,1522,2.895,1523,1.89,1524,1.89,1525,1.89,1526,1.89,1527,1.89,1528,1.89,1529,1.89,1530,1.89,1531,1.89,1532,1.89,1533,1.89,1534,1.89,1535,1.89,1536,1.89,1537,2.109,1538,1.89,1539,1.89,1540,1.89,1541,1.89,1542,1.89,1543,1.89,1544,1.474,1545,1.89,1546,1.89,1547,1.89,1548,1.89,1549,1.89,1550,5.035,1551,1.89,1552,1.89,1553,1.89,1554,1.89,1555,1.89,1556,1.89,1557,1.89,1558,1.89,1559,1.89,1560,1.721,1561,3.518,1562,2.895,1563,1.89,1564,1.89,1565,3.942,1566,4.483,1567,1.89,1568,1.89,1569,1.89,1570,3.518,1571,3.518,1572,1.89,1573,1.89,1574,1.89,1575,1.89,1576,1.474,1577,1.89,1578,3.942,1579,1.89,1580,1.89,1581,1.89,1582,2.895,1583,1.89,1584,1.721,1585,1.89,1586,1.89,1587,1.89,1588,1.89,1589,1.89,1590,1.89,1591,1.89,1592,1.98,1593,1.89,1594,1.721,1595,1.89,1596,3.518,1597,1.89,1598,1.89,1599,1.89,1600,1.89,1601,1.89,1602,1.89,1603,1.89,1604,1.89,1605,1.89,1606,1.377,1607,1.89,1608,1.89,1609,2.895,1610,1.89,1611,1.89,1612,2.895,1613,1.89,1614,1.586,1615,1.721,1616,1.721,1617,1.89,1618,1.89,1619,1.89,1620,1.586,1621,1.89,1622,1.89,1623,1.89,1624,1.721,1625,1.89,1626,3.308,1627,1.89,1628,1.377,1629,1.721,1630,1.474,1631,1.89,1632,1.89,1633,2.257,1634,1.89,1635,2.895,1636,1.89,1637,3.073,1638,1.89,1639,2.895,1640,1.89,1641,1.89,1642,1.89,1643,2.895,1644,1.89,1645,1.89,1646,0.846,1647,1.89,1648,1.474,1649,1.721,1650,1.721,1651,1.721,1652,1.721,1653,1.721,1654,1.89,1655,1.89,1656,1.586,1657,1.89,1658,1.89,1659,1.89]],["title/injectables/ConfigService.html",[642,0.441,1660,1.828]],["body/injectables/ConfigService.html",[3,0.182,4,0.182,9,0.2,13,0.33,21,2.196,27,0.783,40,0.182,41,0.541,51,0.541,61,0.734,66,0.78,71,0.019,72,0.341,73,0.294,76,0.698,78,1.894,79,0.617,83,0.92,85,0.647,114,1.402,118,0.465,134,0.861,135,0.955,153,0.209,156,0.159,165,0.159,166,0.182,168,0.96,177,1.187,311,1.298,322,0.013,323,0.013,329,3.492,392,0.942,393,3.136,442,2.566,467,2.089,501,2.36,563,2.696,628,2.089,642,0.657,644,2.575,651,2.369,652,1.137,822,3.852,830,3.852,885,2.479,948,1.44,1241,2.929,1253,4.648,1275,3.915,1407,2.745,1424,4.256,1494,3.298,1544,4.537,1630,3.915,1660,3.236,1661,3.602,1662,3.852,1663,4.727,1664,5.294,1665,5.294,1666,5.294,1667,3.611,1668,6.537,1669,6.537,1670,6.537,1671,5.507,1672,4.188,1673,3.852,1674,3.549,1675,6.204,1676,5.997,1677,4.231,1678,5.624,1679,5.624,1680,4.231,1681,3.298,1682,5.507,1683,5.507,1684,5.507,1685,4.188,1686,4.188,1687,5.507,1688,4.188,1689,5.507,1690,4.188,1691,5.507,1692,5.507,1693,5.624,1694,5.507,1695,4.188,1696,4.213,1697,5.507,1698,4.738,1699,5.507,1700,4.188,1701,5.507,1702,6.154,1703,5.507,1704,4.188,1705,4.188,1706,3.602,1707,4.188]],["title/components/DownloadComponentComponent.html",[0,0.045,272,0.792]],["body/components/DownloadComponentComponent.html",[0,0.078,1,0.56,2,0.776,3,0.108,4,0.108,5,0.635,6,0.778,7,0.534,8,0.534,9,0.235,13,0.438,15,0.773,16,1.966,18,3.328,19,1.587,21,2.059,25,0.739,26,1.448,27,1.059,28,0.416,29,0.986,31,0.334,32,0.896,33,2.973,34,1.376,35,0.56,38,0.896,40,0.224,41,0.374,51,0.374,54,1.958,61,0.454,63,3.778,64,2.561,65,2.94,66,0.713,70,0.693,71,0.019,72,0.298,73,0.304,74,0.616,75,3.328,76,0.654,78,1.308,79,0.737,80,1.037,83,0.862,85,0.535,86,2.973,91,2.286,92,0.646,94,1.373,95,1.596,96,1.778,100,0.916,101,2.45,106,1.189,113,2.45,114,0.739,115,1.919,116,2.059,118,0.43,129,1.864,130,0.94,132,1.748,133,1.587,134,0.584,135,0.334,137,4.503,138,1.342,144,1.998,148,0.77,150,3.51,151,1.882,153,0.257,156,0.094,157,2.973,158,1.102,159,1.393,163,0.708,164,1.491,165,0.196,166,0.108,167,0.721,168,0.887,173,1.596,177,0.862,178,1.605,179,2.973,182,1.045,183,1.232,187,1.232,192,0.925,198,0.776,208,0.944,212,2.424,213,2.283,214,0.856,215,1.512,217,1.741,246,3.328,247,2.424,248,1.442,255,2.157,256,2.283,257,0.56,258,0.815,259,0.615,260,1.276,261,0.615,262,0.615,263,0.56,264,0.615,265,0.534,266,0.94,267,0.56,268,0.615,269,0.56,270,0.615,271,0.615,272,1.256,273,1.361,274,0.94,275,0.56,276,0.508,277,0.615,278,0.56,279,0.615,280,0.56,281,0.615,282,1.106,283,0.615,284,0.534,285,0.508,286,0.615,287,0.56,288,0.615,289,0.56,290,0.615,291,0.615,292,0.56,293,0.615,294,0.56,295,0.615,296,0.56,297,0.587,298,0.374,299,0.615,300,0.56,301,0.615,302,0.56,303,0.615,304,0.56,305,0.587,306,0.615,307,0.56,308,0.461,309,0.615,310,0.56,311,0.587,312,0.615,313,0.587,314,0.615,315,0.56,316,0.615,317,0.461,318,0.484,319,0.534,320,0.615,321,0.615,322,0.009,323,0.009,338,2.581,341,1.683,355,1.373,361,2.168,364,0.645,371,1.246,395,1.882,416,2.27,433,0.645,448,1.683,461,1.308,473,2.973,477,4.1,521,1.998,544,1.308,563,1.373,592,1.778,623,1.313,624,0.703,625,2.335,628,0.944,631,2.853,632,2.853,638,1.998,641,1.882,644,1.778,646,1.373,648,3.519,653,3.519,680,1.741,709,3.966,721,2.128,746,1.912,772,2.277,774,3.304,776,2.921,786,4.503,789,2.659,837,2.921,841,1.912,877,3.304,899,2.659,917,3.226,928,1.741,947,3.271,985,1.882,986,2.277,987,2.277,988,2.277,1009,2.277,1075,2.45,1076,2.45,1078,2.659,1079,2.659,1080,2.659,1081,2.659,1093,1.393,1102,3.304,1137,1.998,1151,2.659,1201,1.741,1236,2.059,1285,3.795,1291,1.998,1292,1.882,1295,1.778,1296,2.659,1345,2.424,1346,1.605,1347,1.232,1399,1.393,1442,2.277,1444,2.889,1462,1.605,1470,1.605,1480,1.491,1507,3.092,1633,2.762,1637,2.277,1646,0.856,1648,1.491,1656,2.973,1673,2.659,1708,4.801,1709,5.273,1710,5.273,1711,1.741,1712,3.271,1713,5.136,1714,4.95,1715,2.277,1716,2.921,1717,2.921,1718,3.968,1719,3.968,1720,4.441,1721,4.441,1722,4.441,1723,3.802,1724,3.802,1725,4.441,1726,3.802,1727,3.802,1728,2.921,1729,2.49,1730,2.49,1731,2.49,1732,3.271,1733,3.271,1734,3.271,1735,3.271,1736,2.49,1737,3.611,1738,3.271,1739,2.49,1740,4.784,1741,2.49,1742,2.49,1743,3.271,1744,3.271,1745,4.784,1746,5.043,1747,2.49,1748,3.271,1749,3.966,1750,2.49,1751,2.49,1752,2.45,1753,2.921,1754,2.659,1755,1.741,1756,2.142,1757,3.543,1758,2.921,1759,1.393,1760,3.584,1761,1.605,1762,3.271,1763,3.968,1764,3.968,1765,2.142,1766,2.142,1767,2.142,1768,4.503,1769,2.142,1770,2.142,1771,2.142,1772,2.142,1773,1.741,1774,2.142,1775,2.142,1776,2.142,1777,2.142,1778,2.142,1779,2.142,1780,1.605,1781,2.142,1782,2.142,1783,1.491,1784,2.142,1785,2.142,1786,2.142,1787,2.142,1788,2.142,1789,2.142,1790,2.142,1791,2.142,1792,2.142,1793,3.968,1794,2.142,1795,3.226,1796,2.142,1797,2.142,1798,2.142,1799,2.142,1800,2.142,1801,2.142,1802,2.142,1803,1.912,1804,2.142,1805,3.968,1806,2.142,1807,2.142,1808,2.142,1809,2.142,1810,2.142,1811,1.912,1812,2.142,1813,2.142,1814,2.142,1815,3.271,1816,2.142,1817,2.142,1818,2.142,1819,2.142,1820,3.968,1821,2.142,1822,2.142,1823,2.142,1824,2.142,1825,2.142,1826,2.142,1827,3.271,1828,2.142,1829,4.441,1830,2.142,1831,3.271,1832,2.45,1833,2.921,1834,2.921,1835,2.142,1836,2.142,1837,2.142,1838,2.142,1839,1.912,1840,1.912,1841,2.142,1842,2.142,1843,2.142,1844,2.142,1845,2.142,1846,2.142,1847,4.784,1848,2.142,1849,2.142,1850,2.142,1851,2.142,1852,2.142,1853,2.142,1854,2.142,1855,5.544,1856,2.142,1857,2.142,1858,1.491,1859,2.142,1860,1.605,1861,1.741,1862,2.142,1863,1.741,1864,2.142,1865,2.142,1866,1.912,1867,2.142,1868,2.142,1869,2.142,1870,3.271,1871,2.142,1872,2.142,1873,2.142,1874,2.142,1875,2.142,1876,2.142,1877,2.142,1878,2.142,1879,2.142,1880,3.271,1881,2.142,1882,2.142,1883,2.142,1884,2.142]],["title/interfaces/Expense.html",[29,0.525,624,0.683]],["body/interfaces/Expense.html",[3,0.155,4,0.155,9,0.116,13,0.281,15,0.864,16,2.132,21,2.652,25,0.96,28,0.595,29,1.106,31,0.479,40,0.155,41,0.485,64,2.074,71,0.019,72,0.242,73,0.316,74,0.852,76,0.452,77,2.522,79,0.554,83,0.595,85,0.566,91,2.944,92,0.519,100,1.035,111,1.995,114,0.693,115,1.912,116,2.772,118,0.47,129,2.548,132,1.473,133,1.312,141,3.018,153,0.215,156,0.135,165,0.187,166,0.155,167,0.73,168,0.452,177,1.232,182,2.57,183,3.029,187,3.029,192,0.935,193,2.494,195,2.739,198,1.392,247,2.596,248,1.544,253,3.494,255,2.31,256,2.445,322,0.012,323,0.012,330,1.226,364,1.586,371,1.169,392,0.802,405,1.95,429,2.321,433,0.924,436,1.352,438,1.287,442,1.784,450,2.279,452,1.497,467,1.352,471,2.445,482,1.578,484,1.586,623,1.014,624,1.049,626,1.578,628,1.874,629,2.958,631,1.578,632,2.187,633,1.913,637,1.97,638,1.873,640,3.455,641,1.765,642,0.589,643,1.873,647,2.31,651,1.115,652,0.968,654,2.494,657,1.578,658,2.074,659,1.874,660,1.667,661,2.074,663,1.97,664,2.135,665,3.291,667,1.765,671,2.135,672,2.135,673,3.665,674,2.135,675,2.135,676,2.494,678,3.394,679,1.578,684,3.394,685,2.31,688,2.958,690,2.441,691,3.455,692,1.995,694,3.455,721,2.765,769,1.62,828,2.596,877,2.978,982,2.187,986,3.849,987,3.849,988,3.665,991,2.739,1058,2.739,1074,2.298,1084,2.187,1087,2.958,1092,4.651,1093,3.722,1097,1.422,1105,2.298,1107,1.873,1114,2.298,1115,2.298,1123,2.494,1124,2.135,1129,2.494,1142,2.494,1202,1.226,1231,1.995,1264,2.298,1292,3.375,1295,1.667,1576,2.135,1646,1.226,1773,2.494,1780,4.142,1783,4.391,1885,2.739,1886,5.529,1887,5.529,1888,4.25,1889,3.067,1890,3.067,1891,3.455,1892,3.067,1893,3.067,1894,3.067,1895,3.067,1896,3.067,1897,3.067,1898,3.067,1899,3.067,1900,3.067,1901,3.067,1902,3.067,1903,4.25,1904,3.067,1905,3.067,1906,3.067,1907,3.067,1908,3.067,1909,3.067,1910,3.067,1911,3.067,1912,3.067,1913,3.067,1914,3.067,1915,3.067,1916,3.067,1917,3.067,1918,4.876,1919,3.067,1920,4.876,1921,3.067,1922,3.067,1923,3.067,1924,3.067,1925,3.067,1926,4.876,1927,3.067,1928,3.067,1929,3.067,1930,3.067,1931,4.25,1932,3.067]],["title/components/ExpenseDetailsModalComponent.html",[0,0.045,275,0.83]],["body/components/ExpenseDetailsModalComponent.html",[0,0.078,1,0.671,2,1.153,3,0.129,4,0.129,5,0.727,7,0.64,8,0.64,9,0.097,13,0.404,15,0.761,16,1.361,18,3.641,19,1.567,21,2.699,23,1.927,24,2.544,25,0.58,26,1.474,27,1.078,28,0.499,29,1.089,30,1.572,31,0.585,32,1.026,33,3.312,34,1.533,35,1.27,38,1.026,40,0.129,41,0.428,48,3.948,51,0.428,54,2.142,55,3.745,61,0.356,62,2.568,63,4.041,66,0.764,70,0.585,71,0.019,72,0.307,73,0.298,74,0.519,75,3.312,76,0.552,79,0.488,80,0.671,83,0.727,85,0.551,86,3.312,91,2.996,92,0.657,94,1.572,95,1.828,96,2.641,97,3.745,100,1.054,102,3.045,103,2.931,106,1.766,110,3.745,114,0.846,115,1.753,116,2.699,118,0.342,129,2.516,130,1.076,133,0.933,134,0.761,135,0.69,144,2.287,146,2.633,147,1.026,148,0.858,153,0.228,156,0.165,157,1.924,158,1.321,161,2.088,162,2.568,163,0.849,165,0.113,166,0.129,167,0.458,173,1.828,178,1.924,179,3.871,182,1.828,183,1.477,184,3.745,187,1.477,189,2.568,190,2.293,192,0.378,243,3.045,246,4.277,247,3.295,248,2.203,249,3.745,250,3.344,251,3.951,252,3.951,253,2.287,254,3.745,255,2.932,256,3.104,257,0.671,258,0.933,259,0.738,260,1.396,261,0.738,262,0.738,263,0.671,264,0.738,265,0.64,266,1.076,267,0.671,268,0.738,269,0.671,270,0.738,271,0.738,272,0.64,273,0.552,274,1.076,275,1.41,276,1.582,277,0.738,278,0.671,279,0.738,280,0.671,281,0.738,282,0.64,283,0.738,284,0.64,285,0.609,286,0.738,287,0.671,288,0.738,289,0.671,290,0.738,291,0.738,292,0.671,293,0.738,294,0.671,295,0.738,296,0.671,297,0.704,298,0.448,299,0.738,300,0.671,301,0.738,302,0.671,303,0.738,304,0.671,305,0.704,306,0.738,307,0.671,308,0.552,309,0.738,310,0.671,311,0.704,312,0.738,313,0.704,314,0.738,315,0.671,316,0.738,317,0.552,318,0.58,319,0.64,320,0.738,321,0.738,322,0.01,323,0.01,330,1.497,355,1.572,364,1.128,433,1.463,436,1.651,447,2.806,450,1.427,454,3.119,483,1.927,484,1.128,487,2.436,488,2.607,492,2.436,505,1.651,647,3.027,686,1.927,696,1.927,701,5.915,708,5.55,731,3.027,741,4.614,751,3.745,763,3.045,774,3.702,810,3.045,821,3.045,885,2.142,940,3.745,1077,3.344,1152,3.974,1153,3.382,1162,2.036,1165,2.436,1181,3.877,1188,4.277,1196,3.045,1200,3.382,1202,1.027,1834,3.344,1891,3.045,1933,5.617,1934,5.617,1935,6.29,1936,2.568,1937,3.344,1938,4.353,1939,4.353,1940,5.139,1941,5.649,1942,5.649,1943,5.649,1944,5.649,1945,6.006,1946,5.139,1947,4.353,1948,4.353,1949,3.745,1950,2.985,1951,2.985,1952,2.806,1953,2.985,1954,2.985,1955,4.386,1956,3.344,1957,2.985,1958,2.985,1959,5.649,1960,2.985,1961,3.344,1962,2.985,1963,2.985,1964,2.985,1965,2.985,1966,2.985,1967,4.353,1968,2.985,1969,3.745,1970,2.985,1971,4.353,1972,2.985,1973,2.985,1974,2.985,1975,2.985,1976,2.985,1977,2.985,1978,2.985,1979,2.985,1980,2.985,1981,2.985,1982,5.139,1983,2.985,1984,2.985,1985,2.985,1986,2.985,1987,2.985,1988,2.985,1989,2.985,1990,2.985,1991,2.985,1992,4.353,1993,4.353,1994,4.353,1995,4.353,1996,4.353,1997,4.353,1998,4.353]],["title/components/ExpenseListComponent.html",[0,0.045,278,0.83]],["body/components/ExpenseListComponent.html",[0,0.07,1,0.83,2,1.033,3,0.16,4,0.16,5,0.845,7,0.791,8,0.791,9,0.12,13,0.489,15,0.641,16,2.034,19,0.83,25,0.718,26,1.5,27,1.097,28,0.616,29,1.1,30,1.827,31,0.68,32,1.193,34,1.722,35,0.83,38,1.193,40,0.16,51,0.497,61,0.689,66,0.723,70,0.775,71,0.019,72,0.318,73,0.291,74,0.689,76,0.641,80,0.83,83,0.845,85,0.528,92,0.463,96,2.366,99,2.124,100,0.525,101,3.261,103,2.795,106,1.805,115,1.842,118,0.453,130,1.251,134,0.468,135,0.496,147,1.464,153,0.192,156,0.14,163,1.05,165,0.14,166,0.16,167,0.532,177,0.845,192,0.911,198,1.179,214,1.269,215,1.21,257,0.83,258,1.084,259,0.912,260,1.535,261,0.912,262,0.912,263,0.83,264,0.912,265,0.791,266,1.251,267,0.83,268,0.912,269,0.83,270,0.912,271,0.912,272,0.791,273,0.683,274,1.251,275,0.83,276,0.754,277,0.912,278,1.576,279,0.912,280,0.83,281,0.912,282,0.791,283,0.912,284,0.791,285,0.754,286,0.912,287,0.83,288,0.912,289,0.83,290,0.912,291,0.912,292,0.83,293,0.912,294,0.83,295,0.912,296,0.83,297,0.87,298,1.034,299,0.912,300,0.83,301,0.912,302,0.83,303,0.912,304,0.83,305,0.87,306,0.912,307,0.83,308,0.683,309,0.912,310,0.83,311,0.87,312,0.912,313,0.87,314,0.912,315,0.83,316,0.912,317,0.683,318,0.718,319,0.791,320,0.912,321,0.912,322,0.012,323,0.012,334,3.175,341,2.24,364,1.311,433,1.609,454,2.24,500,1.827,633,1.805,646,1.827,656,2.018,662,2.24,707,3.231,717,3.539,719,4.352,731,3.325,769,2.298,821,3.539,839,2.21,844,2.582,880,3.175,962,1.919,963,3.721,985,1.827,993,2.582,1002,3.033,1006,2.832,1011,3.539,1024,3.175,1025,4.966,1026,3.175,1027,3.175,1028,3.175,1029,3.175,1030,3.175,1064,4.352,1075,3.261,1076,3.261,1077,3.887,1088,3.887,1091,3.719,1107,2.658,1124,2.21,1152,3.719,1162,2.366,1165,2.832,1181,3.457,1200,3.719,1269,2.832,1295,2.904,1399,2.066,1696,3.261,1715,3.03,1754,3.539,1858,2.21,1933,5.384,1934,5.384,1937,3.887,1955,3.539,1999,6.029,2000,3.175,2001,4.352,2002,5.773,2003,3.539,2004,5.06,2005,5.06,2006,5.06,2007,5.06,2008,5.06,2009,5.06,2010,6.507,2011,5.06,2012,3.691,2013,4.352,2014,3.691,2015,5.06,2016,3.691,2017,5.06,2018,3.691,2019,3.691,2020,5.06,2021,3.691,2022,3.691,2023,3.691,2024,3.691,2025,3.691,2026,2.835,2027,6.211,2028,3.691,2029,4.352,2030,5.06,2031,5.06,2032,4.435,2033,5.773,2034,5.06,2035,3.691,2036,3.887,2037,3.691,2038,2.835,2039,2.835,2040,2.835,2041,2.835,2042,2.835,2043,2.835,2044,2.835,2045,2.835,2046,2.835,2047,2.835,2048,3.691,2049,3.691,2050,3.691,2051,3.691,2052,3.175,2053,5.773,2054,3.175,2055,5.773,2056,3.691,2057,5.06,2058,3.691,2059,3.691,2060,3.691,2061,3.691,2062,3.691,2063,5.06]],["title/injectables/ExpenseService.html",[64,1.551,642,0.441]],["body/injectables/ExpenseService.html",[3,0.145,4,0.145,9,0.109,13,0.527,15,0.867,16,2.269,21,1.884,25,1.157,28,0.994,29,1.108,31,0.635,40,0.145,51,0.464,61,0.399,64,2.499,66,0.731,70,0.875,71,0.019,72,0.328,73,0.283,74,0.816,76,0.599,77,2.73,79,0.667,83,0.789,85,0.626,91,2.091,92,0.597,100,1.002,111,2.644,114,0.918,115,1.924,116,2.599,118,0.464,129,2.267,132,0.997,133,1.435,141,2.779,153,0.208,156,0.127,165,0.179,166,0.145,167,0.719,168,0.694,177,1.221,182,1.404,183,1.656,187,1.656,192,0.926,193,2.339,195,2.569,198,1.367,247,1.757,248,1.046,253,3.424,255,1.564,256,1.656,322,0.011,323,0.011,330,1.625,364,1.688,371,1.549,392,0.752,405,2.353,429,2.54,433,1.224,436,1.792,438,1.706,442,2.149,450,2.379,452,1.984,467,1.269,471,1.656,482,2.091,484,1.419,623,0.952,624,0.874,628,1.269,629,2.003,631,2.091,632,2.635,633,1.477,637,1.334,638,2.482,640,4.163,641,2.338,642,0.564,643,1.757,647,3.047,651,1.477,652,0.908,654,3.304,657,2.635,658,1.984,659,1.792,660,1.564,661,2.499,663,2.374,664,3.564,665,3.225,667,2.338,671,2.829,672,3.28,673,3.564,674,2.003,675,2.003,676,2.339,678,3.28,679,2.091,684,3.759,685,2.936,688,2.829,690,2.374,691,3.304,692,2.644,694,3.304,721,3.331,769,1.096,828,1.757,877,3.424,948,1.15,950,2.339,982,2.635,986,4.011,987,4.011,988,3.759,991,3.629,1058,2.569,1074,3.045,1084,1.481,1087,2.003,1092,3.831,1093,3.065,1097,1.334,1105,3.045,1107,2.482,1114,2.156,1115,2.156,1123,2.339,1124,2.003,1129,3.304,1142,2.339,1202,1.15,1231,2.644,1264,3.045,1292,3.386,1295,2.209,1576,2.829,1646,1.625,1773,2.339,1780,3.045,1783,4.376,1885,2.569,1886,4.064,1887,4.064,1888,2.877,1889,2.877,1890,4.064,1891,4.163,1892,4.064,1893,4.064,1894,4.064,1895,5.12,1896,2.877,1897,2.877,1898,2.877,1899,2.877,1900,2.877,1901,4.064,1902,4.064,1903,4.064,1904,2.877,1905,2.877,1906,2.877,1907,2.877,1908,2.877,1909,2.877,1910,2.877,1911,2.877,1912,2.877,1913,2.877,1914,2.877,1915,2.877,1916,2.877,1917,2.877,1918,4.712,1919,4.064,1920,4.712,1921,4.064,1922,2.877,1923,4.064,1924,4.064,1925,2.877,1926,4.712,1927,2.877,1928,2.877,1929,2.877,1930,2.877,1931,4.064,1932,2.877,2064,4.724,2065,4.724,2066,3.345,2067,3.345,2068,3.345,2069,3.345,2070,3.345,2071,3.345,2072,3.345,2073,3.345,2074,3.345]],["title/components/FooterComponent.html",[0,0.045,280,0.83]],["body/components/FooterComponent.html",[0,0.084,1,1.034,2,1.195,3,0.303,4,0.199,5,1.131,7,0.985,8,0.985,9,0.15,13,0.461,19,1.034,25,0.894,26,1.522,27,1.117,28,0.768,29,0.832,32,1.084,35,1.034,38,1.379,40,0.199,41,0.575,61,0.549,66,0.615,70,0.618,71,0.019,72,0.315,73,0.254,74,0.549,76,0.741,79,0.656,80,1.034,83,0.977,100,0.654,114,1.317,118,0.354,130,1.446,134,0.583,135,0.618,147,1.379,153,0.222,156,0.174,165,0.174,166,0.199,167,0.483,257,1.034,258,1.254,259,1.137,260,1.674,261,1.137,262,1.137,263,1.034,264,1.137,265,0.985,266,1.446,267,1.034,268,1.137,269,1.034,270,1.137,271,1.137,272,0.985,273,0.851,274,1.446,275,1.034,276,0.939,277,1.137,278,1.034,279,1.137,280,1.607,281,1.137,282,0.985,283,1.137,284,0.985,285,0.939,286,1.137,287,1.034,288,1.137,289,1.034,290,1.137,291,1.137,292,1.034,293,1.137,294,1.034,295,1.137,296,1.034,297,1.084,298,0.691,299,1.137,300,1.034,301,1.137,302,1.034,303,1.137,304,1.034,305,1.084,306,1.137,307,1.034,308,0.851,309,1.137,310,1.034,311,1.084,312,1.137,313,1.084,314,1.137,315,1.034,316,1.137,317,0.851,318,0.894,319,0.985,320,1.137,321,1.137,322,0.014,323,0.014,330,2.012,341,2.59,393,2.844,661,2.844,704,3.074,716,4.494,822,4.092,830,4.737,962,2.569,1011,4.092,1202,1.581,1236,2.333,1407,2.457,1537,3.274,1646,2.33,1660,3.763,1662,4.092,1667,3.746,1680,4.494,1761,3.771,2075,3.956,2076,7.149,2077,5.851,2078,5.851,2079,5.851,2080,6.016,2081,3.532,2082,5.851,2083,3.532,2084,3.956,2085,3.216,2086,5.033,2087,5.033,2088,5.033]],["title/components/FormModelComponent.html",[0,0.045,282,0.792]],["body/components/FormModelComponent.html",[0,0.09,1,1.014,2,1.18,3,0.196,4,0.196,5,0.965,7,0.967,8,0.967,9,0.147,13,0.355,15,0.572,19,1.663,25,0.877,26,1.521,27,1.112,28,0.753,29,0.821,32,1.063,35,1.014,38,1.363,40,0.196,51,0.568,66,0.67,71,0.019,72,0.283,73,0.251,80,1.014,85,0.384,92,0.529,100,0.641,106,1.807,118,0.349,130,1.428,138,1.18,153,0.171,156,0.171,165,0.171,166,0.196,257,1.014,258,1.239,259,1.115,260,1.662,261,1.115,262,1.115,263,1.014,264,1.115,265,0.967,266,1.428,267,1.014,268,1.115,269,1.014,270,1.115,271,1.115,272,0.967,273,0.834,274,1.428,275,1.014,276,0.921,277,1.115,278,1.014,279,1.115,280,1.014,281,1.115,282,1.441,283,1.115,284,0.967,285,0.921,286,1.115,287,1.014,288,1.115,289,1.014,290,1.115,291,1.115,292,1.014,293,1.115,294,1.014,295,1.115,296,1.014,297,1.063,298,0.677,299,1.115,300,1.014,301,1.115,302,1.014,303,1.115,304,1.014,305,1.063,306,1.115,307,1.014,308,0.834,309,1.115,310,1.014,311,1.063,312,1.115,313,1.063,314,1.115,315,1.014,316,1.115,317,0.834,318,0.877,319,0.967,320,1.115,321,1.115,322,0.014,323,0.014,341,2.558,367,1.988,380,3.461,454,3.243,487,3.234,597,4.042,646,2.087,682,2.861,704,3.036,772,3.461,774,4.028,823,3.461,946,2.907,962,2.192,1052,3.459,1152,3.461,1153,4.027,1162,2.702,1165,3.234,1181,3.819,1186,3.461,1188,4.661,1200,4.027,1464,4.042,1755,4.704,1949,4.971,1955,4.042,1956,5.166,1961,4.439,2089,5.785,2090,3.88,2091,4.439,2092,5.779,2093,5.779,2094,5.779,2095,6.725,2096,4.51,2097,4.042,2098,4.51,2099,4.971,2100,4.439,2101,4.51,2102,5.779,2103,4.971,2104,3.461,2105,4.971,2106,4.51]],["title/injectables/GeminiApiService.html",[348,2.583,642,0.441]],["body/injectables/GeminiApiService.html",[3,0.141,4,0.141,9,0.106,13,0.462,15,0.744,16,2.274,17,2.771,21,2.343,28,0.543,29,1.052,40,0.141,41,0.455,51,0.455,61,0.552,64,2.851,66,0.653,70,0.724,71,0.019,72,0.264,73,0.269,74,0.643,76,0.586,79,0.724,83,0.773,85,0.578,91,2.601,103,1.846,106,1.447,115,1.672,118,0.44,129,2.121,133,1.502,134,0.412,135,0.436,138,1.411,153,0.265,156,0.175,165,0.204,166,0.201,167,0.678,168,0.86,177,1.134,183,2.908,187,2.908,192,0.938,208,1.755,214,1.592,215,1.767,255,1.519,256,1.608,285,1.101,322,0.013,323,0.011,325,3.263,327,1.707,328,4.516,329,3.377,332,3.981,336,3.469,345,3.087,348,4.645,354,3.555,355,1.671,361,1.364,364,0.842,367,2.021,369,2.291,374,4.958,380,3.865,381,2.795,383,2.432,389,2.094,392,1.041,427,3.361,442,1.671,443,1.943,470,3.518,475,4.513,479,4.959,500,1.608,528,1.707,546,1.946,563,1.671,595,1.818,624,0.601,631,1.438,632,1.438,642,0.701,644,2.164,648,2.59,651,1.837,652,1.257,656,1.296,661,1.943,663,2.343,682,1.608,686,2.049,703,5.054,763,3.237,770,2.749,819,3.49,831,2.795,839,4.324,899,5.051,948,1.118,1006,3.288,1068,3.718,1069,1.608,1070,2.164,1075,2.094,1076,2.094,1078,2.273,1079,2.273,1080,2.273,1081,2.273,1104,2.273,1120,1.943,1134,2.094,1187,2.496,1202,1.118,1227,3.475,1233,4.958,1234,4.141,1236,1.846,1238,3.8,1239,4.513,1241,3.237,1242,3.555,1243,2.983,1248,3.555,1252,2.496,1257,4.513,1258,4.141,1259,4.141,1260,4.141,1261,3.288,1263,3.237,1266,3.475,1273,3.555,1278,1.608,1285,1.818,1288,3.017,1292,1.608,1295,2.164,1312,4.141,1317,3.555,1328,2.496,1333,2.983,1336,2.273,1344,3.555,1345,3.087,1346,2.983,1347,2.908,1348,3.237,1349,3.555,1350,2.983,1351,3.555,1352,3.555,1353,4.141,1354,3.555,1355,3.555,1356,3.555,1358,2.496,1400,4.042,1673,2.273,1759,1.818,1780,3.786,1832,2.094,1833,2.496,2029,2.795,2107,5.552,2108,2.496,2109,4.628,2110,5.875,2111,4.628,2112,5.391,2113,5.875,2114,4.628,2115,2.496,2116,4.628,2117,4.628,2118,3.249,2119,5.875,2120,6.209,2121,3.249,2122,3.555,2123,6.209,2124,3.981,2125,5.875,2126,4.77,2127,5.391,2128,4.628,2129,3.249,2130,4.628,2131,3.249,2132,3.249,2133,3.249,2134,3.249,2135,3.249,2136,4.628,2137,3.249,2138,3.249,2139,3.249,2140,3.249,2141,3.249,2142,3.249,2143,3.249,2144,2.496,2145,4.628,2146,3.249,2147,4.628,2148,2.795,2149,3.249,2150,2.795,2151,3.981,2152,4.628,2153,3.249,2154,3.249,2155,3.249,2156,3.249,2157,3.249,2158,3.249,2159,3.249,2160,4.628,2161,3.249,2162,3.249,2163,3.249,2164,3.981,2165,3.981,2166,4.628,2167,5.391,2168,3.249,2169,3.249,2170,3.249,2171,3.249,2172,3.249,2173,3.249,2174,3.249,2175,3.249,2176,3.249,2177,3.249,2178,2.795,2179,2.795,2180,2.795,2181,4.628,2182,3.249,2183,3.249,2184,3.249,2185,3.981,2186,3.249,2187,2.795,2188,4.628,2189,3.249,2190,2.496,2191,3.249,2192,3.249,2193,2.795,2194,2.496,2195,3.249,2196,3.249,2197,4.628,2198,3.249,2199,3.249,2200,3.249,2201,3.249]],["title/components/GlobalLoaderComponent.html",[0,0.045,284,0.792]],["body/components/GlobalLoaderComponent.html",[0,0.086,1,0.955,2,1.135,3,0.184,4,0.184,5,0.929,7,0.911,8,0.911,9,0.138,13,0.488,19,0.955,25,0.826,26,1.515,27,1.108,28,0.71,29,0.79,31,0.571,32,1.311,34,1.848,35,0.955,38,1.311,40,0.184,41,0.546,51,0.546,61,0.507,66,0.717,70,0.747,71,0.019,72,0.322,73,0.269,74,0.863,76,0.705,79,0.623,80,0.955,83,0.929,85,0.473,92,0.602,100,0.604,118,0.397,130,1.374,134,0.785,135,0.832,146,2.335,147,1.55,148,1.035,153,0.235,156,0.161,163,1.209,165,0.161,166,0.184,167,0.584,257,0.955,258,1.192,259,1.05,260,1.625,261,1.05,262,1.05,263,0.955,264,1.05,265,0.911,266,1.374,267,0.955,268,1.05,269,0.955,270,1.05,271,1.05,272,0.911,273,0.786,274,1.374,275,0.955,276,0.868,277,1.05,278,0.955,279,1.05,280,0.955,281,1.05,282,0.911,283,1.05,284,1.5,285,1.56,286,1.05,287,0.955,288,1.05,289,0.955,290,1.05,291,1.05,292,0.955,293,1.05,294,0.955,295,1.05,296,0.955,297,1.002,298,0.638,299,1.05,300,0.955,301,1.05,302,0.955,303,1.05,304,0.955,305,1.002,306,1.05,307,0.955,308,0.786,309,1.05,310,0.955,311,1.002,312,1.05,313,1.002,314,1.05,315,0.955,316,1.05,317,0.786,318,0.826,319,0.911,320,1.05,321,1.05,322,0.013,323,0.013,330,1.912,341,2.461,367,2.453,395,2.752,426,4.526,427,3.681,438,2.007,492,3.679,505,2.109,515,3.584,528,3.747,545,2.739,546,2.544,592,2.6,770,3.331,823,3.329,828,2.921,1021,3.584,1070,3.383,1171,3.937,1202,1.461,1263,3.889,1357,3.329,1408,3.679,1459,3.112,1646,1.912,1681,3.329,2036,4.271,2202,6.022,2203,3.655,2204,5.56,2205,4.783,2206,4.783,2207,5.56,2208,5.56,2209,5.331,2210,4.249,2211,5.56,2212,3.889,2213,5.56,2214,4.249,2215,4.783,2216,4.783,2217,4.249,2218,4.249,2219,4.249,2220,4.249,2221,5.56]],["title/injectables/GlobalLoaderService.html",[427,1.828,642,0.441]],["body/injectables/GlobalLoaderService.html",[0,0.091,3,0.216,4,0.216,9,0.162,13,0.526,40,0.216,41,0.605,51,0.605,66,0.733,70,0.827,71,0.019,72,0.301,73,0.29,74,0.891,76,0.884,79,0.69,85,0.568,92,0.668,118,0.404,128,3.447,134,0.632,135,0.67,147,1.452,153,0.233,156,0.189,165,0.189,166,0.216,167,0.647,168,0.846,284,1.646,285,1.562,322,0.015,323,0.015,330,2.118,367,2.118,392,1.122,426,4.582,427,3.048,492,3.447,515,4.495,527,4.293,528,3.834,529,4.293,592,2.88,642,0.735,652,1.355,767,2.726,770,3.231,948,1.716,1019,4.731,1070,3.493,1171,3.688,1408,3.904,1459,3.447,1646,2.118,1681,3.688,2100,4.731,2212,4.307,2215,5.298,2216,5.298,2222,6.164,2223,4.293,2224,4.731,2225,6.158,2226,3.969,2227,4.99,2228,6.158,2229,4.99,2230,4.99,2231,4.99,2232,4.731,2233,4.99,2234,4.99,2235,4.99]],["title/components/GraphsComponent.html",[0,0.045,287,0.83]],["body/components/GraphsComponent.html",[0,0.065,1,0.527,2,0.741,3,0.102,4,0.102,5,0.606,6,0.732,7,0.502,8,0.502,9,0.076,13,0.47,15,0.563,16,2.273,19,0.527,23,1.606,24,2.198,25,0.455,26,1.438,27,1.052,28,0.391,29,1.034,30,1.31,31,0.884,32,0.855,35,0.527,36,1.606,38,0.855,40,0.102,41,0.491,51,0.356,54,1.896,61,0.433,64,2.589,66,0.757,70,0.768,71,0.019,72,0.331,73,0.325,74,0.683,78,1.72,79,0.606,80,0.527,85,0.508,89,3.974,92,0.627,94,1.805,95,2.099,100,0.813,103,1.994,106,1.866,107,1.796,114,1.257,115,1.401,116,2.459,129,1.805,130,0.897,132,1.491,133,1.544,134,0.834,135,0.957,138,0.907,141,1.606,148,1.183,153,0.205,156,0.089,159,1.311,165,0.089,166,0.102,167,0.627,168,0.297,177,1.08,192,0.953,197,1.799,198,1.218,220,1.638,248,1.563,257,0.527,258,0.778,259,0.579,260,1.565,261,0.579,262,0.579,263,0.527,264,0.579,265,0.502,266,0.897,267,0.527,268,0.579,269,0.527,270,0.579,271,0.579,272,0.502,273,0.433,274,0.897,275,0.527,276,0.478,277,0.579,278,0.527,279,0.579,280,0.527,281,0.579,282,0.502,283,0.579,284,0.502,285,0.478,286,0.579,287,1.386,288,0.579,289,0.527,290,0.579,291,0.579,292,0.527,293,0.579,294,0.527,295,0.579,296,0.527,297,0.552,298,0.896,299,0.579,300,0.527,301,0.579,302,0.527,303,0.579,304,0.527,305,0.552,306,0.579,307,0.527,308,0.433,309,0.579,310,0.527,311,0.552,312,0.579,313,0.552,314,0.579,315,0.527,316,0.579,317,0.433,318,0.455,319,0.502,320,0.579,321,0.579,322,0.009,323,0.009,352,2.338,361,0.984,367,2.121,397,3.24,401,3.24,415,3.411,416,2.335,425,2.015,433,0.94,487,2.798,488,2.172,501,1.603,505,1.376,544,1.231,581,1.638,582,1.994,592,2.883,623,1.628,633,1.388,704,1.906,707,3.906,712,2.03,731,2.076,748,3.121,763,3.497,764,3.783,769,2.021,794,2.537,815,1.606,826,3.943,833,1.906,839,1.403,845,3.106,848,3.239,877,1.906,885,1.376,894,1.606,946,2.338,960,2.537,962,1.376,963,4.594,972,2.787,973,3.841,993,2.537,1002,3.667,1009,3.239,1010,2.015,1052,1.696,1097,2.38,1119,3.106,1124,2.659,1162,1.696,1176,2.338,1269,2.03,1278,2.198,1407,2.877,1442,2.659,1444,2.485,1447,2.03,1474,3.783,1485,3.846,1521,2.338,1677,2.787,1832,1.51,2003,2.537,2013,4.922,2032,2.787,2038,2.787,2039,2.787,2040,2.787,2041,2.787,2042,2.787,2043,2.787,2044,2.787,2045,2.787,2046,2.787,2047,2.787,2236,2.015,2237,5,2238,2.537,2239,3.628,2240,3.82,2241,2.787,2242,4.44,2243,4.44,2244,3.628,2245,4.44,2246,4.44,2247,4.44,2248,4.44,2249,4.44,2250,5.409,2251,5.751,2252,4.301,2253,3.121,2254,3.121,2255,3.121,2256,3.121,2257,3.628,2258,3.411,2259,4.395,2260,2.342,2261,3.628,2262,3.628,2263,3.82,2264,2.342,2265,3.628,2266,2.342,2267,2.787,2268,2.342,2269,4.565,2270,3.628,2271,2.342,2272,5.721,2273,5.721,2274,3.628,2275,2.342,2276,3.628,2277,2.342,2278,3.121,2279,4.301,2280,2.342,2281,3.121,2282,2.342,2283,3.628,2284,2.342,2285,3.628,2286,3.121,2287,2.338,2288,4.44,2289,3.628,2290,5,2291,3.841,2292,3.628,2293,3.628,2294,2.342,2295,4.44,2296,2.342,2297,3.628,2298,4.301,2299,4.44,2300,2.342,2301,5.133,2302,5,2303,4.44,2304,2.342,2305,4.44,2306,2.342,2307,4.44,2308,2.342,2309,4.44,2310,3.628,2311,2.342,2312,2.787,2313,3.628,2314,4.44,2315,2.342,2316,4.44,2317,2.342,2318,4.44,2319,5.409,2320,5.409,2321,2.342,2322,2.342,2323,3.121,2324,3.121,2325,2.342,2326,3.82,2327,2.015,2328,2.015,2329,3.411,2330,2.342,2331,2.342,2332,2.342,2333,2.342,2334,3.841,2335,3.121,2336,2.015,2337,3.628,2338,3.121,2339,2.787,2340,6.33,2341,2.015,2342,3.628,2343,4.653,2344,2.342,2345,3.628,2346,3.628,2347,2.342,2348,3.628,2349,4.44,2350,5.721,2351,2.342,2352,3.121,2353,4.44,2354,2.015,2355,4.44,2356,4.44,2357,2.342,2358,4.44,2359,2.342,2360,3.121,2361,2.015,2362,2.015,2363,2.342,2364,2.342,2365,4.44,2366,4.44,2367,3.628,2368,2.342,2369,4.44,2370,4.44,2371,3.628,2372,2.342,2373,2.342,2374,2.015,2375,2.342,2376,2.342,2377,2.342,2378,2.342,2379,2.342,2380,2.342,2381,2.342,2382,2.342,2383,2.342,2384,2.342,2385,2.342,2386,2.015,2387,2.015,2388,2.342,2389,2.342,2390,2.342,2391,2.342,2392,2.342,2393,2.342,2394,2.342,2395,2.342,2396,2.342,2397,2.342,2398,2.342,2399,2.342,2400,2.342,2401,2.342,2402,2.342,2403,2.342,2404,2.342,2405,2.342,2406,2.342]],["title/components/HamburgerMenuComponent.html",[0,0.045,289,0.83]],["body/components/HamburgerMenuComponent.html",[0,0.079,1,0.854,2,1.053,3,0.165,4,0.165,5,0.861,6,1.187,7,0.814,8,0.814,9,0.123,13,0.517,19,0.854,25,0.738,26,1.503,27,1.099,28,0.634,29,0.733,32,1.216,34,1.747,35,0.854,36,2.283,38,1.216,40,0.165,41,0.507,51,0.507,61,0.453,66,0.729,70,0.844,71,0.019,72,0.332,73,0.254,74,0.75,76,0.654,78,1.774,79,0.578,80,0.854,83,0.861,85,0.498,92,0.621,100,0.54,103,2.057,105,3.607,114,1.318,118,0.354,126,2.273,130,1.275,132,1.538,134,0.796,135,0.693,146,2.166,148,1.098,151,3.111,153,0.222,154,2.655,156,0.144,163,1.08,165,0.144,166,0.165,167,0.66,192,0.481,257,0.854,258,1.105,259,0.938,260,1.553,261,0.938,262,0.938,263,0.854,264,0.938,265,0.814,266,1.275,267,0.854,268,0.938,269,0.854,270,0.938,271,0.938,272,0.814,273,0.702,274,1.275,275,0.854,276,0.775,277,0.938,278,0.854,279,0.938,280,0.854,281,0.938,282,0.814,283,0.938,284,0.814,285,0.775,286,0.938,287,0.854,288,0.938,289,1.524,290,1.865,291,0.938,292,0.854,293,0.938,294,0.854,295,0.938,296,0.854,297,0.895,298,0.57,299,0.938,300,0.854,301,0.938,302,0.854,303,0.938,304,0.854,305,0.895,306,0.938,307,0.854,308,1.084,309,0.938,310,0.854,311,0.895,312,0.938,313,0.895,314,0.938,315,0.854,316,0.938,317,0.702,318,0.738,319,0.814,320,0.938,321,0.938,322,0.012,323,0.012,325,3.758,330,1.774,395,2.553,396,3.607,399,4.188,422,3.962,428,4.003,433,1.336,438,1.862,453,2.916,454,3.352,456,4.395,460,6.567,462,3.948,464,5.039,499,1.956,501,1.862,505,2.384,547,2.655,554,2.655,561,3.266,599,2.447,637,2.057,720,3.088,772,3.763,815,2.283,823,3.088,1167,4.437,1170,3.607,1183,3.266,1185,5.039,1186,3.508,1187,5.048,1188,3.775,1192,4.437,1196,4.395,1202,1.306,1212,2.916,1213,2.916,1471,3.607,1515,3.763,1646,1.774,1674,3.324,1677,3.962,1752,3.324,1952,3.324,2104,4.059,2407,6.069,2408,5.419,2409,3.266,2410,4.437,2411,3.962,2412,5.158,2413,5.158,2414,4.395,2415,4.437,2416,5.858,2417,5.158,2418,5.858,2419,5.858,2420,3.962,2421,4.437,2422,6.284,2423,2.916,2424,5.158,2425,3.962,2426,4.437,2427,5.158,2428,5.039,2429,5.858,2430,3.962,2431,3.796,2432,4.437,2433,3.962,2434,3.962,2435,4.437,2436,3.796,2437,5.158,2438,4.437,2439,3.796,2440,3.796,2441,6.572,2442,5.158,2443,3.796,2444,2.916]],["title/injectables/HbsRenderService.html",[642,0.441,1392,1.941]],["body/injectables/HbsRenderService.html",[0,0.082,2,1.204,3,0.286,4,0.295,5,1.211,6,1.627,9,0.205,13,0.548,15,0.487,26,1.147,27,0.547,40,0.226,41,0.649,51,0.649,54,1.974,61,0.704,66,0.715,70,0.517,71,0.019,72,0.333,73,0.274,74,0.459,76,0.487,85,0.538,92,0.579,94,1.389,95,1.615,118,0.446,132,1.147,133,1.415,134,0.487,135,0.699,148,0.642,153,0.146,156,0.146,165,0.146,166,0.167,168,0.909,177,1.222,192,0.909,198,1.348,208,1.974,214,1.323,215,2.164,258,1.115,318,0.748,322,0.012,323,0.012,365,4.477,392,0.865,450,1.933,451,2.479,456,2.691,459,3.998,461,3.468,462,2.153,484,0.997,505,1.459,507,2.303,563,1.389,595,2.153,623,1.481,633,1.203,642,0.621,652,1.044,769,1.261,811,2.479,885,1.974,897,3.64,948,1.323,965,3.801,1009,3.116,1021,2.479,1052,2.758,1098,2.912,1107,2.021,1120,2.185,1162,2.433,1165,2.912,1290,4.484,1347,2.576,1360,3.444,1392,2.734,1405,2.479,1406,2.479,1412,2.912,1419,3.354,1424,2.303,1425,5.016,1431,3.64,1432,3.354,1438,3.64,1439,3.64,1447,2.912,1449,3.801,1450,2.303,1451,3.64,1452,4.125,1473,4.075,1480,3.532,1500,2.691,1504,2.691,1507,4.075,1592,2.734,1606,2.153,1624,2.691,1696,4.255,1759,2.153,1761,2.479,1937,2.955,2209,3.309,2226,4.561,2287,2.479,2421,3.309,2428,3.309,2435,3.309,2445,5.344,2446,2.955,2447,5.898,2448,6.319,2449,6.319,2450,6.319,2451,5.204,2452,5.204,2453,3.847,2454,3.847,2455,3.847,2456,5.204,2457,3.847,2458,3.847,2459,2.691,2460,3.847,2461,3.847,2462,3.847,2463,3.847,2464,3.847,2465,3.847,2466,3.847,2467,3.847,2468,5.204,2469,6.957,2470,5.436,2471,6.319,2472,6.804,2473,6.804,2474,3.847,2475,3.847,2476,5.898,2477,3.847,2478,3.847,2479,3.847,2480,3.847,2481,5.204,2482,3.847,2483,3.847,2484,3.309,2485,3.847,2486,3.64,2487,3.64,2488,3.847,2489,3.847,2490,3.847,2491,3.847,2492,3.847,2493,3.847,2494,5.204,2495,3.847,2496,3.847,2497,6.601,2498,6.319,2499,3.847,2500,3.847,2501,3.847,2502,3.847,2503,5.204,2504,3.847,2505,3.847,2506,3.309,2507,3.847,2508,3.847,2509,3.847,2510,5.204,2511,6.601,2512,3.847,2513,3.309,2514,3.847,2515,3.847,2516,3.847,2517,3.847,2518,3.847,2519,3.847,2520,3.309,2521,3.847,2522,5.898,2523,3.847,2524,3.847,2525,3.847,2526,5.204,2527,5.898]],["title/components/HomeComponent.html",[0,0.045,292,0.83]],["body/components/HomeComponent.html",[0,0.071,1,0.649,2,0.868,3,0.125,4,0.125,5,0.71,6,0.903,7,0.619,8,0.619,9,0.094,13,0.504,15,0.812,19,0.649,25,0.561,26,1.47,27,1.074,28,0.482,29,0.604,30,1.534,31,0.747,32,1.002,34,1.504,35,0.649,36,1.881,38,1.002,40,0.184,41,0.418,51,0.418,66,0.755,70,0.832,71,0.019,72,0.322,73,0.326,74,0.739,78,1.912,80,0.649,85,0.607,92,0.568,99,2.335,100,0.41,103,2.472,106,2.308,113,2.739,114,1.278,115,1.962,116,1.695,118,0.431,128,3.112,130,1.532,133,0.911,134,0.833,135,0.916,138,0.868,142,3.264,147,1.311,148,1.098,151,2.752,153,0.224,156,0.109,158,1.278,163,0.822,165,0.109,166,0.125,167,0.691,173,1.212,177,1.07,192,0.751,198,0.59,257,0.649,258,0.911,259,0.714,260,1.465,261,0.714,262,0.714,263,0.649,264,0.714,265,0.619,266,1.05,267,0.649,268,0.714,269,0.649,270,0.714,271,0.714,272,0.619,273,0.534,274,1.05,275,0.649,276,0.59,277,0.714,278,0.649,279,0.714,280,0.649,281,0.714,282,0.619,283,0.714,284,0.619,285,0.59,286,0.714,287,1.25,288,0.714,289,0.649,290,0.714,291,0.714,292,1.393,293,0.714,294,0.649,295,0.714,296,0.649,297,0.681,298,0.434,299,0.714,300,0.649,301,0.714,302,0.649,303,0.714,304,1.25,305,0.681,306,0.714,307,0.649,308,0.534,309,0.714,310,0.649,311,0.681,312,0.714,313,0.681,314,0.714,315,0.649,316,0.714,317,0.534,318,0.561,319,0.619,320,0.714,321,0.714,322,0.01,323,0.01,327,2.233,338,2.822,395,2.103,397,3.894,399,3.112,433,1.703,454,3.099,461,1.517,484,1.703,491,2.972,497,2.544,499,2.109,514,3.112,521,1.517,557,2.6,592,1.987,599,1.861,623,1.823,655,3.264,686,1.881,707,4.2,769,0.947,819,2.233,833,2.233,894,2.461,961,2.972,962,1.612,963,4.85,986,3.329,987,3.329,988,2.544,1002,3.921,1038,2.484,1045,2.484,1084,1.278,1162,1.987,1249,2.544,1292,2.752,1295,3.074,1410,3.584,1447,1.616,1449,1.861,1459,2.378,1483,1.861,1494,3.019,1497,2.972,1498,2.972,1521,1.861,1615,2.972,1674,3.584,1715,3.329,2032,2.218,2038,2.218,2039,2.218,2040,2.218,2041,2.218,2042,2.218,2043,2.218,2044,2.218,2045,2.218,2046,2.218,2047,2.218,2052,2.484,2238,2.972,2241,3.264,2258,3.873,2259,3.873,2287,2.739,2329,5.377,2334,3.264,2339,2.218,2352,2.484,2354,2.484,2432,4.783,2528,2.484,2529,3.655,2530,5.042,2531,4.249,2532,5.042,2533,5.042,2534,5.042,2535,5.042,2536,4.249,2537,4.249,2538,4.249,2539,6.197,2540,5.56,2541,5.56,2542,3.655,2543,4.249,2544,4.249,2545,4.249,2546,5.042,2547,2.887,2548,4.249,2549,4.249,2550,4.249,2551,4.249,2552,4.249,2553,2.887,2554,4.249,2555,4.249,2556,2.887,2557,4.249,2558,2.887,2559,2.887,2560,2.887,2561,4.249,2562,6.574,2563,5.331,2564,2.887,2565,5.56,2566,4.249,2567,2.887,2568,4.249,2569,2.887,2570,4.249,2571,3.655,2572,2.887,2573,2.887,2574,3.655,2575,3.655,2576,2.887,2577,4.249,2578,5.042,2579,2.887,2580,2.887,2581,2.887,2582,2.887,2583,2.887,2584,2.02,2585,2.887,2586,5.926,2587,4.249,2588,4.249,2589,4.249,2590,4.249,2591,4.249,2592,4.249,2593,2.887,2594,4.249,2595,4.249,2596,5.56,2597,4.249,2598,4.249,2599,2.887,2600,2.887,2601,4.249,2602,2.887,2603,2.887,2604,2.887,2605,2.887,2606,2.887,2607,2.887,2608,2.887,2609,6.197,2610,5.042,2611,4.249,2612,5.042,2613,2.887,2614,2.887,2615,2.887,2616,2.484,2617,2.887,2618,2.887,2619,2.887]],["title/components/InstallAppPopupComponentComponent.html",[0,0.045,294,0.83]],["body/components/InstallAppPopupComponentComponent.html",[0,0.09,1,0.87,2,1.067,3,0.168,4,0.168,5,0.873,7,0.829,8,0.829,9,0.126,13,0.411,15,0.49,19,0.87,25,0.752,26,1.505,27,1.121,28,0.646,29,0.743,30,1.887,31,0.916,32,1.232,34,1.764,35,0.87,38,1.232,40,0.168,41,0.513,51,0.513,61,0.462,66,0.716,70,0.52,71,0.019,72,0.358,73,0.275,74,0.462,76,0.662,79,0.586,80,0.87,83,0.873,85,0.445,92,0.479,99,2.194,100,0.55,106,1.634,118,0.316,130,1.292,134,0.49,135,0.52,138,1.392,148,1.105,150,3.129,151,2.586,153,0.224,156,0.147,163,1.101,165,0.147,166,0.168,167,0.407,222,2.66,257,0.87,258,1.12,259,0.957,260,1.566,261,0.957,262,0.957,263,0.87,264,0.957,265,0.829,266,1.292,267,0.87,268,0.957,269,0.87,270,0.957,271,0.957,272,0.829,273,0.716,274,1.292,275,0.87,276,0.79,277,0.957,278,0.87,279,0.957,280,0.87,281,0.957,282,0.829,283,0.957,284,0.829,285,0.79,286,0.957,287,0.87,288,0.957,289,0.87,290,0.957,291,0.957,292,0.87,293,0.957,294,1.424,295,1.911,296,1.754,297,0.912,298,0.581,299,0.957,300,0.87,301,0.957,302,0.87,303,0.957,304,0.87,305,0.912,306,0.957,307,0.87,308,0.716,309,0.957,310,0.87,311,0.912,312,0.957,313,0.912,314,0.957,315,0.87,316,0.957,317,0.716,318,0.752,319,0.829,320,0.957,321,0.957,322,0.012,323,0.012,341,2.313,393,2.66,397,2.745,404,4.866,414,5.994,418,5.691,454,3.213,462,2.924,478,5.449,484,1.354,491,3.655,492,2.924,541,5.353,597,3.655,601,3.329,648,2.924,704,2.745,767,2.313,774,2.745,817,4.495,823,3.793,885,1.982,889,3.368,962,1.982,982,2.313,1152,3.793,1153,3.793,1162,2.443,1165,2.924,1181,3.542,1186,3.793,1200,3.129,1202,1.331,1275,3.129,1318,4.014,1407,2.194,1660,3.625,1663,5.082,1706,3.329,1711,2.707,1716,4.014,1717,4.014,1955,3.655,1961,4.014,2081,2.973,2083,2.973,2100,4.014,2104,4.082,2105,4.495,2187,4.495,2620,5.994,2621,5.225,2622,6.334,2623,6.334,2624,5.225,2625,3.87,2626,5.225,2627,4.495,2628,3.87,2629,3.87,2630,5.225,2631,3.87,2632,4.495,2633,3.87,2634,3.87,2635,4.495,2636,5.225,2637,3.368,2638,5.225,2639,4.495]],["title/components/MusicComponent.html",[0,0.045,300,0.83]],["body/components/MusicComponent.html",[0,0.076,1,0.608,2,0.827,3,0.117,4,0.117,5,0.676,6,0.846,7,0.58,8,0.58,9,0.088,13,0.494,15,0.615,19,0.608,20,2.609,23,1.792,25,0.943,26,1.46,27,1.068,28,0.452,29,0.575,30,1.462,31,0.544,32,0.954,34,1.447,35,0.608,36,1.792,38,0.954,40,0.176,41,0.398,51,0.398,61,0.483,66,0.762,68,1.62,70,0.813,71,0.019,72,0.334,73,0.303,74,0.748,76,0.513,78,1.852,79,0.604,80,0.608,83,0.676,85,0.594,92,0.591,94,1.462,95,1.7,99,2.261,100,0.384,103,1.615,106,1.266,114,1.306,116,2.414,118,0.444,121,4.633,130,1.331,133,0.868,134,0.795,135,0.843,146,1.7,147,0.954,153,0.229,156,0.102,158,1.198,163,1.152,165,0.102,166,0.117,167,0.693,168,0.615,173,1.136,177,1.102,192,0.875,198,0.827,208,1.535,214,0.93,215,0.887,257,0.608,258,1.154,259,0.669,260,1.331,261,0.669,262,0.669,263,0.608,264,0.669,265,0.58,266,1.001,267,0.608,268,0.669,269,0.608,270,0.669,271,0.669,272,0.58,273,0.897,274,1.001,275,0.608,276,0.552,277,0.669,278,0.608,279,0.669,280,0.608,281,0.669,282,0.58,283,0.669,284,0.58,285,0.552,286,0.669,287,0.608,288,0.669,289,0.608,290,0.669,291,0.669,292,0.608,293,0.669,294,0.608,295,0.669,296,0.608,297,0.638,298,0.729,299,0.669,300,1.361,301,0.669,302,0.608,303,0.669,304,0.608,305,0.638,306,0.669,307,0.608,308,1.277,309,0.669,310,0.608,311,0.638,312,0.669,313,0.638,314,0.669,315,0.608,316,0.669,317,0.5,318,0.526,319,0.58,320,0.669,321,0.669,322,0.014,323,0.01,325,3.465,327,2.829,329,2.518,330,1.392,336,1.339,338,2.715,345,2.549,355,1.944,364,1.74,371,1.327,383,1.421,393,2.261,432,4.633,433,1.855,441,2.004,449,3.482,450,1.765,452,1.7,454,2.777,480,1.615,484,1.049,487,2.266,513,2.609,514,2.266,517,2.327,518,2.327,553,2.327,556,3.482,557,1.893,563,2.462,569,2.327,573,1.265,633,1.803,641,2.004,651,1.684,657,2.148,658,1.136,662,1.792,665,2.666,667,2.666,702,5.066,715,3.127,721,2.266,750,2.127,764,2.831,822,2.831,894,1.792,915,3.11,925,3.387,931,4.96,932,2.327,982,1.792,1002,1.421,1011,2.831,1052,1.265,1068,2.424,1069,1.339,1211,2.327,1212,2.078,1244,4.043,1246,4.137,1247,5.912,1249,3.453,1264,2.609,1265,5.459,1266,4.251,1274,3.11,1278,1.339,1280,3.727,1281,3.767,1282,2.078,1283,2.078,1285,1.514,1286,4.137,1288,2.266,1292,2.004,1295,1.893,1305,3.727,1314,4.137,1330,1.892,1339,3.11,1343,3.727,1350,1.743,1386,3.393,1407,1.7,1450,1.62,1477,1.892,1560,3.767,1660,3.193,1667,2.004,1680,3.11,1715,2.424,2026,3.11,2080,4.173,2083,2.078,2084,2.327,2085,1.892,2086,3.482,2087,3.482,2088,3.482,2180,3.482,2563,2.327,2616,2.327,2640,2.327,2641,6.051,2642,4.048,2643,4.048,2644,4.851,2645,4.048,2646,6.45,2647,4.048,2648,4.048,2649,4.048,2650,5.385,2651,4.048,2652,5.385,2653,4.048,2654,2.705,2655,4.048,2656,4.048,2657,4.048,2658,4.048,2659,2.705,2660,6.716,2661,4.048,2662,4.048,2663,2.705,2664,4.048,2665,4.048,2666,4.048,2667,2.705,2668,4.048,2669,4.048,2670,2.705,2671,4.048,2672,4.048,2673,3.482,2674,2.705,2675,6.051,2676,4.048,2677,2.705,2678,4.048,2679,2.705,2680,4.048,2681,2.705,2682,4.048,2683,3.11,2684,4.048,2685,3.482,2686,2.705,2687,4.048,2688,2.705,2689,2.705,2690,5.385,2691,2.705,2692,2.705,2693,3.482,2694,2.705,2695,2.705,2696,4.851,2697,2.705,2698,2.705,2699,2.705,2700,2.705,2701,4.048,2702,2.705,2703,2.705,2704,2.705,2705,2.705,2706,2.705,2707,2.705,2708,6.051,2709,2.705,2710,2.705,2711,4.048,2712,4.048,2713,4.048,2714,4.048,2715,2.705,2716,4.851,2717,2.705,2718,2.705,2719,2.705,2720,2.705,2721,2.705,2722,2.705,2723,4.851,2724,2.705,2725,4.048,2726,2.705,2727,2.705,2728,3.482,2729,2.705,2730,4.851,2731,2.705,2732,2.705,2733,2.705,2734,4.048,2735,2.705,2736,2.705,2737,2.705,2738,2.705,2739,2.705,2740,4.048,2741,2.705,2742,2.705,2743,2.705,2744,2.705,2745,2.078,2746,2.705,2747,2.705,2748,2.705,2749,4.048,2750,2.705,2751,2.705,2752,4.048,2753,2.705,2754,2.705,2755,2.705,2756,2.705,2757,2.705,2758,2.705,2759,2.705,2760,2.705,2761,2.705,2762,2.705,2763,2.705,2764,2.705,2765,2.705,2766,2.705,2767,2.705,2768,2.705,2769,2.705,2770,4.048,2771,4.048,2772,5.385,2773,4.048,2774,4.048,2775,4.048,2776,4.048,2777,4.048,2778,2.705,2779,2.705,2780,2.705]],["title/components/NavbarComponent.html",[0,0.045,302,0.83]],["body/components/NavbarComponent.html",[0,0.082,1,0.95,2,1.131,3,0.183,4,0.183,5,0.925,6,1.32,7,0.905,8,0.905,9,0.137,13,0.486,17,3.316,19,0.95,25,0.821,26,1.514,27,1.107,28,0.705,29,0.932,31,0.744,32,1.306,34,1.843,35,0.95,36,2.452,38,1.306,40,0.183,41,0.544,51,0.544,61,0.504,66,0.649,70,0.744,71,0.019,72,0.321,73,0.24,74,0.661,76,0.702,78,1.905,79,0.621,80,0.95,83,0.925,85,0.359,92,0.507,99,2.326,100,0.6,105,3.874,114,1.434,118,0.374,130,1.369,132,1.956,134,0.863,135,0.567,148,0.925,153,0.248,156,0.16,163,1.202,165,0.16,166,0.183,167,0.649,257,0.95,258,1.187,259,1.044,260,1.621,261,1.044,262,1.044,263,0.95,264,1.044,265,0.905,266,1.369,267,0.95,268,1.044,269,0.95,270,1.044,271,1.044,272,0.905,273,0.781,274,1.369,275,0.95,276,0.862,277,1.044,278,0.95,279,1.044,280,0.95,281,1.044,282,0.905,283,1.044,284,0.905,285,0.862,286,1.044,287,0.95,288,1.044,289,1.571,290,1.369,291,1.044,292,0.95,293,1.044,294,0.95,295,1.044,296,0.95,297,0.996,298,0.634,299,1.044,300,0.95,301,1.044,302,1.571,303,1.044,304,0.95,305,0.996,306,1.044,307,0.95,308,0.781,309,1.044,310,0.95,311,0.996,312,1.044,313,0.996,314,1.044,315,0.95,316,1.044,317,0.781,318,0.821,319,0.905,320,1.044,321,1.044,322,0.013,323,0.013,330,1.905,395,2.741,396,3.874,399,4.273,405,1.905,428,4.09,433,1.435,441,2.741,454,3.235,462,3.1,492,3.1,497,4.078,499,2.101,504,4.764,505,2.488,514,3.1,547,2.954,554,2.954,599,2.722,637,2.209,715,3.57,720,3.316,750,2.91,823,3.316,962,2.101,1021,3.57,1170,3.874,1186,3.316,1202,1.453,1481,3.57,1646,2.342,1752,3.57,2104,4.185,2408,3.245,2410,4.764,2411,5.55,2414,3.874,2420,4.254,2423,3.245,2425,4.254,2430,4.254,2433,4.254,2434,5.038,2444,3.245,2781,3.633,2782,6.559,2783,6.988,2784,6.179,2785,5.538,2786,6.179,2787,5.538,2788,5.538,2789,4.764,2790,4.224,2791,4.764,2792,4.224,2793,4.224,2794,4.764]],["title/components/PieChartComponent.html",[0,0.045,304,0.83]],["body/components/PieChartComponent.html",[0,0.075,1,0.59,2,0.808,3,0.114,4,0.114,5,0.661,6,0.82,7,0.562,8,0.562,9,0.085,13,0.417,15,0.332,16,2.117,19,0.59,23,1.752,24,2.358,25,0.51,26,1.456,27,1.064,28,0.438,29,0.986,30,1.428,31,0.712,35,0.59,36,1.752,38,0.933,40,0.114,41,0.389,51,0.389,54,2.012,61,0.633,64,2.684,66,0.762,68,2.369,70,0.64,71,0.019,72,0.32,73,0.328,74,0.568,76,0.332,78,1.361,79,0.671,80,0.59,85,0.544,89,3.418,92,0.647,94,2.16,95,2.512,96,1.85,100,0.996,103,2.115,106,1.779,107,2.961,114,0.769,115,1.374,118,0.424,125,2.666,126,1.571,128,2.214,129,1.72,130,1.479,133,1.575,134,0.787,135,0.858,138,1.221,147,0.619,148,0.999,153,0.201,155,1.468,156,0.099,159,1.468,165,0.099,166,0.114,167,0.653,168,0.604,177,0.886,182,1.661,192,0.919,197,2.016,198,1.162,208,0.995,214,0.902,215,1.297,220,1.835,246,2.55,248,1.237,257,0.89,258,0.848,259,0.649,260,1.311,261,0.649,262,0.649,263,0.59,264,0.649,265,0.562,266,0.978,267,0.59,268,0.649,269,0.59,270,0.649,271,0.649,272,0.562,273,0.485,274,0.978,275,0.59,276,0.536,277,0.649,278,0.59,279,0.649,280,0.59,281,0.649,282,0.562,283,0.649,284,0.562,285,0.536,286,0.649,287,0.59,288,0.649,289,0.59,290,0.649,291,0.649,292,0.59,293,0.649,294,0.59,295,0.649,296,0.59,297,0.619,298,0.855,299,0.649,300,0.59,301,0.649,302,0.59,303,0.649,304,1.192,305,1.507,306,0.649,307,0.59,308,0.485,309,0.649,310,0.59,311,0.619,312,0.649,313,0.619,314,0.649,315,0.59,316,0.649,317,0.485,318,0.51,319,0.562,320,0.649,321,0.649,322,0.009,323,0.009,352,2.55,357,1.691,361,1.661,364,1.025,397,3.143,401,2.079,416,2.308,433,1.025,439,2.55,450,1.961,459,2.016,467,2.159,480,1.578,484,1.025,488,2.369,501,1.428,514,2.214,521,2.079,544,1.379,581,1.835,582,1.9,623,1.126,633,1.489,647,1.227,658,1.102,659,1.807,707,3.185,712,2.968,715,3.418,717,1.835,731,2.661,733,4.097,769,1.866,844,3.709,845,1.835,849,4.562,959,5.498,960,3.709,963,4.215,972,3.039,973,4.074,1002,3.436,1003,3.039,1009,1.571,1032,5.498,1052,2.904,1097,2.477,1102,3.263,1119,3.709,1120,2.39,1162,2.48,1168,2.257,1201,1.835,1204,2.257,1216,2.257,1235,2.767,1269,2.666,1284,3.07,1291,1.379,1403,1.571,1407,1.102,1450,1.571,1473,1.571,1481,1.691,1485,1.691,1516,1.835,1537,2.214,1832,1.691,1891,2.767,2238,3.331,2240,4.097,2251,2.257,2252,4.562,2253,4.562,2254,4.562,2255,4.562,2256,3.404,2258,4.372,2259,4.372,2267,4.074,2269,4.772,2278,3.404,2279,4.562,2281,3.404,2286,3.404,2301,2.257,2312,4.372,2324,3.404,2326,3.404,2327,2.257,2328,2.257,2329,3.659,2334,3.659,2335,3.404,2336,2.257,2338,3.404,2339,3.039,2341,2.257,2343,4.097,2360,3.404,2361,2.257,2362,2.257,2374,2.257,2386,2.257,2387,2.257,2459,1.835,2484,3.404,2513,3.404,2574,2.257,2575,3.404,2584,5.098,2795,5.599,2796,2.016,2797,3.957,2798,3.404,2799,4.097,2800,4.763,2801,3.957,2802,4.763,2803,4.763,2804,4.763,2805,4.562,2806,3.957,2807,3.957,2808,2.624,2809,2.624,2810,2.624,2811,5.982,2812,2.624,2813,2.624,2814,2.624,2815,5.303,2816,2.624,2817,2.624,2818,3.404,2819,3.957,2820,2.624,2821,4.372,2822,5.691,2823,3.957,2824,2.624,2825,2.624,2826,2.624,2827,2.624,2828,2.624,2829,3.957,2830,3.957,2831,2.624,2832,2.624,2833,2.624,2834,2.624,2835,2.624,2836,2.624,2837,2.624,2838,2.624,2839,2.624,2840,4.763,2841,2.624,2842,2.624,2843,2.624,2844,2.624,2845,2.624,2846,4.763,2847,3.957,2848,4.763,2849,4.763,2850,5.982,2851,4.763,2852,4.763,2853,4.763,2854,5.982,2855,4.763,2856,4.763,2857,4.763,2858,2.624,2859,4.763,2860,3.957,2861,2.624,2862,4.763,2863,2.624,2864,3.957,2865,2.624,2866,2.624,2867,2.624,2868,2.624,2869,2.624,2870,2.624,2871,2.624,2872,2.257,2873,2.624,2874,2.624,2875,4.763,2876,2.624,2877,3.957,2878,2.624,2879,2.624,2880,2.624,2881,2.624,2882,2.624,2883,3.957,2884,2.624,2885,2.624]],["title/injectables/PostApiService.html",[431,2.583,642,0.441]],["body/injectables/PostApiService.html",[3,0.238,4,0.181,9,0.136,13,0.433,15,0.696,16,2.22,40,0.181,51,0.54,61,0.656,65,3.37,66,0.646,70,0.561,71,0.019,72,0.204,73,0.181,74,0.498,76,0.696,77,2.476,78,1.89,79,0.616,83,0.918,85,0.523,92,0.503,100,0.873,115,1.081,133,1.589,138,1.54,148,0.697,153,0.269,156,0.158,165,0.158,166,0.181,167,0.713,168,0.86,171,2.499,177,0.918,192,0.951,193,2.919,212,2.193,215,1.368,251,3.844,322,0.013,323,0.013,329,3.053,336,2.066,354,5.015,355,1.984,364,1.081,369,2.066,392,0.938,394,3.844,405,1.89,416,2.602,429,2.733,431,4.566,433,1.424,444,3.844,445,5.015,446,4.727,448,2.433,450,2.014,480,2.604,501,1.507,522,2.919,549,5.015,557,2.57,563,2.218,573,1.952,587,4.719,588,2.69,594,3.591,595,2.336,596,3.591,608,3.591,625,2.982,642,0.656,646,1.984,651,1.718,652,1.133,659,2.33,666,3.206,721,2.336,811,3.542,885,2.084,914,3.591,915,4.221,916,5.992,948,1.436,962,2.084,1068,3.291,1069,2.066,1086,4.171,1097,2.604,1114,2.69,1115,2.69,1238,3.898,1249,2.499,1253,3.542,1261,3.797,1269,3.076,1275,3.291,1284,3.542,1350,3.542,1400,3.438,1447,3.797,1628,3.076,1630,3.291,1660,3.567,1760,3.96,2099,4.727,2108,3.206,2115,3.206,2685,4.727,2886,5.616,2887,4.727,2888,5.495,2889,5.495,2890,4.221,2891,6.784,2892,6.529,2893,6.529,2894,4.174,2895,5.495,2896,3.542,2897,4.174,2898,5.495,2899,5.495,2900,6.144,2901,4.174,2902,5.495,2903,5.495,2904,5.495,2905,4.566,2906,6.144,2907,4.174,2908,3.206,2909,4.174,2910,4.174,2911,4.174,2912,5.495,2913,4.174,2914,5.495,2915,4.174,2916,5.495,2917,4.174,2918,4.174,2919,4.174,2920,4.174,2921,4.174,2922,4.174,2923,4.174,2924,4.174,2925,5.495,2926,4.174,2927,5.495,2928,4.174,2929,4.174,2930,4.174,2931,4.174,2932,4.174,2933,4.174,2934,4.174,2935,4.174,2936,3.206,2937,4.174,2938,3.206]],["title/injectables/SaavnService.html",[642,0.441,1244,2.381]],["body/injectables/SaavnService.html",[3,0.151,4,0.151,9,0.114,13,0.477,15,0.442,20,3.138,25,1.318,40,0.151,41,0.478,51,0.478,61,0.581,66,0.712,70,0.753,71,0.019,72,0.355,73,0.286,74,0.669,76,0.617,78,2.194,79,0.68,83,0.813,85,0.612,114,1.284,118,0.442,134,0.71,135,0.955,138,1.481,146,2.044,153,0.25,156,0.132,165,0.184,166,0.151,167,0.694,168,0.911,177,1.132,192,0.89,198,0.713,208,1.324,214,1.201,215,1.144,255,1.632,276,0.713,285,0.994,298,0.731,308,1.279,322,0.012,323,0.014,325,3.187,327,2.558,328,4.369,329,3.459,335,2.682,336,2.775,345,2.945,355,1.758,364,0.904,367,2.272,369,1.728,380,4.14,383,1.834,389,2.25,392,0.785,394,3.405,426,2.915,427,3.423,433,1.452,441,2.41,479,3.921,513,2.25,522,2.442,528,1.834,545,2.25,546,2.09,563,2.19,624,0.9,642,0.581,651,1.753,652,0.948,659,1.324,662,1.546,663,1.942,682,2.41,686,1.546,713,3.74,766,4.306,767,2.155,770,2.482,794,2.442,815,2.824,819,1.834,925,1.954,948,1.201,985,2.41,994,2.682,1002,1.834,1006,2.725,1068,2.915,1069,1.728,1070,2.276,1091,2.915,1120,2.044,1227,4.456,1228,5.312,1229,2.682,1230,2.682,1231,1.954,1232,3.003,1233,4.659,1234,4.659,1236,1.942,1237,3.003,1238,3.697,1239,3.74,1240,4.188,1241,2.442,1242,2.682,1243,2.25,1244,4.258,1245,4.188,1246,5.075,1247,5.831,1248,3.74,1249,4.26,1250,4.822,1251,5.683,1252,5.396,1253,3.138,1254,4.822,1255,4.188,1256,4.188,1257,4.306,1258,3.74,1259,3.74,1260,3.74,1261,3.137,1262,4.188,1263,3.405,1264,3.138,1265,4.9,1266,3.138,1267,4.188,1268,3.74,1269,2.725,1270,4.188,1271,3.003,1272,3.003,1273,2.682,1274,3.74,1275,2.915,1276,4.822,1277,5.683,1278,3.157,1279,4.188,1280,3.74,1281,3.405,1282,4.659,1283,4.306,1284,3.613,1285,3.137,1286,4.306,1287,4.188,1288,2.725,1289,3.003,1290,2.25,1291,1.834,1292,2.41,1293,4.188,1294,5.487,1295,1.632,1296,2.442,1297,3.003,1298,3.003,1299,3.003,1300,3.74,1301,3.003,1302,3.003,1303,3.003,1304,3.003,1305,4.306,1306,3.003,1307,3.003,1308,3.003,1309,3.003,1310,3.003,1311,3.003,1312,3.74,1313,4.188,1314,3.74,1315,4.188,1316,3.003,1317,2.682,1318,3.74,1319,3.003,1320,3.003,1321,3.003,1322,3.003,1323,3.003,1324,3.003,1325,3.003,1326,3.003,1327,3.003,1328,2.682,1329,3.003,1330,2.442,1331,3.003,1332,3.003,1333,2.25,1334,3.003,1335,3.003,1336,2.442,1337,2.682,1338,3.003,1339,3.74,1340,3.003,1341,2.682,1342,3.003,1343,2.682,1344,3.74,1345,2.558,1346,2.25,1347,2.41,1348,2.442,1349,3.74,1350,2.25,1351,2.682,1352,2.682,1353,4.306,1354,2.682,1355,2.682,1356,2.682,1357,2.915,1358,4.659,2115,2.682,2939,4.868,2940,4.868,2941,4.868,2942,3.491,2943,3.491,2944,3.491,2945,3.491,2946,3.491]],["title/interfaces/Schema.html",[402,2.381,624,0.683]],["body/interfaces/Schema.html",[3,0.156,4,0.156,9,0.117,13,0.283,16,2.084,21,1.434,27,0.809,29,0.511,31,0.667,41,0.604,51,0.353,66,0.378,71,0.019,72,0.243,76,0.456,77,2.911,79,0.557,83,0.6,85,0.601,91,1.592,92,0.647,100,0.511,114,0.699,115,0.931,116,1.434,118,0.433,129,1.794,132,1.832,133,1.549,134,0.896,135,0.667,138,1.499,148,0.83,153,0.216,156,0.136,165,0.136,166,0.156,167,0.732,168,0.866,177,1.247,182,2.086,183,1.78,187,1.78,192,0.924,198,1.163,322,0.012,323,0.012,330,1.237,392,0.808,402,4.907,403,3.817,405,1.237,429,1.885,433,1.287,436,2.33,438,1.298,442,2.056,443,2.391,444,3.475,448,1.592,450,1.179,467,1.364,480,2.271,482,1.592,484,0.931,485,1.78,490,5.121,501,1.298,578,3.203,582,1.434,603,2.317,624,1.053,625,2.579,626,1.592,628,1.885,630,2.515,631,1.592,632,1.592,642,0.593,645,4.297,646,1.298,651,1.78,652,0.976,657,1.592,658,2.086,659,1.885,660,1.681,661,2.579,663,2.659,690,2.271,696,2.521,704,1.889,720,2.153,731,1.681,769,1.179,885,2.16,982,1.592,985,1.78,1006,3.187,1084,1.592,1085,2.781,1086,2.153,1097,2.907,1120,3.134,1133,2.515,1202,1.237,1290,3.203,1291,1.889,1407,1.51,1443,3.41,1537,2.012,1544,3.678,1646,1.237,1660,3.191,1662,2.515,1667,2.818,1759,2.781,1783,2.153,2085,2.515,2122,2.762,2637,2.317,2896,2.317,2908,2.762,2936,3.817,2947,2.762,2948,4.274,2949,4.274,2950,3.595,2951,3.595,2952,4.274,2953,3.093,2954,3.093,2955,3.093,2956,3.817,2957,3.093,2958,3.093,2959,3.093,2960,3.093,2961,3.093,2962,3.093,2963,3.093,2964,4.274,2965,3.093,2966,3.093,2967,4.274,2968,3.093,2969,3.093,2970,4.274,2971,2.515,2972,2.515,2973,2.515,2974,2.515,2975,2.515,2976,2.515,2977,3.093,2978,3.093,2979,4.274,2980,3.093,2981,4.898,2982,5.284,2983,3.093,2984,4.274,2985,4.274,2986,4.274,2987,4.274,2988,4.274,2989,3.093,2990,4.274,2991,4.274,2992,3.093,2993,3.093,2994,4.274,2995,4.274,2996,3.093,2997,3.093,2998,4.274,2999,4.274,3000,3.093,3001,3.093,3002,4.274,3003,3.093,3004,3.093,3005,3.093,3006,4.274,3007,3.093,3008,3.093,3009,3.093,3010,3.093,3011,4.274,3012,3.093,3013,3.093,3014,3.093,3015,3.093,3016,3.093,3017,3.093,3018,3.093,3019,3.093,3020,3.093,3021,3.093,3022,3.093,3023,3.093,3024,3.093,3025,3.093,3026,3.093,3027,3.093,3028,3.093,3029,3.093,3030,3.093,3031,3.093,3032,3.093,3033,3.093,3034,3.093]],["title/components/SearchButtonComponent.html",[0,0.045,307,0.83]],["body/components/SearchButtonComponent.html",[0,0.084,1,0.864,2,1.062,3,0.167,4,0.167,5,1.055,6,1.202,7,0.824,8,0.824,9,0.125,13,0.409,15,0.487,19,0.864,25,0.747,26,1.505,27,1.1,28,0.642,29,0.739,30,1.878,31,0.699,32,1.226,34,1.758,35,0.864,36,2.303,38,1.226,40,0.167,41,0.511,51,0.511,61,0.621,66,0.744,70,0.516,71,0.019,72,0.289,73,0.274,74,0.621,76,0.659,79,0.583,80,0.864,83,0.869,85,0.502,92,0.623,99,2.184,100,0.546,106,2.332,107,2.575,114,1.228,118,0.232,125,3.3,126,2.302,128,2.911,130,1.286,134,0.659,135,0.848,138,1.29,147,0.906,148,1.055,151,2.575,153,0.239,155,2.152,156,0.146,158,1.702,163,1.094,165,0.146,166,0.167,167,0.404,168,0.487,171,3.115,173,1.614,252,3.638,257,0.864,258,1.115,259,0.95,260,1.561,261,0.95,262,0.95,263,0.864,264,0.95,265,0.824,266,1.286,267,0.864,268,0.95,269,0.864,270,0.95,271,0.95,272,0.824,273,0.711,274,1.286,275,0.864,276,0.785,277,0.95,278,0.864,279,0.95,280,0.864,281,0.95,282,0.824,283,0.95,284,0.824,285,1.42,286,0.95,287,0.864,288,0.95,289,0.864,290,0.95,291,0.95,292,0.864,293,0.95,294,0.864,295,0.95,296,0.864,297,0.906,298,0.577,299,0.95,300,0.864,301,0.95,302,0.864,303,0.95,304,0.864,305,0.906,306,0.95,307,1.591,308,1.435,309,0.95,310,0.864,311,0.906,312,0.95,313,0.906,314,0.95,315,0.864,316,0.95,317,0.711,318,0.747,319,0.824,320,0.95,321,0.95,322,0.012,323,0.012,333,4.475,338,3.3,426,3.783,427,3.127,477,3.638,492,2.911,505,1.973,515,3.353,528,2.02,545,2.478,546,2.302,573,1.798,612,2.953,667,2.575,830,3.638,891,4.475,925,2.911,962,1.973,1070,2.432,1091,4.237,1152,4.074,1153,4.074,1165,2.911,1181,3.53,1196,3.638,1200,3.115,1266,4.808,1459,2.911,1468,2.689,1483,2.478,1616,4.418,1681,3.115,1952,3.353,1956,3.996,1969,4.475,2104,3.783,2164,5.434,2438,4.475,2542,5.434,3035,6.169,3036,6.169,3037,3.307,3038,5.202,3039,5.202,3040,5.896,3041,5.202,3042,5.896,3043,5.896,3044,6.317,3045,6.317,3046,3.844,3047,5.202,3048,5.896,3049,3.844,3050,5.202,3051,5.202,3052,5.202,3053,5.202,3054,4.853,3055,3.844,3056,5.202,3057,5.202,3058,5.202,3059,5.202,3060,3.844,3061,5.202,3062,3.844,3063,3.844,3064,5.202,3065,5.202,3066,3.844,3067,5.896,3068,3.844,3069,3.844,3070,3.844,3071,5.202,3072,3.844,3073,3.844,3074,3.844,3075,3.844,3076,3.844,3077,3.844,3078,3.844,3079,3.844,3080,3.844]],["title/injectables/SectionService.html",[428,2.067,642,0.441]],["body/injectables/SectionService.html",[2,1.278,3,0.222,4,0.222,9,0.167,13,0.493,15,0.892,40,0.222,41,0.615,51,0.615,66,0.71,70,0.689,71,0.019,72,0.251,73,0.222,74,0.612,79,0.702,85,0.436,92,0.573,103,2.497,107,3.485,114,1.479,118,0.409,134,0.793,135,0.841,146,2.629,153,0.237,156,0.194,165,0.194,166,0.222,167,0.539,168,0.857,222,2.629,322,0.015,323,0.015,327,3.29,330,2.153,392,1.153,393,2.629,399,4.376,409,6.211,428,3.504,436,2.375,441,3.099,497,3.749,499,2.67,637,2.497,642,0.747,646,2.261,652,1.392,750,3.29,948,1.763,1170,4.379,1243,3.304,1268,5.408,1416,4.379,1646,2.325,2224,4.81,2789,5.386,3081,4.41,3082,6.261,3083,7.22,3084,7.04,3085,7.04,3086,6.76,3087,6.261,3088,5.127,3089,6.261,3090,5.127,3091,6.261,3092,6.261,3093,6.261,3094,5.127,3095,6.261,3096,5.386,3097,5.127]],["title/interfaces/Session.html",[624,0.683,1396,2.381]],["body/interfaces/Session.html",[0,0.048,3,0.173,4,0.173,5,1.265,6,0.832,7,0.57,8,0.57,9,0.224,15,0.726,17,1.593,23,1.178,24,1.979,26,0.517,31,0.645,40,0.115,41,0.472,54,1.009,61,0.318,69,1.317,71,0.019,72,0.13,73,0.261,92,0.489,94,0.961,115,1.036,118,0.435,125,2.688,134,0.677,144,1.398,147,1.641,148,0.892,153,0.217,155,1.489,156,0.101,165,0.101,166,0.115,168,0.872,173,1.679,177,1.097,192,0.872,198,1.405,208,2.281,212,1.398,213,2.834,214,1.969,215,2.193,222,1.679,248,1.25,273,0.889,298,0.937,308,0.492,317,0.492,318,1.338,322,0.009,323,0.009,336,3.534,345,3.373,364,1.384,367,1.969,369,1.317,383,3.569,392,0.598,461,2.524,483,1.178,484,1.933,499,1.009,507,1.593,558,1.398,563,1.444,573,1.244,579,2.394,582,1.061,595,1.489,611,1.715,614,1.861,615,3.36,619,3.36,621,2.577,623,1.52,624,0.889,626,1.178,633,1.25,656,1.061,667,1.317,679,1.178,685,1.244,690,1.061,696,2.127,700,1.861,750,1.398,767,1.178,769,2.356,770,2.365,815,2.127,833,2.101,865,4.005,885,1.009,889,1.715,894,1.178,902,1.861,936,1.861,937,1.861,938,1.861,965,4.435,1008,4.005,1052,1.244,1069,2.834,1070,2.246,1084,1.178,1098,2.688,1173,2.577,1176,3.096,1236,2.284,1238,2.238,1261,1.489,1278,2.378,1288,3.366,1345,1.398,1347,1.317,1359,2.577,1360,1.317,1361,1.489,1362,1.861,1363,2.044,1364,2.044,1365,2.044,1366,2.044,1367,2.044,1368,2.044,1369,2.044,1370,2.044,1371,2.044,1372,2.044,1373,2.044,1374,2.044,1375,2.044,1376,2.044,1377,2.044,1378,2.044,1379,2.044,1380,2.044,1381,2.044,1382,2.044,1383,2.044,1384,2.044,1385,3.072,1386,2.797,1387,2.101,1388,1.861,1389,2.101,1390,3.096,1391,1.861,1392,2.101,1393,1.593,1394,1.861,1395,2.577,1396,3.876,1397,4.398,1398,2.044,1399,1.489,1400,2.238,1401,3.072,1402,2.044,1403,3.932,1404,3.096,1405,4.378,1406,2.577,1407,1.117,1408,2.238,1409,2.044,1410,1.715,1411,5.553,1412,1.489,1413,3.36,1414,1.715,1415,2.044,1416,1.861,1417,2.044,1418,2.044,1419,2.577,1420,2.044,1421,3.072,1422,2.044,1423,2.044,1424,1.593,1425,4.005,1426,3.072,1427,5.083,1428,3.69,1429,3.69,1430,2.044,1431,5.056,1432,2.577,1433,2.044,1434,1.861,1435,2.044,1436,2.044,1437,2.044,1438,1.861,1439,1.861,1440,3.36,1441,3.69,1442,3.736,1443,3.601,1444,3.492,1445,4.62,1446,4.103,1447,3.995,1448,4.103,1449,4.632,1450,3.198,1451,4.364,1452,4.364,1453,4.62,1454,4.103,1455,5.138,1456,4.793,1457,4.398,1458,2.044,1459,2.238,1460,1.861,1461,4.398,1462,1.715,1463,3.69,1464,1.861,1465,5.044,1466,2.044,1467,3.072,1468,3.36,1469,2.044,1470,3.443,1471,3.36,1472,2.044,1473,2.394,1474,2.797,1475,2.044,1476,2.044,1477,1.861,1478,2.044,1479,2.044,1480,3.736,1481,1.715,1482,1.861,1483,3.096,1484,2.044,1485,1.715,1486,3.096,1487,2.044,1488,3.69,1489,2.044,1490,3.69,1491,2.044,1492,2.044,1493,2.044,1494,2.876,1495,2.044,1496,2.044,1497,2.797,1498,2.797,1499,3.69,1500,1.861,1501,3.072,1502,2.044,1503,2.044,1504,3.36,1505,3.876,1506,3.072,1507,1.593,1508,4.62,1509,2.044,1510,3.736,1511,3.072,1512,2.044,1513,2.044,1514,2.044,1515,1.593,1516,1.861,1517,2.044,1518,2.044,1519,4.931,1520,2.044,1521,1.715,1522,3.072,1523,2.044,1524,2.044,1525,2.044,1526,2.044,1527,2.044,1528,2.044,1529,2.044,1530,2.044,1531,2.044,1532,2.044,1533,2.044,1534,2.044,1535,2.044,1536,2.044,1537,2.238,1538,2.044,1539,2.044,1540,2.044,1541,2.044,1542,2.044,1543,2.044,1544,1.593,1545,2.044,1546,2.044,1547,2.044,1548,2.044,1549,2.044,1550,5.138,1551,2.044,1552,2.044,1553,2.044,1554,2.044,1555,2.044,1556,2.044,1557,2.044,1558,2.044,1559,2.044,1560,1.861,1561,3.69,1562,3.072,1563,2.044,1564,2.044,1565,4.103,1566,4.62,1567,2.044,1568,2.044,1569,2.044,1570,3.69,1571,3.69,1572,2.044,1573,2.044,1574,2.044,1575,2.044,1576,1.593,1577,2.044,1578,4.103,1579,2.044,1580,2.044,1581,2.044,1582,3.072,1583,2.044,1584,1.861,1585,2.044,1586,2.044,1587,2.044,1588,2.044,1589,2.044,1590,2.044,1591,2.044,1592,2.101,1593,2.044,1594,1.861,1595,2.044,1596,3.69,1597,2.044,1598,2.044,1599,2.044,1600,2.044,1601,2.044,1602,2.044,1603,2.044,1604,2.044,1605,2.044,1606,1.489,1607,2.044,1608,2.044,1609,3.072,1610,2.044,1611,2.044,1612,3.072,1613,2.044,1614,1.715,1615,1.861,1616,1.861,1617,2.044,1618,2.044,1619,2.044,1620,1.715,1621,2.044,1622,2.044,1623,2.044,1624,1.861,1625,2.044,1626,3.443,1627,2.044,1628,1.489,1629,1.861,1630,1.593,1631,2.044,1632,2.044,1633,2.394,1634,2.044,1635,3.072,1636,2.044,1637,3.198,1638,2.044,1639,3.072,1640,2.044,1641,2.044,1642,2.044,1643,3.072,1644,2.044,1645,2.044,1646,0.915,1647,2.044,1648,1.593,1649,1.861,1650,1.861,1651,1.861,1652,1.861,1653,1.861,1654,2.044,1655,2.044,1656,1.715,1657,2.044,1658,2.044,1659,2.044]],["title/components/SettingItemComponent.html",[0,0.045,310,0.83]],["body/components/SettingItemComponent.html",[0,0.09,1,1.092,2,1.237,3,0.211,4,0.211,5,1.012,7,1.041,8,1.041,9,0.158,13,0.382,19,1.092,25,0.944,26,1.527,27,1.117,28,0.811,29,0.861,30,2.187,31,0.813,32,1.145,35,1.092,38,1.428,40,0.211,66,0.511,71,0.019,72,0.296,73,0.211,80,1.092,100,0.69,106,1.893,118,0.366,130,1.497,132,1.806,147,1.428,153,0.184,156,0.184,165,0.184,166,0.211,257,1.092,258,1.298,259,1.201,260,1.708,261,1.201,262,1.201,263,1.092,264,1.201,265,1.041,266,1.497,267,1.092,268,1.201,269,1.092,270,1.201,271,1.201,272,1.041,273,0.898,274,1.497,275,1.092,276,0.992,277,1.201,278,1.092,279,1.201,280,1.092,281,1.201,282,1.041,283,1.201,284,1.041,285,0.992,286,1.201,287,1.092,288,1.201,289,1.092,290,1.201,291,1.201,292,1.092,293,1.201,294,1.092,295,1.201,296,1.092,297,1.145,298,0.729,299,1.201,300,1.092,301,1.201,302,1.092,303,1.201,304,1.092,305,1.145,306,1.201,307,1.092,308,0.898,309,1.201,310,1.553,311,1.767,312,1.201,313,1.145,314,1.201,315,1.092,316,1.201,317,0.898,318,0.944,319,1.041,320,1.201,321,1.201,322,0.014,323,0.014,367,2.083,439,3.903,501,2.187,592,2.832,682,2.998,690,2.891,1052,3.505,1104,4.236,1153,3.627,1162,2.832,1231,3.389,1236,2.415,1708,4.236,2091,4.652,2097,4.236,2632,5.21,3098,5.21,3099,5.21,3100,4.178,3101,5.21,3102,5.21,3103,6.056,3104,4.857]],["title/components/SidebarComponent.html",[0,0.045,315,0.83]],["body/components/SidebarComponent.html",[0,0.086,1,0.935,2,1.119,3,0.18,4,0.18,5,0.915,6,1.3,7,0.891,8,0.891,9,0.135,13,0.483,19,0.935,25,0.808,26,1.513,27,1.106,28,1.024,29,0.927,30,1.979,31,0.736,32,1.292,34,1.829,35,0.935,36,2.427,38,1.292,40,0.18,41,0.539,51,0.539,61,0.496,66,0.644,70,0.736,71,0.019,72,0.341,73,0.266,74,0.654,76,0.695,79,0.615,80,0.935,83,0.915,85,0.354,92,0.502,99,2.302,100,0.591,103,2.186,105,3.834,114,1.267,118,0.41,130,1.355,132,1.944,134,0.859,135,0.558,146,2.922,153,0.232,156,0.158,163,1.183,165,0.158,166,0.18,167,0.644,257,0.935,258,1.175,259,1.028,260,1.611,261,1.028,262,1.028,263,0.935,264,1.028,265,0.891,266,1.355,267,0.935,268,1.028,269,0.935,270,1.028,271,1.028,272,0.891,273,0.769,274,1.355,275,0.935,276,0.849,277,1.028,278,0.935,279,1.028,280,0.935,281,1.028,282,0.891,283,1.028,284,0.891,285,0.849,286,1.028,287,0.935,288,1.028,289,0.935,290,1.028,291,1.028,292,0.935,293,1.028,294,0.935,295,1.028,296,0.935,297,0.98,298,0.921,299,1.028,300,0.935,301,1.028,302,0.935,303,1.028,304,0.935,305,0.98,306,1.028,307,0.935,308,0.769,309,1.028,310,0.935,311,0.98,312,1.028,313,0.98,314,1.028,315,1.564,316,1.028,317,0.769,318,0.808,319,0.891,320,1.028,321,1.028,322,0.013,323,0.013,325,2.88,389,3.533,393,2.302,395,2.713,399,4.236,405,2.242,428,4.077,433,1.42,438,1.979,441,2.713,454,3.225,462,3.068,497,3.282,499,2.789,501,1.979,547,2.908,554,2.908,578,3.533,597,3.834,599,2.68,625,2.302,637,2.186,690,2.186,750,2.88,767,2.427,815,2.427,961,3.834,962,2.079,966,4.715,1186,3.282,1202,1.43,1482,5.144,1646,2.242,1752,3.533,2003,3.834,2190,4.211,2411,5.531,2414,3.834,2415,4.715,2420,4.211,2423,3.194,2425,4.211,2426,4.715,2430,4.211,2433,4.211,2434,4.211,2444,3.194,2571,4.715,2791,4.715,3105,3.577,3106,5.481,3107,5.481,3108,4.715,3109,5.481,3110,6.132,3111,5.481,3112,6.132,3113,5.481,3114,4.158,3115,5.481,3116,5.481,3117,4.158]],["title/injectables/StorageService.html",[429,1.401,642,0.441]],["body/injectables/StorageService.html",[3,0.125,4,0.125,9,0.094,13,0.504,16,2.188,21,1.151,27,0.881,29,0.604,31,0.677,40,0.125,41,0.629,51,0.546,61,0.344,66,0.784,70,0.832,71,0.019,72,0.322,73,0.296,74,0.739,76,0.538,77,2.949,79,0.623,83,0.709,85,0.647,91,1.278,92,0.67,100,0.604,114,0.826,115,0.748,116,1.151,118,0.448,129,1.534,132,1.96,133,1.575,134,0.931,135,0.796,138,1.536,148,0.842,153,0.191,156,0.109,165,0.109,166,0.125,167,0.691,168,0.939,177,1.208,182,1.784,183,1.429,187,1.429,192,0.887,198,1.029,322,0.01,323,0.01,330,1.461,392,0.649,402,4.916,403,2.217,405,1.461,429,2.108,433,1.44,436,2.493,438,1.534,442,1.82,443,2.116,444,3.888,448,1.278,450,0.946,467,1.095,480,2.217,482,1.88,484,1.1,485,2.102,490,5.377,501,1.534,578,3.583,582,1.151,603,1.86,624,0.786,625,2.76,628,1.095,630,2.019,631,1.278,632,1.278,642,0.507,645,4.511,646,1.534,651,1.738,652,0.784,657,2.461,658,1.784,659,1.611,660,1.35,661,2.76,663,2.792,690,1.694,696,2.743,704,2.232,720,2.544,731,1.35,769,0.946,885,1.912,948,0.993,982,1.88,985,2.102,1006,3.468,1084,1.278,1085,2.377,1086,1.728,1097,2.966,1120,3.143,1133,2.971,1202,0.993,1290,3.583,1291,2.232,1407,1.784,1443,3.018,1537,2.821,1544,4.191,1646,0.993,1660,3.321,1662,2.971,1667,3.067,1759,1.615,1783,1.728,2081,2.217,2085,2.019,2122,3.263,2637,2.738,2896,1.86,2908,2.217,2936,4.27,2947,2.217,2948,2.483,2949,2.483,2952,2.483,2953,2.483,2954,3.654,2955,3.654,2956,4.27,2957,3.654,2958,3.654,2959,4.336,2960,4.336,2961,4.336,2962,4.336,2963,4.782,2964,3.654,2965,2.483,2966,4.782,2967,3.654,2968,2.483,2969,4.782,2970,3.654,2971,2.019,2972,2.019,2973,2.019,2974,2.019,2975,2.019,2976,2.019,2977,2.483,2978,4.782,2979,3.654,2980,2.483,2981,5.097,2982,5.655,2983,3.654,2984,3.654,2985,3.654,2986,3.654,2987,3.654,2988,3.654,2989,2.483,2990,3.654,2991,3.654,2992,2.483,2993,2.483,2994,3.654,2995,3.654,2996,2.483,2997,2.483,2998,3.654,2999,3.654,3000,2.483,3001,2.483,3002,3.654,3003,2.483,3004,2.483,3005,3.654,3006,3.654,3007,2.483,3008,2.483,3009,2.483,3010,2.483,3011,3.654,3012,2.483,3013,4.782,3014,4.782,3015,2.483,3016,4.782,3017,2.483,3018,4.782,3019,2.483,3020,4.782,3021,4.782,3022,2.483,3023,4.782,3024,2.483,3025,4.782,3026,2.483,3027,3.654,3028,2.483,3029,2.483,3030,3.654,3031,2.483,3032,2.483,3033,3.654,3034,2.483,3118,4.248,3119,4.248,3120,4.248,3121,4.248,3122,4.248,3123,4.248,3124,2.886,3125,2.886,3126,2.886,3127,2.886,3128,2.886,3129,2.886,3130,2.886,3131,2.886,3132,2.886,3133,2.886,3134,2.886,3135,2.886,3136,2.886,3137,2.886,3138,2.886,3139,2.886,3140,2.886,3141,2.886,3142,2.886,3143,2.886,3144,2.886]],["title/interfaces/Template.html",[5,0.617,624,0.683]],["body/interfaces/Template.html",[0,0.048,3,0.173,4,0.173,5,1.271,6,0.831,7,0.569,8,0.569,9,0.224,15,0.725,17,1.591,23,1.176,24,1.977,26,0.516,31,0.645,40,0.115,41,0.472,54,1.008,61,0.317,69,1.315,71,0.019,72,0.261,73,0.285,92,0.489,94,0.959,115,1.035,118,0.434,125,2.686,134,0.676,144,1.396,147,1.64,148,0.891,153,0.217,155,1.487,156,0.101,165,0.101,166,0.115,168,0.872,173,1.677,177,1.096,192,0.872,198,1.405,208,2.28,212,1.396,213,1.977,214,1.968,215,2.192,222,1.677,248,1.249,273,0.888,298,0.936,308,0.491,317,0.491,318,1.337,322,0.009,323,0.009,336,3.533,345,3.371,364,1.383,367,1.968,369,1.315,383,3.567,392,0.597,461,2.521,483,1.176,484,1.921,499,1.008,507,1.591,558,1.396,563,1.442,573,1.242,579,2.391,582,1.06,595,1.487,611,1.712,614,1.858,615,3.356,619,3.356,621,2.574,623,1.519,624,0.888,626,1.176,633,1.249,656,1.06,667,1.315,679,1.176,685,2.244,690,1.06,696,2.124,700,1.858,750,1.396,767,1.176,769,2.355,770,1.176,815,2.124,833,2.098,865,4.002,885,1.008,889,1.712,894,1.176,902,1.858,936,1.858,937,1.858,938,1.858,965,4.434,1008,4.002,1052,1.242,1069,2.832,1070,2.244,1084,1.176,1098,2.686,1173,2.574,1176,3.093,1236,2.282,1238,2.235,1261,1.487,1278,2.375,1288,3.364,1345,1.396,1347,1.315,1359,2.574,1360,1.315,1361,1.487,1362,1.858,1363,2.041,1364,2.041,1365,2.041,1366,2.041,1367,2.041,1368,2.041,1369,2.041,1370,2.041,1371,2.041,1372,2.041,1373,2.041,1374,2.041,1375,2.041,1376,2.041,1377,2.041,1378,2.041,1379,2.041,1380,2.041,1381,2.041,1382,2.041,1383,2.041,1384,2.041,1385,3.068,1386,2.793,1387,2.098,1388,1.858,1389,2.098,1390,3.093,1391,1.858,1392,2.098,1393,1.591,1394,1.858,1395,3.688,1396,3.688,1397,3.068,1398,2.041,1399,1.487,1400,2.235,1401,3.068,1402,2.041,1403,3.93,1404,3.093,1405,4.376,1406,2.574,1407,1.115,1408,2.235,1409,2.041,1410,1.712,1411,5.552,1412,1.487,1413,3.356,1414,1.712,1415,2.041,1416,1.858,1417,2.041,1418,2.041,1419,2.574,1420,2.041,1421,3.068,1422,2.041,1423,2.041,1424,1.591,1425,4.002,1426,3.068,1427,5.082,1428,3.686,1429,3.686,1430,2.041,1431,5.055,1432,2.574,1433,2.041,1434,1.858,1435,2.041,1436,2.041,1437,2.041,1438,1.858,1439,1.858,1440,3.356,1441,3.686,1442,3.734,1443,3.599,1444,3.49,1445,4.617,1446,4.1,1447,3.994,1448,4.1,1449,4.63,1450,3.196,1451,4.361,1452,4.361,1453,4.617,1454,4.1,1455,5.136,1456,4.79,1457,4.395,1458,2.041,1459,2.235,1460,1.858,1461,4.395,1462,1.712,1463,3.686,1464,1.858,1465,5.042,1466,2.041,1467,3.068,1468,3.356,1469,2.041,1470,3.44,1471,3.356,1472,2.041,1473,2.391,1474,2.793,1475,2.041,1476,2.041,1477,1.858,1478,2.041,1479,2.041,1480,3.734,1481,1.712,1482,1.858,1483,3.093,1484,2.041,1485,1.712,1486,3.093,1487,2.041,1488,3.686,1489,2.041,1490,3.686,1491,2.041,1492,2.041,1493,2.041,1494,2.874,1495,2.041,1496,2.041,1497,2.793,1498,2.793,1499,3.686,1500,1.858,1501,3.068,1502,2.041,1503,2.041,1504,3.356,1505,3.874,1506,3.068,1507,1.591,1508,4.617,1509,2.041,1510,3.733,1511,3.068,1512,2.041,1513,2.041,1514,2.041,1515,1.591,1516,1.858,1517,2.041,1518,2.041,1519,4.928,1520,2.041,1521,1.712,1522,3.068,1523,2.041,1524,2.041,1525,2.041,1526,2.041,1527,2.041,1528,2.041,1529,2.041,1530,2.041,1531,2.041,1532,2.041,1533,2.041,1534,2.041,1535,2.041,1536,2.041,1537,2.235,1538,2.041,1539,2.041,1540,2.041,1541,2.041,1542,2.041,1543,2.041,1544,1.591,1545,2.041,1546,2.041,1547,2.041,1548,2.041,1549,2.041,1550,5.136,1551,2.041,1552,2.041,1553,2.041,1554,2.041,1555,2.041,1556,2.041,1557,2.041,1558,2.041,1559,2.041,1560,1.858,1561,3.686,1562,3.068,1563,2.041,1564,2.041,1565,4.1,1566,4.617,1567,2.041,1568,2.041,1569,2.041,1570,3.686,1571,3.686,1572,2.041,1573,2.041,1574,2.041,1575,2.041,1576,1.591,1577,2.041,1578,4.1,1579,2.041,1580,2.041,1581,2.041,1582,3.068,1583,2.041,1584,1.858,1585,2.041,1586,2.041,1587,2.041,1588,2.041,1589,2.041,1590,2.041,1591,2.041,1592,2.098,1593,2.041,1594,1.858,1595,2.041,1596,3.686,1597,2.041,1598,2.041,1599,2.041,1600,2.041,1601,2.041,1602,2.041,1603,2.041,1604,2.041,1605,2.041,1606,1.487,1607,2.041,1608,2.041,1609,3.068,1610,2.041,1611,2.041,1612,3.068,1613,2.041,1614,1.712,1615,1.858,1616,1.858,1617,2.041,1618,2.041,1619,2.041,1620,1.712,1621,2.041,1622,2.041,1623,2.041,1624,1.858,1625,2.041,1626,3.44,1627,2.041,1628,1.487,1629,1.858,1630,1.591,1631,2.041,1632,2.041,1633,2.391,1634,2.041,1635,3.068,1636,2.041,1637,3.196,1638,2.041,1639,3.068,1640,2.041,1641,2.041,1642,2.041,1643,3.068,1644,2.041,1645,2.041,1646,0.914,1647,2.041,1648,1.591,1649,1.858,1650,1.858,1651,1.858,1652,1.858,1653,1.858,1654,2.041,1655,2.041,1656,1.712,1657,2.041,1658,2.041,1659,2.041]],["title/injectables/TemplateEditorService.html",[642,0.441,1387,1.941]],["body/injectables/TemplateEditorService.html",[3,0.181,4,0.181,9,0.136,31,0.954,40,0.181,41,0.54,51,0.54,66,0.758,70,0.877,71,0.019,72,0.32,73,0.302,74,0.779,85,0.593,92,0.66,118,0.456,134,0.697,135,0.911,148,1.026,153,0.158,156,0.158,165,0.158,166,0.181,168,0.946,177,1.164,192,0.779,222,1.754,258,1.178,322,0.013,323,0.013,361,1.754,364,1.758,380,2.501,392,1.236,401,2.194,437,3.593,450,1.369,582,1.666,611,2.692,642,0.656,652,1.134,683,3.845,807,3.292,826,3.292,846,3.593,894,1.849,948,1.437,1021,3.543,1171,2.501,1188,4.645,1213,4.721,1236,1.666,1249,3.292,1291,2.194,1330,4.746,1341,3.208,1360,3.609,1361,4.081,1387,2.889,1393,2.501,1505,2.692,1510,4.746,1515,2.501,1584,3.845,1592,3.565,1768,5.212,1839,3.208,1952,4.744,2226,3.543,2232,3.208,2287,2.692,2459,2.921,2470,5.837,3145,3.208,3146,6.146,3147,6.53,3148,5.498,3149,6.53,3150,5.498,3151,5.498,3152,4.177,3153,5.498,3154,4.177,3155,5.498,3156,4.177,3157,4.177,3158,5.498,3159,4.177,3160,5.498,3161,4.177,3162,5.498,3163,4.177,3164,4.177,3165,4.721,3166,6.53,3167,4.177,3168,4.177,3169,4.177,3170,4.177,3171,4.177,3172,3.593,3173,4.177,3174,4.177,3175,4.177,3176,4.177,3177,4.177,3178,4.177,3179,4.177,3180,4.177,3181,5.498,3182,4.177,3183,4.177,3184,4.177,3185,4.177,3186,4.177,3187,4.177,3188,4.177,3189,4.177,3190,4.177,3191,5.498,3192,4.177,3193,4.177,3194,4.177,3195,4.177,3196,4.177,3197,4.177,3198,4.177,3199,3.593,3200,3.593,3201,4.177,3202,4.177,3203,4.177,3204,4.177,3205,4.177,3206,4.177,3207,4.177,3208,5.498,3209,5.498,3210,4.177,3211,6.146,3212,6.146,3213,4.177,3214,4.177,3215,4.177,3216,4.177,3217,4.177,3218,5.498,3219,6.146,3220,6.146,3221,6.53,3222,3.593,3223,4.177,3224,4.177,3225,4.177,3226,4.177,3227,4.177,3228,4.177]],["title/modules/TemplatePlaygroundModule.html",[2486,2.583,3229,2.583]],["body/modules/TemplatePlaygroundModule.html",[3,0.235,4,0.235,5,1.082,9,0.176,32,1.279,34,1.932,69,2.684,71,0.019,153,0.289,156,0.205,158,2.401,163,1.543,165,0.205,166,0.235,257,1.219,317,1.43,322,0.015,323,0.015,338,3.625,339,5.572,369,2.684,370,4.166,371,1.778,616,3.793,1360,2.684,1361,3.035,1387,3.91,1388,3.793,1389,3.91,1390,3.495,1391,3.793,1392,3.91,1393,3.247,1394,3.793,1404,3.495,1737,3.793,2291,4.976,2486,3.793,2487,3.793,3229,5.423,3230,5.958,3231,4.844,3232,5.321,3233,4.665,3234,4.665,3235,4.665,3236,4.665,3237,5.423,3238,6.477,3239,6.477,3240,5.423]],["title/components/ToastComponent.html",[0,0.045,319,0.792]],["body/components/ToastComponent.html",[0,0.087,1,0.898,2,1.09,3,0.305,4,0.173,5,0.891,7,0.856,8,0.856,9,0.13,13,0.473,19,0.898,23,2.363,25,0.776,26,1.509,27,1.103,28,0.891,29,0.759,32,0.942,35,0.898,38,1.258,40,0.173,51,0.524,61,0.477,65,3.443,66,0.632,70,0.717,71,0.019,72,0.314,73,0.313,74,0.637,76,0.813,79,0.598,80,1.706,81,3.733,83,0.891,85,0.454,92,0.588,94,1.927,95,2.241,99,2.241,100,0.568,118,0.363,130,1.486,132,1.592,134,0.506,135,0.536,147,1.258,153,0.202,156,0.151,164,2.391,165,0.151,166,0.173,167,0.674,171,2.391,192,0.762,213,3.614,215,2.255,257,0.898,258,1.144,259,0.987,260,1.586,261,0.987,262,0.987,263,0.898,264,0.987,265,0.856,266,1.319,267,0.898,268,0.987,269,0.898,270,0.987,271,0.987,272,0.856,273,0.739,274,1.319,275,0.898,276,0.815,277,0.987,278,0.898,279,0.987,280,0.898,281,0.987,282,0.856,283,0.987,284,0.856,285,0.815,286,0.987,287,0.898,288,0.987,289,0.898,290,0.987,291,0.987,292,0.898,293,0.987,294,0.898,295,0.987,296,0.898,297,0.942,298,0.6,299,0.987,300,0.898,301,0.987,302,0.898,303,0.987,304,0.898,305,0.942,306,0.987,307,0.898,308,0.739,309,0.987,310,0.898,311,0.942,312,0.987,313,0.942,314,0.987,315,0.898,316,0.987,317,0.739,318,0.776,319,1.53,320,0.987,321,0.987,322,0.013,323,0.013,341,2.363,357,3.44,367,2.207,397,2.804,448,2.363,573,3,633,1.879,634,3.068,644,2.495,650,4.617,679,1.768,720,3.196,770,3.11,804,4.928,805,3.068,808,4.591,815,1.768,892,3.436,897,2.793,898,3.068,900,3.068,925,4.15,946,2.574,962,2.024,985,1.977,1053,3.436,1098,2.235,1107,2.098,1134,4.434,1137,2.804,1173,2.574,1202,1.374,1236,2.129,1278,2.975,1357,2.391,1427,2.793,1440,2.793,1443,2.391,1444,2.235,1486,3.874,1505,3.44,1515,2.391,1594,2.793,1681,3.842,1795,4.487,1860,2.574,2091,4.1,2104,2.391,2194,4.1,2205,4.591,2206,5.17,2212,3.733,2226,3.44,2639,5.17,2799,5.17,2805,5.519,2818,4.591,3096,4.591,3222,4.591,3241,3.436,3242,5.337,3243,5.337,3244,5.337,3245,6.011,3246,3.994,3247,3.994,3248,3.994,3249,5.337,3250,5.337,3251,5.337,3252,3.994,3253,3.994,3254,4.591,3255,5.337,3256,3.994,3257,5.337,3258,3.994,3259,3.994,3260,3.994,3261,3.436,3262,3.994,3263,3.994,3264,3.994,3265,3.994,3266,3.994,3267,3.436,3268,3.994,3269,3.994,3270,3.994,3271,3.994,3272,3.994,3273,3.994,3274,3.994,3275,3.994,3276,3.436,3277,3.994]],["title/injectables/ToastService.html",[65,1.727,642,0.441]],["body/injectables/ToastService.html",[0,0.089,3,0.313,4,0.208,9,0.156,13,0.516,27,0.854,40,0.208,41,0.59,51,0.59,65,3.216,66,0.69,70,0.807,71,0.019,72,0.294,73,0.327,74,0.717,76,0.939,79,0.674,80,1.718,85,0.511,92,0.63,118,0.397,128,3.362,132,1.792,134,0.831,135,0.644,147,1.416,153,0.228,156,0.182,165,0.182,166,0.208,167,0.723,168,0.831,213,3.728,215,2.322,319,1.638,322,0.014,323,0.014,367,2.066,392,1.475,393,2.523,447,3.872,448,3.045,487,3.362,488,3.597,526,4.125,592,3.068,633,2.051,642,0.717,652,1.302,767,2.66,770,3.246,925,4.103,948,1.649,962,2.279,1003,4.615,1019,4.615,1134,4.432,1137,3.157,1408,3.362,1486,3.872,1681,3.597,1696,3.091,1795,4.81,2103,5.168,2194,4.615,2212,4.202,2226,3.872,2232,4.615,2745,4.615,2890,5.283,3254,5.168,3278,4.125,3279,6.008,3280,6.008,3281,6.008,3282,6.008,3283,4.795,3284,4.795,3285,4.795,3286,4.795,3287,4.795,3288,4.795,3289,4.795]],["title/interfaces/User.html",[138,0.754,624,0.683]],["body/interfaces/User.html",[3,0.174,4,0.174,9,0.13,13,0.316,15,0.678,27,0.761,31,0.539,40,0.174,41,0.526,51,0.394,71,0.019,72,0.337,73,0.325,76,0.508,77,1.521,79,0.675,81,3.744,83,0.67,85,0.547,92,0.49,114,0.78,118,0.474,133,1.291,135,0.925,138,1.581,147,1.262,148,0.67,153,0.203,156,0.152,165,0.203,166,0.174,167,0.704,168,0.508,177,1.208,192,0.678,248,1.673,322,0.013,323,0.013,364,1.665,371,1.755,392,0.902,393,2.699,401,2.812,405,1.841,416,1.932,429,2.438,433,1.822,436,2.03,438,1.448,439,3.882,442,2.32,443,2.953,448,2.845,450,2.107,452,2.247,467,1.521,471,2.649,473,3.45,480,2.135,482,1.776,483,2.37,484,1.735,485,2.649,499,2.03,500,3.536,501,2.175,505,2.438,557,1.876,582,2.135,586,2.402,603,4.142,624,1.114,626,1.776,628,2.03,637,2.135,642,0.639,643,2.108,646,1.448,651,1.254,652,1.089,656,2.135,657,1.776,658,2.247,659,2.03,660,1.876,661,2.529,662,2.37,665,3.181,696,1.776,712,2.996,731,3.221,779,3.744,800,3.081,819,3.619,820,4.937,826,3.205,828,2.812,848,3.205,982,1.776,1085,3.597,1087,3.205,1099,2.806,1103,2.585,1120,2.892,1202,1.38,1231,2.245,1357,2.402,1400,2.996,1614,3.45,1667,3.181,1674,3.45,2097,4.495,2126,4.112,2144,4.627,2637,2.585,2683,3.081,2896,4.142,2905,4.495,2938,4.112,2971,4.495,2972,4.817,2973,4.495,2974,4.495,2975,4.495,2976,4.495,3290,3.081,3291,4.604,3292,4.604,3293,4.604,3294,4.604,3295,4.604,3296,4.604,3297,4.604,3298,4.604,3299,4.604,3300,4.604,3301,4.604,3302,4.604,3303,4.604,3304,3.451,3305,3.451,3306,4.604,3307,3.451,3308,3.451,3309,5.182,3310,4.604,3311,4.604,3312,3.451,3313,3.451,3314,3.451,3315,3.451,3316,3.451,3317,3.451,3318,3.451]],["title/interfaces/UserData.html",[624,0.683,1760,2.381]],["body/interfaces/UserData.html",[0,0.074,3,0.135,4,0.135,6,0.971,9,0.226,13,0.245,15,0.83,16,1.988,18,2.889,19,1.508,21,2.296,25,0.604,26,0.604,27,0.442,29,0.954,31,0.417,32,0.733,33,2.889,34,1.337,38,0.733,40,0.25,41,0.44,54,1.178,61,0.371,63,3.389,64,2.417,65,2.691,71,0.019,72,0.152,73,0.301,75,2.889,76,0.568,78,1.069,79,0.684,80,0.699,83,0.749,86,2.889,91,2.548,92,0.614,94,1.122,95,1.305,96,1.453,100,0.986,101,2.002,106,0.971,113,2.002,114,0.604,115,1.82,116,2.296,118,0.384,129,2.078,132,1.568,133,1.596,134,0.394,137,4.039,138,1.435,144,1.632,148,0.749,150,3.148,151,1.538,153,0.269,156,0.118,157,2.889,158,1.375,159,1.739,163,0.884,164,1.86,165,0.199,166,0.135,167,0.753,168,0.866,173,1.882,177,0.961,178,2.002,179,3.389,182,1.305,183,1.538,187,1.538,192,0.95,198,0.915,208,1.178,212,2.762,213,2.602,214,1.069,215,1.724,217,2.173,247,2.762,248,1.644,255,2.458,256,2.602,272,0.961,273,1.3,282,0.961,322,0.011,323,0.011,338,2.508,341,1.375,355,1.122,361,2.417,364,0.805,371,1.019,395,1.538,416,2.078,433,0.805,448,1.375,461,1.632,473,3.389,477,3.677,521,1.632,544,1.632,563,1.618,592,1.453,623,1.496,624,0.972,625,2.752,626,1.375,628,1.7,631,2.902,632,2.902,638,1.632,641,1.538,644,1.453,646,1.122,648,3.221,653,3.221,680,2.173,709,3.443,721,1.739,772,1.86,774,3.024,776,2.387,786,4.039,789,2.173,837,2.387,841,2.387,877,3.024,899,3.135,917,2.173,928,2.173,985,1.538,986,1.86,987,1.86,988,1.86,1009,2.684,1075,2.889,1076,2.889,1078,3.135,1079,3.135,1080,3.135,1081,3.135,1093,1.739,1102,3.024,1137,1.632,1151,2.173,1201,2.173,1235,3.135,1236,1.788,1285,3.668,1291,1.632,1292,1.538,1295,1.453,1296,2.173,1345,2.762,1346,2.002,1347,1.538,1399,1.739,1442,2.684,1444,3.221,1462,2.002,1470,2.002,1480,1.86,1507,3.447,1633,2.684,1637,2.684,1646,1.069,1648,1.86,1656,3.389,1673,2.173,1708,2.173,1709,2.387,1710,2.387,1711,2.173,1712,2.673,1713,4.688,1714,4.421,1715,1.86,1716,2.387,1717,2.387,1718,2.673,1719,2.673,1720,2.673,1721,2.673,1722,2.673,1725,2.673,1728,2.387,1732,2.673,1733,2.673,1734,2.673,1735,2.673,1737,3.135,1738,2.673,1740,4.523,1743,2.673,1744,2.673,1745,4.523,1746,4.523,1748,2.673,1749,4.039,1752,2.002,1753,2.387,1754,2.173,1755,2.173,1756,2.673,1757,4.039,1758,3.443,1759,2.508,1760,4.405,1761,2.889,1762,5.25,1763,5.469,1764,5.469,1765,2.673,1766,2.673,1767,2.673,1768,4.884,1769,2.673,1770,2.673,1771,2.673,1772,2.673,1773,2.173,1774,2.673,1775,2.673,1776,2.673,1777,2.673,1778,2.673,1779,2.673,1780,2.002,1781,2.673,1782,2.673,1783,1.86,1784,2.673,1785,2.673,1786,2.673,1787,2.673,1788,2.673,1789,2.673,1790,2.673,1791,2.673,1792,2.673,1793,4.523,1794,2.673,1795,3.677,1796,2.673,1797,2.673,1798,2.673,1799,2.673,1800,2.673,1801,2.673,1802,2.673,1803,2.387,1804,2.673,1805,4.523,1806,2.673,1807,2.673,1808,2.673,1809,2.673,1810,2.673,1811,2.387,1812,2.673,1813,2.673,1814,2.673,1815,3.855,1816,2.673,1817,2.673,1818,2.673,1819,2.673,1820,4.523,1821,2.673,1822,2.673,1823,2.673,1824,2.673,1825,2.673,1826,2.673,1827,3.855,1828,2.673,1829,4.951,1830,2.673,1831,3.855,1832,2.889,1833,3.443,1834,3.443,1835,2.673,1836,2.673,1837,2.673,1838,2.673,1839,2.387,1840,2.387,1841,2.673,1842,2.673,1843,2.673,1844,2.673,1845,2.673,1846,2.673,1847,5.25,1848,2.673,1849,2.673,1850,2.673,1851,2.673,1852,2.673,1853,2.673,1854,2.673,1855,5.88,1856,2.673,1857,2.673,1858,1.86,1859,2.673,1860,2.002,1861,2.173,1862,2.673,1863,2.173,1864,2.673,1865,2.673,1866,2.387,1867,2.673,1868,2.673,1869,2.673,1870,3.855,1871,2.673,1872,2.673,1873,2.673,1874,2.673,1875,2.673,1876,2.673,1877,2.673,1878,2.673,1879,2.673,1880,3.855,1881,2.673,1882,2.673,1883,2.673,1884,2.673]],["title/injectables/UserService.html",[416,1.334,642,0.441]],["body/injectables/UserService.html",[3,0.17,4,0.17,9,0.128,13,0.523,15,0.807,27,0.557,31,0.708,40,0.17,51,0.626,61,0.468,66,0.735,70,0.893,71,0.019,72,0.335,73,0.312,74,0.76,76,0.668,77,2,79,0.767,81,2.743,83,0.881,85,0.619,92,0.583,114,1.025,118,0.459,133,1.467,135,0.977,138,1.593,147,0.925,148,0.881,153,0.2,156,0.149,165,0.2,166,0.17,167,0.698,168,0.755,177,1.203,192,0.668,248,1.226,322,0.012,323,0.012,364,1.773,371,2.088,392,0.882,393,2.214,401,2.061,405,2.354,416,2.3,429,2.652,433,1.938,436,2.416,438,1.904,439,3.839,442,2.566,443,3.082,448,1.737,450,1.286,452,2.674,467,1.488,471,1.942,473,2.528,480,2.54,482,2.334,483,1.737,484,1.65,485,3.153,499,1.488,500,3.153,501,2.15,505,2,557,2.466,582,1.564,586,3.157,603,2.528,624,0.975,628,1.488,637,1.564,642,0.629,643,2.061,646,1.904,651,1.648,652,1.065,656,1.564,657,2.82,658,2.214,659,2,660,1.834,661,2.874,662,2.82,665,3.153,696,2.334,712,2.195,731,2.466,779,2.743,800,4.05,819,3.13,820,4.05,826,2.349,828,2.061,848,2.349,948,1.349,950,2.743,982,2.334,1085,2.195,1087,2.349,1099,3.688,1103,3.398,1120,3.082,1202,1.349,1231,2.951,1235,4.166,1357,3.157,1400,2.195,1614,2.528,1667,2.61,1674,2.528,2097,4.972,2126,3.013,2144,5.105,2637,3.398,2683,3.013,2896,2.528,2905,3.688,2938,4.05,2971,2.743,2972,3.688,2973,2.743,2974,2.743,2975,2.743,2976,2.743,3290,3.013,3291,3.374,3292,3.374,3293,3.374,3294,3.374,3295,3.374,3296,3.374,3297,3.374,3298,3.374,3299,3.374,3300,3.374,3301,3.374,3302,3.374,3303,3.374,3304,4.536,3305,4.536,3306,5.124,3307,4.536,3308,4.536,3309,5.124,3310,4.536,3311,4.536,3312,3.374,3313,3.374,3314,3.374,3315,4.536,3316,5.479,3317,4.536,3318,3.374,3319,5.273,3320,5.273,3321,3.922,3322,3.922,3323,3.922,3324,3.922,3325,3.922,3326,3.922,3327,3.922]],["title/injectables/ZipExportService.html",[642,0.441,1389,1.941]],["body/injectables/ZipExportService.html",[3,0.208,4,0.208,5,1.149,6,2.051,9,0.224,15,0.608,28,1.096,40,0.208,51,0.59,66,0.69,70,0.807,71,0.019,72,0.294,73,0.284,74,0.717,85,0.558,92,0.55,107,2.374,118,0.428,153,0.182,156,0.182,165,0.182,166,0.208,168,0.916,177,0.801,192,0.897,251,3.354,258,1.028,273,0.887,318,0.932,322,0.014,323,0.014,361,2.523,392,1.078,452,2.013,475,3.684,507,2.871,514,2.684,563,2.169,623,1.709,642,0.717,652,1.302,683,3.354,685,2.242,717,3.354,761,3.684,807,3.929,833,2.519,894,2.123,901,4.125,948,1.649,1137,2.519,1171,3.929,1269,3.672,1284,3.091,1300,3.684,1333,3.872,1337,3.684,1348,3.354,1360,3.404,1389,3.157,1390,4.565,1393,2.871,1395,3.091,1405,4.882,1406,4.726,1434,3.354,1494,2.871,1592,3.157,1606,3.672,1620,3.872,1633,4.327,1637,4.118,1648,2.871,1649,3.354,1650,3.354,1651,3.354,1652,3.354,1653,3.354,1678,4.125,1759,3.362,1761,3.091,1803,3.684,1811,3.684,1858,2.871,2026,3.684,2124,4.125,2190,3.684,2459,3.354,2520,4.125,2905,4.202,3102,4.125,3199,5.168,3200,5.644,3267,4.125,3328,5.283,3329,3.684,3330,6.008,3331,6.008,3332,6.877,3333,6.008,3334,4.795,3335,6.008,3336,4.795,3337,7.414,3338,4.795,3339,4.615,3340,4.795,3341,4.795,3342,4.795,3343,5.644,3344,4.795,3345,4.795,3346,4.795,3347,4.795,3348,4.795,3349,4.795,3350,4.795,3351,4.795,3352,4.795,3353,4.795,3354,6.008,3355,4.795,3356,6.008,3357,6.877,3358,4.795,3359,4.795,3360,4.795,3361,4.795,3362,4.795,3363,4.795,3364,4.125,3365,4.795,3366,4.795,3367,4.795,3368,4.795,3369,4.795,3370,4.125,3371,4.795,3372,4.795,3373,4.795,3374,4.795]],["title/coverage.html",[1414,3.263]],["body/coverage.html",[0,0.094,1,0.942,5,0.699,9,0.136,10,3.602,11,3.217,12,3.602,15,0.531,27,0.875,29,0.595,35,0.942,64,1.758,65,1.958,71,0.019,73,0.182,100,0.595,138,0.855,161,2.929,198,1.503,253,4.159,263,0.942,265,0.897,267,0.942,269,0.942,272,0.897,275,0.942,276,1.124,278,0.942,280,0.942,282,0.897,284,0.897,287,0.942,289,0.942,292,0.942,294,0.942,296,1.238,297,0.987,300,0.942,302,0.942,304,0.942,307,0.942,310,0.942,313,0.987,315,0.942,317,0.775,319,0.897,322,0.013,323,0.013,324,3.602,348,2.929,374,3.217,391,3.602,402,2.699,416,1.512,427,2.073,428,2.344,429,1.588,431,2.929,528,2.894,534,3.602,541,3.217,549,3.217,558,2.2,624,1.362,625,1.758,627,4.231,637,1.67,642,0.904,651,1.309,653,2.344,699,3.602,958,3.602,1082,4.231,1093,2.344,1097,1.67,1102,2.2,1149,3.602,1150,3.602,1227,2.699,1228,4.231,1229,4.231,1244,2.699,1359,2.699,1360,3.645,1361,3.902,1362,4.572,1387,2.2,1389,2.2,1392,2.2,1396,2.699,1403,2.508,1414,2.699,1592,2.2,1606,2.344,1660,2.073,1661,3.602,1708,4.304,1709,4.231,1710,4.231,1711,4.304,1755,2.929,1760,2.699,1885,4.231,1933,4.231,1934,4.231,1935,3.602,1936,3.602,1999,3.602,2000,3.602,2075,3.602,2089,3.602,2090,3.602,2107,3.602,2108,4.231,2202,3.602,2203,3.602,2222,3.602,2223,3.602,2236,3.602,2269,2.699,2407,3.602,2408,3.217,2409,3.602,2445,4.231,2446,4.231,2528,3.602,2584,3.852,2620,3.602,2640,3.602,2781,3.602,2795,4.231,2796,4.231,2886,3.602,2947,4.231,3035,3.602,3036,3.602,3037,3.602,3081,3.602,3098,3.602,3099,3.602,3100,3.602,3105,3.602,3145,4.231,3165,3.217,3231,2.929,3241,3.602,3278,3.602,3290,4.231,3328,4.231,3329,4.231,3339,3.217,3375,4.188,3376,4.188,3377,7.628,3378,6.154,3379,4.188,3380,4.188,3381,4.188,3382,6.154,3383,5.507,3384,4.738,3385,7.576,3386,3.602,3387,3.602,3388,3.602,3389,3.602,3390,3.602,3391,3.602,3392,4.188,3393,7.107,3394,4.188,3395,4.188,3396,6.972,3397,5.507,3398,5.507,3399,5.507,3400,6.537,3401,4.188,3402,5.507,3403,5.507,3404,4.188,3405,4.188,3406,4.188,3407,4.188,3408,4.188,3409,5.507,3410,5.507,3411,3.602,3412,4.188,3413,4.188,3414,5.507,3415,3.602,3416,3.602,3417,5.842,3418,3.602,3419,3.602,3420,3.602,3421,3.602,3422,4.188]],["title/dependencies.html",[69,2.202,1626,1.982]],["body/dependencies.html",[69,2.821,71,0.019,156,0.216,158,2.523,163,1.622,322,0.016,323,0.016,355,2.058,370,5.433,371,2.187,372,4.903,520,4.903,551,4.903,716,4.378,1243,3.673,1628,3.19,1749,4.378,1757,5.124,1758,4.378,2238,3.986,2298,5.738,2323,4.903,2821,4.378,3423,7.69,3424,5.699,3425,5.699,3426,5.699,3427,5.699,3428,5.699,3429,5.699,3430,5.699,3431,5.699,3432,4.903,3433,5.699,3434,5.699,3435,5.699,3436,5.699,3437,5.699,3438,5.699,3439,5.699,3440,5.699,3441,5.699,3442,5.699,3443,5.699,3444,5.699,3445,5.699,3446,5.699,3447,5.699]],["title/index.html",[40,0.16,3343,3.177]],["body/index.html",[2,0.879,15,0.545,16,2.356,19,0.968,21,1.716,27,0.886,28,1.103,29,1.042,69,2.13,71,0.019,77,2.506,78,1.48,90,3.702,91,2.482,100,1.017,102,3.01,106,1.345,115,1.82,116,2.236,129,2.024,133,1.572,138,1.434,141,2.761,147,1.015,150,2.577,153,0.163,165,0.163,222,1.807,247,3.276,248,2.065,255,2.622,256,3.087,273,0.796,276,0.879,296,0.968,298,0.992,305,1.015,308,1.037,322,0.013,323,0.013,327,2.261,329,2.012,330,1.928,355,2.024,361,1.807,393,2.949,396,4.361,397,3.887,401,2.261,404,3.306,405,1.928,441,2.13,443,2.354,445,4.307,447,2.774,480,1.716,500,2.13,501,2.024,511,3.702,515,3.613,521,2.946,557,2.012,582,1.716,623,1.225,625,3.004,628,1.632,629,2.577,638,2.261,641,2.13,646,1.554,647,2.916,649,2.774,656,2.236,686,1.905,702,3.306,706,3.306,707,2.408,708,4.307,711,3.702,712,3.49,715,2.774,761,3.306,765,3.702,767,2.761,774,2.946,779,3.01,799,3.702,807,3.357,815,2.482,819,2.261,839,2.577,848,2.577,877,2.261,890,3.702,942,3.702,960,4.621,961,4.361,962,2.126,993,3.01,1097,2.487,1100,4.307,1103,2.774,1108,3.306,1151,3.01,1171,2.577,1177,4.823,1178,3.702,1230,3.306,1281,3.01,1285,2.408,1336,3.01,1408,2.408,1410,4.019,1412,2.408,1413,3.921,1419,2.774,1473,3.734,1576,3.357,1606,3.49,1620,2.774,1628,2.408,1713,3.306,1714,3.306,1715,2.577,1753,3.306,1754,3.01,1858,2.577,1860,2.774,1861,3.01,1863,3.01,1952,3.613,2001,3.702,2003,3.921,2036,3.306,2148,3.702,2150,3.702,2151,3.702,2165,3.702,2178,4.823,2179,3.702,2185,3.702,2193,5.364,2224,3.306,2241,4.79,2267,4.307,2269,2.774,2287,2.774,2312,3.306,2414,3.921,2506,3.702,2529,3.702,2627,3.702,2635,3.702,2673,3.702,2794,4.823,2798,3.702,2872,5.364,2887,3.702,2890,3.306,3101,3.702,3108,3.702,3261,3.702,3276,3.702,3364,4.823,3370,3.702,3448,4.303,3449,4.303,3450,4.303,3451,5.606,3452,5.606,3453,7.254,3454,4.303,3455,4.303,3456,4.303,3457,4.303,3458,5.606,3459,4.303,3460,4.303,3461,3.702,3462,4.303,3463,4.303,3464,4.303,3465,5.606,3466,4.303,3467,4.303,3468,4.303,3469,4.303,3470,4.303,3471,4.303,3472,4.303,3473,4.303,3474,4.303,3475,4.303,3476,5.606,3477,4.303,3478,4.303,3479,4.303,3480,4.303,3481,4.303,3482,3.702,3483,3.702,3484,3.702,3485,4.303,3486,4.303,3487,4.303,3488,4.303,3489,4.303,3490,4.303,3491,4.303,3492,4.303,3493,5.606,3494,4.303,3495,4.303,3496,4.303,3497,4.303,3498,4.303,3499,4.303,3500,4.303,3501,5.606,3502,4.303,3503,4.303,3504,4.303,3505,4.303,3506,4.303,3507,4.303,3508,4.303,3509,4.303,3510,4.303,3511,4.303,3512,4.303,3513,3.702,3514,4.303,3515,4.303,3516,4.303,3517,4.303,3518,4.303,3519,4.303,3520,4.303,3521,4.303,3522,4.303,3523,4.303,3524,4.303,3525,4.303,3526,4.303,3527,4.303,3528,4.303,3529,4.303,3530,5.606,3531,4.303,3532,4.303,3533,4.303,3534,4.303,3535,4.303,3536,4.303]],["title/modules.html",[2487,3.541]],["body/modules.html",[71,0.016,322,0.016,323,0.016,371,2.004,2487,4.276,3229,4.276,3537,6.114,3538,6.114,3539,6.114]],["title/overview.html",[1412,2.833]],["body/overview.html",[2,1.19,69,2.885,71,0.018,198,1.19,257,1.311,317,1.411,322,0.016,323,0.016,616,4.077,623,1.659,626,2.581,948,2.005,1387,3.751,1389,3.751,1392,3.751,1404,3.757,1412,3.262,1737,4.077,2291,5.192,2486,4.727,3054,4.478,3229,5.436,3230,5.015,3231,4.077,3232,4.478,3233,5.015,3234,5.015,3235,5.015,3236,5.015,3540,5.829,3541,5.015]],["title/properties.html",[41,0.437,1626,1.982]],["body/properties.html",[41,0.602,71,0.017,322,0.016,323,0.016,1667,3.032,3542,6.126]],["title/routes.html",[558,2.66]],["body/routes.html",[71,0.016,322,0.016,323,0.016,558,3.228]],["title/miscellaneous/variables.html",[3543,2.645,3544,3.827]],["body/miscellaneous/variables.html",[0,0.06,9,0.118,15,0.46,21,1.449,27,0.92,31,1.018,40,0.157,71,0.019,72,0.37,73,0.314,76,0.46,78,1.249,114,1.113,132,1.083,134,0.932,135,0.988,148,0.607,182,3.163,198,1.538,214,1.249,222,1.525,248,1.564,250,2.79,265,1.072,322,0.012,323,0.012,325,1.908,328,2.341,329,3.127,355,2.067,357,3.225,361,1.525,371,1.64,393,3.066,398,3.124,433,0.941,441,1.798,442,2.336,452,1.525,467,1.378,483,1.608,497,2.175,513,3.225,514,2.033,557,2.34,558,3.4,563,1.807,623,1.034,651,2.023,662,1.608,769,2.47,805,4.398,826,2.175,833,1.908,848,2.996,894,1.608,897,3.5,898,2.79,900,3.844,1004,3.124,1084,3.335,1085,4.216,1086,4.511,1097,2.283,1107,1.908,1120,2.101,1137,1.908,1236,1.449,1253,3.225,1275,2.996,1333,2.341,1360,2.834,1361,2.033,1395,3.976,1399,2.033,1403,3.428,1407,2.717,1424,3.428,1432,2.341,1460,2.54,1592,2.629,1628,3.835,1629,3.5,1630,2.996,1663,2.79,1664,3.124,1665,3.124,1666,3.124,1667,2.477,1675,4.305,1676,4.305,1679,3.124,1693,6.006,1696,3.225,1698,5.566,1728,3.844,1840,2.79,1858,2.175,1860,2.341,1861,2.54,1863,2.54,1866,2.79,2054,3.124,2263,3.124,2269,3.225,2445,2.79,2446,3.844,2584,2.54,2693,3.124,2728,3.124,2745,4.398,2795,2.79,2796,3.844,2821,2.79,2956,2.79,3054,2.79,3145,3.844,3165,3.844,3172,3.124,3231,4.004,3232,3.844,3328,2.79,3329,3.844,3339,3.844,3384,3.124,3386,4.925,3387,3.124,3388,4.305,3389,3.124,3390,4.305,3391,3.124,3411,3.124,3415,3.124,3416,3.124,3417,3.124,3418,4.305,3419,4.305,3420,4.305,3421,4.305,3432,4.305,3461,3.124,3482,3.124,3483,3.124,3484,3.124,3513,3.124,3541,3.124,3543,4.305,3544,3.124,3545,6.47,3546,3.632,3547,3.632,3548,3.632,3549,3.632,3550,5.004,3551,3.632,3552,3.632,3553,3.632,3554,3.632,3555,3.632,3556,3.632,3557,3.632,3558,3.632,3559,3.632,3560,3.632,3561,3.632,3562,5.004,3563,5.004,3564,3.632,3565,3.632,3566,3.632,3567,3.632,3568,3.632,3569,3.632,3570,3.632,3571,3.632,3572,3.632,3573,5.004,3574,3.632,3575,3.632,3576,3.632,3577,3.632,3578,3.632,3579,3.632,3580,3.632,3581,3.632,3582,3.632,3583,3.632,3584,3.632,3585,3.632,3586,3.632,3587,3.632,3588,3.632,3589,3.632,3590,3.632,3591,5.004,3592,3.632,3593,3.632,3594,3.632,3595,3.632,3596,3.632,3597,3.632,3598,3.632,3599,3.632,3600,3.632,3601,3.632,3602,5.004,3603,3.632,3604,3.632,3605,5.004,3606,3.632,3607,3.632,3608,3.632,3609,3.632,3610,5.004,3611,3.632,3612,5.004,3613,3.632,3614,3.632,3615,3.632,3616,3.632,3617,3.632,3618,3.632,3619,3.632,3620,3.632,3621,3.632,3622,3.632,3623,3.632,3624,3.632,3625,3.632,3626,3.632,3627,3.632,3628,3.632,3629,3.632,3630,3.632,3631,3.632,3632,3.632,3633,3.632,3634,3.632,3635,3.632,3636,3.632,3637,3.632,3638,3.632,3639,3.632,3640,3.632,3641,3.632,3642,3.632,3643,3.632,3644,3.632,3645,3.632,3646,3.632,3647,3.632,3648,3.632,3649,3.632,3650,3.632,3651,3.632]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":1041,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":3542,"title":{},"body":{"properties.html":{}}}],["0.125rem",{"_index":1513,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15.0",{"_index":3447,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":1501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.18.5",{"_index":3445,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3",{"_index":2869,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.375rem",{"_index":1520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.543.0",{"_index":3437,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":1493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":1465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":1506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":1508,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":1456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":3378,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":3381,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":3380,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3382,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3376,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3379,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":1527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":1526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":1504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["009688",{"_index":3624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":3598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":1049,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":2059,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":2058,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0–1",{"_index":2024,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":1039,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":1045,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":3439,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1/1",{"_index":3385,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":3054,"title":{},"body":{"components/SearchButtonComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":3409,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["100,000,000",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["1000",{"_index":914,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["100px",{"_index":2617,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":1430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":2516,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["10rem",{"_index":1179,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":1004,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["110",{"_index":1864,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["111",{"_index":2875,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":3613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["13",{"_index":3615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":3399,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3172,"title":{},"body":{"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["14/14",{"_index":3413,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":1844,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["145",{"_index":1845,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["15",{"_index":3541,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":3438,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3392,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2054,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":3404,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/17",{"_index":3383,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":3628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":3423,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":3427,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":3403,"title":{},"body":{"coverage.html":{}}}],["1c7430",{"_index":1534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":1533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":1479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":1451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":1445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1st",{"_index":2031,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["2",{"_index":361,"title":{},"body":{"components/AiComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1259,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":3444,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3401,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":3397,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1469,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2025",{"_index":1011,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["20px",{"_index":2511,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["2196f3",{"_index":3596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":3394,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":1846,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["23px",{"_index":2619,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":916,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["24/24",{"_index":3412,"title":{},"body":{"coverage.html":{}}}],["25.9.13",{"_index":3645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250px",{"_index":1484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["255",{"_index":1852,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["26",{"_index":3540,"title":{},"body":{"overview.html":{}}}],["28/28",{"_index":3402,"title":{},"body":{"coverage.html":{}}}],["28a745",{"_index":1463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["29",{"_index":2140,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["2rem",{"_index":1446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1858,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":3434,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3414,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":899,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["300",{"_index":1546,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3000",{"_index":1795,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["300ms",{"_index":1547,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["320kbps",{"_index":2666,"title":{},"body":{"components/MusicComponent.html":{}}}],["320kbps')?.url",{"_index":2707,"title":{},"body":{"components/MusicComponent.html":{}}}],["33",{"_index":1856,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["350",{"_index":2289,"title":{},"body":{"components/GraphsComponent.html":{}}}],["38/38",{"_index":3407,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":3606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1860,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.0.3",{"_index":3430,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":3433,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3431,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3428,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3393,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":928,"title":{},"body":{"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["46",{"_index":1857,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["48",{"_index":1867,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["495057",{"_index":1489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":3589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e555b",{"_index":1531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":1500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1861,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":3435,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3400,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["500",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["5000",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["545b62",{"_index":1530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["55",{"_index":1859,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["58",{"_index":1827,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["59",{"_index":1931,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":1863,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6/6",{"_index":3410,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":915,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["600",{"_index":1488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["607d8b",{"_index":3609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":3622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c757d",{"_index":1457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":1866,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":3442,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3395,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1837,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8",{"_index":1399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":3441,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3396,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":895,"title":{},"body":{"components/BudgetComponent.html":{}}}],["800",{"_index":926,"title":{},"body":{"components/BudgetComponent.html":{}}}],["85",{"_index":1862,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8bc34a",{"_index":3612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1840,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["9/9",{"_index":3398,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1932,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":3601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":3614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":2394,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.click",{"_index":1652,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":1650,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.expense_count",{"_index":1126,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.href",{"_index":1649,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.name",{"_index":2769,"title":{},"body":{"components/MusicComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":1127,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.style.display",{"_index":3374,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a.time.split(\":\").map(number",{"_index":2368,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a4",{"_index":1819,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["ability",{"_index":3506,"title":{},"body":{"index.html":{}}}],["above",{"_index":1682,"title":{},"body":{"injectables/ConfigService.html":{}}}],["acc",{"_index":1065,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accepted",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["accepts",{"_index":331,"title":{},"body":{"components/AiComponent.html":{}}}],["acceptsuggestiononenter",{"_index":3187,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":2637,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accessed",{"_index":650,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["accesses",{"_index":2895,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":2263,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":2571,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["account",{"_index":3298,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accurate",{"_index":1315,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":1616,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":1464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["activation",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["activepath",{"_index":3112,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual",{"_index":2626,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["actual_component",{"_index":321,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":802,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["add(data",{"_index":671,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["add/edit",{"_index":773,"title":{},"body":{"components/BudgetComponent.html":{}}}],["added",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["additional",{"_index":1337,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["address",{"_index":3297,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["adjusted",{"_index":1893,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["afterviewinit",{"_index":2799,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["again",{"_index":1624,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["aggregates",{"_index":2811,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ahours",{"_index":2365,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":325,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":264,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":342,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":340,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":263,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasybkbmhcsvna6d8bpyjqqhbpdymn7_nvm2w",{"_index":3640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1282,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["albumname",{"_index":1301,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1327,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["align",{"_index":1442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["all.filter(c",{"_index":1144,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":694,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.map(item",{"_index":688,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":675,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.some(c",{"_index":1141,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allow",{"_index":2213,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["allowed",{"_index":797,"title":{},"body":{"components/BudgetComponent.html":{}}}],["allowed/day",{"_index":3503,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":3460,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2224,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["alongside",{"_index":2077,"title":{},"body":{"components/FooterComponent.html":{}}}],["alphabetically",{"_index":1111,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["already",{"_index":1341,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":683,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["amber",{"_index":3627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":2366,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":2013,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{}}}],["amt",{"_index":2055,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":2123,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["analyze",{"_index":1312,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":2134,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["anchor",{"_index":2433,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":355,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":369,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":3424,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":370,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":3425,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":3426,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":3418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":3557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":892,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["animated",{"_index":718,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatedbudgetprogress",{"_index":724,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatepercentage",{"_index":739,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animates",{"_index":756,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animation",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":2293,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":2168,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":2153,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":2840,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2870,"title":{},"body":{"components/PieChartComponent.html":{}}}],["aoa",{"_index":1873,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(headerrow",{"_index":1877,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(object.values(row",{"_index":1879,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["apexaxischartseries",{"_index":2295,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":2288,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":2298,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":2305,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":2307,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexstroke",{"_index":2309,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":2314,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":2316,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":2318,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":2299,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":2303,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":329,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":375,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":2108,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:103",{"_index":2121,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2894,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:23",{"_index":2116,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:37",{"_index":2901,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:45",{"_index":2131,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:74",{"_index":2129,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:76",{"_index":2897,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":374,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2906,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service",{"_index":2700,"title":{},"body":{"components/MusicComponent.html":{}}}],["api/saavan.service.ts",{"_index":1229,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:151",{"_index":2942,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:34",{"_index":2946,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:39",{"_index":2945,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:44",{"_index":2941,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:63",{"_index":2943,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:80",{"_index":2944,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":1551,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["api_response_app_version",{"_index":2925,"title":{},"body":{"injectables/PostApiService.html":{}}}],["apiurl",{"_index":1257,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["app_current_version",{"_index":2927,"title":{},"body":{"injectables/PostApiService.html":{}}}],["app_version",{"_index":2976,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":265,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig",{"_index":3388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":2179,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["appearance",{"_index":3355,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":1433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1346,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["applicationconfig",{"_index":3573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":3644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{}}}],["appname",{"_index":1663,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1673,"title":{},"body":{"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["appversion",{"_index":2080,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["apr",{"_index":2040,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":2399,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":2237,"title":{},"body":{"components/GraphsComponent.html":{}}}],["args",{"_index":2491,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":2493,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":2492,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arguments",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["arial",{"_index":2510,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":663,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":2347,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":2391,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":2381,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1286,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artist.name).join",{"_index":1309,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artists",{"_index":1283,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname",{"_index":1305,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname.split(',')[0].trim",{"_index":2735,"title":{},"body":{"components/MusicComponent.html":{}}}],["aseconds",{"_index":2367,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":2186,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":2196,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":2166,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assign",{"_index":3307,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["assigned",{"_index":1106,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["assist",{"_index":2192,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":389,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["associated",{"_index":1087,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["associates",{"_index":1128,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["async",{"_index":345,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["attached",{"_index":1901,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attaches",{"_index":1890,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attempting",{"_index":1138,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["attribute.name",{"_index":3219,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":3221,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["audio",{"_index":2646,"title":{},"body":{"components/MusicComponent.html":{}}}],["aug",{"_index":2043,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":2402,"title":{},"body":{"components/GraphsComponent.html":{}}}],["authentication",{"_index":1256,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["auto",{"_index":1486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["autoclosingbrackets",{"_index":3184,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":3226,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":3185,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatic",{"_index":3642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":667,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":3169,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autotable",{"_index":1758,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["autotable(doc",{"_index":1835,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["available",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["average",{"_index":705,"title":{},"body":{"components/BudgetComponent.html":{}}}],["averages",{"_index":2158,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":942,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["avgallowedperday",{"_index":725,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgallowedperday.tofixed(2",{"_index":943,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday",{"_index":726,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday.tofixed(2",{"_index":944,"title":{},"body":{"components/BudgetComponent.html":{}}}],["await",{"_index":383,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["axis",{"_index":2302,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":1124,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":1125,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":2372,"title":{},"body":{"components/GraphsComponent.html":{}}}],["back",{"_index":2783,"title":{},"body":{"components/NavbarComponent.html":{}}}],["backend",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backgroundcolor",{"_index":2865,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2854,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":2607,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":2549,"title":{},"body":{"components/HomeComponent.html":{}}}],["backticks",{"_index":1342,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["backup",{"_index":2905,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["backup_frequency",{"_index":2971,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["backups",{"_index":3293,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":1512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bar",{"_index":715,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1253,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseinstructions",{"_index":2145,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":1254,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["bash",{"_index":3359,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":2509,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["becomes",{"_index":834,"title":{},"body":{"components/BudgetComponent.html":{}}}],["before",{"_index":1137,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2884,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":2180,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{}}}],["behavior",{"_index":2434,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["behaviorsubject",{"_index":3083,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":3093,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["below",{"_index":1830,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["best",{"_index":1335,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":2193,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["between",{"_index":815,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":804,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":2369,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":3592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":3263,"title":{},"body":{"components/ToastComponent.html":{}}}],["blinkmacsystemfont",{"_index":1435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":1633,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["blob([content",{"_index":1802,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["block",{"_index":3080,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockcomment",{"_index":3224,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["blockkey",{"_index":2536,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":2545,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":2172,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":900,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":2370,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1347,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["bodystyles",{"_index":1853,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["boolean",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":3231,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":3584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bordercolor",{"_index":2859,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2866,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":1450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["box",{"_index":368,"title":{},"body":{"components/AiComponent.html":{}}}],["boxes",{"_index":3502,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":3225,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":2471,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["brightness",{"_index":2022,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["broadcast",{"_index":2789,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["broadcasting",{"_index":2426,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["browse",{"_index":3539,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":371,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/server",{"_index":2657,"title":{},"body":{"components/MusicComponent.html":{}}}],["browserdistfolder",{"_index":3419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":3239,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["browser’s",{"_index":3523,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":2371,"title":{},"body":{"components/GraphsComponent.html":{}}}],["btn",{"_index":1519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["budget",{"_index":625,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["budget's",{"_index":791,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget'},{'name",{"_index":268,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget.component.css",{"_index":723,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget.component.html",{"_index":722,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget_id",{"_index":630,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcolorclass",{"_index":727,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetcomponent",{"_index":267,"title":{"components/BudgetComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetdata",{"_index":1764,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["budgetform",{"_index":728,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetkey",{"_index":2961,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetmessage",{"_index":729,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetprogress",{"_index":730,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgets",{"_index":645,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetschema",{"_index":2979,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":653,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["build",{"_index":1728,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":1948,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["bullet",{"_index":2173,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":2104,"title":{},"body":{"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["button'},{'name",{"_index":309,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":3040,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":3041,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":3037,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":3062,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":3063,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":3066,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3047,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":3060,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":3055,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":3049,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":3036,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":1142,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculate",{"_index":710,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculatebudgetprogress",{"_index":740,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculated",{"_index":758,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculates",{"_index":760,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["calculatetotalexpenses",{"_index":978,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":983,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculations",{"_index":782,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calendar",{"_index":961,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":969,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":968,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":269,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":970,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":971,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":1627,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":3162,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["callbacks",{"_index":2876,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"injectables/ToastService.html":{}}}],["calls",{"_index":1262,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["cancel",{"_index":947,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["canvas",{"_index":2815,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvasref",{"_index":2802,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvg",{"_index":3429,"title":{},"body":{"dependencies.html":{}}}],["care",{"_index":3621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2470,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["cash",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1906,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":2839,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":1217,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":1216,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1911,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1910,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1909,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["categories",{"_index":1097,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1907,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1889,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":1208,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1886,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1887,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1780,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["categorycolors",{"_index":2803,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydata",{"_index":1763,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":1140,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2959,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":2804,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":1156,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2964,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":1166,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":1102,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["categorytotals",{"_index":2846,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":2850,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":1163,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":2848,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2857,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cellwidth",{"_index":1855,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["center",{"_index":1444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["certain",{"_index":2550,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":894,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":2281,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changemonth",{"_index":979,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":989,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/ZipExportService.html":{}}}],["changes['currentdate",{"_index":2328,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":2327,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":2269,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":306,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":2585,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":2800,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":2801,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":2796,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:101",{"_index":2809,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:116",{"_index":2812,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:140",{"_index":2810,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:160",{"_index":2813,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:188",{"_index":2820,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:22",{"_index":2833,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":2827,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:28",{"_index":2825,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:31",{"_index":2832,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:34",{"_index":2828,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:37",{"_index":2826,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:40",{"_index":2831,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:43",{"_index":2824,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:46",{"_index":2808,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:49",{"_index":2807,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:69",{"_index":2817,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:85",{"_index":2814,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:94",{"_index":2816,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2821,"title":{},"body":{"components/PieChartComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart/pie",{"_index":2584,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":2245,"title":{},"body":{"components/GraphsComponent.html":{}}}],["charts",{"_index":2238,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":2246,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":2247,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":2248,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":2200,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1227,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{}}}],["checks",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["choiceresult.outcome",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["chosen",{"_index":3487,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["classes",{"_index":1053,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["cleanedsong",{"_index":2726,"title":{},"body":{"components/MusicComponent.html":{}}}],["clear",{"_index":1594,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["clearinterval(interval",{"_index":935,"title":{},"body":{"components/BudgetComponent.html":{}}}],["clearinterval(this.interval",{"_index":2716,"title":{},"body":{"components/MusicComponent.html":{}}}],["clears",{"_index":996,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleartimeout(this.savetimeout",{"_index":1562,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":3567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["clickedinside",{"_index":2442,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicking",{"_index":2412,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":1186,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close",{"_index":1188,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["closed",{"_index":1956,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/SearchButtonComponent.html":{}}}],["closedownloaddatamodal",{"_index":1720,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["closemodal",{"_index":741,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["closemodel",{"_index":2095,"title":{},"body":{"components/FormModelComponent.html":{}}}],["closes",{"_index":772,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/UserData.html":{}}}],["closing",{"_index":1938,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":3570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":3233,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":3235,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":3234,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":3236,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":656,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["color",{"_index":769,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":2613,"title":{},"body":{"components/HomeComponent.html":{}}}],["colors",{"_index":717,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{}}}],["column",{"_index":1429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":1475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columnstyles",{"_index":1854,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["combining",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1303,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["comment",{"_index":3211,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":3181,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":2463,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["communicates",{"_index":3109,"title":{},"body":{"components/SidebarComponent.html":{}}}],["communicating",{"_index":2109,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["compact",{"_index":2410,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{}}}],["compare",{"_index":2466,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":2506,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["compliant",{"_index":2954,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["compodoc",{"_index":1406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":1359,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":3249,"title":{},"body":{"components/ToastComponent.html":{}}}],["component'},{'name",{"_index":274,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["component.component",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["component.component.css",{"_index":1717,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.html",{"_index":1716,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.ts",{"_index":1711,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component.component.ts:107",{"_index":1731,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:119",{"_index":1730,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:191",{"_index":1747,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:210",{"_index":1742,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:224",{"_index":1729,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:235",{"_index":1739,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:26",{"_index":2625,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:302",{"_index":1736,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:32",{"_index":2631,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:40",{"_index":2624,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:56",{"_index":1750,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:57",{"_index":2629,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:61",{"_index":1751,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:66",{"_index":2628,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:67",{"_index":1727,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:94",{"_index":1741,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/download",{"_index":1710,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component/graphs/graphs.component",{"_index":2582,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/install",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["component/pie",{"_index":2583,"title":{},"body":{"components/HomeComponent.html":{}}}],["component_template",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["components/download",{"_index":1709,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["components/setting",{"_index":3098,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["computed",{"_index":1090,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["conditional",{"_index":2476,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditions",{"_index":1683,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config",{"_index":1403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":2908,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["configservice",{"_index":1660,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["configurable",{"_index":3242,"title":{},"body":{"components/ToastComponent.html":{}}}],["configuration",{"_index":1407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm('are",{"_index":936,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirmanddownload",{"_index":1721,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["confirmation",{"_index":780,"title":{},"body":{"components/BudgetComponent.html":{}}}],["connects",{"_index":2225,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["consistency",{"_index":1101,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["console.error(\"chart.js",{"_index":2844,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2885,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":1059,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('download",{"_index":1800,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('error",{"_index":1069,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('gemini",{"_index":2138,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2985,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["console.error('no",{"_index":1623,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('submit",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["console.log('backup",{"_index":2933,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":3069,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('creating",{"_index":1625,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('posting",{"_index":2919,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('reset",{"_index":1621,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":1568,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":1655,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('user",{"_index":608,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["console.warn('failed",{"_index":2732,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('user",{"_index":2935,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":1143,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":1638,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructing",{"_index":753,"title":{},"body":{"components/BudgetComponent.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["constructor(categoryservice",{"_index":1168,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(configservice",{"_index":2081,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(expenseservice",{"_index":746,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":3046,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":2210,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":2115,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":1202,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(saavnservice",{"_index":2654,"title":{},"body":{"components/MusicComponent.html":{}}}],["constructor(sectionservice",{"_index":2423,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":950,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":3246,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructors",{"_index":1418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructs",{"_index":2261,"title":{},"body":{"components/GraphsComponent.html":{}}}],["contain",{"_index":2015,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["container",{"_index":1515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1269,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["contains",{"_index":1678,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ZipExportService.html":{}}}],["content",{"_index":1236,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["contentdisposition",{"_index":1639,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":1644,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1348,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["context",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2879,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2878,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2877,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":2195,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":3534,"title":{},"body":{"index.html":{}}}],["control",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["controlled",{"_index":2205,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["conversation",{"_index":1251,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["converts",{"_index":334,"title":{},"body":{"components/AiComponent.html":{},"components/ExpenseListComponent.html":{}}}],["copyright",{"_index":2764,"title":{},"body":{"components/MusicComponent.html":{}}}],["count",{"_index":1110,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["counter",{"_index":757,"title":{},"body":{"components/BudgetComponent.html":{}}}],["counts",{"_index":1112,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["cover",{"_index":2780,"title":{},"body":{"components/MusicComponent.html":{}}}],["coverage",{"_index":1414,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":1098,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["created",{"_index":1569,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["createnoderequesthandler(app",{"_index":3564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["createsession",{"_index":1563,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["creating",{"_index":749,"title":{},"body":{"components/BudgetComponent.html":{}}}],["creation",{"_index":700,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crypto.randomuuid",{"_index":674,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":807,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["ctx",{"_index":2860,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":731,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":2258,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["currentmonth",{"_index":972,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":2336,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":2341,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":3309,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":3311,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1280,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1302,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1307,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1308,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.primary[0]?.name",{"_index":2775,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.artists?.all",{"_index":1306,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1326,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1323,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1324,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1325,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name",{"_index":2774,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1320,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1321,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1322,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentstep",{"_index":930,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentstep).tofixed(1",{"_index":933,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentyear",{"_index":973,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":2386,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":2387,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1497,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["curve",{"_index":2310,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":1171,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["customfavicon",{"_index":1363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customizable",{"_index":2092,"title":{},"body":{"components/FormModelComponent.html":{}}}],["customization",{"_index":3364,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["customization.html",{"_index":3373,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":3366,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":3350,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":3354,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["cyan",{"_index":3599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":2053,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["d.quality",{"_index":2706,"title":{},"body":{"components/MusicComponent.html":{}}}],["daily",{"_index":712,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark:text",{"_index":3270,"title":{},"body":{"components/ToastComponent.html":{}}}],["darken",{"_index":2002,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor",{"_index":2007,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":2016,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkened",{"_index":2025,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkens",{"_index":2019,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":2529,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.album?.name",{"_index":2766,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.artists?.primary",{"_index":2767,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.copyright",{"_index":2765,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.duration",{"_index":2759,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.label",{"_index":2760,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.language",{"_index":2763,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.map((exp",{"_index":1831,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["data.name",{"_index":2756,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.playcount",{"_index":2762,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.type",{"_index":2757,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.year",{"_index":2758,"title":{},"body":{"components/MusicComponent.html":{}}}],["data/categories",{"_index":2953,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["datablock",{"_index":2197,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":2249,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2864,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2867,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2868,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2871,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["date().getfullyear",{"_index":1015,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":1013,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().toisostring().replace(/[:.]/g",{"_index":1805,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date().toisostring().split('t')[0",{"_index":1766,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date(`${a.date}t${a.time",{"_index":1913,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1915,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":880,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1925,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1927,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2915,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":2592,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(this.latestbudget.fromdate",{"_index":875,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(this.latestbudget.todate",{"_index":876,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(todate",{"_index":1773,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{}}}],["date(value",{"_index":2599,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":1038,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getdate",{"_index":2050,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date.getfullyear",{"_index":2052,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":2605,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:'short",{"_index":1402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datea",{"_index":1912,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1917,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1914,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1916,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":1754,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["datestr",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":707,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":1073,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":2357,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":2333,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":2346,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":2344,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":2345,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayname",{"_index":2048,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days",{"_index":839,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":2348,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[date.getday",{"_index":2049,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days[value",{"_index":2351,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":1040,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":988,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ddd",{"_index":2513,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["ddthh:mm:ss",{"_index":1894,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["debounce",{"_index":1548,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":1586,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dec",{"_index":2047,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":2405,"title":{},"body":{"components/GraphsComponent.html":{}}}],["decimal",{"_index":635,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["decimals",{"_index":669,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["declarations",{"_index":3230,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":2459,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":1523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["decreases",{"_index":2021,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dee2e6",{"_index":1453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deep",{"_index":3605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1681,"title":{},"body":{"injectables/ConfigService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defaultschema",{"_index":2982,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultschema[key",{"_index":3002,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultviewtype",{"_index":2532,"title":{},"body":{"components/HomeComponent.html":{}}}],["deferredprompt",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["define",{"_index":3261,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["defines",{"_index":2948,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["definitions",{"_index":3193,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["delay",{"_index":891,"title":{},"body":{"components/BudgetComponent.html":{},"components/SearchButtonComponent.html":{}}}],["delegate",{"_index":3281,"title":{},"body":{"injectables/ToastService.html":{}}}],["delete",{"_index":647,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":2608,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":693,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":1136,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1923,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deletebudget",{"_index":742,"title":{},"body":{"components/BudgetComponent.html":{}}}],["deleted",{"_index":940,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["deletes",{"_index":692,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deleting",{"_index":751,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["deletion",{"_index":1139,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delimiter",{"_index":3220,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":2525,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1674,"title":{},"body":{"injectables/ConfigService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["deploying",{"_index":3638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depth",{"_index":2481,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["design",{"_index":3514,"title":{},"body":{"index.html":{}}}],["designed",{"_index":3452,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":3520,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":3147,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["destruction",{"_index":2668,"title":{},"body":{"components/MusicComponent.html":{}}}],["detailed",{"_index":3530,"title":{},"body":{"index.html":{}}}],["details",{"_index":276,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["details(name",{"_index":1329,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["detect",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["detection",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":2788,"title":{},"body":{"components/NavbarComponent.html":{}}}],["determines",{"_index":1677,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["dev",{"_index":3568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":3533,"title":{},"body":{"index.html":{}}}],["development",{"_index":1698,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1664,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["device's",{"_index":3488,"title":{},"body":{"index.html":{}}}],["devices",{"_index":3515,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":837,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["different",{"_index":3108,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["differentiation",{"_index":3631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":320,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directory",{"_index":3357,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":3572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":1364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":1365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":1366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":1367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":1368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":1369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":1370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":1371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":1372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":1373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":1374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":1375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":1376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":1377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disables",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["disablesearch",{"_index":1378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":1379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":1380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":1381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disappears",{"_index":3255,"title":{},"body":{"components/ToastComponent.html":{}}}],["dismiss",{"_index":2639,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{}}}],["dismissed",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["dismisses",{"_index":2105,"title":{},"body":{"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["dismissinstall",{"_index":2622,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["displayed",{"_index":823,"title":{},"body":{"components/BudgetComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{}}}],["displayedpercentage",{"_index":732,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displayedpercentage.tofixed(1",{"_index":941,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displaying",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displays",{"_index":962,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["disposition",{"_index":1641,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["distinct",{"_index":3630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":3481,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":3562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":1816,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1821,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.save(`expenses",{"_index":1868,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(10",{"_index":1825,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(14",{"_index":1823,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(sub",{"_index":1826,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(title",{"_index":1824,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doctype",{"_index":3213,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":2428,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":1651,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.appendchild(link",{"_index":1808,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["document.body.removechild(a",{"_index":1653,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(link",{"_index":1810,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["document.createelement('a",{"_index":1648,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('div",{"_index":3264,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":3258,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":1167,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":1183,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1606,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["documentation/.../hbs",{"_index":3552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":3554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":3553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":1360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":2521,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":350,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2822,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["downloadblob",{"_index":3330,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":3333,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadcomponentcomponent",{"_index":272,"title":{"components/DownloadComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["downloaddata",{"_index":1722,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaddataform",{"_index":1718,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaded",{"_index":1656,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["downloading",{"_index":1657,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["drinks",{"_index":3585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":271,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":1154,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":1155,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1150,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":1194,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":1184,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":1182,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":1180,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":1175,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":1172,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":1197,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1199,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":1169,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":1190,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":1189,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":1195,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":1164,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":925,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["during",{"_index":2745,"title":{},"body":{"components/MusicComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":716,"title":{},"body":{"components/BudgetComponent.html":{},"components/FooterComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":808,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["e",{"_index":1058,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1908,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["e9ecef",{"_index":1467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":1107,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["easily",{"_index":3454,"title":{},"body":{"index.html":{}}}],["edit",{"_index":708,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["edited",{"_index":1959,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editform",{"_index":1940,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editing",{"_index":701,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["editor",{"_index":1510,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":1388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":3145,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":3164,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":3156,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":3152,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":3159,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":3161,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":3154,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":3157,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":3163,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":1538,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":1552,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["education",{"_index":3600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":2698,"title":{},"body":{"components/MusicComponent.html":{}}}],["elapseddays",{"_index":918,"title":{},"body":{"components/BudgetComponent.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["elements",{"_index":768,"title":{},"body":{"components/BudgetComponent.html":{}}}],["email",{"_index":2972,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":1152,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitted",{"_index":1955,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["emitting",{"_index":3070,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":2171,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":3455,"title":{},"body":{"index.html":{}}}],["empty",{"_index":662,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":826,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3300,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":641,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["endpoint",{"_index":1630,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":3560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhances",{"_index":1317,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["ensures",{"_index":2958,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["ensuring",{"_index":649,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["enter",{"_index":3057,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":3064,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":3595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":800,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["entries",{"_index":3485,"title":{},"body":{"index.html":{}}}],["entry",{"_index":629,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"index.html":{}}}],["environment",{"_index":651,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":1699,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.appname",{"_index":1687,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.developmentenvironment",{"_index":1689,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.liveapiurl",{"_index":1694,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.localapiurl",{"_index":1697,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":3647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":1241,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":1068,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["error('failed",{"_index":1571,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":2519,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["etc",{"_index":1284,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["event",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":1212,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":2443,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.innerwidth",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.value",{"_index":2594,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.url",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["event.urlafterredirects",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":3575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1181,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["events",{"_index":1937,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{}}}],["example",{"_index":1696,"title":{},"body":{"injectables/ConfigService.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["exceeded",{"_index":904,"title":{},"body":{"components/BudgetComponent.html":{}}}],["excel",{"_index":1714,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["exceldata",{"_index":1870,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exceldata.length",{"_index":1874,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exchanged",{"_index":1232,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["excluding",{"_index":1129,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["exist",{"_index":1133,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["existing",{"_index":679,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["exists",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["exp",{"_index":1064,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":1075,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.category_icon",{"_index":2063,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":1076,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.date",{"_index":1832,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["exp.isextraspending",{"_index":1833,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.location",{"_index":1080,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.note",{"_index":1079,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.payment_mode",{"_index":1081,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.time",{"_index":1078,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["expands",{"_index":3039,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expected",{"_index":2683,"title":{},"body":{"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":262,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.amount",{"_index":1774,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_id",{"_index":1782,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_name",{"_index":1781,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.component",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.date",{"_index":1775,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.expense_id",{"_index":1784,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.isextraspending",{"_index":1785,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.location",{"_index":1777,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.note",{"_index":1778,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.payment_mode",{"_index":1779,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.service",{"_index":1095,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense.time",{"_index":1776,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":1083,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1783,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["expensecountmap",{"_index":1116,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":1122,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedata",{"_index":1762,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expensedetailsmodalcomponent",{"_index":275,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2960,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":278,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":299,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["expenses.component.ts",{"_index":3406,"title":{},"body":{"coverage.html":{}}}],["expenses.filter((exp",{"_index":879,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expenses.filter(exp",{"_index":2363,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":2337,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1904,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":1117,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1934,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2967,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":2010,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["expensesinrange",{"_index":878,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expensewise",{"_index":3636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["experience",{"_index":1318,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1338,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":3492,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["export.service",{"_index":1391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":3329,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":3336,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":3338,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":3334,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporting",{"_index":1712,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exports",{"_index":1737,"title":{},"body":{"components/DownloadComponentComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["exporttemplates",{"_index":3331,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":3335,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttoexcel",{"_index":1723,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttoexcel(data",{"_index":1735,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exporttopdf",{"_index":1724,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttopdf(data",{"_index":1738,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exportzip",{"_index":1622,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":3432,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extension",{"_index":1746,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["externally",{"_index":3251,"title":{},"body":{"components/ToastComponent.html":{}}}],["extra",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["extract",{"_index":1300,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["exwise",{"_index":1680,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["f0f8ff",{"_index":2515,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":3617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f8f9fa",{"_index":1448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fade",{"_index":3273,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":803,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fast",{"_index":3525,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["features",{"_index":330,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["features/add",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["features/ai/ai.component",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["features/budget/budget.component",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["features/calendar/calendar.component",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["features/home/home.component",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["features/list",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["features/music/music.component",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["features/settings/settings.component",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["feb",{"_index":2039,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":2397,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":648,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fetched",{"_index":817,"title":{},"body":{"components/BudgetComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["fetches",{"_index":2110,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["fetching",{"_index":1356,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff0000",{"_index":2023,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["ff4081",{"_index":3619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":3604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":3586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":3590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":1460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":3594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2874,"title":{},"body":{"components/PieChartComponent.html":{}}}],["fff5f5",{"_index":2518,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":1091,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["fieldname",{"_index":1294,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":686,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.content",{"_index":3342,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":1637,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":1643,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":1645,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":3337,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":3340,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1768,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fillcolor",{"_index":1843,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["filter",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["filter(loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredexpensedata",{"_index":1789,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2991,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["filtering",{"_index":2265,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["final",{"_index":1787,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finaldata",{"_index":1788,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finalize",{"_index":1240,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finally",{"_index":2746,"title":{},"body":{"components/MusicComponent.html":{}}}],["finance",{"_index":3462,"title":{},"body":{"index.html":{}}}],["financial",{"_index":2148,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":3569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1576,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["firstday",{"_index":1037,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstsong",{"_index":2740,"title":{},"body":{"components/MusicComponent.html":{}}}],["firstvaluefrom",{"_index":1242,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1351,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fit",{"_index":1477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fits",{"_index":1316,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fixed",{"_index":2778,"title":{},"body":{"components/MusicComponent.html":{}}}],["flag",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":2570,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1260,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":1427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["flexibility",{"_index":3507,"title":{},"body":{"index.html":{}}}],["floating",{"_index":3038,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2627,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["focus",{"_index":3059,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":2191,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":3061,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["folder",{"_index":3563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":1431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":3368,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1839,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fontstyle",{"_index":1850,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["food",{"_index":3482,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":2076,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":2079,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":2078,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":280,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":2577,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":2533,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":2292,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["format",{"_index":1292,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["formatdateforinput",{"_index":2537,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":2552,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1297,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1319,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":2538,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":2555,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1715,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["formatted",{"_index":1295,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["formattedexpense",{"_index":1903,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":2350,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formattime",{"_index":2647,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(duration",{"_index":2777,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(progress",{"_index":2776,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(seconds",{"_index":2658,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(song.duration",{"_index":2773,"title":{},"body":{"components/MusicComponent.html":{}}}],["formatting",{"_index":1339,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formmodelcomponent",{"_index":282,"title":{"components/FormModelComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["forms",{"_index":1949,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{}}}],["formsmodule",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["forwards",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":1074,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["frame",{"_index":1518,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":3466,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":3292,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fri",{"_index":1029,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["friendly",{"_index":2165,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":3611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1929,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":631,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["fromdate.gettime",{"_index":913,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":2139,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":3465,"title":{},"body":{"index.html":{}}}],["full",{"_index":1357,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fullnames",{"_index":2395,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":2406,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fully",{"_index":3250,"title":{},"body":{"components/ToastComponent.html":{}}}],["function",{"_index":1291,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["functionality",{"_index":1620,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["functions",{"_index":3571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":1753,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["g",{"_index":2056,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gap",{"_index":1454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gathers",{"_index":2898,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":328,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":353,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":3639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":348,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generate",{"_index":901,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ZipExportService.html":{}}}],["generated",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["generateexpenseanalysisprompt",{"_index":2112,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":2118,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generatereadme",{"_index":3332,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generates",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{}}}],["generateuserid",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["generating",{"_index":3352,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":3351,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":1409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generic",{"_index":2949,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getall",{"_index":664,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getallbudgets",{"_index":3014,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":3013,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":3018,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiurl",{"_index":1668,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappname",{"_index":1669,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":3023,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":2064,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1921,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getcategorykey",{"_index":3020,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":2539,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":3021,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":2008,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":2027,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1358,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlanguagefromfiletype",{"_index":3148,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":3153,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlast30daysexpenses",{"_index":2113,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlocalisostring",{"_index":1895,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getmockdata",{"_index":2448,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getresponse",{"_index":2114,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":2130,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsongurl",{"_index":2648,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsongurl(song",{"_index":2662,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":1113,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getuser",{"_index":3016,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdata",{"_index":3316,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2892,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":3025,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":3319,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":3315,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":1670,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gifts",{"_index":3616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":985,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["global",{"_index":285,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":3048,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":284,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":427,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["globally",{"_index":2206,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["go",{"_index":3463,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":2540,"title":{},"body":{"components/HomeComponent.html":{}}}],["google",{"_index":1248,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["goprevious",{"_index":2541,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["graphs",{"_index":2241,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":288,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":2243,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":2244,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":287,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":1054,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":805,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":3477,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":2161,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":3610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["groceries",{"_index":3588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":810,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["grouped",{"_index":2273,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":1072,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":1174,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["h3",{"_index":1487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":1511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["halign",{"_index":1847,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["hamburger",{"_index":290,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":289,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":811,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{}}}],["handlebars",{"_index":1592,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":2462,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":3210,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":2447,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handler",{"_index":3566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["handling",{"_index":3305,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hashed",{"_index":3302,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hbs",{"_index":1393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":1392,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":1554,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["head",{"_index":1838,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["header",{"_index":1008,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headerrow",{"_index":1875,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["headers",{"_index":1345,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["headstyles",{"_index":1842,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["health",{"_index":3597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1176,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hello",{"_index":2163,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":2151,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":1290,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["helpers",{"_index":2464,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpful",{"_index":2147,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":2185,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hex",{"_index":1088,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{}}}],["hh:mm:ss",{"_index":1888,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["hi",{"_index":2162,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hidden",{"_index":1471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hiddeninput",{"_index":2615,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":2618,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["hidedarkmodetoggle",{"_index":1382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":1383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hides",{"_index":2215,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["hiding",{"_index":2100,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["highest",{"_index":2664,"title":{},"body":{"components/MusicComponent.html":{}}}],["highlights",{"_index":966,"title":{},"body":{"components/CalendarComponent.html":{},"components/SidebarComponent.html":{}}}],["history",{"_index":1252,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["holding",{"_index":3095,"title":{},"body":{"injectables/SectionService.html":{}}}],["holds",{"_index":3115,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":2530,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":2531,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":292,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["hooks",{"_index":1417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":3177,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":3079,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":1192,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":2375,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2891,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":2379,"title":{},"body":{"components/GraphsComponent.html":{}}}],["href",{"_index":2527,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["htmlaudioelement",{"_index":2687,"title":{},"body":{"components/MusicComponent.html":{}}}],["htmlelement",{"_index":1213,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["htmlinputelement",{"_index":2563,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["http",{"_index":1261,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["http://localhost:8000",{"_index":1675,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1238,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":339,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["httpheaders",{"_index":1239,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://compodoc.app/guides/template",{"_index":3372,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1676,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1258,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1255,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":2029,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":3623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":2184,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":1084,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":637,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identifying",{"_index":2155,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ignores",{"_index":359,"title":{},"body":{"components/AiComponent.html":{}}}],["img",{"_index":2779,"title":{},"body":{"components/MusicComponent.html":{}}}],["immediately",{"_index":3490,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1619,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":1614,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["include",{"_index":1336,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/NavbarComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":1384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["including",{"_index":763,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{}}}],["incorrect",{"_index":3512,"title":{},"body":{"index.html":{}}}],["increases",{"_index":824,"title":{},"body":{"components/BudgetComponent.html":{}}}],["increment",{"_index":929,"title":{},"body":{"components/BudgetComponent.html":{}}}],["independent",{"_index":3469,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2950,"title":{},"body":{"interfaces/Schema.html":{}}}],["indicate",{"_index":2693,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":828,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["indicating",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["indicator",{"_index":1459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indicators",{"_index":2117,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["indigo",{"_index":3607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1276,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":1761,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["informative",{"_index":3500,"title":{},"body":{"index.html":{}}}],["init",{"_index":2575,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["initform",{"_index":1941,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initial",{"_index":1743,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["initialization",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["initialize",{"_index":846,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["initialized",{"_index":3096,"title":{},"body":{"injectables/SectionService.html":{},"components/ToastComponent.html":{}}}],["initializeeditor",{"_index":1584,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":3155,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":2449,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["initializing",{"_index":1559,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{}}}],["inject(platform_id",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["injectable",{"_index":642,"title":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":948,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injected",{"_index":2262,"title":{},"body":{"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["input[type=\"date",{"_index":2610,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":2612,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":2554,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":2557,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":2562,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":2596,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":1162,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["inr",{"_index":3296,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":2632,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":703,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["install",{"_index":295,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["installapp",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installapppopupcomponentcomponent",{"_index":294,"title":{"components/InstallAppPopupComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["installation",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installing",{"_index":2638,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["instances",{"_index":2829,"title":{},"body":{"components/PieChartComponent.html":{}}}],["instructions",{"_index":2124,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["integrates",{"_index":720,"title":{},"body":{"components/BudgetComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{}}}],["integrating",{"_index":1245,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["intended",{"_index":2887,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interact",{"_index":2656,"title":{},"body":{"components/MusicComponent.html":{}}}],["interacting",{"_index":654,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["interaction",{"_index":326,"title":{},"body":{"components/AiComponent.html":{}}}],["interactive",{"_index":3478,"title":{},"body":{"index.html":{}}}],["interface",{"_index":624,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":626,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["internal",{"_index":1416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["intersect",{"_index":2320,"title":{},"body":{"components/GraphsComponent.html":{}}}],["interval",{"_index":931,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["intuitive",{"_index":3516,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1296,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["is_active",{"_index":1085,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_app_updated",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_backup",{"_index":2973,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isappupdated",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["isbrowser",{"_index":657,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":1157,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":1056,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isdarkmode",{"_index":733,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":3580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditmode",{"_index":734,"title":{},"body":{"components/BudgetComponent.html":{}}}],["iseditopen",{"_index":1945,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["isinitial",{"_index":2503,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":2501,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ismenuopen",{"_index":2418,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["ismusicroute",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":2604,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":2600,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":2603,"title":{},"body":{"components/HomeComponent.html":{}}}],["iso",{"_index":640,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["isopen",{"_index":3042,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["istabenabled",{"_index":2495,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":2209,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{}}}],["italic",{"_index":1509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":690,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["item'},{'name",{"_index":312,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":2343,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":689,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":1132,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":3103,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":3100,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":3104,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":2338,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1920,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.name",{"_index":1659,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.note?.trim",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.time.split",{"_index":2378,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2993,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["item/setting",{"_index":3099,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":3001,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["itemdate",{"_index":1926,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1928,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":1443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["jan",{"_index":2038,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":2396,"title":{},"body":{"components/GraphsComponent.html":{}}}],["javascript",{"_index":3200,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["job",{"_index":1311,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["js",{"_index":3199,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json",{"_index":1285,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["json.parse(cleanedsong",{"_index":2731,"title":{},"body":{"components/MusicComponent.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2987,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":3015,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2990,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":3019,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":3017,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":678,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["json.stringify(budgets",{"_index":3032,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(categories",{"_index":3029,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(currentsettings",{"_index":3313,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(finaldata",{"_index":1791,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["json.stringify(last15daysexpenses",{"_index":2198,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":3012,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(updated",{"_index":1145,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":3004,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(user",{"_index":3034,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsondata",{"_index":1790,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jspdf",{"_index":1757,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1817,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jszip",{"_index":3339,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jul",{"_index":2042,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":2401,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":2041,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":2400,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":1440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["keep",{"_index":2190,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SidebarComponent.html":{},"injectables/ZipExportService.html":{}}}],["key",{"_index":1120,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":2551,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":2546,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyed",{"_index":2830,"title":{},"body":{"components/PieChartComponent.html":{}}}],["keyframes",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":655,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/HomeComponent.html":{}}}],["keyword",{"_index":3209,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":3498,"title":{},"body":{"index.html":{}}}],["label",{"_index":1052,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{}}}],["labels",{"_index":1032,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["lang.id",{"_index":3204,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1330,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["laptop",{"_index":3519,"title":{},"body":{"index.html":{}}}],["last",{"_index":1400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["last15daysexpenses",{"_index":2119,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2896,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2914,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2918,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2912,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastsaved",{"_index":1401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["latest",{"_index":779,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["latestbudget",{"_index":735,"title":{},"body":{"components/BudgetComponent.html":{}}}],["launch",{"_index":3476,"title":{},"body":{"index.html":{}}}],["layout",{"_index":3369,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["leave",{"_index":3641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1507,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["legend",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["length",{"_index":3052,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["letter",{"_index":1491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["let’s",{"_index":2189,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":3535,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":3464,"title":{},"body":{"index.html":{}}}],["lg",{"_index":3269,"title":{},"body":{"components/ToastComponent.html":{}}}],["li",{"_index":1496,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":1503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":1502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["light",{"_index":848,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":3468,"title":{},"body":{"index.html":{}}}],["limit",{"_index":908,"title":{},"body":{"components/BudgetComponent.html":{}}}],["line",{"_index":2312,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["linebreak",{"_index":1841,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linenumbers",{"_index":3174,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":1646,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["link.click",{"_index":1809,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["link.download",{"_index":1806,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["link.href",{"_index":1804,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linked",{"_index":1089,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["links",{"_index":3106,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":2006,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":2005,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":2000,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":2014,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:28",{"_index":2012,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:33",{"_index":2011,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:49",{"_index":2035,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:60",{"_index":2028,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:95",{"_index":2018,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1999,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SidebarComponent.html":{}}}],["listener",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["listening",{"_index":1313,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":1185,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["listexpensescomponent",{"_index":297,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":3491,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1235,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["live",{"_index":1424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["liveapiurl",{"_index":1665,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":842,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadbudgets",{"_index":743,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadcategories",{"_index":1158,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loaddata",{"_index":2252,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":2253,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":2270,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":2574,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["loader",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":286,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":2208,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":2207,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":2203,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:23",{"_index":2218,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:28",{"_index":2211,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":2217,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:55",{"_index":2214,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":2223,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:17",{"_index":2231,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2229,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:33",{"_index":2230,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:40",{"_index":2227,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loading",{"_index":1070,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadmonthdata",{"_index":2254,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":2274,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadsessionconfig",{"_index":1580,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":1572,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":2255,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":2276,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["localapiurl",{"_index":1666,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1679,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":3003,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.budgetkey",{"_index":3031,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.categorykey",{"_index":3028,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":677,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":1130,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1918,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":3312,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":3011,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":2132,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2909,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2910,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":3531,"title":{},"body":{"index.html":{}}}],["logged",{"_index":1135,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["logic",{"_index":3473,"title":{},"body":{"index.html":{}}}],["long",{"_index":1048,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":1071,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lucide",{"_index":3436,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":833,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["mainartist",{"_index":2734,"title":{},"body":{"components/MusicComponent.html":{}}}],["mainartist}`).subscribe",{"_index":2737,"title":{},"body":{"components/MusicComponent.html":{}}}],["maintains",{"_index":3082,"title":{},"body":{"injectables/SectionService.html":{}}}],["making",{"_index":3370,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["manage",{"_index":1170,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["management",{"_index":3451,"title":{},"body":{"index.html":{}}}],["manager",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["managing",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["map",{"_index":1119,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["map((a",{"_index":2768,"title":{},"body":{"components/MusicComponent.html":{}}}],["map((category",{"_index":1121,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1905,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":2339,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":1118,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":388,"title":{},"body":{"components/AiComponent.html":{}}}],["mapping",{"_index":2484,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["mar",{"_index":2032,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":2398,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":1480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["mark",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":335,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["marked",{"_index":372,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":384,"title":{},"body":{"components/AiComponent.html":{}}}],["marks",{"_index":1733,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["match",{"_index":1331,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matches",{"_index":680,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["matching",{"_index":323,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil((todate.gettime",{"_index":912,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.floor(seconds",{"_index":2749,"title":{},"body":{"components/MusicComponent.html":{}}}],["math.max(b",{"_index":2062,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":2061,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(math.ceil((today.gettime",{"_index":919,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totalbudget",{"_index":884,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totaldays",{"_index":921,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.min((spent",{"_index":883,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.round(data.amount",{"_index":676,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":691,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":1173,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":3053,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2881,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":291,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":2792,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":2416,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":2417,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":2409,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:26",{"_index":2439,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":2424,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":2436,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":2427,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:75",{"_index":2431,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":2408,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":3632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merged",{"_index":3633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merges",{"_index":681,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["message",{"_index":770,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":2194,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["met",{"_index":1684,"title":{},"body":{"injectables/ConfigService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["metatag",{"_index":3215,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":3214,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":2102,"title":{},"body":{"components/FormModelComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["middle",{"_index":1849,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["milliseconds",{"_index":3254,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mime",{"_index":1748,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["mimetype",{"_index":1745,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["min",{"_index":2748,"title":{},"body":{"components/MusicComponent.html":{}}}],["minimal",{"_index":1385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":3170,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minimumfractiondigits",{"_index":2880,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minmax(200px",{"_index":1478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minute",{"_index":2376,"title":{},"body":{"components/GraphsComponent.html":{}}}],["min}:${sec.tostring().padstart(2",{"_index":2751,"title":{},"body":{"components/MusicComponent.html":{}}}],["miscellaneous",{"_index":3543,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":2936,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["mm",{"_index":987,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mm:ss",{"_index":2661,"title":{},"body":{"components/MusicComponent.html":{}}}],["mobile",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["mock",{"_index":2517,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["modal",{"_index":774,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["modal'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1939,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1936,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":1966,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:112",{"_index":1960,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:117",{"_index":1965,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1953,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1950,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1951,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1954,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:36",{"_index":1957,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1958,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:42",{"_index":1970,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:45",{"_index":1947,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:57",{"_index":1963,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:62",{"_index":1962,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:80",{"_index":1964,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:88",{"_index":1968,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/expense",{"_index":1935,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":974,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modaltitle",{"_index":975,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":380,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["model'},{'name",{"_index":283,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["model.component",{"_index":1756,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["model.component.css",{"_index":2094,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.html",{"_index":2093,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts",{"_index":2090,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["model.component.ts:22",{"_index":2096,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:30",{"_index":2098,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:38",{"_index":2101,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model/form",{"_index":1755,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["modelreply",{"_index":1353,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modern",{"_index":3467,"title":{},"body":{"index.html":{}}}],["modify",{"_index":3367,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":2486,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["modules",{"_index":2487,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["mon",{"_index":1025,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["monaco",{"_index":3165,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":3167,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":3196,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":3203,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":3205,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":3223,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":3206,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["money",{"_index":3449,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":3532,"title":{},"body":{"index.html":{}}}],["monospace",{"_index":1458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["month",{"_index":963,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":1047,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":3529,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":2239,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":2385,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":2393,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":2390,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":2389,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":960,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["monthname",{"_index":2353,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":2352,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":2388,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":2354,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":993,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":2392,"title":{},"body":{"components/GraphsComponent.html":{}}}],["months[date.getmonth",{"_index":2051,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["monthstr",{"_index":1043,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1277,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{},"injectables/ZipExportService.html":{}}}],["mouse",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["mouseevent",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["msg",{"_index":385,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":382,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":379,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":3499,"title":{},"body":{"index.html":{}}}],["music",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["music'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component.css",{"_index":2644,"title":{},"body":{"components/MusicComponent.html":{}}}],["music.component.html",{"_index":2645,"title":{},"body":{"components/MusicComponent.html":{}}}],["musiccomponent",{"_index":300,"title":{"components/MusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1897,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["n.tostring().padstart(2",{"_index":1898,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["navbar",{"_index":2782,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":2784,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":2785,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":302,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2414,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["navigateandclose",{"_index":2420,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":2430,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":2432,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{}}}],["navigating",{"_index":3107,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navigation",{"_index":2411,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["navtabs",{"_index":2497,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":2499,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":2504,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":2505,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["need",{"_index":3524,"title":{},"body":{"index.html":{}}}],["negative",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":684,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newest",{"_index":1902,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newurl",{"_index":2742,"title":{},"body":{"components/MusicComponent.html":{}}}],["next",{"_index":1249,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["nextsong",{"_index":2723,"title":{},"body":{"components/MusicComponent.html":{}}}],["nextsong.trim",{"_index":2725,"title":{},"body":{"components/MusicComponent.html":{}}}],["ng",{"_index":2323,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":3440,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":2805,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":2242,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngmodule",{"_index":3238,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngonchanges",{"_index":2256,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":2278,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1560,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["node.js",{"_index":3559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notice",{"_index":2514,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["notify",{"_index":1961,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["nov",{"_index":2046,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":2404,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2917,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2931,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":364,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["num",{"_index":2057,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":633,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number(item.amount",{"_index":1057,"title":{},"body":{"components/CalendarComponent.html":{}}}],["number(target.value",{"_index":2753,"title":{},"body":{"components/MusicComponent.html":{}}}],["object",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2852,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2855,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2995,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["object.keys(exceldata[0",{"_index":1876,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["object.values(categorytotals",{"_index":2853,"title":{},"body":{"components/PieChartComponent.html":{}}}],["objects",{"_index":1006,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["observable",{"_index":1268,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{}}}],["observe",{"_index":1634,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["occurs",{"_index":2429,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["oct",{"_index":2045,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":2403,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offline",{"_index":2636,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["offset",{"_index":992,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":672,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2890,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["onchangecallback",{"_index":3146,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onchanges",{"_index":2240,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":2421,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":2435,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclickinstallapp",{"_index":2623,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["ondelete",{"_index":1942,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ondocumentclick",{"_index":1159,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":1191,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["one",{"_index":835,"title":{},"body":{"components/BudgetComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninputchange",{"_index":2542,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":2561,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":2543,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":2566,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(event",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":3044,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onseek",{"_index":2649,"title":{},"body":{"components/MusicComponent.html":{}}}],["onseek(event",{"_index":2669,"title":{},"body":{"components/MusicComponent.html":{}}}],["onselect",{"_index":2009,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":2034,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsongfinished",{"_index":2650,"title":{},"body":{"components/MusicComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["opacity",{"_index":621,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1952,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["open/closed",{"_index":2437,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["opendownloaddatamodal",{"_index":1725,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["opened",{"_index":1969,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["openeditmodal",{"_index":744,"title":{},"body":{"components/BudgetComponent.html":{}}}],["openmodal",{"_index":745,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":998,"title":{},"body":{"components/CalendarComponent.html":{}}}],["opens",{"_index":789,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["operations",{"_index":1103,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["operator",{"_index":2468,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimized",{"_index":3518,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":1473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["options.fn(this",{"_index":2472,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":2473,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["orange",{"_index":3591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1828,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["organization",{"_index":3510,"title":{},"body":{"index.html":{}}}],["original",{"_index":2026,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/MusicComponent.html":{},"injectables/ZipExportService.html":{}}}],["orlength",{"_index":2489,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["others",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["outline",{"_index":2614,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":1200,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":1165,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":1187,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":799,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["overflow",{"_index":1470,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1412,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":3179,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["owns",{"_index":1094,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["p",{"_index":3267,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["p.text).join('\\n\\n",{"_index":1355,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":1626,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pad",{"_index":1896,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1900,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getmonth",{"_index":1899,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["padding",{"_index":965,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":3362,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":3102,"title":{},"body":{"components/SettingItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["pagewidth",{"_index":1820,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pairs",{"_index":2952,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["panel",{"_index":1466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":1472,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["paragraph",{"_index":2176,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["parameterhints",{"_index":3183,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["parent",{"_index":1153,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{}}}],["parse",{"_index":2733,"title":{},"body":{"components/MusicComponent.html":{}}}],["parsed",{"_index":2598,"title":{},"body":{"components/HomeComponent.html":{}}}],["parsefloat(exp.amount",{"_index":882,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parsefloat(this.latestbudget.amount.tostring",{"_index":874,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parseint(exp.amount",{"_index":1066,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":2342,"title":{},"body":{"components/GraphsComponent.html":{}}}],["part",{"_index":1092,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":685,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":3363,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["parts",{"_index":1233,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1354,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":3618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2903,"title":{},"body":{"injectables/PostApiService.html":{}}}],["password",{"_index":3301,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2989,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pastdata.filter((item",{"_index":2992,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["path",{"_index":1395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/section",{"_index":3116,"title":{},"body":{"components/SidebarComponent.html":{}}}],["path/to/custom/templates",{"_index":3361,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["patterns",{"_index":2157,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pause",{"_index":2642,"title":{},"body":{"components/MusicComponent.html":{}}}],["pauses",{"_index":2678,"title":{},"body":{"components/MusicComponent.html":{}}}],["payment",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["payment_mode",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["pdf",{"_index":1713,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["per",{"_index":706,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"index.html":{}}}],["percent",{"_index":2017,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":719,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["perform",{"_index":2099,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/PostApiService.html":{}}}],["performed",{"_index":3299,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["period",{"_index":639,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{}}}],["persist",{"_index":3304,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["persistent",{"_index":3474,"title":{},"body":{"index.html":{}}}],["personal",{"_index":3461,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":3508,"title":{},"body":{"index.html":{}}}],["pick",{"_index":2120,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":2565,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":305,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["pie/doughnut",{"_index":2797,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartcomponent",{"_index":304,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":3620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(filter(event",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["places",{"_index":636,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["plain",{"_index":3303,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["platform_id",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["platformid",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["play",{"_index":2641,"title":{},"body":{"components/MusicComponent.html":{}}}],["playback",{"_index":2672,"title":{},"body":{"components/MusicComponent.html":{}}}],["playcount",{"_index":2761,"title":{},"body":{"components/MusicComponent.html":{}}}],["playground",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":3240,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":1362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":3237,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":2445,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":1361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":3328,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playing",{"_index":1281,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["plays",{"_index":2675,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong",{"_index":2651,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong(url",{"_index":2676,"title":{},"body":{"components/MusicComponent.html":{}}}],["please",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["plugins",{"_index":2873,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["points",{"_index":2174,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":2146,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":2159,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":2183,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pop",{"_index":3212,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["popup",{"_index":296,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":1516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["positive",{"_index":994,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1692,"title":{},"body":{"injectables/ConfigService.html":{}}}],["post",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":431,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2924,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2932,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2902,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2893,"title":{},"body":{"injectables/PostApiService.html":{}}}],["pre",{"_index":790,"title":{},"body":{"components/BudgetComponent.html":{}}}],["predefined",{"_index":2956,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["predict",{"_index":2152,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":2154,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preference",{"_index":843,"title":{},"body":{"components/BudgetComponent.html":{}}}],["preferences",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["preferred",{"_index":820,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prepare",{"_index":1786,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["presses",{"_index":3056,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevent",{"_index":1752,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["preventing",{"_index":2791,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["prevents",{"_index":2548,"title":{},"body":{"components/HomeComponent.html":{}}}],["preview",{"_index":1425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":1540,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":1549,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["previous/next",{"_index":964,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevmonthdays",{"_index":1042,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":1524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":1525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["privacy",{"_index":3528,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["process",{"_index":2187,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["processes",{"_index":2272,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":333,"title":{},"body":{"components/AiComponent.html":{},"components/SearchButtonComponent.html":{}}}],["production",{"_index":1693,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":3291,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["progress",{"_index":702,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"index.html":{}}}],["promise",{"_index":1288,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["prompt",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":2199,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompting",{"_index":2621,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["prompts",{"_index":2111,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":2845,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"properties.html":{}}}],["property",{"_index":2097,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provide",{"_index":713,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":3577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":682,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{}}}],["providedin",{"_index":652,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["providehttpclient",{"_index":3583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3232,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":646,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":3634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":3635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":3578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":3574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1662,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pt",{"_index":1818,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["public",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":3602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":2150,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["purposes",{"_index":2004,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["pwa",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["q",{"_index":2701,"title":{},"body":{"components/MusicComponent.html":{}}}],["quality",{"_index":2665,"title":{},"body":{"components/MusicComponent.html":{}}}],["query",{"_index":1266,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":2127,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":2188,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quickly",{"_index":3496,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":3180,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":1499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["random",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":877,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["raw",{"_index":381,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactively",{"_index":3092,"title":{},"body":{"injectables/SectionService.html":{}}}],["read",{"_index":1099,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["read/write",{"_index":3526,"title":{},"body":{"index.html":{}}}],["readable",{"_index":2030,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["readme",{"_index":3343,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":1544,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["ready",{"_index":2128,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recent",{"_index":831,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":3629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommendation",{"_index":1250,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":3306,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["records",{"_index":709,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":897,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":3648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/ToastService.html":{}}}],["reflected",{"_index":3489,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshes",{"_index":787,"title":{},"body":{"components/BudgetComponent.html":{}}}],["refreshpreview",{"_index":1610,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":1607,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":2226,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":2228,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":3282,"title":{},"body":{"injectables/ToastService.html":{}}}],["registered",{"_index":2232,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{}}}],["registerhandlebarslanguage",{"_index":3149,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":2450,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registering",{"_index":3280,"title":{},"body":{"injectables/ToastService.html":{}}}],["registers",{"_index":2212,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":3582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":1104,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/SettingItemComponent.html":{}}}],["relative",{"_index":1517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":2479,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["release",{"_index":3513,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2685,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["reloads",{"_index":2286,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["remaining",{"_index":711,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["remainingdays",{"_index":920,"title":{},"body":{"components/BudgetComponent.html":{}}}],["remove",{"_index":3276,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["removes",{"_index":3058,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["render",{"_index":1003,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["render.service",{"_index":1394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":2446,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":2457,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":2454,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":2453,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":2455,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":2452,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendercalendar",{"_index":980,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":1000,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":2806,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":2819,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendered",{"_index":365,"title":{},"body":{"components/AiComponent.html":{},"injectables/HbsRenderService.html":{}}}],["rendering",{"_index":357,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["rendermode",{"_index":3650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":3651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renders",{"_index":959,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["rendertemplate",{"_index":2451,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":2456,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rent",{"_index":3608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat",{"_index":1340,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["repeat(auto",{"_index":1476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["replace",{"_index":2728,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["replace(/^```json",{"_index":2727,"title":{},"body":{"components/MusicComponent.html":{}}}],["replaced",{"_index":3646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":695,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["reply",{"_index":2169,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["report",{"_index":1740,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["representing",{"_index":628,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["represents",{"_index":1230,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["reqhandler",{"_index":3420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":3565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":354,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["required",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PieChartComponent.html":{}}}],["requires",{"_index":3279,"title":{},"body":{"injectables/ToastService.html":{}}}],["res",{"_index":1350,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["res.app_version",{"_index":2926,"title":{},"body":{"injectables/PostApiService.html":{}}}],["res.data?.results",{"_index":2738,"title":{},"body":{"components/MusicComponent.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1352,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":2087,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["reset",{"_index":1404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["resetting",{"_index":1615,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":1613,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resize",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve(serverdistfolder",{"_index":3561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":2160,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":336,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":1635,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":1583,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":1640,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":1567,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":1566,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":1575,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsehtml",{"_index":343,"title":{},"body":{"components/AiComponent.html":{}}}],["responsetype",{"_index":1632,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsibilities",{"_index":1328,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":644,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["responsive",{"_index":2872,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restricts",{"_index":3051,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["result",{"_index":2469,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":322,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":2739,"title":{},"body":{"components/MusicComponent.html":{}}}],["results.map(exp",{"_index":2143,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["results[0",{"_index":2741,"title":{},"body":{"components/MusicComponent.html":{}}}],["ret",{"_index":2478,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["retrieve",{"_index":982,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":822,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["retrieves",{"_index":661,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":748,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["returned",{"_index":362,"title":{},"body":{"components/AiComponent.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["reusable",{"_index":2091,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"components/ToastComponent.html":{}}}],["rgb",{"_index":2020,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["rgb(${math.max(r",{"_index":2060,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["rights",{"_index":2086,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["roboto",{"_index":1437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":1234,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":266,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":634,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["roundedselection",{"_index":3175,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["rounds",{"_index":668,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["route",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":558,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1878,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rows",{"_index":1829,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rules",{"_index":777,"title":{},"body":{"components/BudgetComponent.html":{}}}],["run",{"_index":2888,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":2818,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["rxjs",{"_index":1243,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavn",{"_index":1246,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1244,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safe",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["safehtml",{"_index":363,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1293,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["same",{"_index":1109,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["sample",{"_index":2522,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":2523,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sanitized",{"_index":337,"title":{},"body":{"components/AiComponent.html":{}}}],["sanitizer",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["sans",{"_index":1438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sat",{"_index":1030,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["save",{"_index":696,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["save_delay",{"_index":1545,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveddata",{"_index":2986,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["saveddata.map((item",{"_index":2997,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings",{"_index":3006,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings[key",{"_index":3009,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedtheme",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["savetemplate(content",{"_index":1602,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":1543,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":865,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scales",{"_index":2882,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schedule",{"_index":1597,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":1593,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":402,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["schemakeys",{"_index":2994,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemakeys.foreach((key",{"_index":2999,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemas",{"_index":2957,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["screen",{"_index":2204,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["screens",{"_index":3101,"title":{},"body":{"components/SettingItemComponent.html":{},"index.html":{}}}],["screenshots",{"_index":3536,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":3356,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollable",{"_index":1178,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":3176,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":3171,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":3198,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seamless",{"_index":2635,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["search",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["searchbuttoncomponent",{"_index":307,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":2065,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1924,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searches",{"_index":1264,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["searching",{"_index":1892,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searchinput",{"_index":3043,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchsong",{"_index":2652,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsongs",{"_index":2939,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1270,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sec",{"_index":2750,"title":{},"body":{"components/MusicComponent.html":{}}}],["second",{"_index":2377,"title":{},"body":{"components/GraphsComponent.html":{}}}],["secondary",{"_index":1528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":1529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seconds",{"_index":2660,"title":{},"body":{"components/MusicComponent.html":{}}}],["seconds\\n",{"_index":1298,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sections",{"_index":2415,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":428,"title":{"injectables/SectionService.html":{}},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionservice.currentsection",{"_index":2425,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionsource",{"_index":3086,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":3637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":2673,"title":{},"body":{"components/MusicComponent.html":{},"index.html":{}}}],["seeking",{"_index":2643,"title":{},"body":{"components/MusicComponent.html":{}}}],["seeks",{"_index":2671,"title":{},"body":{"components/MusicComponent.html":{}}}],["seektime",{"_index":2752,"title":{},"body":{"components/MusicComponent.html":{}}}],["segoe",{"_index":1436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["selectcategory",{"_index":1160,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":1193,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1946,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1992,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1993,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1994,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1998,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1996,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1997,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1995,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedfile",{"_index":1541,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":1422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":1423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":1589,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selecting",{"_index":1151,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":346,"title":{},"body":{"components/AiComponent.html":{}}}],["sender",{"_index":1237,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sendmessage(message",{"_index":2201,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sends",{"_index":332,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2899,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":2175,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":2044,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1304,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["september",{"_index":1010,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["series",{"_index":2297,"title":{},"body":{"components/GraphsComponent.html":{}}}],["serif",{"_index":1439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":1628,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":3386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":3421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":3649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":3390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["service/backend",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["service/config/config.service",{"_index":2083,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{}}}],["service/gemini",{"_index":373,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":841,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/category.service",{"_index":1201,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/storage.service",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/saavan",{"_index":2699,"title":{},"body":{"components/MusicComponent.html":{}}}],["service/section/section.service",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["services",{"_index":352,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["session",{"_index":1396,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":1397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":1398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["seteditorcontent",{"_index":3150,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":3158,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setinterval",{"_index":932,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["setonchangecallback",{"_index":3151,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":3160,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["sets",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["setsection",{"_index":3085,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":3087,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":311,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":310,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["settings'},{'name",{"_index":314,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":2544,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":2568,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":3268,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":2319,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/global",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/toast/toast.component",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":3484,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":2164,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shorter",{"_index":360,"title":{},"body":{"components/AiComponent.html":{}}}],["shouldbackup",{"_index":2916,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/SettingItemComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["show(message",{"_index":3284,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":2216,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["show/hide",{"_index":1263,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{}}}],["showaibutton",{"_index":2419,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":2786,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showbudgetsection",{"_index":736,"title":{},"body":{"components/BudgetComponent.html":{}}}],["showconfigpanel",{"_index":1542,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["showdownloaddatamodal",{"_index":1719,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["showing",{"_index":1019,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["showinstallbutton",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":737,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["shows",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{}}}],["shows/hides",{"_index":2413,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showtoast",{"_index":3245,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":3252,"title":{},"body":{"components/ToastComponent.html":{}}}],["side",{"_index":1629,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":1482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["sidebar'},{'name",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":3110,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":3111,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":315,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signal",{"_index":2696,"title":{},"body":{"components/MusicComponent.html":{}}}],["signal(0",{"_index":2690,"title":{},"body":{"components/MusicComponent.html":{}}}],["signature",{"_index":2526,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["silently",{"_index":2889,"title":{},"body":{"injectables/PostApiService.html":{}}}],["simple",{"_index":2482,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["simplechanges",{"_index":2279,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["single",{"_index":1231,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["size",{"_index":1455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skipped",{"_index":2934,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2937,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["sm",{"_index":1535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["small",{"_index":890,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["smart",{"_index":1310,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":3459,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":794,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":3078,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":2313,"title":{},"body":{"components/GraphsComponent.html":{}}}],["smoothly",{"_index":755,"title":{},"body":{"components/BudgetComponent.html":{}}}],["sole",{"_index":2149,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["solid",{"_index":1452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["something",{"_index":2181,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["song",{"_index":1247,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song.artists.primary[0]?.name",{"_index":2771,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.downloadurl?.find((d",{"_index":2705,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.name",{"_index":2770,"title":{},"body":{"components/MusicComponent.html":{}}}],["songdetails",{"_index":2730,"title":{},"body":{"components/MusicComponent.html":{}}}],["songname",{"_index":1343,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1265,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song’s",{"_index":1334,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sort",{"_index":1100,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["sort((a",{"_index":1123,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":3495,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":1105,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":1441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":1492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specific",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":3458,"title":{},"body":{"index.html":{}}}],["specified",{"_index":991,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["specify",{"_index":3358,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spend",{"_index":798,"title":{},"body":{"components/BudgetComponent.html":{}}}],["spending",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["spent",{"_index":765,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["spent/day",{"_index":3504,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":3550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":3546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":3556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":3555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.ts",{"_index":3548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":3551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":3547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":3549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":3545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:121",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:174",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:185",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:193",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:203",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":3384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":3387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":3389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":3391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":1149,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/form",{"_index":2089,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":2236,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":2317,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":2315,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":2321,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":2260,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":2322,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":2282,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":2280,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":2284,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":2268,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":2275,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":2271,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":2266,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":2264,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":2277,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":2296,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":2304,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":2308,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":2294,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":2300,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":2306,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":2311,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/install",{"_index":2620,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1933,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":2795,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":3035,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/settings",{"_index":1708,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":324,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:27",{"_index":366,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:30",{"_index":351,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:48",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":699,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{}}}],["src/app/features/budget/budget.component.ts:102",{"_index":793,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:107",{"_index":747,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:145",{"_index":783,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:154",{"_index":775,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:166",{"_index":792,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:176",{"_index":788,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:189",{"_index":771,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:197",{"_index":784,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:226",{"_index":781,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:245",{"_index":759,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:31",{"_index":809,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:310",{"_index":754,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:331",{"_index":778,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:36",{"_index":816,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:41",{"_index":836,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:47",{"_index":832,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:52",{"_index":829,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:57",{"_index":814,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:62",{"_index":806,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:67",{"_index":812,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:72",{"_index":796,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:77",{"_index":801,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:82",{"_index":838,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:87",{"_index":827,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:92",{"_index":818,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:97",{"_index":825,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":958,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:141",{"_index":984,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:156",{"_index":999,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:171",{"_index":995,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":1016,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:27",{"_index":1014,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:30",{"_index":1007,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":1022,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:36",{"_index":1005,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:39",{"_index":1020,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:42",{"_index":1018,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:45",{"_index":1017,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:48",{"_index":1012,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:51",{"_index":981,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:61",{"_index":1023,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:67",{"_index":997,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:76",{"_index":990,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:94",{"_index":1001,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":2528,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":2558,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":2564,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":2567,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":2553,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":2556,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":2547,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":2573,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":2579,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":2580,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":2581,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":2572,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":2576,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":2569,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":2560,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":2559,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":3405,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":2640,"title":{},"body":{"components/MusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts:121",{"_index":2674,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:169",{"_index":2659,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:180",{"_index":2670,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:194",{"_index":2681,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:212",{"_index":2667,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:27",{"_index":2695,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:30",{"_index":2697,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:33",{"_index":2688,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:36",{"_index":2689,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:39",{"_index":2694,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:42",{"_index":2691,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:45",{"_index":2692,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:48",{"_index":2686,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:51",{"_index":2655,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:72",{"_index":2679,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:87",{"_index":2663,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:97",{"_index":2677,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":3408,"title":{},"body":{"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":2524,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/service/backend",{"_index":2886,"title":{},"body":{"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts",{"_index":1661,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts:19",{"_index":1690,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:24",{"_index":1688,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:29",{"_index":1700,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:36",{"_index":1695,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:43",{"_index":1671,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:61",{"_index":1672,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:84",{"_index":1685,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:93",{"_index":1686,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/gemini",{"_index":2107,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":2222,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":627,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:109",{"_index":957,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":951,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:43",{"_index":955,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:52",{"_index":954,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:63",{"_index":952,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:79",{"_index":956,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:97",{"_index":953,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":1082,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:103",{"_index":1220,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:119",{"_index":1225,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:132",{"_index":1221,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:152",{"_index":1226,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:41",{"_index":1219,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:60",{"_index":1224,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:70",{"_index":1223,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:92",{"_index":1222,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":3411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1885,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:119",{"_index":2067,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:133",{"_index":2074,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:147",{"_index":2070,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:157",{"_index":2068,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:171",{"_index":2073,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:55",{"_index":2066,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:69",{"_index":2072,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:78",{"_index":2071,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:89",{"_index":2069,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2947,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:114",{"_index":3133,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:130",{"_index":3138,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:162",{"_index":3136,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:185",{"_index":3125,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:194",{"_index":3124,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:203",{"_index":3130,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:212",{"_index":3126,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:217",{"_index":3128,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:220",{"_index":3129,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:223",{"_index":3127,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:226",{"_index":3131,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:233",{"_index":3140,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:242",{"_index":3139,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:251",{"_index":3141,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:29",{"_index":3143,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:32",{"_index":3144,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:35",{"_index":3142,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:38",{"_index":3123,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:52",{"_index":3132,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:59",{"_index":3134,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:74",{"_index":3135,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:9",{"_index":2951,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:92",{"_index":3137,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":3290,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:102",{"_index":3324,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:112",{"_index":3323,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:122",{"_index":3327,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:53",{"_index":3321,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:68",{"_index":3325,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:77",{"_index":3322,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:88",{"_index":3326,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1228,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":3081,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:21",{"_index":3094,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:27",{"_index":3090,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:34",{"_index":3088,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":3278,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:19",{"_index":3287,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:27",{"_index":3283,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:39",{"_index":3285,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":2075,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:22",{"_index":2082,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":2202,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":2407,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":2781,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:25",{"_index":2787,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:48",{"_index":2790,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":3105,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:25",{"_index":3113,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:48",{"_index":3114,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":3241,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:17",{"_index":3247,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:30",{"_index":3248,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:41",{"_index":3253,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":3415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":3416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":3417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":3471,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":638,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["starty",{"_index":1836,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["state",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["statements",{"_index":3375,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1537,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FooterComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["statistics",{"_index":762,"title":{},"body":{"components/BudgetComponent.html":{}}}],["status",{"_index":902,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["stay",{"_index":840,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stays",{"_index":3527,"title":{},"body":{"index.html":{}}}],["steps",{"_index":927,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stops",{"_index":3450,"title":{},"body":{"index.html":{}}}],["storage",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storage.service",{"_index":643,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2981,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["storageservice",{"_index":429,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["storageservice.isbrowser",{"_index":2984,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["store",{"_index":1146,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["stores",{"_index":830,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/SearchButtonComponent.html":{}}}],["stream",{"_index":3091,"title":{},"body":{"injectables/SectionService.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["string(date.getmonth",{"_index":2606,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":1044,"title":{},"body":{"components/CalendarComponent.html":{}}}],["strings",{"_index":3182,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["stroke",{"_index":2250,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1759,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["structured",{"_index":2122,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["style",{"_index":1278,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":3353,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":2003,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["sub",{"_index":1822,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":785,"title":{},"body":{"components/BudgetComponent.html":{}}}],["submitedit",{"_index":1943,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["subscribe",{"_index":3084,"title":{},"body":{"injectables/SectionService.html":{}}}],["subscribe((event",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":3603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["success/error",{"_index":752,"title":{},"body":{"components/BudgetComponent.html":{}}}],["success:hover",{"_index":1532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":2904,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["such",{"_index":704,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["suffix",{"_index":2033,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["suggest",{"_index":1314,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":766,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested/day",{"_index":3505,"title":{},"body":{"index.html":{}}}],["suggestedperday",{"_index":738,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestedperday.tofixed(2",{"_index":945,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/MusicComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suggestnextsong",{"_index":2940,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1287,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestontriggercharacters",{"_index":3186,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suggests",{"_index":1274,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suitable",{"_index":1279,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":881,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["summarizing",{"_index":813,"title":{},"body":{"components/BudgetComponent.html":{}}}],["summary",{"_index":3501,"title":{},"body":{"index.html":{}}}],["sun",{"_index":1024,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["support",{"_index":3537,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1891,"title":{},"body":{"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{}}}],["sure",{"_index":937,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surface",{"_index":1055,"title":{},"body":{"components/CalendarComponent.html":{}}}],["surroundingpairs",{"_index":3227,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":3538,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2287,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["switches",{"_index":2285,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":2257,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":2283,"title":{},"body":{"components/GraphsComponent.html":{}}}],["swupdate",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["symbol",{"_index":821,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["sync",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncbudgetwithschema",{"_index":2978,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synccategorieswithschema",{"_index":2963,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced",{"_index":2998,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced[key",{"_index":3000,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings",{"_index":3007,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings['app_version",{"_index":3010,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings[key",{"_index":3008,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncexpenseswithschema",{"_index":2966,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncing",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuser",{"_index":3118,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncuser(storagekey",{"_index":3005,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuserwithschema",{"_index":2969,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncwithschema",{"_index":3119,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncwithschema(storagekey",{"_index":2983,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syntax",{"_index":2520,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":1434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":2144,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["t.id",{"_index":2500,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":3217,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":1419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["tabcompletion",{"_index":3188,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":2498,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":1093,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3422,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3216,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tailored",{"_index":3457,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":1177,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2907,"title":{},"body":{"injectables/PostApiService.html":{}}}],["taken",{"_index":1691,"title":{},"body":{"injectables/ConfigService.html":{}}}],["tap",{"_index":3493,"title":{},"body":{"index.html":{}}}],["target",{"_index":1211,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{}}}],["teal",{"_index":3625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":3470,"title":{},"body":{"index.html":{}}}],["technology",{"_index":3472,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{"interfaces/Template.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":1420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":1421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":2458,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":1387,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":3229,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":1405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":3349,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["term",{"_index":1267,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["text",{"_index":367,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["textcolor",{"_index":1851,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["that's",{"_index":2177,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["theme_mode",{"_index":2975,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["then((content",{"_index":3347,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["thinking",{"_index":390,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":3117,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.animatedbudgetprogress",{"_index":887,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.animatepercentage",{"_index":893,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.appname",{"_index":1706,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.appversion",{"_index":2084,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["this.audio",{"_index":2708,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.currenttime",{"_index":2754,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.onended",{"_index":2719,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.pause",{"_index":2712,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.paused",{"_index":2710,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.play",{"_index":2711,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.src",{"_index":2713,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.avgallowedperday",{"_index":922,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.avgspentperday",{"_index":923,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetcolorclass",{"_index":896,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform",{"_index":847,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.invalid",{"_index":858,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.markallastouched",{"_index":859,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.patchvalue",{"_index":854,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.reset",{"_index":851,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.value",{"_index":860,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetkey",{"_index":3024,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetmessage",{"_index":903,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress",{"_index":886,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress.tofixed(1",{"_index":934,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets",{"_index":866,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets.length",{"_index":869,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets[this.budgets.length",{"_index":871,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.add(data",{"_index":863,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.delete(this.latestbudget.budget_id",{"_index":939,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.getall",{"_index":867,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.update(this.latestbudget.budget_id",{"_index":861,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatebudgetprogress",{"_index":872,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":1050,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":1036,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":1051,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":1046,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2861,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":1204,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":1207,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":2836,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2856,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":2838,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2988,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":2837,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":2849,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":1214,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":1215,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryselected.emit(category",{"_index":1210,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":2834,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":1205,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":1206,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2862,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2863,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":2358,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":2356,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.close.emit",{"_index":2106,"title":{},"body":{"components/FormModelComponent.html":{}}}],["this.closedownloaddatamodal",{"_index":1793,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.closemodal",{"_index":864,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.closemodal.emit",{"_index":1990,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.config",{"_index":1582,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.getapiurl",{"_index":2920,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.configservice.getappname",{"_index":2633,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.configservice.getversion",{"_index":2085,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.confirmanddownload",{"_index":1771,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.createsession",{"_index":1555,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currency",{"_index":844,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currency}${(spent",{"_index":906,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${remaining.tofixed(2",{"_index":910,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${spent.tofixed(2",{"_index":905,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${totalbudget.tofixed(2",{"_index":909,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currentdate",{"_index":2586,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":2361,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":2334,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":2335,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":2589,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":2591,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":2590,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":2593,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":1034,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentsong",{"_index":2714,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentsong?.url",{"_index":2709,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentyear",{"_index":1035,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":2578,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.deferredprompt",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.prompt",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.userchoice.then((choiceresult",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1991,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1701,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayedpercentage",{"_index":888,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.downloadblob(content",{"_index":3348,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.downloaddataform",{"_index":1767,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.invalid",{"_index":1769,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markallastouched",{"_index":1770,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markaspristine",{"_index":1813,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markasuntouched",{"_index":1814,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.reset",{"_index":1812,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.value",{"_index":1772,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.duration.set(song.duration",{"_index":2715,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1988,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1972,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1981,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1984,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1987,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editor",{"_index":3166,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":3228,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":3190,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":3197,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":1585,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":1591,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":1587,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":3022,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":2835,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2858,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":2847,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseselected.emit(expense",{"_index":2037,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":1061,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":2141,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.exporttoexcel(filteredexpensedata",{"_index":1798,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.exporttopdf(filteredexpensedata",{"_index":1796,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["this.filteredlocationsuggestions",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":2597,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":2601,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":2137,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generatereadme",{"_index":3344,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.generateuserid",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":3310,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":673,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getall().find(item",{"_index":1922,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":3195,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.getlast30daysexpenses",{"_index":2135,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getsongurl(firstsong",{"_index":2743,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2921,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":3075,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":3074,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":2233,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":2235,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":2234,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1273,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":2219,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":2133,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1271,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1289,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.handlebarsinstance",{"_index":2461,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":2507,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":2467,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":2477,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":2502,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":2496,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":2490,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":2480,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":2475,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.history",{"_index":1349,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1344,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1272,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":1581,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":1590,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":1573,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":1564,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":1605,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":1631,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":1603,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(url",{"_index":2922,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1971,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.initializeeditor",{"_index":1558,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":2460,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.installapp.emit",{"_index":2634,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.interval",{"_index":2717,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isappupdated",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isbrowser",{"_index":665,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":1209,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.isdarkmode",{"_index":849,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["this.iseditmode",{"_index":852,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.iseditopen",{"_index":1982,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.isexpenseroute",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":2441,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismusicroute",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isopen",{"_index":3067,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isvisible",{"_index":2221,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.lastsaved",{"_index":1600,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.latestbudget",{"_index":870,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.amount",{"_index":855,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.fromdate",{"_index":856,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.todate",{"_index":857,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.liveapiurl",{"_index":1703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.loadbudgets",{"_index":850,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadcategories",{"_index":1203,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":2326,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":2843,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":2331,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmonthdata",{"_index":2841,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":2330,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsessionconfig",{"_index":1557,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":1556,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":2842,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":2332,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.localapiurl",{"_index":1702,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.locationsuggestions",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":2220,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":387,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":1062,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":1063,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":1067,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onchangecallback",{"_index":3191,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":3192,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onsongfinished",{"_index":2720,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.playsong(newurl",{"_index":2744,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["this.previewframe.nativeelement.src",{"_index":1612,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":1611,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.progress.set(0",{"_index":2747,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(seektime",{"_index":2755,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(this.audio.currenttime",{"_index":2718,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query",{"_index":3071,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":3077,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim",{"_index":2702,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query.trim().length",{"_index":3076,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.registerhandlebarslanguage",{"_index":3194,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":2465,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":1033,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2851,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.router.events",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["this.saavnservice.searchsongs(`${songname",{"_index":2736,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.searchsongs(q).subscribe((res",{"_index":2703,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.suggestnextsong(transformeddata",{"_index":2724,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":386,"title":{},"body":{"components/AiComponent.html":{}}}],["this.save_delay",{"_index":1601,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":1599,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":1561,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":1596,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":1588,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.search.emit(this.query",{"_index":3072,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":3073,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":3068,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":2444,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":3089,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":3097,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1986,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1983,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1973,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1974,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1975,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1980,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1979,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1977,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1978,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1976,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedfile",{"_index":1578,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":1579,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":1550,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":1642,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showaibutton",{"_index":2440,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":2793,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showbudgetsection",{"_index":868,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.showconfigpanel",{"_index":1609,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showdownloaddatamodal",{"_index":1815,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.showinstallbutton",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.showlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":853,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.songs.set(res.data.results",{"_index":2704,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":666,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":1115,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":1114,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getuser",{"_index":2938,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.syncbudgetwithschema",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.synccategorieswithschema",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncexpenseswithschema",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncuserwithschema",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.updatebudgets(budgets",{"_index":698,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["this.storageservice.updatecategories(categories",{"_index":1148,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.storageservice.updateuser(user",{"_index":3318,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.suggestedperday",{"_index":924,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.syncuser(this.userkey",{"_index":2977,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.budgetkey",{"_index":2980,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.categorykey",{"_index":2965,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.expensekey",{"_index":2968,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.templates",{"_index":1574,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":1577,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.theme.mode",{"_index":2325,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":2355,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":3288,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":3289,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":3256,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["this.toastservice.show('budget",{"_index":862,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('error",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.toastservice.show('excel",{"_index":1799,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('expense",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('failed",{"_index":1801,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('json",{"_index":1794,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('pdf",{"_index":1797,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.today",{"_index":1765,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toggleedit",{"_index":1989,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":2349,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":1060,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.transformsongdata(this.currentsong",{"_index":2722,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.triggerdownload(jsondata",{"_index":1792,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.userinput.trim",{"_index":377,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":3026,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('app_version",{"_index":2928,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('currency",{"_index":845,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2913,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('is_app_updated",{"_index":2929,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.update('last_backup",{"_index":2930,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":1707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.viewtype",{"_index":2329,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":2587,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":2588,"title":{},"body":{"components/HomeComponent.html":{}}}],["though",{"_index":3521,"title":{},"body":{"index.html":{}}}],["through",{"_index":3486,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1570,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["thu",{"_index":1028,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["ticks",{"_index":2883,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["timeamountmap",{"_index":2359,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":2383,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":2373,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":2380,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeout",{"_index":1595,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["times",{"_index":946,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":2382,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":2384,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["timestamp}.${extension",{"_index":1807,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.pdf",{"_index":1869,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.xlsx",{"_index":1883,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestr",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["tips",{"_index":3365,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":1009,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["titlecase",{"_index":2609,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1930,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["toast.classname",{"_index":3265,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":3244,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":3243,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":3274,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":3277,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.service",{"_index":2911,"title":{},"body":{"injectables/PostApiService.html":{}}}],["toastcomponent",{"_index":319,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":3257,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":3275,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":3260,"title":{},"body":{"components/ToastComponent.html":{}}}],["toasts",{"_index":3259,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["todate",{"_index":632,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["todate.toisostring",{"_index":2142,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":917,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["todaysexpenses",{"_index":2362,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":2374,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":2364,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":2360,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["today’s",{"_index":967,"title":{},"body":{"components/CalendarComponent.html":{}}}],["todo",{"_index":1618,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":1410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":1161,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleconfigpanel",{"_index":1608,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleedit",{"_index":1944,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglemenu",{"_index":2422,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":1196,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":3045,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["token",{"_index":3208,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":3207,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tomato",{"_index":3587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":2170,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":2290,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":2251,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":1481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":1565,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":764,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{}}}],["totalamount",{"_index":2340,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalbudget",{"_index":873,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalbudget).tofixed(2",{"_index":907,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totaldays",{"_index":911,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalexpenses",{"_index":976,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":3517,"title":{},"body":{"index.html":{}}}],["touched",{"_index":1734,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trackbyname(index",{"_index":1658,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tracker",{"_index":2794,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["tracks",{"_index":2438,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["transform",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transformed",{"_index":2684,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformeddata",{"_index":2721,"title":{},"body":{"components/MusicComponent.html":{}}}],["transforms",{"_index":2682,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata",{"_index":2653,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata(data",{"_index":2680,"title":{},"body":{"components/MusicComponent.html":{}}}],["transition",{"_index":1468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transitions",{"_index":795,"title":{},"body":{"components/BudgetComponent.html":{}}}],["translatey(0",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":2483,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":2485,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":2488,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":1521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["travel",{"_index":3483,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":2156,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["trigger",{"_index":889,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["triggerdownload",{"_index":1726,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["triggerdownload(content",{"_index":1744,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggered",{"_index":2630,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["triggering",{"_index":1732,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["trim",{"_index":2729,"title":{},"body":{"components/MusicComponent.html":{}}}],["trimmedinput",{"_index":376,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":378,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["ts",{"_index":3201,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":3360,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["tslib",{"_index":3443,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":1026,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["two",{"_index":1108,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeclasses",{"_index":3262,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":3272,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":3271,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":658,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typeparam",{"_index":3314,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":3202,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["typically",{"_index":2103,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/ToastService.html":{}}}],["typing",{"_index":3497,"title":{},"body":{"index.html":{}}}],["ui",{"_index":767,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["ui/ux",{"_index":3456,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":1077,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":659,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["undone",{"_index":1617,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unique",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["universal",{"_index":3558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":2772,"title":{},"body":{"components/MusicComponent.html":{}}}],["unless",{"_index":2474,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unrelated",{"_index":2167,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":3511,"title":{},"body":{"index.html":{}}}],["up",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":687,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":1131,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1919,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":3308,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateallbudgets",{"_index":949,"title":{},"body":{"injectables/BudgetService.html":{}}}],["updateallbudgets(budgets",{"_index":697,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["updateallcategories",{"_index":1218,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateallcategories(categories",{"_index":1147,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["updatebudgets",{"_index":3120,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatebudgets(budgets",{"_index":3030,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatecategories",{"_index":3121,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatecategories(categories",{"_index":3027,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateconfig",{"_index":1604,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2996,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatedexpense",{"_index":1985,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":2136,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":3122,"title":{},"body":{"injectables/StorageService.html":{}}}],["updateuser(user",{"_index":3033,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateuserdata",{"_index":3320,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdata(user",{"_index":3317,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":750,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["upi",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":3509,"title":{},"body":{"index.html":{}}}],["upon",{"_index":3475,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["url.createobjecturl(zipblob",{"_index":1647,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":1654,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.startswith('/music",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["usage",{"_index":761,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["usd",{"_index":3295,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1333,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":819,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.service",{"_index":1096,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2900,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":1086,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_password",{"_index":2974,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":1760,"title":{"interfaces/UserData.html":{}},"body":{"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2923,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":344,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2962,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userquery",{"_index":2125,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":3453,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":2970,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":416,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":2324,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":2126,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uses",{"_index":1275,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":327,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["utilities",{"_index":3593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":2001,"title":{},"body":{"components/ExpenseListComponent.html":{},"index.html":{}}}],["val?.tolowercase().trim",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1967,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["validates",{"_index":786,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validation",{"_index":776,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["validators.max(100000000",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(100",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["valign",{"_index":1848,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2494,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["value.split",{"_index":2602,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":2595,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":885,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["value}\\n",{"_index":1299,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":260,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":3377,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3544,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1667,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":3643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":3178,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["via",{"_index":2036,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"index.html":{}}}],["vibe",{"_index":1332,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":2823,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":1198,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('editorcontainer",{"_index":1536,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":1539,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('searchinput",{"_index":3065,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":2798,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["viewtype",{"_index":2259,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":2534,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":2535,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["visible",{"_index":1021,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":3371,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visual",{"_index":714,"title":{},"body":{"components/BudgetComponent.html":{}}}],["visualizes",{"_index":3480,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2178,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":3168,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["v{{appversion",{"_index":2088,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["w",{"_index":3222,"title":{},"body":{"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["w+)(\\s*=\\s",{"_index":3218,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":938,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":1134,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["warning)defaults",{"_index":3286,"title":{},"body":{"injectables/ToastService.html":{}}}],["way",{"_index":2955,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":2182,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":2611,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":1027,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["weekday",{"_index":1031,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":977,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekly",{"_index":3294,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":1461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["whenever",{"_index":3050,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["white",{"_index":1505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["whole",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('beforeinstallprompt",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["window.innerwidth",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["window.localstorage",{"_index":660,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window.location.href.includes(\"exwise",{"_index":1705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.location.href.includes(\"localhost",{"_index":1704,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.settimeout(async",{"_index":1598,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1803,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1811,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window:resize",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize(event",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["wise",{"_index":3479,"title":{},"body":{"index.html":{}}}],["wisely",{"_index":3448,"title":{},"body":{"index.html":{}}}],["within",{"_index":721,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{}}}],["without",{"_index":670,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["wordbasedsuggestions",{"_index":3189,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":3173,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["workbook",{"_index":1871,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["worker",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":3579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":3522,"title":{},"body":{"index.html":{}}}],["worksheet",{"_index":1880,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["wrap",{"_index":2508,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":2512,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wraps",{"_index":1865,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":2301,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xlsx",{"_index":1749,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["xlsx.utils.aoa_to_sheet(aoa",{"_index":1881,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_append_sheet(workbook",{"_index":1882,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_new",{"_index":1872,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.writefile(workbook",{"_index":1884,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xs",{"_index":3266,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["year",{"_index":1002,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["yearly",{"_index":2267,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["years",{"_index":3494,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":898,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1834,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["yyyy",{"_index":986,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":2616,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["zip",{"_index":1390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":3345,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":3341,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":3346,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":1636,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":1389,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":1553,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":3446,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2291,"title":{},"body":{"components/GraphsComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0), Validators.max(100000000)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n\n                \n                    Amount cannot exceed 100,000,000\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount cannot exceed 100,000,000                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for AI interaction using Gemini API.\nFeatures:\n\nAccepts user input.\nSends input to Gemini API for processing.\nConverts AI Markdown response to sanitized HTML for display.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor to inject services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles AI requests.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular sanitizer for safe HTML rendering.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends the user input to the Gemini API.\n\nIgnores input shorter than 2 characters.\nConverts returned Markdown to sanitized HTML.\n\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:30\n                        \n                    \n\n            \n                \n                    AI response rendered as sanitized HTML\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:27\n                        \n                    \n\n            \n                \n                    User input from the text box\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n/**\n * Component for AI interaction using Gemini API.\n * \n * Features:\n * - Accepts user input.\n * - Sends input to Gemini API for processing.\n * - Converts AI Markdown response to sanitized HTML for display.\n */\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n\n  /** User input from the text box */\n  userInput = '';\n\n  /** AI response rendered as sanitized HTML */\n  responseHtml: SafeHtml | null = null;\n\n  /**\n   * Constructor to inject services.\n   * \n   * @param geminiApi Service that handles AI requests.\n   * @param sanitizer Angular sanitizer for safe HTML rendering.\n   */\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Sends the user input to the Gemini API.\n   * - Ignores input shorter than 2 characters.\n   * - Converts returned Markdown to sanitized HTML.\n   */\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                                GlobalLoaderComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                CalendarComponent\n                                AiComponent\n                                MusicComponent\n                                InstallAppPopupComponentComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                deferredPrompt\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMobile\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                showInstallButton\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                installApp\n                            \n                            \n                                isAppUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, sectionService: SectionService, storageService: StorageService, router: Router, postApiService: PostApiService, toastService: ToastService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:75\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Local storage schema sync service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router to track route changes\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying toast notifications\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installApp\n                        \n                    \n                \n            \n            \n                \ninstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Triggers the PWA installation prompt if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppUpdated\n                        \n                    \n                \n            \n            \n                \nisAppUpdated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Checks if the application is updated.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the app is updated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:50\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deferredPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n            \n                \n                     PWA installation prompt event\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:60\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:55\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInstallButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:75\n                        \n                    \n\n            \n                \n                     Flag to control the display of the installation prompt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:92\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { ToastComponent } from './shared/toast/toast.component';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { AddExpenseComponent } from './features/add-expense/add-expense.component';\nimport { SettingsComponent } from './features/settings/settings.component';\nimport { ListExpensesComponent } from './features/list-expenses/list-expenses.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CalendarComponent } from './features/calendar/calendar.component';\nimport { BudgetComponent } from './features/budget/budget.component';\nimport { AiComponent } from './features/ai/ai.component';\nimport { MusicComponent } from './features/music/music.component';\nimport { InstallAppPopupComponentComponent } from './component/install-app-popup-component/install-app-popup-component.component';\n\nimport { StorageService } from './service/localStorage/storage.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { SectionService } from './service/section/section.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\nimport { ToastService } from './service/toast/toast.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent,\n    GlobalLoaderComponent, CommonModule, AddExpenseComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent, CalendarComponent, AiComponent, MusicComponent, InstallAppPopupComponentComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   *  PWA installation prompt event\n   */\n  deferredPrompt: any;\n\n  /**\n   *  Flag to control the display of the installation prompt\n   */\n  showInstallButton = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param sectionService Service to track current section changes\n   * @param storageService Local storage schema sync service\n   * @param router Angular Router to track route changes\n   * @param postApiService Backend API post service\n   * @param swUpdate Service Worker update manager\n   * @param platformId Angular platform ID to check if running in browser\n   * @param toastService Service for displaying toast notifications\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private sectionService: SectionService,\n    private storageService: StorageService,\n    private router: Router,\n    private postApiService: PostApiService,\n    private toastService: ToastService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n\n    // Track route changes to detect page-specific routes\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        const url = event.urlAfterRedirects || event.url;\n        this.isExpenseRoute = url === '/';\n        this.isMusicRoute = url.startsWith('/music');\n      });\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth  {\n        this.loader.hide();\n      }, 500);\n\n      // Sync schema for stored data\n      this.storageService.syncCategoriesWithSchema();\n      this.storageService.syncExpensesWithSchema();\n      this.storageService.syncUserWithSchema();\n      this.storageService.syncBudgetWithSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n\n      // Show update toast if app is not updated\n      if (!this.isAppUpdated()) {\n        setTimeout(() => {\n          this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n        }, 500);\n      }\n\n      // Listen for PWA installation prompt\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.deferredPrompt = event;\n        this.showInstallButton = true;\n      });\n    }\n  }\n\n  /**\n   * Event listener for window resize to update mobile view detection.\n   * @param event Resize event object\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = event.target.innerWidth ('is_app_updated') ?? false;\n  }\n\n  /**\n   * Triggers the PWA installation prompt if available.\n   */\n  installApp() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt();\n      this.deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.showInstallButton = false;\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n        this.deferredPrompt = null;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n    \n      \n      \n        \n          \n          \n            \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n    \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a budget entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget amount (rounded to 2 decimal places).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the budget.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BudgetComponent.html":{"url":"components/BudgetComponent.html","title":"component - BudgetComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/budget/budget.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for managing budget creation, editing, progress tracking,\nand displaying insights such as average spending per day.\nFeatures:\n\nAdd, edit, and delete budget records stored in LocalStorage.\nCalculate budget progress, remaining amount, and daily spending suggestions.\nProvide visual progress bar with dynamic colors and animated percentage.\nIntegrates with ExpenseService to calculate expenses within the budget period.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-budget\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./budget.component.html\n            \n\n\n\n            \n                styleUrl\n                ./budget.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedBudgetProgress\n                            \n                            \n                                avgAllowedPerDay\n                            \n                            \n                                avgSpentPerDay\n                            \n                            \n                                budgetColorClass\n                            \n                            \n                                budgetForm\n                            \n                            \n                                budgetMessage\n                            \n                            \n                                budgetProgress\n                            \n                            \n                                budgets\n                            \n                            \n                                currency\n                            \n                            \n                                displayedPercentage\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                isEditMode\n                            \n                            \n                                latestBudget\n                            \n                            \n                                showBudgetSection\n                            \n                            \n                                showModal\n                            \n                            \n                                suggestedPerDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animatePercentage\n                            \n                            \n                                calculateBudgetProgress\n                            \n                            \n                                closeModal\n                            \n                            \n                                createForm\n                            \n                            \n                                deleteBudget\n                            \n                            \n                                loadBudgets\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, budgetService: BudgetService, toastService: ToastService, fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/budget/budget.component.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving expenses from LocalStorage.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for creating, updating, and deleting budgets.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying success/error notifications.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder for constructing the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving user-specific settings (currency, theme).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animatePercentage\n                        \n                    \n                \n            \n            \n                \nanimatePercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:310\n                        \n                    \n\n\n            \n                \n                        Smoothly animates the budget percentage counter\nfrom 0 to the calculated progress value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBudgetProgress\n                        \n                    \n                \n            \n            \n                \ncalculateBudgetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:245\n                        \n                    \n\n\n            \n                \n                        Calculates budget usage statistics including:\n\nTotal spent amount in the budget period.\nRemaining budget.\nProgress percentage.\nSuggested per-day spending.\n\nAlso updates UI elements such as progress bar color and budget message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Closes the add/edit budget modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Creates and returns the reactive budget form with validation rules.\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                FormGroup instance with controls for amount, fromDate, and toDate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBudget\n                        \n                    \n                \n            \n            \n                \ndeleteBudget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:331\n                        \n                    \n\n\n            \n                \n                        Deletes the latest budget after user confirmation\nand updates the budget list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBudgets\n                        \n                    \n                \n            \n            \n                \nloadBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:226\n                        \n                    \n\n\n            \n                \n                        Loads all budgets from LocalStorage and sets the latest budget\nas the active budget for progress calculations.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after component initialization.\nLoads existing budgets and initializes the budget section if data exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Handles form submission for adding or updating a budget.\nValidates input, updates LocalStorage, and refreshes the budget list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Opens the modal for editing the latest budget.\nPre-fills the form with the latest budget's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Opens the modal for adding a new budget.\nResets the form and disables edit mode.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedBudgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:102\n                        \n                    \n\n            \n                \n                    Animated progress value used for smooth progress bar transitions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgAllowedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:72\n                        \n                    \n\n            \n                \n                    Average amount allowed to spend per day over the entire budget period.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgSpentPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:77\n                        \n                    \n\n            \n                \n                    Average amount actually spent per day so far in the budget period.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetColorClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bg-green-500'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:62\n                        \n                    \n\n            \n                \n                    CSS class for the progress bar color (changes dynamically based on usage).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:31\n                        \n                    \n\n            \n                \n                    Reactive form group to handle budget input fields (amount, fromDate, toDate).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:67\n                        \n                    \n\n            \n                \n                    Text message summarizing budget usage and remaining amount.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:57\n                        \n                    \n\n            \n                \n                    Percentage of the budget spent, between 0 and 100.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of all stored budgets fetched from the BudgetService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:92\n                        \n                    \n\n            \n                \n                    User's preferred currency symbol or code (retrieved from UserService).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:107\n                        \n                    \n\n            \n                \n                    Animated percentage value displayed as the budget percentage increases smoothly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:97\n                        \n                    \n\n            \n                \n                    Whether dark mode is enabled in the UI (based on user settings).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:87\n                        \n                    \n\n            \n                \n                    Indicates whether the modal is currently in \"edit\" mode (true) or \"add\" mode (false).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latestBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:52\n                        \n                    \n\n            \n                \n                    Stores the latest budget entry (most recent in the list).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBudgetSection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:47\n                        \n                    \n\n            \n                \n                    Controls the visibility of the main budget section on the UI.\nBecomes true if at least one budget exists.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:41\n                        \n                    \n\n            \n                \n                    Controls the visibility of the add/edit budget modal dialog.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:82\n                        \n                    \n\n            \n                \n                    Suggested daily spending for the remaining days to stay within budget.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { Budget, BudgetService } from '../../service/localStorage/budget.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Component responsible for managing budget creation, editing, progress tracking,\n * and displaying insights such as average spending per day.\n *\n * Features:\n * - Add, edit, and delete budget records stored in LocalStorage.\n * - Calculate budget progress, remaining amount, and daily spending suggestions.\n * - Provide visual progress bar with dynamic colors and animated percentage.\n * - Integrates with ExpenseService to calculate expenses within the budget period.\n */\n@Component({\n  selector: 'app-budget',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule],\n  templateUrl: './budget.component.html',\n  styleUrl: './budget.component.css'\n})\nexport class BudgetComponent implements OnInit {\n\n  /**\n   * Reactive form group to handle budget input fields (amount, fromDate, toDate).\n   */\n  budgetForm: FormGroup;\n\n  /**\n   * Array of all stored budgets fetched from the BudgetService.\n   */\n  budgets: Budget[] = [];\n\n  /**\n   * Controls the visibility of the add/edit budget modal dialog.\n   */\n  showModal = false;\n\n  /**\n   * Controls the visibility of the main budget section on the UI.\n   * Becomes true if at least one budget exists.\n   */\n  showBudgetSection = false;\n\n  /**\n   * Stores the latest budget entry (most recent in the list).\n   */\n  latestBudget!: Budget;\n\n  /**\n   * Percentage of the budget spent, between 0 and 100.\n   */\n  budgetProgress = 0;\n\n  /**\n   * CSS class for the progress bar color (changes dynamically based on usage).\n   */\n  budgetColorClass = 'bg-green-500';\n\n  /**\n   * Text message summarizing budget usage and remaining amount.\n   */\n  budgetMessage = '';\n\n  /**\n   * Average amount allowed to spend per day over the entire budget period.\n   */\n  avgAllowedPerDay = 0;\n\n  /**\n   * Average amount actually spent per day so far in the budget period.\n   */\n  avgSpentPerDay = 0;\n\n  /**\n   * Suggested daily spending for the remaining days to stay within budget.\n   */\n  suggestedPerDay = 0;\n\n  /**\n   * Indicates whether the modal is currently in \"edit\" mode (true) or \"add\" mode (false).\n   */\n  isEditMode = false;\n\n  /**\n   * User's preferred currency symbol or code (retrieved from UserService).\n   */\n  currency: string | null;\n\n  /**\n   * Whether dark mode is enabled in the UI (based on user settings).\n   */\n  isDarkMode: boolean = false;\n\n  /**\n   * Animated progress value used for smooth progress bar transitions.\n   */\n  animatedBudgetProgress = 0;\n\n  /**\n   * Animated percentage value displayed as the budget percentage increases smoothly.\n   */\n  displayedPercentage = 0;\n\n  /**\n   * Creates an instance of BudgetComponent.\n   *\n   * @param expenseService Service for retrieving expenses from LocalStorage.\n   * @param budgetService Service for creating, updating, and deleting budgets.\n   * @param toastService Service for displaying success/error notifications.\n   * @param fb Angular FormBuilder for constructing the reactive form.\n   * @param userService Service for retrieving user-specific settings (currency, theme).\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private budgetService: BudgetService,\n    private toastService: ToastService,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) {\n    // Load user currency preference\n    this.currency = this.userService.getValue('currency');\n\n    // Initialize the reactive form\n    this.budgetForm = this.createForm();\n\n    // Check and apply theme settings\n    const savedTheme = this.userService.getValue('theme_mode') ?? 'light';\n    if (savedTheme === 'dark') {\n      this.isDarkMode = true;\n    }\n    else {\n      this.isDarkMode = false;\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after component initialization.\n   * Loads existing budgets and initializes the budget section if data exists.\n   */\n  ngOnInit(): void {\n    this.loadBudgets();\n  }\n\n  /**\n   * Creates and returns the reactive budget form with validation rules.\n   *\n   * @returns FormGroup instance with controls for amount, fromDate, and toDate.\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      fromDate: ['', Validators.required],\n      toDate: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Opens the modal for adding a new budget.\n   * Resets the form and disables edit mode.\n   */\n  openModal(): void {\n    this.budgetForm.reset();\n    this.isEditMode = false;\n    this.showModal = true;\n  }\n\n  /**\n   * Opens the modal for editing the latest budget.\n   * Pre-fills the form with the latest budget's data.\n   */\n  openEditModal(): void {\n    this.isEditMode = true;\n    this.showModal = true;\n    this.budgetForm.patchValue({\n      amount: this.latestBudget.amount,\n      fromDate: this.latestBudget.fromDate,\n      toDate: this.latestBudget.toDate,\n    });\n  }\n\n  /**\n   * Closes the add/edit budget modal.\n   */\n  closeModal(): void {\n    this.showModal = false;\n  }\n\n  /**\n   * Handles form submission for adding or updating a budget.\n   * Validates input, updates LocalStorage, and refreshes the budget list.\n   */\n  onSubmit(): void {\n    if (this.budgetForm.invalid) {\n      this.budgetForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.budgetForm.value;\n\n    try {\n      if (this.isEditMode) {\n        this.budgetService.update(this.latestBudget.budget_id, data);\n        this.toastService.show('Budget updated successfully!', 'success');\n      } else {\n        this.budgetService.add(data);\n        this.toastService.show('Budget added successfully!', 'success');\n      }\n\n      this.loadBudgets();\n      this.closeModal();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error saving budget.', 'error');\n    }\n  }\n\n  /**\n   * Loads all budgets from LocalStorage and sets the latest budget\n   * as the active budget for progress calculations.\n   */\n  loadBudgets(): void {\n    this.budgets = this.budgetService.getAll();\n    this.showBudgetSection = this.budgets.length > 0;\n\n    if (this.showBudgetSection) {\n      this.latestBudget = this.budgets[this.budgets.length - 1];\n      this.calculateBudgetProgress();\n    }\n  }\n\n  /**\n   * Calculates budget usage statistics including:\n   * - Total spent amount in the budget period.\n   * - Remaining budget.\n   * - Progress percentage.\n   * - Suggested per-day spending.\n   *\n   * Also updates UI elements such as progress bar color and budget message.\n   */\n  calculateBudgetProgress(): void {\n    const totalBudget = parseFloat(this.latestBudget.amount.toString());\n    const fromDate = new Date(this.latestBudget.fromDate);\n    const toDate = new Date(this.latestBudget.toDate);\n\n    // Filter expenses within the budget date range\n    const expenses: Expense[] = this.expenseService.getAll();\n    const expensesInRange = expenses.filter((exp: any) => {\n      const date = new Date(exp.date);\n      return date >= fromDate && date  sum + parseFloat(exp.amount), 0);\n    const percentage = Math.min((spent / totalBudget) * 100, 100);\n    const remaining = Math.max(totalBudget - spent, 0);\n\n    // Update progress values\n    this.budgetProgress = percentage;\n    this.animatedBudgetProgress = 0;\n    this.displayedPercentage = 0;\n\n    // Trigger animation after a small delay\n    setTimeout(() => {\n      this.animatedBudgetProgress = this.budgetProgress;\n    }, 100);\n\n    // Animate the percentage counter\n    this.animatePercentage();\n\n    // Dynamically change progress bar color based on usage\n    if (percentage > 80) this.budgetColorClass = 'bg-red-500';\n    else if (percentage > 50) this.budgetColorClass = 'bg-yellow-500';\n    else if (percentage > 30) this.budgetColorClass = 'bg-blue-500';\n    else this.budgetColorClass = 'bg-green-500';\n\n    // Generate budget status message\n    if (spent > totalBudget) {\n      this.budgetMessage =\n        `⚠️ You have exceeded your budget! You spent ${this.currency}${spent.toFixed(2)} ` +\n        `which is ${this.currency}${(spent - totalBudget).toFixed(2)} over the limit set ` +\n        `between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 😰`;\n    } else {\n      this.budgetMessage =\n        `✅ You have spent ${this.currency}${spent.toFixed(2)} out of ` +\n        `${this.currency}${totalBudget.toFixed(2)} between ` +\n        `${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 💸 Remaining: ` +\n        `${this.currency}${remaining.toFixed(2)}`;\n    }\n\n    // Calculate average daily insights\n    const totalDays = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n    const today = new Date();\n    const elapsedDays = Math.max(Math.ceil((today.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)), 1);\n    const remainingDays = Math.max(totalDays - elapsedDays, 1);\n\n    this.avgAllowedPerDay = totalBudget / totalDays;\n    this.avgSpentPerDay = spent / elapsedDays;\n    this.suggestedPerDay = remaining / remainingDays;\n  }\n\n  /**\n   * Smoothly animates the budget percentage counter\n   * from 0 to the calculated progress value.\n   */\n  animatePercentage(): void {\n    const duration = 800;\n    const steps = 40;\n    const increment = this.budgetProgress / steps;\n    let currentStep = 0;\n\n    const interval = setInterval(() => {\n      currentStep++;\n      this.displayedPercentage = +(increment * currentStep).toFixed(1);\n\n      if (currentStep >= steps) {\n        this.displayedPercentage = +this.budgetProgress.toFixed(1);\n        clearInterval(interval);\n      }\n    }, duration / steps);\n  }\n\n  /**\n   * Deletes the latest budget after user confirmation\n   * and updates the budget list.\n   */\n  deleteBudget(): void {\n    if (confirm('Are you sure you want to delete this budget?')) {\n      this.budgetService.delete(this.latestBudget.budget_id);\n      this.toastService.show('Budget deleted successfully', 'success');\n      this.closeModal();\n    }\n    this.loadBudgets();\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            💰 Budget Progress\n            \n                \n\n                    \n                        {{ displayedPercentage.toFixed(1) }}%\n                    \n\n                \n            \n\n            \n                {{ budgetMessage }}\n            \n\n            \n                \n                    Avg Allowed / Day\n                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}\n                \n                \n                    Spent / Day\n                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}\n                \n                \n                    Suggested / Day\n                    {{currency}}{{ suggestedPerDay.toFixed(2) }}\n                \n            \n        \n        \n            \n                \n                    Update\n                \n                \n                    Delete\n                \n            \n        \n\n    \n\n    \n    \n        \n            \n            \n                \n            \n\n            \n            \n                \n            \n            \n                ➕ Add Budget\n            \n        \n    \n\n    \n    \n        \n            \n                \n                    {{ isEditMode ? 'Update Budget' : 'Add Budget' }}\n                \n\n                &times;\n            \n            \n                Amount\n                \n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n                From Date\n                \n                \n                    From Date is required\n                \n                To Date\n                \n                \n                    To Date is required\n                \n                \n                    Cancel\n                    Save\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            💰 Budget Progress                                                                        {{ displayedPercentage.toFixed(1) }}%                                                                            {{ budgetMessage }}                                                            Avg Allowed / Day                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}                                                    Spent / Day                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}                                                    Suggested / Day                    {{currency}}{{ suggestedPerDay.toFixed(2) }}                                                                                            Update                                                    Delete                                                                                                                                                                                            ➕ Add Budget                                                                                        {{ isEditMode ? \\'Update Budget\\' : \\'Add Budget\\' }}                                ×                                        Amount                                                    Amount cannot be negative                                                    Amount is required                                From Date                                                    From Date is required                                To Date                                                    To Date is required                                                    Cancel                    Save                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BudgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing budgets in local storage.\nProvides methods to add, update, delete, and fetch budgets,\nwhile ensuring data is only accessed in the browser environment.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllBudgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Adds a new budget entry to local storage.\nAutomatically generates a unique budget_id and rounds the amount to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The budget data (without budget_id) to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Deletes a budget entry from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets stored in local storage.\n\n\n                        \n                            Returns :         Budget[]\n\n                        \n                            \n                                A list of all saved budgets, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Updates an existing budget entry in local storage.\nMatches by budget_id and merges with the provided data.\nThe amount is always rounded to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial budget fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllBudgets\n                        \n                    \n                \n            \n            \n                \nupdateAllBudgets(budgets: Budget[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Replaces all budgets in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                            Budget[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that renders a monthly calendar view with expense tracking.\nFeatures:\n\nDisplays days of the current month with previous/next month padding.\nHighlights today’s date.\nCalculates total expenses per month and per day.\nOpens modal to view daily expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of CalendarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve expenses from local storage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user settings such as currency.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Calculates the total expenses for a given date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date (YYYY-MM-DD)\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Changes the calendar month by a specified offset.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of months to change (positive or negative)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Closes the daily expenses modal and clears modal data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that initializes the calendar view\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Opens the modal to show expenses for a specific day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date string (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Renders the calendar for a given year and month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Year to render\n\n                                            \n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Month to render (0-11)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of calendar day objects for rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:30\n                        \n                    \n\n            \n                \n                    Calendar header title (e.g., \"September 2025\")\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:48\n                        \n                    \n\n            \n                \n                    Currency symbol from user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:27\n                        \n                    \n\n            \n                \n                    Current month of the calendar (0-11)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n            \n                \n                    Current year of the calendar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:45\n                        \n                    \n\n            \n                \n                    List of expenses for the selected day in the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:42\n                        \n                    \n\n            \n                \n                    Title of the modal showing daily expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:39\n                        \n                    \n\n            \n                \n                    Whether the daily expense modal is visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n            \n                \n                    Total expenses in the current month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:61\n                        \n                    \n\n            \n                \n                    Service to retrieve user settings such as currency.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                        \n                    \n\n            \n                \n                    Weekday labels\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Component that renders a monthly calendar view with expense tracking.\n *\n * Features:\n * - Displays days of the current month with previous/next month padding.\n * - Highlights today’s date.\n * - Calculates total expenses per month and per day.\n * - Opens modal to view daily expenses.\n */\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\nexport class CalendarComponent implements OnInit {\n\n  /** Current year of the calendar */\n  currentYear = new Date().getFullYear();\n\n  /** Current month of the calendar (0-11) */\n  currentMonth = new Date().getMonth();\n\n  /** Calendar header title (e.g., \"September 2025\") */\n  calendarTitle = '';\n\n  /** Total expenses in the current month */\n  totalExpenses = 0;\n\n  /** Array of calendar day objects for rendering */\n  calendarDays: any[] = [];\n\n  /** Whether the daily expense modal is visible */\n  showModal = false;\n\n  /** Title of the modal showing daily expenses */\n  modalTitle = '';\n\n  /** List of expenses for the selected day in the modal */\n  modalExpenses: any[] = [];\n\n  /** Currency symbol from user settings */\n  currency: string | null;\n\n  /** Weekday labels */\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  /**\n   * Creates an instance of CalendarComponent.\n   *\n   * @param expenseService Service to retrieve expenses from local storage.\n   * @param userService Service to retrieve user settings such as currency.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /** Angular lifecycle hook that initializes the calendar view */\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Changes the calendar month by a specified offset.\n   *\n   * @param offset Number of months to change (positive or negative)\n   */\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Renders the calendar for a given year and month.\n   *\n   * @param year Year to render\n   * @param month Month to render (0-11)\n   */\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Render previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Render current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  /**\n   * Opens the modal to show expenses for a specific day.\n   *\n   * @param dateStr Date string (YYYY-MM-DD)\n   */\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  /**\n   * Closes the daily expenses modal and clears modal data.\n   */\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a category used to group expenses.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category (e.g., hex or CSS color).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of expenses linked to this category.\n(This is a computed field and not part of the stored table.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon representing the category (e.g., from an icon set).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the category is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display name of the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user ID that owns this category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing categories in local storage.\nProvides methods to create, read, update, delete, and sort categories,\nensuring data consistency with associated expenses.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle local storage operations.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user-related values (like user ID).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Adds a new category to local storage.\nGenerates a unique category_id and associates it with the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Category data excluding category_id and user_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Deletes a category from local storage by its ID.\nIf the category does not exist, a warning is logged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from local storage.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                List of all categories, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories sorted by the number of expenses assigned to each.\nIf two categories have the same count, they are sorted alphabetically by name.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                Sorted list of categories with expense counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment\nwith localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Updates an existing category in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial category fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllCategories\n                        \n                    \n                \n            \n            \n                \nupdateAllCategories(categories: Category[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Replaces all categories in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                            Category[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of categories to store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ChatMessage interface\nRepresents a single message exchanged between the user and the model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text content of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role of the message sender (user or model).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appName\n                            \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                            \n                                    Private\n                                    Readonly\n                                liveAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                localAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                            \n                                getAppName\n                            \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/config/config.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL depending on the environment.\n\n\"local\" → http://localhost:8000\n\"live\" → https://exwiseapi.onrender.com\nAny other value → Determines based on current window location.\nIf the URL contains \"localhost\", returns http://localhost:8000.\nIf the URL contains \"exwise\", returns https://exwiseapi.onrender.com.\nDefaults to http://localhost:8000 if none of the above conditions are met.\n\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Returns the application name defined in environment settings.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The application name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:24\n                        \n                    \n\n            \n                \n                    The application name, retrieved from environment settings.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:19\n                        \n                    \n\n            \n                \n                    The current environment setting taken from environment configuration.\nPossible values:\n\n\"local\" → Uses localhost API endpoint.\n\"live\" → Uses production API endpoint.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        liveAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.liveAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:36\n                        \n                    \n\n            \n                \n                    The production (live) API base URL.\nExample: https://exwiseapi.onrender.com\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        localAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.localAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:43\n                        \n                    \n\n            \n                \n                    The local development API base URL.\nExample: http://localhost:8000\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:29\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting taken from environment configuration.\n   * \n   * Possible values:\n   * - `\"local\"` → Uses localhost API endpoint.\n   * - `\"live\"` → Uses production API endpoint.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n\n  /** \n   * The application name, retrieved from environment settings. \n   */\n  private readonly appName: string = environment.appName;\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  private readonly liveAPIUrl: string = environment.liveAPIUrl;\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  private readonly localAPIUrl: string = environment.localAPIUrl;\n\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL depending on the environment.\n   *\n   * - `\"local\"` → `http://localhost:8000`\n   * - `\"live\"` → `https://exwiseapi.onrender.com`\n   * - Any other value → Determines based on current window location.\n   * - If the URL contains `\"localhost\"`, returns `http://localhost:8000`.\n   * - If the URL contains `\"exwise\"`, returns `https://exwiseapi.onrender.com`.\n   * - Defaults to `http://localhost:8000` if none of the above conditions are met.\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return this.localAPIUrl;\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return this.liveAPIUrl;\n    }\n    else {\n      if (window.location.href.includes(\"localhost\")) {\n        return this.localAPIUrl;\n      }\n      else if (window.location.href.includes(\"exwise\")) {\n        return this.liveAPIUrl;\n      }\n      return this.localAPIUrl;\n    }\n  }\n\n  /**\n   * Returns the application name defined in environment settings.\n   *\n   * @returns {string} The application name.\n   */\n  getAppName(): string {\n    return this.appName;\n  }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadComponentComponent.html":{"url":"components/DownloadComponentComponent.html","title":"component - DownloadComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DownloadComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/download-component/download-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for exporting user expenses\ninto JSON, PDF, or Excel formats within a given date range.\nThis component provides a modal dialog with a form\nto select a date range and file type, validates the input,\nand triggers the download of filtered expense data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-component\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            ReactiveFormsModule\n                                FormModelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./download-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                downloadDataForm\n                            \n                            \n                                showDownloadDataModal\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDownloadDataModal\n                            \n                            \n                                confirmAndDownload\n                            \n                            \n                                downloadData\n                            \n                            \n                                    Private\n                                exportToExcel\n                            \n                            \n                                    Private\n                                exportToPDF\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDownloadDataModal\n                            \n                            \n                                    Private\n                                triggerDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, fb: FormBuilder, toastService: ToastService, categoryService: CategoryService, userService: UserService, budgetService: BudgetService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadComponentComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch and filter expenses.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder to build the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch category data.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch user data.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch budget data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDownloadDataModal\n                        \n                    \n                \n            \n            \n                \ncloseDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Closes the download modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmAndDownload\n                        \n                    \n                \n            \n            \n                \nconfirmAndDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Validates date range and triggers the appropriate\nexport function (JSON, PDF, Excel) based on user selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadData\n                        \n                    \n                \n            \n            \n                \ndownloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Validates the form before triggering data download.\nMarks all controls as touched if the form is invalid.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToExcel(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:302\n                        \n                    \n\n\n            \n                \n                        Exports expense data to an Excel file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToPDF\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToPDF(data: any[], fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Exports expense data to a formatted PDF file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date of the report.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date of the report.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the form\nwith default controls and validators.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDownloadDataModal\n                        \n                    \n                \n            \n            \n                \nopenDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Opens the modal and resets the download form\nto its initial state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        triggerDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerDownload(content: string, mimeType: string, extension: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Creates a file blob and triggers the browser to download it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File content to download.\n\n                                            \n                                        \n                                        \n                                                mimeType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    MIME type of the file.\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File extension (json, pdf, xlsx).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadDataForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:56\n                        \n                    \n\n            \n                \n                    Reactive form instance for selecting date range and file type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDownloadDataModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:61\n                        \n                    \n\n            \n                \n                    Controls the visibility of the download data modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                        \n                    \n\n            \n                \n                    Current date in yyyy-MM-dd format,\nused for validation to prevent future dates.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n\n    \n        From Date\n        \n        \n            From Date is required\n        \n\n        To Date\n        \n\n        \n            To Date is required\n        \n\n        File Type\n        \n            JSON\n            PDF\n            EXCEL\n        \n\n        \n            Cancel\n            Download\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                From Date                            From Date is required                To Date                            To Date is required                File Type                    JSON            PDF            EXCEL                            Cancel            Download            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an expense entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense amount\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category color (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category icon (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category ID associated with this expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category name (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the expense in YYYY-MM-DD format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this is extra spending\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional location of the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional note about the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Payment mode used for the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the expense in HH:MM:SS format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal component for displaying and editing expense details.\nFeatures:\n\nShows details of a selected expense.\nSupports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\nEmits events to parent components for closing, deleting, or editing expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseDetailsModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder service for building reactive forms.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Currency symbol to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:30\n                            \n                        \n                \n                    \n                        Whether the edit mode is currently open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:24\n                            \n                        \n                \n                    \n                        The currently selected expense object\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when the modal should be closed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:36\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense should be deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:39\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense has been edited\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Emits the closeModal event to notify parent to close the modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the reactive edit form with default or selected expense values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Updates the form when a new category is selected from the dropdown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Emits the delete event with the selected expense ID\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Submits the edited expense if the form is valid.\nEmits the edit event with the updated expense data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Toggles the edit mode of the modal.\nInitializes the form with current expense values if edit mode is opened.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    Form group for editing the expense\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:42\n                        \n                    \n\n            \n                \n                    Name of the currently selected category for editing\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n/**\n * Modal component for displaying and editing expense details.\n *\n * Features:\n * - Shows details of a selected expense.\n * - Supports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\n * - Emits events to parent components for closing, deleting, or editing expenses.\n */\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n\n  /** The currently selected expense object */\n  @Input() selectedExpense: any;\n\n  /** Currency symbol to display in the modal */\n  @Input() currency: string | null = '';\n\n  /** Whether the edit mode is currently open */\n  @Input() isEditOpen: boolean = false;\n\n  /** Event emitted when the modal should be closed */\n  @Output() closeModal = new EventEmitter();\n\n  /** Event emitted when the selected expense should be deleted */\n  @Output() delete = new EventEmitter();\n\n  /** Event emitted when the selected expense has been edited */\n  @Output() edit = new EventEmitter();\n\n  /** Name of the currently selected category for editing */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Form group for editing the expense */\n  editForm!: FormGroup;\n\n  /**\n   * Creates an instance of ExpenseDetailsModalComponent.\n   *\n   * @param fb FormBuilder service for building reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  /** Angular lifecycle hook called on component initialization */\n  ngOnInit(): void {}\n\n  /**\n   * Initializes the reactive edit form with default or selected expense values.\n   */\n  initForm(): void {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  /**\n   * Updates the form when a new category is selected from the dropdown.\n   *\n   * @param category The selected category object.\n   */\n  onCategorySelected(category: any): void {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  /**\n   * Toggles the edit mode of the modal.\n   * Initializes the form with current expense values if edit mode is opened.\n   */\n  toggleEdit(): void {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  /**\n   * Submits the edited expense if the form is valid.\n   * Emits the `edit` event with the updated expense data.\n   */\n  submitEdit(): void {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  /** Emits the `closeModal` event to notify parent to close the modal */\n  close(): void {\n    this.closeModal.emit();\n  }\n\n  /** Emits the `delete` event with the selected expense ID */\n  onDelete(): void {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        ExpenseListComponent\nDisplays a list of expenses with formatted dates and emits\nevents when an expense is selected. Also provides a utility\nto darken colors for styling purposes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseListComponent.\nInitializes the currency to an empty string.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:28\n                            \n                        \n                \n                    \n                        The currency symbol or code to display with expense amounts.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                            \n                        \n                \n                    \n                        The list of expense objects to display.\nEach expense should contain at least a date field.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when an expense is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Darkens a given HEX color by a percentage.\nConverts the color to RGB and decreases brightness.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HEX color string (e.g., #FF0000).\n\n                                            \n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The percentage (0–1) to darken the color.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The darkened color as an RGB string, or the original color on error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Formats the date of an expense into a human-readable string.\nExample: Mon 1st Mar 2025\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object containing a date field.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string with day, suffix, month, and year.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an expense.\nEmits the selected expense via the expenseSelected output.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object that was selected.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * ExpenseListComponent\n *\n * Displays a list of expenses with formatted dates and emits\n * events when an expense is selected. Also provides a utility\n * to darken colors for styling purposes.\n */\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\nexport class ExpenseListComponent {\n  /**\n   * The list of expense objects to display.\n   * Each expense should contain at least a `date` field.\n   */\n  @Input() expenses: any[] = [];\n\n  /**\n   * The currency symbol or code to display with expense amounts.\n   */\n  @Input() currency: string | null;\n\n  /**\n   * Event emitted when an expense is selected.\n   */\n  @Output() expenseSelected = new EventEmitter();\n\n  /**\n   * Creates an instance of ExpenseListComponent.\n   * Initializes the currency to an empty string.\n   */\n  constructor() {\n    this.currency = '';\n  }\n\n  /**\n   * Handles the selection of an expense.\n   * Emits the selected expense via the `expenseSelected` output.\n   *\n   * @param expense The expense object that was selected.\n   */\n  onSelect(expense: any): void {\n    this.expenseSelected.emit(expense);\n  }\n\n  /**\n   * Formats the date of an expense into a human-readable string.\n   * Example: `Mon 1st Mar 2025`\n   *\n   * @param exp The expense object containing a `date` field.\n   * @returns A formatted date string with day, suffix, month, and year.\n   */\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const months = [\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n\n    const dayName = days[date.getDay()];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n\n    const suffix = (d: number): string => {\n      if (d > 3 && d > 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing expenses stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve expenses.\nAutomatically attaches category metadata to each expense.\nSupports searching expenses by date range.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Adds a new expense to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Expense data excluding expense_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Deletes an expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage with category metadata attached.\n\n\n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of formatted {@link Expense} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Retrieves a single expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                The expense object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Searches expenses within a date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of expenses within the specified date range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Updates an existing expense by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial data to update the expense with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer component that displays application information such as version.\nFeatures:\n\nRetrieves the app version from ConfigService.\nDisplays static footer content alongside dynamic version info.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of FooterComponent.\nRetrieves the current app version from ConfigService and\nstores it in appVersion for display in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing configuration and version info.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the current application version retrieved from ConfigService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Footer component that displays application information such as version.\n *\n * Features:\n * - Retrieves the app version from {@link ConfigService}.\n * - Displays static footer content alongside dynamic version info.\n */\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n  /**\n   * Stores the current application version retrieved from {@link ConfigService}.\n   */\n  appVersion: string = '';\n\n  /**\n   * Creates an instance of FooterComponent.\n   *\n   * Retrieves the current app version from {@link ConfigService} and\n   * stores it in {@link appVersion} for display in the template.\n   *\n   * @param configService Service providing configuration and version info.\n   */\n  constructor(private configService: ConfigService) {\n    this.appVersion = this.configService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormModelComponent.html":{"url":"components/FormModelComponent.html","title":"component - FormModelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FormModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/form-model/form-model.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable modal component for forms.\nThis component displays a modal with a customizable label\nand provides an output event to notify when the modal is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-model\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./form-model.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-model.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:22\n                            \n                        \n                \n                    \n                        The label text displayed in the form modal.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:30\n                            \n                        \n                \n                    \n                        Event emitted when the modal is closed.\nThe parent component can listen to this event\nto perform actions such as hiding the modal.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModel\n                        \n                    \n                \n            \n            \n                \ncloseModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/form-model/form-model.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Closes the modal and emits the close event.\nThis method is typically called when the user\nclicks a close button or dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * A reusable modal component for forms.\n * \n * This component displays a modal with a customizable label\n * and provides an output event to notify when the modal is closed.\n */\n@Component({\n  selector: 'app-form-model',\n  imports: [],\n  templateUrl: './form-model.component.html',\n  styleUrl: './form-model.component.css'\n})\nexport class FormModelComponent {\n\n  /**\n   * The label text displayed in the form modal.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label!: string;\n\n  /**\n   * Event emitted when the modal is closed.\n   * \n   * The parent component can listen to this event\n   * to perform actions such as hiding the modal.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Closes the modal and emits the `close` event.\n   * \n   * This method is typically called when the user\n   * clicks a close button or dismisses the modal.\n   */\n  closeModel(): void {\n    this.close.emit();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ label }}\n            \n            &times;\n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ label }}                        ×                    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GeminiApiService\nThis service is responsible for communicating with the\nGoogle Gemini API to analyze the user's expense data.\nIt fetches the last 30 days of expenses, generates prompts,\nand retrieves AI-generated insights for the user.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of GeminiApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API requests.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to show/hide global loading indicators.\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch expense data from local storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Generates a structured AI prompt for expense analysis.\nIncludes instructions for the model and the last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s input or question.\n\n                                            \n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of expense objects from the last 30 days.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string prompt ready for Gemini API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Fetches the user's expenses from the last 30 days.\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n\n                        \n                            Returns :     Pick[]\n\n                        \n                            \n                                An array of expense objects with selected fields:\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Sends a prompt to the Gemini API and returns the generated response.\nEnhances the prompt with the user's last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s query or message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A string response from Gemini with analysis or insights.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                        \n                    \n\n            \n                \n                    API URL for the Gemini model including the environment API key.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n/**\n * GeminiApiService\n *\n * This service is responsible for communicating with the\n * Google Gemini API to analyze the user's expense data.\n * It fetches the last 30 days of expenses, generates prompts,\n * and retrieves AI-generated insights for the user.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  /**\n   * API URL for the Gemini model including the environment API key.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of GeminiApiService.\n   *\n   * @param http Angular HttpClient for API requests.\n   * @param globalLoaderService Service to show/hide global loading indicators.\n   * @param expenseService Service to fetch expense data from local storage.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService,\n    private expenseService: ExpenseService\n  ) {}\n\n  /**\n   * Sends a prompt to the Gemini API and returns the generated response.\n   * Enhances the prompt with the user's last 30 days of expenses.\n   *\n   * @param prompt The user’s query or message.\n   * @returns A string response from Gemini with analysis or insights.\n   */\n  async getResponse(prompt: string): Promise {\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  /**\n   * Fetches the user's expenses from the last 30 days.\n   *\n   * @returns An array of expense objects with selected fields:\n   * amount, note, location, date, category_name, payment_mode, isExtraSpending.\n   */\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  /**\n   * Generates a structured AI prompt for expense analysis.\n   * Includes instructions for the model and the last 30 days of expenses.\n   *\n   * @param userQuery The user’s input or question.\n   * @param last15DaysExpenses Array of expense objects from the last 30 days.\n   * @returns A formatted string prompt ready for Gemini API.\n   */\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global loader component to display a full-screen loading indicator.\nFeatures:\n\nShows a loading message with optional custom text.\nCan be controlled globally via GlobalLoaderService.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of GlobalLoaderComponent.\nRegisters this component with the GlobalLoaderService\nto allow global show/hide control.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing the global loader state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional custom message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Loading...'\n                                            \n\n                                            \n                                                    Optional message to display; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates whether the loader is currently visible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                        \n                    \n\n            \n                \n                    Text message displayed on the loader.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Global loader component to display a full-screen loading indicator.\n *\n * Features:\n * - Shows a loading message with optional custom text.\n * - Can be controlled globally via {@link GlobalLoaderService}.\n */\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n\n  /**\n   * Indicates whether the loader is currently visible.\n   */\n  isVisible = false;\n\n  /**\n   * Text message displayed on the loader.\n   */\n  message = '';\n\n  /**\n   * Creates an instance of GlobalLoaderComponent.\n   *\n   * Registers this component with the {@link GlobalLoaderService}\n   * to allow global show/hide control.\n   *\n   * @param globalLoaderService Service for managing the global loader state.\n   */\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  /**\n   * Shows the global loader with an optional custom message.\n   *\n   * @param text Optional message to display; defaults to \"Loading...\".\n   */\n  show(text: string = 'Loading...'): void {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.isVisible = false;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to control the global loading indicator component.\nFeatures:\n\nAllows showing and hiding a global loader with optional custom message.\nConnects with GlobalLoaderComponent to display the loader UI.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Registers the global loader component instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The GlobalLoaderComponent instance to control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                            \n                                                    Optional loading message; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:17\n                        \n                    \n\n            \n                \n                    Reference to the registered global loader component\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n/**\n * Service to control the global loading indicator component.\n *\n * Features:\n * - Allows showing and hiding a global loader with optional custom message.\n * - Connects with {@link GlobalLoaderComponent} to display the loader UI.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  /** Reference to the registered global loader component */\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  /**\n   * Registers the global loader component instance.\n   *\n   * @param component The {@link GlobalLoaderComponent} instance to control.\n   */\n  register(component: GlobalLoaderComponent): void {\n    this.globalLoaderComponent = component;\n  }\n  \n  /**\n   * Shows the global loader with an optional message.\n   *\n   * @param text Optional loading message; defaults to \"Loading...\".\n   */\n  show(text: string = \"Loading...\"): void {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.globalLoaderComponent?.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hamburger menu component for mobile or compact navigation.\nFeatures:\n\nToggles visibility of the menu.\nCloses menu when clicking outside of it.\nShows/hides AI button depending on the current section.\nIntegrates with SectionService to navigate between sections.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of HamburgerMenuComponent.\nSubscribes to SectionService.currentSection$ to manage the\nvisibility of the AI button based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the selected section and closes the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default anchor behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Toggles the hamburger menu open/closed state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Tracks whether the hamburger menu is currently open.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:26\n                        \n                    \n\n            \n                \n                    Determines whether the AI button should be displayed.\nHidden when the current section is 'ai'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Hamburger menu component for mobile or compact navigation.\n *\n * Features:\n * - Toggles visibility of the menu.\n * - Closes menu when clicking outside of it.\n * - Shows/hides AI button depending on the current section.\n * - Integrates with {@link SectionService} to navigate between sections.\n */\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  /**\n   * Determines whether the AI button should be displayed.\n   * Hidden when the current section is 'ai'.\n   */\n  showAIButton = false;\n\n  /**\n   * Tracks whether the hamburger menu is currently open.\n   */\n  isMenuOpen = false;\n\n  /**\n   * Creates an instance of HamburgerMenuComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to manage the\n   * visibility of the AI button based on the current section.\n   *\n   * @param sectionService Service for managing and broadcasting the active section.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n\n  /**\n   * Toggles the hamburger menu open/closed state.\n   */\n  toggleMenu(): void {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  /**\n   * Listens for clicks on the document to close the menu\n   * if the click occurs outside the hamburger menu container.\n   *\n   * @param event The mouse click event.\n   */\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent): void {\n    const clickedInside = event.target instanceof HTMLElement \n      && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  /**\n   * Navigates to the selected section and closes the menu.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default anchor behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstallAppPopupComponentComponent.html":{"url":"components/InstallAppPopupComponentComponent.html","title":"component - InstallAppPopupComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  InstallAppPopupComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that displays a popup prompting the user to install the app as a PWA.\nThis component shows a modal with the app name and an install button when\nshowInstallButton is set to true. It uses the ConfigService to retrieve\nthe application name and emits an event when the user clicks install.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-install-app-popup-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./install-app-popup-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./install-app-popup-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissInstall\n                            \n                            \n                                onClickinstallApp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showInstallButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                installApp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of the install popup component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch configuration values such as the app name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showInstallButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:26\n                            \n                        \n                \n                    \n                        Controls the visibility of the install popup.\nWhen set to true, the popup will be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        installApp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when the user clicks on the \"Install\" button.\nThe parent component can listen to this event to trigger\nthe actual PWA installation flow.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissInstall\n                        \n                    \n                \n            \n            \n                \ndismissInstall()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Dismisses the install popup.\nSets showInstallButton to false, hiding the popup from view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickinstallApp\n                        \n                    \n                \n            \n            \n                \nonClickinstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Handles the click event of the \"Install\" button.\nEmits the installApp event to notify the parent component\nthat the installation process should be triggered.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:32\n                        \n                    \n\n            \n                \n                    The application name fetched from ConfigService.\nDisplayed inside the popup UI.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Component that displays a popup prompting the user to install the app as a PWA.\n * \n * This component shows a modal with the app name and an install button when \n * `showInstallButton` is set to true. It uses the `ConfigService` to retrieve \n * the application name and emits an event when the user clicks install.\n */\n@Component({\n  selector: 'app-install-app-popup-component',\n  imports: [CommonModule],\n  templateUrl: './install-app-popup-component.component.html',\n  styleUrl: './install-app-popup-component.component.css',\n  standalone: true,\n})\nexport class InstallAppPopupComponentComponent {\n\n  /**\n   * Controls the visibility of the install popup.\n   * \n   * When set to true, the popup will be displayed.\n   */\n  @Input() showInstallButton: boolean = false;\n\n  /**\n   * The application name fetched from `ConfigService`.\n   * Displayed inside the popup UI.\n   */\n  appName: string;\n\n  /**\n   * Event emitted when the user clicks on the \"Install\" button.\n   * \n   * The parent component can listen to this event to trigger\n   * the actual PWA installation flow.\n   */\n  @Output() installApp = new EventEmitter();\n\n  /**\n   * Creates an instance of the install popup component.\n   *\n   * @param configService Service to fetch configuration values such as the app name.\n   */\n  constructor(private configService: ConfigService) {\n    this.appName = this.configService.getAppName();\n  }\n\n  /**\n   * Handles the click event of the \"Install\" button.\n   * \n   * Emits the `installApp` event to notify the parent component\n   * that the installation process should be triggered.\n   */\n  onClickinstallApp() {\n    this.installApp.emit();\n  }\n\n  /**\n   * Dismisses the install popup.\n   * \n   * Sets `showInstallButton` to false, hiding the popup from view.\n   */\n  dismissInstall() {\n    this.showInstallButton = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ✕\n\n    \n    Install {{ appName }}\n    \n    \n      Get a seamless experience and offline access by installing this app.\n    \n\n    \n    \n      \n        Install\n      \n      \n        Dismiss\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ✕        Install {{ appName }}              Get a seamless experience and offline access by installing this app.                          Install                    Dismiss            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstallAppPopupComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MusicComponent.html":{"url":"components/MusicComponent.html","title":"component - MusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to search, play, and suggest songs using Saavn API and AI suggestions.\nFeatures:\n\nSearch for songs by query.\nPlay, pause, and track song progress.\nAutomatically suggest next song based on AI suggestion.\nHandles time formatting and seeking within a song.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./music.component.css\n            \n\n\n\n            \n                templateUrl\n                ./music.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                            \n                                audio\n                            \n                            \n                                currentSong\n                            \n                            \n                                duration\n                            \n                            \n                                interval\n                            \n                            \n                                isBrowser\n                            \n                            \n                                progress\n                            \n                            \n                                query\n                            \n                            \n                                songs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                getSongUrl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSeek\n                            \n                            \n                                    Async\n                                onSongFinished\n                            \n                            \n                                playSong\n                            \n                            \n                                searchSong\n                            \n                            \n                                transformSongData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(saavnService: SaavnService, configService: ConfigService, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/music/music.component.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of MusicComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        saavnService\n                                                  \n                                                        \n                                                                        SaavnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Saavn API.\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve application configuration.\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to detect browser/server environment.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Formats seconds into MM:SS string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of seconds\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted time string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongUrl\n                        \n                    \n                \n            \n            \n                \ngetSongUrl(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Returns the highest quality 320kbps download URL of a song.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                URL string or empty string if not available\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:212\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component destruction\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Seeks the audio playback to a specific time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input change event from the seek bar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSongFinished\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSongFinished()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles the end of a song. Suggests the next song using AI and automatically plays it.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(url: string, song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Plays or pauses a song. If a new song is selected, plays it from the beginning.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL of the song to play\n\n                                            \n                                        \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSong\n                        \n                    \n                \n            \n            \n                \nsearchSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Searches for songs based on the current query.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformSongData\n                        \n                    \n                \n            \n            \n                \ntransformSongData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Transforms a song object to the expected format for AI suggestion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Original song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Transformed object with relevant song metadata\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:48\n                        \n                    \n\n            \n                \n                    Current application version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLAudioElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:33\n                        \n                    \n\n            \n                \n                    HTML audio element for playing songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:36\n                        \n                    \n\n            \n                \n                    Currently playing song object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:42\n                        \n                    \n\n            \n                \n                    Total duration of the current song in seconds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:45\n                        \n                    \n\n            \n                \n                    Interval ID for updating song progress\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:51\n                        \n                    \n\n            \n                \n                    Flag to indicate if running in browser environment\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:39\n                        \n                    \n\n            \n                \n                    Progress of the current song in seconds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:27\n                        \n                    \n\n            \n                \n                    Current search query for songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:30\n                        \n                    \n\n            \n                \n                    List of songs retrieved from search results\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal, effect, OnDestroy, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SaavnService } from '../../service/saavan-api/saavan.service';\nimport { ConfigService } from '../../service/config/config.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Component to search, play, and suggest songs using Saavn API and AI suggestions.\n *\n * Features:\n * - Search for songs by query.\n * - Play, pause, and track song progress.\n * - Automatically suggest next song based on AI suggestion.\n * - Handles time formatting and seeking within a song.\n */\n@Component({\n  selector: 'app-music',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './music.component.html',\n  styleUrls: ['./music.component.css']\n})\nexport class MusicComponent implements OnDestroy {\n\n  /** Current search query for songs */\n  query = '';\n\n  /** List of songs retrieved from search results */\n  songs = signal([]);\n\n  /** HTML audio element for playing songs */\n  audio: HTMLAudioElement | null = null;\n\n  /** Currently playing song object */\n  currentSong: any = null;\n\n  /** Progress of the current song in seconds */\n  progress = signal(0);\n\n  /** Total duration of the current song in seconds */\n  duration = signal(0);\n\n  /** Interval ID for updating song progress */\n  interval: any = null;\n\n  /** Current application version */\n  appVersion: string;\n\n  /** Flag to indicate if running in browser environment */\n  isBrowser: boolean;\n\n  /**\n   * Creates an instance of MusicComponent.\n   *\n   * @param saavnService Service to interact with Saavn API.\n   * @param configService Service to retrieve application configuration.\n   * @param platformId Angular platform ID to detect browser/server environment.\n   */\n  constructor(\n    private saavnService: SaavnService,\n    private configService: ConfigService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.appVersion = this.configService.getVersion();\n    this.isBrowser = isPlatformBrowser(this.platformId);\n  }\n\n  /**\n   * Searches for songs based on the current query.\n   */\n  searchSong(): void {\n    const q = this.query.trim();\n    if (q) {\n      this.saavnService.searchSongs(q).subscribe((res) => {\n        this.songs.set(res.data.results || []);\n      });\n    }\n  }\n\n  /**\n   * Returns the highest quality 320kbps download URL of a song.\n   *\n   * @param song Song object\n   * @returns URL string or empty string if not available\n   */\n  getSongUrl(song: any): string {\n    return song.downloadUrl?.find((d: any) => d.quality === '320kbps')?.url || '';\n  }\n\n  /**\n   * Plays or pauses a song. If a new song is selected, plays it from the beginning.\n   *\n   * @param url URL of the song to play\n   * @param song Song object\n   */\n  playSong(url: string, song: any): void {\n    if (!this.isBrowser) return;\n    if (!this.audio) this.audio = new Audio();\n\n    if (this.currentSong?.url === url) {\n      this.audio.paused ? this.audio.play() : this.audio.pause();\n    } else {\n      this.audio.src = url;\n      this.audio.play();\n      this.currentSong = { ...song, url };\n      this.duration.set(song.duration);\n    }\n\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.audio) this.progress.set(this.audio.currentTime);\n    }, 500);\n\n    this.audio.onended = () => this.onSongFinished();\n  }\n\n  /**\n   * Handles the end of a song. Suggests the next song using AI and automatically plays it.\n   */\n  async onSongFinished(): Promise {\n    if (!this.isBrowser) return;\n    try {\n      const transformedData = this.transformSongData(this.currentSong);\n      const nextSong = await this.saavnService.suggestNextSong(transformedData);\n\n      if (!nextSong || typeof nextSong !== 'string' || nextSong.trim() === '') return;\n\n      let cleanedSong = nextSong.trim()\n        .replace(/^```json/, '').replace(/^```/, '')\n        .replace(/```$/, '').trim();\n\n      let songDetails: { songName: string; artistsName: string };\n      try {\n        songDetails = JSON.parse(cleanedSong);\n      } catch {\n        console.warn('Failed to parse AI response as JSON');\n        return;\n      }\n\n      const { songName, artistsName } = songDetails || {};\n      const mainArtist = artistsName ? artistsName.split(',')[0].trim() : '';\n      if (!songName || !mainArtist) return;\n\n      this.saavnService.searchSongs(`${songName} ${mainArtist}`).subscribe({\n        next: (res) => {\n          const results = res.data?.results || [];\n          if (results.length > 0) {\n            const firstSong = results[0];\n            const newUrl = this.getSongUrl(firstSong);\n            this.playSong(newUrl, firstSong);\n          }\n        },\n        error: (err) => console.error('Error during song search:', err)\n      });\n    } finally {\n      this.currentSong = null;\n      this.progress.set(0);\n      clearInterval(this.interval);\n    }\n  }\n\n  /**\n   * Formats seconds into MM:SS string for display.\n   *\n   * @param seconds Number of seconds\n   * @returns Formatted time string\n   */\n  formatTime(seconds: number): string {\n    const min = Math.floor(seconds / 60);\n    const sec = Math.floor(seconds % 60);\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  }\n\n  /**\n   * Seeks the audio playback to a specific time.\n   *\n   * @param event Input change event from the seek bar\n   */\n  onSeek(event: Event): void {\n    if (!this.isBrowser || !this.audio) return;\n    const target = event.target as HTMLInputElement;\n    const seekTime = Number(target.value);\n    this.audio.currentTime = seekTime;\n    this.progress.set(seekTime);\n  }\n\n  /**\n   * Transforms a song object to the expected format for AI suggestion.\n   *\n   * @param data Original song object\n   * @returns Transformed object with relevant song metadata\n   */\n  transformSongData(data: any): any {\n    return {\n      name: data.name,\n      type: data.type,\n      year: data.year,\n      duration: data.duration,\n      label: data.label,\n      playCount: data.playCount,\n      language: data.language,\n      copyright: data.copyright,\n      album: { name: data.album?.name || '' },\n      artists: {\n        all: (data.artists?.primary || []).map((a: any) => ({ name: a.name }))\n      }\n    };\n  }\n\n  /** Angular lifecycle hook called on component destruction */\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.src = '';\n      this.audio = null;\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n      Search\n    \n  \n\n  \n  \n    \n      \n\n      \n        \n      \n    \n\n    \n      {{ song.name }}\n      {{ song.artists.primary[0]?.name || 'Unknown Artist' }}\n    \n\n    {{ formatTime(song.duration) }}\n  \n\n\n\n\n\n\n  \n  \n\n  \n  \n    \n    \n      \n        {{ currentSong.name }}\n        \n          {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n        \n      \n\n      \n        \n          {{ formatTime(progress()) }} / {{ formatTime(duration()) }}\n        \n        \n          \n        \n      \n    \n\n    \n    \n  \n\n\n\n  © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n    \n                \n                    ./music.component.css\n                \n                /* Optional: Style the bottom bar */\n.fixed {\n  z-index: 50;\n}\n\nimg {\n  object-fit: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search                                                      {{ song.name }}      {{ song.artists.primary[0]?.name || \\'Unknown Artist\\' }}        {{ formatTime(song.duration) }}                                {{ currentSong.name }}                  {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                      {{ formatTime(progress()) }} / {{ formatTime(duration()) }}                                                        © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navbar component that displays the top navigation bar.\nFeatures:\n\nShows a back button when the current section is not 'home'.\nIntegrates with SectionService to track and update the current section.\nIncludes the HamburgerMenuComponent for mobile or compact navigation.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavbarComponent.\nSubscribes to SectionService.currentSection$ to determine\nwhether the back button should be visible based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage and broadcast the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles navigation link clicks by updating the current section\nand preventing default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Flag indicating whether the back button should be displayed.\nTrue when the current section is not 'home'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n/**\n * Navbar component that displays the top navigation bar.\n *\n * Features:\n * - Shows a back button when the current section is not 'home'.\n * - Integrates with {@link SectionService} to track and update the current section.\n * - Includes the {@link HamburgerMenuComponent} for mobile or compact navigation.\n */\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  /**\n   * Flag indicating whether the back button should be displayed.\n   * True when the current section is not 'home'.\n   */\n  showBackButton = false;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to determine\n   * whether the back button should be visible based on the current section.\n   *\n   * @param sectionService Service used to manage and broadcast the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  /**\n   * Handles navigation link clicks by updating the current section\n   * and preventing default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to render a pie/doughnut chart of expenses by category.\nSupports monthly, daily, and yearly views.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject required services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get category data\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get expense data\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get user preferences\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n                \n                    \n                        Current date to filter expenses\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:46\n                            \n                        \n                \n                    \n                        View type: 'month' | 'day' | 'year'\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the selected view type\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders daily expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders monthly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders yearly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook after view initialization.\nLoads chart data after canvas element is available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook for input changes.\nReloads chart if viewType or currentDate changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed inputs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook runs on component init.\nInitializes theme, categories, expenses, and category mapping.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Renders a Chart.js chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart ID\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart type ('doughnut', 'line', 'bar', etc.)\n\n                                            \n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:43\n                        \n                    \n\n            \n                \n                    Reference to the canvas element for Chart.js\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:28\n                        \n                    \n\n            \n                \n                    List of all categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Map of category name to its color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Map of category_id to category name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:34\n                        \n                    \n\n            \n                \n                    Chart instances keyed by chart ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:40\n                        \n                    \n\n            \n                \n                    User-selected currency\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:31\n                        \n                    \n\n            \n                \n                    List of all expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    Dark mode flag from user settings\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/** Chart.js instance */\ndeclare const Chart: any;\n\n/**\n * Component to render a pie/doughnut chart of expenses by category.\n * Supports monthly, daily, and yearly views.\n */\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /** Dark mode flag from user settings */\n  isDarkMode: boolean = false;\n\n  /** Map of category_id to category name */\n  categoryMap: any = {};\n\n  /** List of all categories */\n  categories: Category[] = [];\n\n  /** List of all expenses */\n  expenses: Expense[] = [];\n\n  /** Chart instances keyed by chart ID */\n  charts: { [key: string]: any } = {};\n\n  /** Map of category name to its color */\n  categoryColors: { [key: string]: string } = {};\n\n  /** User-selected currency */\n  currency: string | null;\n\n  /** Reference to the canvas element for Chart.js */\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n\n  /** View type: 'month' | 'day' | 'year' */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /** Current date to filter expenses */\n  @Input() currentDate!: Date;\n\n  /**\n   * Constructor to inject required services.\n   * @param categoryService Service to get category data\n   * @param expenseService Service to get expense data\n   * @param userService Service to get user preferences\n   */\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /**\n   * Lifecycle hook runs on component init.\n   * Initializes theme, categories, expenses, and category mapping.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  /**\n   * Lifecycle hook after view initialization.\n   * Loads chart data after canvas element is available.\n   */\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook for input changes.\n   * Reloads chart if viewType or currentDate changes.\n   * @param changes Object containing changed inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /** Loads chart data based on the selected view type */\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  /** Aggregates and renders monthly expense data */\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders daily expense data */\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders yearly expense data */\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /**\n   * Renders a Chart.js chart\n   * @param id Chart ID\n   * @param type Chart type ('doughnut', 'line', 'bar', etc.)\n   * @param config Chart configuration containing labels, data, colors, etc.\n   */\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\nimport { ToastService } from '../../toast/toast.service';\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   * @param toastService Displays notifications to the user\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService,\n    private toastService: ToastService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      // console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: (res: any) => {\n          console.log('User data posted successfully. Response:', res);\n          const api_response_app_version = res.app_version;\n          const app_current_version = this.userService.getValue('app_version');\n          if (api_response_app_version != app_current_version) {\n            this.userService.update('is_app_updated', false);\n            setTimeout(() => {\n              this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n            }, 500);\n          }\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SaavnService\nService for integrating with Saavn API (song search) and\nGoogle Gemini API (next song recommendation).\nIt manages search, AI-based suggestions, and conversation history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of SaavnService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API calls.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader service to show/hide loading UI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Returns the full conversation history between user and model.\n\n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                            \n                                An array of ChatMessage objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Searches for songs using the Saavn API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search term provided by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable containing the list of matching songs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Suggests the next song based on the current song metadata.\nUses Gemini API to infer mood and style, and returns the most suitable next track.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently playing song object with metadata (name, album, artists, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A JSON string with the suggested song name and artist.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                        \n                    \n\n            \n                \n                    Gemini API URL with authentication key from environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:39\n                        \n                    \n\n            \n                \n                    Base URL for Saavn song search API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:34\n                        \n                    \n\n            \n                \n                    Conversation history between user and AI model.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema interface for local storage items.\nDefines a generic structure for syncing data with default values.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:9\n                            \n                        \n                \n                    \n                        Key-value pairs representing item properties\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { ConfigService } from '../config/config.service';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\ninterface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Syncs categories, expenses, user, and budget data with predefined schemas.\n * - Provides helper methods to get and update local storage items.\n * - Ensures default values exist for missing properties.\n * - Integrates with {@link ConfigService} to retrieve app version for user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /**\n   * Creates an instance of StorageService.\n   *\n   * @param configService Service providing app configuration such as version.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Checks if the current environment has access to localStorage.\n   *\n   * @returns `true` if localStorage is available, `false` otherwise.\n   */\n  private static isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Syncs categories in localStorage with the default schema and predefined categories.\n   */\n  syncCategoriesWithSchema(): void {\n    const categorySchema: Schema = {\n      category_id: \"\",\n      name: \"\",\n      icon: \"\",\n      color: \"\",\n      is_active: \"\",\n      user_id: \"\"\n    };\n    return this.syncWithSchema(this.categoryKey, categorySchema);\n  }\n\n  /**\n   * Syncs expenses in localStorage with the default schema.\n   */\n  syncExpensesWithSchema(): void {\n    const expenseSchema: Schema = {\n      expense_id: \"\",\n      category_id: \"\",\n      amount: \"\",\n      date: \"\",\n      location: \"\",\n      note: \"\",\n      payment_mode: \"\",\n      time: \"\",\n      isExtraSpending: false\n    };\n    return this.syncWithSchema(this.expenseKey, expenseSchema);\n  }\n\n  /**\n   * Syncs user data in localStorage with the default schema.\n   */\n  syncUserWithSchema(): void {\n    const userSchema: Schema = {\n      id: \"\",\n      backup_frequency: \"\",\n      email: \"\",\n      is_active: \"\",\n      is_backup: \"\",\n      last_backup: \"\",\n      name: \"\",\n      notifications: \"\",\n      user_password: \"\",\n      theme_mode: \"dark\",\n      currency: \"₹\",\n      app_version: \"0\",\n      is_app_updated: true\n    };\n    return this.syncUser(this.userKey, userSchema);\n  }\n\n  /**\n   * Syncs budget data in localStorage with the default schema.\n   */\n  syncBudgetWithSchema(): void {\n    const budgetSchema: Schema = {\n      budget_id: \"\",\n      amount: 0,\n      fromDate: \"\",\n      toDate: \"\"\n    };\n    return this.syncWithSchema(this.budgetKey, budgetSchema);\n  }\n\n  /**\n   * Helper function to sync any localStorage data array with a given schema.\n   *\n   * @param storageKey The localStorage key to sync.\n   * @param defaultSchema The default schema to apply to missing properties.\n   */\n  private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    if (storageKey === this.categoryKey) {\n      const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n      const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n      savedData = [...filteredPastData, ...Categories];\n    }\n\n    const schemaKeys = Object.keys(defaultSchema);\n    const updatedData = savedData.map((item: Schema) => {\n      const synced: Schema = {};\n      schemaKeys.forEach((key: string) => {\n        synced[key] = key in item ? item[key] : defaultSchema[key];\n      });\n      return synced;\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(updatedData));\n  }\n\n  /**\n   * Syncs user data in localStorage with a schema and updates the app version.\n   *\n   * @param storageKey The localStorage key for the user.\n   * @param defaultSchema The default schema to apply.\n   */\n  private syncUser(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n    const schemaKeys = Object.keys(defaultSchema);\n    const syncedSettings: Schema = {};\n\n    schemaKeys.forEach((key: string) => {\n      syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n    });\n    syncedSettings['app_version'] = this.configService.getVersion();\n\n    localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n  }\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage and broadcast the current active section of the application.\nFeatures:\n\nMaintains the currently selected section using a BehaviorSubject.\nProvides an observable currentSection$ to subscribe to section changes.\nAllows updating the current section with setSection.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Updates the current active section.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new section identifier to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable stream of the current section.\nComponents can subscribe to reactively track section changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:21\n                        \n                    \n\n            \n                \n                    Internal BehaviorSubject holding the current section.\nInitialized with 'home'.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service to manage and broadcast the current active section of the application.\n *\n * Features:\n * - Maintains the currently selected section using a {@link BehaviorSubject}.\n * - Provides an observable {@link currentSection$} to subscribe to section changes.\n * - Allows updating the current section with {@link setSection}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n\n  /**\n   * Internal BehaviorSubject holding the current section.\n   * Initialized with 'home'.\n   */\n  private sectionSource = new BehaviorSubject('home');\n\n  /**\n   * Observable stream of the current section.\n   * Components can subscribe to reactively track section changes.\n   */\n  currentSection$ = this.sectionSource.asObservable();\n\n  /**\n   * Updates the current active section.\n   *\n   * @param section The new section identifier to set.\n   */\n  setSection(section: string): void {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/setting-item/setting-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable component to display a single setting item.\nThis component can be used inside settings screens or\npreferences pages to show a label or related content.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/settings-components/setting-item/setting-item.component.ts:22\n                            \n                        \n                \n                    \n                        The text label for the setting item.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * A reusable component to display a single setting item.\n * \n * This component can be used inside settings screens or\n * preferences pages to show a label or related content.\n */\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n\n  /**\n   * The text label for the setting item.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label!: string;\n\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidebar navigation component.\nThis component:\n\nDisplays sidebar links for navigating between different application sections.\nHighlights the currently active section.\nCommunicates with SectionService to update and listen to the current active section.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of SidebarComponent.\nSubscribes to SectionService.currentSection$ to keep track of\nthe currently selected section and update the UI accordingly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles sidebar link clicks by updating the current section\nand preventing the default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default navigation).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                        \n                    \n\n            \n                \n                    Holds the name of the currently active navigation path/section.\nUsed to apply active styling to the sidebar item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Sidebar navigation component.\n *\n * This component:\n * - Displays sidebar links for navigating between different application sections.\n * - Highlights the currently active section.\n * - Communicates with {@link SectionService} to update and listen to the current active section.\n */\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  /**\n   * Holds the name of the currently active navigation path/section.\n   * Used to apply active styling to the sidebar item.\n   */\n  activePath: string = '';\n\n  /**\n   * Creates an instance of SidebarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to keep track of\n   * the currently selected section and update the UI accordingly.\n   *\n   * @param sectionService Service for managing and broadcasting the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  /**\n   * Handles sidebar link clicks by updating the current section\n   * and preventing the default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default navigation).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing LocalStorage data in a structured and schema-compliant way.\nFeatures:\n\nSyncs categories, expenses, user, and budget data with predefined schemas.\nProvides helper methods to get and update local storage items.\nEnsures default values exist for missing properties.\nIntegrates with ConfigService to retrieve app version for user data.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                isBrowser\n                            \n                            \n                                syncBudgetWithSchema\n                            \n                            \n                                syncCategoriesWithSchema\n                            \n                            \n                                syncExpensesWithSchema\n                            \n                            \n                                    Private\n                                syncUser\n                            \n                            \n                                syncUserWithSchema\n                            \n                            \n                                    Private\n                                syncWithSchema\n                            \n                            \n                                updateBudgets\n                            \n                            \n                                updateCategories\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of StorageService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing app configuration such as version.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of budget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:185\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of category objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:212\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of expense objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:223\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for budgets\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for categories\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:220\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for expenses\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Retrieves user data from localStorage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                User object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the current environment has access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if localStorage is available, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncBudgetWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncBudgetWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Syncs budget data in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCategoriesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncCategoriesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Syncs categories in localStorage with the default schema and predefined categories.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncExpensesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncExpensesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Syncs expenses in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:162\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with a schema and updates the app version.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key for the user.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUserWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncUserWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Helper function to sync any localStorage data array with a given schema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key to sync.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply to missing properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBudgets\n                        \n                    \n                \n            \n            \n                \nupdateBudgets(budgets: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:242\n                        \n                    \n\n\n            \n                \n                        Updates the budgets in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategories\n                        \n                    \n                \n            \n            \n                \nupdateCategories(categories: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:233\n                        \n                    \n\n\n            \n                \n                        Updates the categories in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of categories to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Updates the user data in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:35\n                        \n                    \n\n            \n                \n                    LocalStorage key for budgets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:29\n                        \n                    \n\n            \n                \n                    LocalStorage key for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:32\n                        \n                    \n\n            \n                \n                    LocalStorage key for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:38\n                        \n                    \n\n            \n                \n                    LocalStorage key for user settings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { ConfigService } from '../config/config.service';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\ninterface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Syncs categories, expenses, user, and budget data with predefined schemas.\n * - Provides helper methods to get and update local storage items.\n * - Ensures default values exist for missing properties.\n * - Integrates with {@link ConfigService} to retrieve app version for user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /**\n   * Creates an instance of StorageService.\n   *\n   * @param configService Service providing app configuration such as version.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Checks if the current environment has access to localStorage.\n   *\n   * @returns `true` if localStorage is available, `false` otherwise.\n   */\n  private static isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Syncs categories in localStorage with the default schema and predefined categories.\n   */\n  syncCategoriesWithSchema(): void {\n    const categorySchema: Schema = {\n      category_id: \"\",\n      name: \"\",\n      icon: \"\",\n      color: \"\",\n      is_active: \"\",\n      user_id: \"\"\n    };\n    return this.syncWithSchema(this.categoryKey, categorySchema);\n  }\n\n  /**\n   * Syncs expenses in localStorage with the default schema.\n   */\n  syncExpensesWithSchema(): void {\n    const expenseSchema: Schema = {\n      expense_id: \"\",\n      category_id: \"\",\n      amount: \"\",\n      date: \"\",\n      location: \"\",\n      note: \"\",\n      payment_mode: \"\",\n      time: \"\",\n      isExtraSpending: false\n    };\n    return this.syncWithSchema(this.expenseKey, expenseSchema);\n  }\n\n  /**\n   * Syncs user data in localStorage with the default schema.\n   */\n  syncUserWithSchema(): void {\n    const userSchema: Schema = {\n      id: \"\",\n      backup_frequency: \"\",\n      email: \"\",\n      is_active: \"\",\n      is_backup: \"\",\n      last_backup: \"\",\n      name: \"\",\n      notifications: \"\",\n      user_password: \"\",\n      theme_mode: \"dark\",\n      currency: \"₹\",\n      app_version: \"0\",\n      is_app_updated: true\n    };\n    return this.syncUser(this.userKey, userSchema);\n  }\n\n  /**\n   * Syncs budget data in localStorage with the default schema.\n   */\n  syncBudgetWithSchema(): void {\n    const budgetSchema: Schema = {\n      budget_id: \"\",\n      amount: 0,\n      fromDate: \"\",\n      toDate: \"\"\n    };\n    return this.syncWithSchema(this.budgetKey, budgetSchema);\n  }\n\n  /**\n   * Helper function to sync any localStorage data array with a given schema.\n   *\n   * @param storageKey The localStorage key to sync.\n   * @param defaultSchema The default schema to apply to missing properties.\n   */\n  private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    if (storageKey === this.categoryKey) {\n      const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n      const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n      savedData = [...filteredPastData, ...Categories];\n    }\n\n    const schemaKeys = Object.keys(defaultSchema);\n    const updatedData = savedData.map((item: Schema) => {\n      const synced: Schema = {};\n      schemaKeys.forEach((key: string) => {\n        synced[key] = key in item ? item[key] : defaultSchema[key];\n      });\n      return synced;\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(updatedData));\n  }\n\n  /**\n   * Syncs user data in localStorage with a schema and updates the app version.\n   *\n   * @param storageKey The localStorage key for the user.\n   * @param defaultSchema The default schema to apply.\n   */\n  private syncUser(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n    const schemaKeys = Object.keys(defaultSchema);\n    const syncedSettings: Schema = {};\n\n    schemaKeys.forEach((key: string) => {\n      syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n    });\n    syncedSettings['app_version'] = this.configService.getVersion();\n\n    localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n  }\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        ToastComponent\nA reusable component responsible for rendering toast notifications.\nIt integrates with ToastService to display messages dynamically\nand handles auto-dismiss after a configurable duration.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of ToastComponent.\nso that it can be accessed globally.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to register this component instance\nso that it can be accessed globally.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component's view has been fully initialized.\nRegisters this component with the ToastService so it can be controlled externally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with a message, style, and duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text content of the toast\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning), defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before the toast disappears, defaults to 3000\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n * ToastComponent\n *\n * A reusable component responsible for rendering toast notifications.\n * It integrates with `ToastService` to display messages dynamically\n * and handles auto-dismiss after a configurable duration.\n */\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent implements AfterViewInit {\n\n  /**\n   * Creates an instance of ToastComponent.\n   * @param toastService Service used to register this component instance\n   * so that it can be accessed globally.\n   */\n  constructor(private toastService: ToastService) { }\n\n  /**\n   * Lifecycle hook that runs after component's view has been fully initialized.\n   * Registers this component with the `ToastService` so it can be controlled externally.\n   */\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n\n  /**\n   * Displays a toast notification with a message, style, and duration.\n   *\n   * @param message The text content of the toast\n   * @param type The type of toast (`success` | `error` | `info` | `warning`), defaults to `'success'`\n   * @param duration Duration in milliseconds before the toast disappears, defaults to `3000`\n   */\n  showToast(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      // Clear any existing toasts\n      toastContainer.innerHTML = '';\n\n      // Define style classes for each toast type\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      // Create toast element\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      // Add message and dismiss button\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      // Auto-remove toast after the given duration\n      setTimeout(() => {\n        toast.remove();\n      }, duration);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ToastService\nA service for displaying toast notifications in the application.\nIt requires registering a ToastComponent instance so it can delegate\nshowing messages to the UI component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Registers the toast component instance.\nMust be called once, typically from the root component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Instance of ToastComponent used to render notifications\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Displays a toast message.\nExample :        Defaults to `'success'`\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The message text to display\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning)Defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before auto-hide (default: 3000)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:19\n                        \n                    \n\n            \n                \n                    Reference to the toast component instance.\nThis is registered once during app initialization.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n/**\n * ToastService\n *\n * A service for displaying toast notifications in the application.\n * It requires registering a `ToastComponent` instance so it can delegate\n * showing messages to the UI component.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  /**\n   * Reference to the toast component instance.\n   * This is registered once during app initialization.\n   */\n  private toastComponent!: ToastComponent;\n\n  /**\n   * Registers the toast component instance.\n   * Must be called once, typically from the root component.\n   *\n   * @param toast Instance of `ToastComponent` used to render notifications\n   */\n  register(toast: ToastComponent): void {\n    this.toastComponent = toast;\n  }\n\n  /**\n   * Displays a toast message.\n   *\n   * @param message The message text to display\n   * @param type The type of toast (`success` | `error` | `info` | `warning`)  \n   *             Defaults to `'success'`\n   * @param duration Duration in milliseconds before auto-hide (default: `3000`)\n   */\n  show(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    this.toastComponent?.showToast(message, type, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user profile and application settings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_app_updated\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Application version associated with the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Frequency of backups (e.g., daily, weekly).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred currency code (e.g., USD, INR).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_app_updated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_app_updated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user’s app has been updated to the latest version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if backup is enabled for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last performed backup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's display name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification preferences (e.g., enabled/disabled).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred theme mode (e.g., light, dark).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password (hashed or plain depending on storage implementation).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/settings-components/download-component/download-component.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the structure of user data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            budgetData\n                                        \n                                \n                                \n                                        \n                                            categoryData\n                                        \n                                \n                                \n                                        \n                                            expenseData\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        budgetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budgetData:         Budget[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Budget[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryData:         Category[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expenseData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expenseData:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         User | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user data and preferences in local storage.\nProvides methods to read, update, and persist user settings.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getUserData\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for handling local storage operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user object from storage.\n\n\n                        \n                            Returns :     Record\n\n                        \n                            \n                                User data object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Retrieves full user data.\n\n\n                        \n                            Returns :         User | literal type\n\n                        \n                            \n                                The user object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:102\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a specific user property by key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The value if it exists, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Checks if the service is running in a browser environment\nwith access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Updates a single user property in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to update.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value to assign.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserData\n                        \n                    \n                \n            \n            \n                \nupdateUserData(user: User | literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Updates the entire user object in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new user object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/component/form-model/form-model.component.ts\n            \n            component\n            FormModelComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                        src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n            \n            component\n            InstallAppPopupComponentComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            component\n            DownloadComponentComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            interface\n            UserData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                        src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            canvg : ^4.0.3\n        \n            chart.js : ^4.5.0\n        \n            express : ^4.18.2\n        \n            jspdf : ^3.0.2\n        \n            jspdf-autotable : ^5.0.2\n        \n            lucide-angular : ^0.543.0\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            xlsx : ^0.18.5\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).\n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data in pdf, json, excel formats)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage (though it works as PWA).\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:\n👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n            \n                \n                    Angular Universal Node.js app engine\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n            \n                \n                    Express server\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n            \n                \n                    Browser distribution folder\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n            \n                \n                    Server distribution folder\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Application configuration\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Bootstrap the Angular application with server-specific configuration\n\n                \n            \n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n            \n                \n                    Predefined categories for the application\n\n                \n            \n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Chart.js instance\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Merged application configuration for server-side rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n            \n                \n                    Server-specific application configuration\n\n                \n            \n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** Name of the application. */\n  appName: 'ExpenseWise',\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyBkBmHCsVna6d8bPYjQQhbpdymn7_Nvm2w',\n\n  /**\n   * Current environment type.\n   * - 'local' for local development (uses localhost API endpoint)\n   * - 'live' for production (uses production API endpoint)\n   * - leave empty for automatic detection based on current window location\n   */\n  developmentEnvironment: '', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.9.13', // Current application version\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  liveAPIUrl: \"https://exwiseapi.onrender.com\",\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  localAPIUrl: \"http://localhost:8000\"\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: '', component: AppComponent }, // your main app content\n    { path: 'music', component: AppComponent }, // for music\n    { path: '**', redirectTo: '' }, // catch-all\n]\n                    \n                \n\n            \n                \n                    Application routes\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n            \n                \n                    Application routes for server-side rendering\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
