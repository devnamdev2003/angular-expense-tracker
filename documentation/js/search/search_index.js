var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.045,1,0.83]],["body/components/AddExpenseComponent.html",[0,0.079,1,1.243,2,0.86,3,0.124,4,0.124,5,0.703,6,0.892,7,0.611,8,0.611,9,0.093,10,6.34,11,5.662,12,2.454,13,0.486,14,4.306,15,0.747,16,1.929,17,2.522,18,3.977,19,1.551,20,4.707,21,2.951,22,4.211,23,1.864,24,2.478,25,0.555,26,1.468,27,1.073,28,1.166,29,1.019,30,1.52,31,0.566,32,0.993,33,3.226,34,1.424,35,1.243,36,1.864,37,5.006,38,0.993,39,4.211,40,0.124,41,0.414,42,5.006,43,5.006,44,5.006,45,5.006,46,5.006,47,5.006,48,3.845,49,5.006,50,5.006,51,0.414,52,4.755,53,5.527,54,2.096,55,3.623,56,5.527,57,4.755,58,5.527,59,4.211,60,4.211,61,0.66,62,2.454,63,3.977,64,2.751,65,3.063,66,0.771,67,4.211,68,2.522,69,2.084,70,0.742,71,0.019,72,0.321,73,0.299,74,0.66,75,3.226,76,0.534,77,2.096,78,2.34,79,0.62,80,1.125,81,2.945,82,2.852,83,0.703,84,4.211,85,0.579,86,4.114,87,4.211,88,2.852,89,2.714,90,3.623,91,3.288,92,0.657,93,2.852,94,1.52,95,1.768,96,1.969,97,3.623,98,2.852,99,1.768,100,1.026,101,2.714,102,4.316,103,2.613,104,2.852,105,2.945,106,2.283,107,2.084,108,4.211,109,2.852,110,3.623,111,2.357,112,2.852,113,2.714,114,0.819,115,1.733,116,2.613,117,4.211,118,0.422,119,2.852,120,5.527,121,5.853,122,4.755,123,4.211,124,2.852,125,2.802,126,1.708,127,4.211,128,2.357,129,2.521,130,1.366,131,2.852,132,1.256,133,1.073,134,0.762,135,0.809,136,2.852,137,4.246,138,1.129,139,2.852,140,2.852,141,2.447,142,3.866,143,2.852,144,2.63,145,2.852,146,1.768,147,0.993,148,1.078,149,2.852,150,3.31,151,2.736,152,2.852,153,0.234,154,1.995,155,1.596,156,0.108,157,1.838,158,1.263,159,1.596,160,2.852,161,1.995,162,2.454,163,0.774,164,1.708,165,0.108,166,0.124,167,0.649,168,0.634,169,2.852,170,2.454,171,1.708,172,2.852,173,2.102,174,4.211,175,4.211,176,2.852,177,0.923,178,1.838,179,3.977,180,2.454,181,2.852,182,2.102,183,2.084,184,4.755,185,2.852,186,2.852,187,2.084,188,5.006,189,2.454,190,3.235,191,2.454,192,0.809,193,1.995,194,3.623,195,2.191,196,2.852,197,2.191,198,1.204,199,2.852,200,4.211,201,2.852,202,2.852,203,2.852,204,2.852,205,2.852,206,2.852,207,2.852,208,1.082,209,2.852,210,2.852,211,2.454,212,1.499,213,1.412,214,0.981,215,1.641,216,2.454,217,1.838,218,2.454,219,5.006,220,1.995,221,2.852,222,1.68,223,4.211,224,2.852,225,2.852,226,5.006,227,2.852,228,2.852,229,2.852,230,2.852,231,4.211,232,5.006,233,4.211,234,2.852,235,2.852,236,2.852,237,2.852,238,5.006,239,4.211,240,2.852,241,2.852,242,2.852,243,2.945,244,4.211,245,4.211,246,4.222,247,2.213,248,1.317,249,3.623,250,3.235,251,3.866,252,3.866,253,2.213,254,3.623,255,1.969,256,2.084,257,0.641,258,0.902,259,0.705,260,1.366,261,0.705,262,0.705,263,0.641,264,0.705,265,0.611,266,1.041,267,0.641,268,0.705,269,0.641,270,0.705,271,0.705,272,0.611,273,0.528,274,1.041,275,0.641,276,0.582,277,0.705,278,0.641,279,0.705,280,0.641,281,0.705,282,0.611,283,0.705,284,0.611,285,0.582,286,0.705,287,0.641,288,0.705,289,0.641,290,0.705,291,0.705,292,0.641,293,0.705,294,0.641,295,0.705,296,0.641,297,0.673,298,0.428,299,0.705,300,0.641,301,0.705,302,0.641,303,0.705,304,0.641,305,0.673,306,0.705,307,0.641,308,0.528,309,0.705,310,0.641,311,0.673,312,0.705,313,0.673,314,0.705,315,0.641,316,0.705,317,0.528,318,0.555,319,0.611,320,0.705,321,0.705,322,0.01,323,0.01]],["title/components/AiComponent.html",[0,0.045,263,0.83]],["body/components/AiComponent.html",[0,0.082,1,0.93,2,1.115,3,0.179,4,0.179,5,0.912,7,0.886,8,0.886,9,0.134,13,0.43,19,0.93,25,0.804,26,1.512,27,1.106,28,0.691,29,0.776,30,1.972,31,0.734,32,1.288,34,1.74,35,0.93,38,1.288,40,0.179,41,0.537,51,0.537,61,0.776,66,0.684,68,3.27,70,0.555,71,0.019,72,0.299,73,0.265,74,0.493,79,0.612,80,0.93,85,0.352,99,2.293,100,0.588,106,2.297,118,0.25,130,1.35,134,0.652,135,0.692,138,1.418,147,1.288,153,0.268,156,0.157,158,1.83,163,1.123,165,0.157,166,0.179,167,0.574,168,0.692,177,0.912,192,0.775,252,3.82,257,0.93,258,1.587,259,1.022,260,1.608,261,1.022,262,1.022,263,1.462,264,1.022,265,0.886,266,1.35,267,0.93,268,1.022,269,0.93,270,1.022,271,1.022,272,0.886,273,0.765,274,1.35,275,0.93,276,0.844,277,1.022,278,0.93,279,1.022,280,0.93,281,1.022,282,0.886,283,1.022,284,0.886,285,0.844,286,1.022,287,0.93,288,1.022,289,0.93,290,1.022,291,1.022,292,0.93,293,1.022,294,0.93,295,1.022,296,0.93,297,0.975,298,0.621,299,1.022,300,0.93,301,1.022,302,0.93,303,1.022,304,0.93,305,0.975,306,1.022,307,0.93,308,0.765,309,1.022,310,0.93,311,0.975,312,1.022,313,0.975,314,1.022,315,0.93,316,1.022,317,0.765,318,0.804,319,0.886,320,1.022,321,1.022,322,0.013,323,0.013,324,3.557,325,3.916,326,5.461,327,2.869,328,4.478,329,3.248,330,1.878,331,5.461,332,5.596,333,4.698,334,5.596,335,6.505,336,3.22,337,6.947,338,3.422,339,5.261,340,5.461,341,2.418,342,5.461,343,6.115,344,6.115,345,3.213,346,6.947,347,4.135,348,4.549,349,6.947,350,6.505,351,5.461,352,3.52,353,6.115,354,4.195,355,1.972,356,5.461,357,3.52,358,4.135,359,5.461,360,5.461,361,2.293,362,5.461,363,6.505,364,1.685,365,4.698,366,4.135,367,1.878,368,5.461,369,2.047,370,3.176,371,1.356,372,4.698,373,4.135,374,3.176,375,3.557,376,4.135,377,4.135,378,4.135,379,4.135,380,2.476,381,3.557,382,6.115,383,2.172,384,4.135,385,5.461,386,4.135,387,4.135,388,4.135,389,3.52,390,5.461]],["title/components/AppComponent.html",[0,0.045,265,0.792]],["body/components/AppComponent.html",[0,0.077,1,1.237,2,0.854,3,0.181,4,0.122,5,0.698,6,0.883,7,0.605,8,0.605,9,0.092,11,2.17,13,0.484,19,0.635,25,0.549,26,1.466,27,1.09,28,0.472,29,0.594,30,1.51,31,0.739,32,0.986,34,1.416,35,0.635,36,1.851,38,0.986,40,0.122,41,0.411,51,0.411,54,2.087,61,0.656,65,3.055,66,0.758,68,1.692,70,0.789,71,0.019,72,0.32,73,0.276,74,0.701,79,0.796,80,1.237,85,0.523,92,0.504,94,1.51,95,1.756,96,1.955,100,0.402,107,2.907,114,1.237,118,0.355,126,2.504,130,1.033,133,0.605,134,0.701,135,0.744,138,1.334,141,1.251,146,1.756,147,0.986,148,1.091,153,0.284,154,1.976,156,0.158,163,0.767,164,1.692,165,0.107,166,0.122,167,0.713,168,0.845,171,1.692,192,0.53,198,0.577,248,0.883,257,0.635,258,0.896,259,0.698,260,1.36,261,0.698,262,0.698,263,1.237,264,0.698,265,1.318,266,1.033,267,1.237,268,0.698,269,1.237,270,0.698,271,0.698,272,0.605,273,0.523,274,1.033,275,0.635,276,0.577,277,0.698,278,0.635,279,0.698,280,1.237,281,0.698,282,0.605,283,0.698,284,1.179,285,1.199,286,0.698,287,0.635,288,0.698,289,0.635,290,0.698,291,0.698,292,1.237,293,0.698,294,1.237,295,1.23,296,1.119,297,1.297,298,0.424,299,0.698,300,1.237,301,0.698,302,1.237,303,0.698,304,0.635,305,0.666,306,0.698,307,0.635,308,0.523,309,0.698,310,0.635,311,0.666,312,0.698,313,1.297,314,0.698,315,1.237,316,0.698,317,0.523,318,0.549,319,1.179,320,0.698,321,0.698,322,0.01,323,0.01,329,1.955,352,2.695,355,2.22,364,0.732,371,1.371,375,2.43,391,2.43,392,1.237,393,2.466,394,2.924,395,2.07,396,4.569,397,3.085,398,5.052,399,3.799,400,4.226,401,3.085,402,4.101,403,3.212,404,5.125,405,2.368,406,4.181,407,4.977,408,4.181,409,4.282,410,4.977,411,4.977,412,4.977,413,4.977,414,4.282,415,3.824,416,2.451,417,4.977,418,4.733,419,4.977,420,4.181,421,4.181,422,3.212,423,4.181,424,4.181,425,2.43,426,3.912,427,2.723,428,3.656,429,2.478,430,6.788,431,4.569,432,4.733,433,1.693,434,4.181,435,6.672,436,1.586,437,5.052,438,1.797,439,2.786,440,4.181,441,3.044,442,1.51,443,1.756,444,3.481,445,3.212,446,3.597,447,2.695,448,1.851,449,3.597,450,2.086,451,2.695,452,1.756,453,3.212,454,3.295,455,2.825,456,3.481,457,4.181,458,3.597,459,3.212,460,3.597,461,2.07,462,2.34,463,4.181,464,3.597,465,2.825,466,4.181,467,1.888,468,6.149,469,2.825,470,1.692,471,1.398,472,2.825,473,1.821,474,2.825,475,2.17,476,2.825,477,2.924,478,5.473,479,4.667,480,1.985,481,2.825,482,1.186,483,2.204,484,1.729,485,1.398,486,2.825,487,2.34,488,2.504,489,4.181,490,3.212,491,2.924,492,2.34,493,4.181,494,4.181,495,2.825,496,2.825,497,3.294,498,2.825,499,1.586,500,2.07,501,1.797,502,2.825,503,2.825,504,5.289,505,2.115,506,4.181,507,3.516,508,2.825,509,4.181,510,4.181,511,3.597,512,2.825,513,2.695,514,2.34,515,2.695,516,2.825,517,2.43,518,2.43,519,4.181,520,2.43,521,1.484,522,1.976,523,2.825,524,2.825,525,2.825,526,2.43,527,2.43,528,2.197,529,2.43,530,2.825,531,2.825,532,2.825,533,2.825,534,2.43,535,2.825,536,2.825,537,2.825,538,2.825,539,2.825,540,2.825,541,3.212,542,2.825,543,2.825,544,1.484,545,1.821,546,1.692,547,1.976,548,2.825,549,2.17,550,2.825,551,2.43,552,2.825,553,2.43,554,1.976,555,2.825,556,2.43,557,1.321,558,1.484,559,2.825,560,2.825,561,2.43,562,2.825,563,1.51,564,2.825,565,2.825,566,2.825,567,2.825,568,2.825,569,3.597,570,4.181,571,2.825,572,2.825,573,1.955,574,2.825,575,2.825,576,2.825,577,2.825,578,1.821,579,1.692,580,3.597,581,1.976,582,1.127,583,2.825,584,2.825,585,2.825,586,1.692,587,4.226,588,1.821,589,2.825,590,2.825,591,2.825,592,1.321,593,2.825,594,2.43,595,1.581,596,2.43,597,1.976,598,2.825,599,1.821,600,4.977,601,3.597,602,2.825,603,1.821,604,2.825,605,2.825,606,2.825,607,4.181,608,3.597,609,2.825,610,2.825,611,1.821,612,2.17,613,4.181,614,1.976,615,1.976,616,1.976,617,2.825,618,2.825,619,2.924,620,2.825,621,2.695,622,2.825,623,0.804]],["title/interfaces/Budget.html",[624,0.683,625,1.551]],["body/interfaces/Budget.html",[3,0.189,4,0.189,9,0.142,13,0.344,15,0.717,28,0.945,31,0.587,40,0.189,41,0.556,51,0.429,61,0.521,71,0.019,73,0.288,76,0.553,77,1.656,79,0.635,83,0.729,85,0.482,92,0.608,111,2.444,115,1.721,118,0.46,129,2.678,133,1.511,141,1.933,148,0.692,153,0.214,156,0.165,165,0.214,166,0.189,167,0.741,168,0.717,177,1.199,192,0.717,253,3.491,298,0.943,322,0.013,323,0.013,361,2.79,371,2.178,392,0.982,405,2.16,429,2.52,436,1.656,438,1.577,442,2.592,443,3.014,450,1.856,452,2.377,467,1.656,470,2.615,471,3.108,480,1.742,482,1.834,484,1.466,485,2.162,579,2.615,624,1.162,625,3.266,626,1.933,627,3.355,628,2.147,629,4.122,630,5.282,631,2.941,632,2.941,633,1.963,634,4.824,635,4.869,636,4.869,637,2.257,638,2.974,639,5.104,640,4.647,641,2.802,642,0.675,643,2.295,644,2.042,645,4.627,646,1.577,647,2.647,648,2.295,649,2.815,650,3.355,651,1.77,652,1.186,653,3.168,654,3.054,655,3.355,656,1.742,657,1.933,658,2.377,659,2.147,660,2.042,661,1.834,662,1.933,663,1.742,664,2.615,665,3.407,666,3.355,667,2.162,668,3.757,669,4.869,670,3.757,671,2.615,672,2.615,673,3.761,674,2.615,675,2.615,676,3.054,677,5.402,678,3.761,679,1.933,680,3.054,681,3.757,682,2.802,683,3.054,684,3.761,685,2.647,686,1.933,687,3.757,688,3.389,689,4.869,690,2.505,691,3.054,692,2.444,693,3.757,694,3.054,695,3.054,696,1.933,697,3.757,698,3.757]],["title/components/BudgetComponent.html",[0,0.045,267,0.83]],["body/components/BudgetComponent.html",[0,0.07,1,0.488,2,0.698,3,0.094,4,0.094,5,0.571,7,0.465,8,0.465,9,0.071,13,0.269,14,4.126,15,0.702,16,1.733,18,3.738,19,1.515,20,2.203,23,1.513,24,2.093,25,0.422,26,1.425,27,1.042,28,1.033,29,0.682,30,1.234,31,0.85,32,0.806,33,2.725,34,1.203,35,0.488,38,0.806,40,0.094,41,0.336,51,0.336,52,4.126,54,1.819,57,4.126,61,0.408,63,3.572,64,2.596,65,2.81,66,0.768,70,0.291,71,0.019,72,0.207,73,0.292,74,0.259,75,3.091,76,0.608,77,2.279,78,1.795,79,0.674,80,0.488,83,0.801,85,0.566,86,3.738,89,3.091,92,0.64,94,1.234,95,1.435,96,1.598,99,1.435,100,0.308,106,1.5,107,1.692,113,2.203,115,1.724,118,0.29,122,2.94,129,2.585,130,0.845,132,1.019,133,1.188,134,0.794,135,0.892,138,1.184,141,2.123,146,1.435,148,1.055,150,3.319,151,2.374,153,0.22,156,0.082,157,1.399,158,0.961,159,1.214,163,0.589,164,1.299,165,0.082,166,0.183,167,0.548,168,0.661,170,1.867,171,1.299,173,0.911,177,0.706,178,1.399,179,2.725,180,1.867,192,0.886,198,1.462,208,0.823,211,1.867,212,2.221,213,2.093,214,0.746,215,1.386,216,1.867,217,1.399,218,1.867,220,1.518,222,0.865,243,2.39,246,3.572,248,1.879,253,2.741,256,2.974,257,0.488,258,0.732,259,0.536,260,1.186,261,0.536,262,0.536,263,0.488,264,0.536,265,0.465,266,0.845,267,1.246,268,0.536,269,0.488,270,0.536,271,0.536,272,0.465,273,0.401,274,0.845,275,0.488,276,0.443,277,0.536,278,0.488,279,0.536,280,0.488,281,0.536,282,0.465,283,0.536,284,0.465,285,0.443,286,0.536,287,0.488,288,0.536,289,0.488,290,0.536,291,0.536,292,0.488,293,0.536,294,0.488,295,0.536,296,0.488,297,0.512,298,0.871,299,0.536,300,0.488,301,0.536,302,0.488,303,0.536,304,0.488,305,0.512,306,0.536,307,0.488,308,0.401,309,0.536,310,0.488,311,0.512,312,0.536,313,0.512,314,0.536,315,0.488,316,0.536,317,0.401,318,0.422,319,0.465,320,0.536,321,0.536,322,0.008,323,0.008,330,1.175,341,1.513,355,1.234,364,0.885,367,1.175,399,2.684,400,2.625,401,2.221,405,1.795,416,2.285,436,2.102,438,1.234,447,3.091,448,1.513,451,1.399,458,2.94,483,0.961,484,0.885,487,1.913,488,2.046,491,2.39,499,1.296,501,1.884,505,1.65,521,1.14,544,1.14,557,1.598,573,2.591,578,1.399,580,2.94,581,1.518,582,1.686,586,2.872,612,1.667,616,1.518,623,1.365,625,3.269,629,2.046,631,2.66,632,2.567,633,1.733,639,4.616,644,1.598,645,4.159,647,2.44,653,3.542,656,1.363,663,1.363,679,1.513,686,1.513,692,1.913,696,1.513,699,1.867,700,2.39,701,4.126,702,5.551,703,3.637,704,2.52,705,5.799,706,4.616,707,3.771,708,4.257,709,2.625,710,5.218,711,5.552,712,2.92,713,2.625,714,3.418,715,3.985,716,2.625,717,2.39,718,5.542,719,6.013,720,2.046,721,2.92,722,3.418,723,3.418,724,4.228,725,4.228,726,4.228,727,4.228,728,4.228,729,5.218,730,4.228,731,3.151,732,4.228,733,3.637,734,5.218,735,4.228,736,4.228,737,3.637,738,4.228,739,4.797,740,4.797,741,3.685,742,4.797,743,4.797,744,4.797,745,4.126,746,1.667,747,3.418,748,4.126,749,3.418,750,2.52,751,2.94,752,3.418,753,3.418,754,2.17,755,4.797,756,3.418,757,4.228,758,3.418,759,2.17,760,2.94,761,4.455,762,3.418,763,2.39,764,2.39,765,5.725,766,4.257,767,2.453,768,3.418,769,1.711,770,2.31,771,2.17,772,2.046,773,4.797,774,3.133,775,2.17,776,2.625,777,3.418,778,2.17,779,4.426,780,3.418,781,2.17,782,3.418,783,2.17,784,2.17,785,3.418,786,2.625,787,3.418,788,2.17,789,3.355,790,3.418,791,3.418,792,2.17,793,2.17,794,2.39,795,3.418,796,2.17,797,4.797,798,3.418,799,3.637,800,2.625,801,2.17,802,2.625,803,3.418,804,4.257,805,3.248,806,2.17,807,2.046,808,3.637,809,2.17,810,2.39,811,2.203,812,2.17,813,3.418,814,2.17,815,2.123,816,2.17,817,2.94,818,2.17,819,1.796,820,2.625,821,2.39,822,2.39,823,2.046,824,3.418,825,2.17,826,2.046,827,2.17,828,1.796,829,2.17,830,2.39,831,2.94,832,2.17,833,1.796,834,3.418,835,3.418,836,2.17,837,2.625,838,2.17,839,2.046,840,3.418,841,1.667,842,2.17,843,2.17,844,1.518,845,1.518,846,1.867,847,2.17,848,1.299,849,2.94,850,4.228,851,2.17,852,4.228,853,3.637,854,2.17,855,2.17,856,4.228,857,4.228,858,2.17,859,2.17,860,2.17,861,2.17,862,4.228,863,2.17,864,3.418,865,1.518,866,2.17,867,2.17,868,3.418,869,2.17,870,2.17,871,2.17,872,2.17,873,4.797,874,2.17,875,2.17,876,2.17,877,1.14,878,2.17,879,2.17,880,1.867,881,1.867,882,2.17,883,2.17,884,2.17,885,0.823,886,4.228,887,3.418,888,4.228,889,1.399,890,1.867,891,1.867,892,1.867,893,2.17,894,0.961,895,2.17,896,4.797,897,1.518,898,1.667,899,1.518,900,1.667,901,1.867,902,1.399,903,3.418,904,2.17,905,3.418,906,2.17,907,2.17,908,2.17,909,2.17,910,2.17,911,3.418,912,2.17,913,3.418,914,2.94,915,3.685,916,2.94,917,1.518,918,4.228,919,2.17,920,3.418,921,2.17,922,2.17,923,2.17,924,2.17,925,1.913,926,2.17,927,4.797,928,1.518,929,3.418,930,4.228,931,1.867,932,1.867,933,2.17,934,2.17,935,2.17,936,1.518,937,1.518,938,1.518,939,2.17,940,1.867,941,3.418,942,2.94,943,3.418,944,3.418,945,3.418,946,1.399,947,2.94]],["title/injectables/BudgetService.html",[642,0.441,653,2.067]],["body/injectables/BudgetService.html",[3,0.171,4,0.171,9,0.128,13,0.539,15,0.809,28,1.144,31,0.71,40,0.171,51,0.627,61,0.631,66,0.736,70,0.894,71,0.019,72,0.326,73,0.289,74,0.794,76,0.67,77,2.006,79,0.715,83,0.883,85,0.605,92,0.652,111,2.96,115,1.37,118,0.444,129,2.569,133,1.574,141,2.341,148,0.838,153,0.2,156,0.149,165,0.2,166,0.171,167,0.72,168,0.809,177,1.169,192,0.67,253,3.353,298,1.029,322,0.013,323,0.013,361,2.795,371,2.333,392,0.886,405,2.447,429,2.655,436,2.006,438,1.909,442,2.702,443,3.143,450,2.092,452,2.679,467,1.494,470,3.167,471,2.955,480,2.109,482,2.221,484,1.547,485,2.618,579,3.167,624,0.978,625,3.259,627,3.027,628,1.494,629,4.192,630,5.259,631,1.744,632,1.744,633,1.232,634,4.586,635,3.389,636,3.389,637,1.571,638,2.07,639,4.063,640,3.699,641,1.95,642,0.631,643,2.07,644,2.473,645,4.824,646,1.909,647,3.204,648,2.779,649,3.409,650,4.063,651,1.995,652,1.07,653,3.571,654,3.699,655,4.063,656,2.109,657,2.825,658,2.221,659,2.006,660,1.842,661,2.221,662,2.341,663,2.109,664,3.821,665,3.294,666,3.027,667,2.618,668,4.55,669,5.489,670,4.55,671,3.167,672,3.575,673,3.575,674,2.359,675,2.359,676,2.756,677,5.135,678,3.575,679,2.341,680,3.699,681,4.55,682,3.158,683,3.699,684,3.985,685,3.112,686,2.341,687,4.55,688,3.167,689,4.55,690,2.381,691,2.756,692,2.96,693,4.55,694,2.756,695,3.699,696,2.341,697,4.55,698,3.389,948,1.355,949,5.289,950,2.756,951,3.94,952,3.94,953,3.94,954,3.94,955,3.94,956,3.94,957,3.94]],["title/components/CalendarComponent.html",[0,0.045,269,0.83]],["body/components/CalendarComponent.html",[0,0.072,1,0.659,2,0.877,3,0.127,4,0.127,5,0.717,7,0.628,8,0.628,9,0.095,13,0.49,15,0.853,16,2.35,19,0.659,21,1.713,23,1.901,24,2.516,25,0.569,26,1.471,27,1.076,28,0.489,29,0.938,31,0.393,32,1.012,34,1.446,35,0.659,38,1.012,40,0.127,41,0.422,51,0.422,54,2.123,61,0.512,64,2.703,66,0.77,70,0.801,71,0.019,72,0.315,73,0.307,74,0.711,76,0.544,79,0.668,80,0.659,83,0.717,85,0.53,91,1.901,92,0.636,94,1.55,95,1.803,96,2.008,100,0.416,103,1.713,107,2.125,114,1.309,115,1.798,116,1.713,118,0.429,130,1.061,133,1.089,134,0.804,135,0.853,138,1.217,142,2.049,148,0.887,153,0.212,156,0.111,159,1.639,163,0.795,165,0.111,166,0.127,167,0.655,168,0.371,173,1.23,192,0.853,194,4.816,198,1.46,208,1.111,214,1.477,243,3.003,247,2.256,248,1.342,257,0.659,258,0.92,259,0.724,260,1.54,261,0.724,262,0.724,263,0.659,264,0.724,265,0.628,266,1.061,267,0.659,268,0.724,269,1.4,270,0.724,271,0.724,272,0.628,273,0.542,274,1.061,275,0.659,276,0.598,277,0.724,278,0.659,279,0.724,280,0.659,281,0.724,282,0.628,283,0.724,284,0.628,285,0.598,286,0.724,287,0.659,288,0.724,289,0.659,290,0.724,291,0.724,292,0.659,293,0.724,294,0.659,295,0.724,296,0.659,297,0.691,298,0.763,299,0.724,300,0.659,301,0.724,302,0.659,303,0.724,304,0.659,305,0.691,306,0.724,307,0.659,308,0.542,309,0.724,310,0.659,311,0.691,312,0.724,313,0.691,314,0.724,315,0.659,316,0.724,317,0.542,318,0.569,319,0.628,320,0.724,321,0.724,322,0.01,323,0.01,330,1.477,341,1.901,355,1.55,357,2.767,364,1.112,367,1.007,397,3.273,400,3.298,415,3.905,416,2.506,442,1.55,443,1.803,500,2.125,501,2.152,505,1.477,544,1.539,557,2.008,573,1.37,592,2.008,621,1.888,623,1.446,631,1.901,632,2.478,633,2.195,638,1.539,641,1.45,648,1.539,663,1.713,704,2.671,706,4.3,707,3.929,712,3.694,731,3.283,737,4.373,741,4.3,745,3.694,746,2.25,760,4.373,764,4.71,769,1.408,772,2.571,774,3.539,789,3.915,804,2.25,821,3.003,839,3.352,844,2.049,845,2.049,853,3.694,877,1.539,881,2.52,894,1.901,917,2.049,946,1.888,958,2.52,959,4.816,960,3.555,961,5.127,962,1.629,963,4.857,964,4.294,965,2.767,966,3.694,967,4.294,968,4.294,969,4.294,970,5.083,971,5.96,972,3.905,973,3.905,974,5.083,975,5.96,976,5.96,977,5.083,978,4.294,979,4.294,980,4.294,981,4.294,982,2.639,983,2.929,984,2.929,985,2.516,986,3.352,987,3.352,988,3.352,989,4.294,990,2.929,991,3.298,992,5.96,993,3.003,994,3.298,995,2.929,996,4.294,997,2.929,998,4.294,999,2.929,1000,4.294,1001,2.929,1002,3.646,1003,4.785,1004,5.127,1005,2.929,1006,2.403,1007,2.929,1008,3.003,1009,3.352,1010,3.694,1011,3.003,1012,2.929,1013,4.294,1014,2.929,1015,4.294,1016,2.929,1017,2.929,1018,2.929,1019,3.298,1020,2.929,1021,2.767,1022,2.929,1023,2.929,1024,3.694,1025,3.694,1026,3.694,1027,3.694,1028,3.694,1029,3.694,1030,3.694,1031,4.294,1032,3.694,1033,4.294,1034,5.96,1035,2.929,1036,2.929,1037,4.294,1038,4.816,1039,2.929,1040,4.294,1041,4.294,1042,4.294,1043,5.083,1044,2.929,1045,2.52,1046,2.929,1047,2.929,1048,2.929,1049,2.929,1050,2.929,1051,2.929,1052,1.37,1053,2.52,1054,2.929,1055,2.929,1056,2.929,1057,2.929,1058,3.298,1059,2.929,1060,2.929,1061,2.929,1062,4.294,1063,2.929,1064,2.52,1065,2.929,1066,2.929,1067,2.929,1068,2.571,1069,1.45,1070,1.37,1071,2.929,1072,2.929,1073,4.294,1074,2.767,1075,2.767,1076,2.767,1077,3.298,1078,3.003,1079,3.003,1080,3.003,1081,3.003]],["title/interfaces/Category.html",[100,0.525,624,0.683]],["body/interfaces/Category.html",[3,0.169,4,0.169,9,0.127,13,0.307,15,0.666,16,2.184,29,0.904,31,0.525,40,0.169,41,0.517,51,0.384,61,0.466,71,0.019,72,0.342,73,0.303,76,0.495,77,1.482,79,0.666,83,0.652,85,0.506,92,0.582,100,1.111,111,2.186,114,0.759,118,0.463,132,1.568,133,1.363,138,1.355,141,2.328,147,1.24,148,0.619,153,0.241,156,0.148,165,0.199,166,0.169,167,0.734,168,0.753,177,1.214,182,3.139,192,0.912,198,1.214,222,2.097,298,0.955,322,0.012,323,0.012,371,1.949,392,0.878,405,2.044,416,2.296,429,2.412,436,1.482,438,1.41,442,2.522,443,2.933,450,2.29,451,2.518,452,2.208,467,1.482,470,2.339,471,2.942,480,1.558,482,1.64,483,1.73,484,1.362,485,1.934,499,1.995,500,3.147,505,1.809,586,2.339,588,2.518,623,1.112,624,1.099,626,1.73,628,2.412,633,2.184,637,2.097,642,0.627,643,2.053,644,1.827,646,1.41,647,2.459,649,2.518,651,1.221,652,1.061,656,1.558,657,1.73,658,2.208,659,1.995,660,1.827,661,2.208,662,1.73,663,1.558,664,2.339,665,3.285,671,2.339,672,2.339,673,3.559,674,2.339,675,2.339,678,3.149,679,1.73,682,1.934,684,3.559,685,2.459,686,1.73,688,2.339,690,2.097,692,2.186,695,2.732,769,2.328,802,3.001,807,3.149,810,3.678,811,2.518,828,2.763,885,1.482,982,1.73,1074,2.518,1082,3.001,1083,5.709,1084,3.144,1085,3.559,1086,4.183,1087,3.559,1088,4.04,1089,4.524,1090,4.524,1091,3.149,1092,3.678,1093,2.943,1094,4.524,1095,3.361,1096,3.361,1097,2.947,1098,2.186,1099,2.732,1100,3.001,1101,3.361,1102,2.763,1103,2.518,1104,2.732,1105,3.831,1106,3.361,1107,2.053,1108,3.001,1109,3.361,1110,3.361,1111,3.361,1112,3.361,1113,3.361,1114,2.518,1115,3.389,1116,3.361,1117,3.361,1118,4.524,1119,2.732,1120,1.64,1121,3.361,1122,3.361,1123,2.732,1124,2.339,1125,3.361,1126,3.361,1127,3.361,1128,3.361,1129,2.732,1130,5.113,1131,3.361,1132,3.361,1133,2.732,1134,2.518,1135,3.361,1136,3.361,1137,2.053,1138,3.361,1139,3.361,1140,4.524,1141,3.361,1142,3.678,1143,3.361,1144,3.361,1145,3.361,1146,3.001,1147,3.361,1148,3.361]],["title/components/CategoryDropdownComponent.html",[0,0.045,35,0.83]],["body/components/CategoryDropdownComponent.html",[0,0.081,1,0.771,2,0.981,3,0.149,4,0.149,5,0.803,6,1.071,7,1.189,8,0.734,9,0.111,13,0.499,15,0.434,19,0.771,25,0.666,26,1.491,27,1.09,28,0.572,29,0.855,30,1.735,31,0.645,32,1.133,34,1.579,35,1.353,36,2.128,38,1.133,40,0.149,41,0.472,48,4.867,51,0.472,54,2.282,61,0.662,66,0.771,68,2.878,70,0.808,71,0.019,72,0.337,73,0.318,74,0.821,79,0.736,80,0.771,85,0.539,89,3.877,92,0.649,96,2.247,99,2.018,100,1.097,101,3.097,102,5.161,103,2.745,106,1.881,118,0.397,125,3.106,126,2.878,128,2.69,130,1.487,133,1.03,134,0.885,135,0.803,138,0.981,144,2.525,146,2.018,147,1.418,148,0.953,151,2.978,153,0.228,154,2.397,155,1.918,156,0.13,161,5.161,163,0.931,165,0.13,166,0.241,167,0.632,168,0.434,190,2.633,191,2.948,192,0.434,198,0.981,257,0.771,258,1.03,259,0.847,260,1.487,261,0.847,262,0.847,263,0.771,264,0.847,265,0.734,266,1.188,267,0.771,268,0.847,269,0.771,270,0.847,271,0.847,272,0.734,273,0.634,274,1.188,275,0.771,276,0.7,277,0.847,278,0.771,279,0.847,280,0.771,281,0.847,282,0.734,283,0.847,284,0.734,285,0.7,286,0.847,287,0.771,288,0.847,289,0.771,290,0.847,291,0.847,292,0.771,293,0.847,294,0.771,295,0.847,296,0.771,297,0.808,298,0.951,299,0.847,300,0.771,301,0.847,302,0.771,303,0.847,304,0.771,305,0.808,306,0.847,307,0.771,308,0.634,309,0.847,310,0.771,311,0.808,312,0.847,313,0.808,314,0.847,315,0.771,316,0.847,317,0.634,318,0.666,319,0.734,320,0.847,321,0.847,322,0.011,323,0.011,352,3.097,395,2.379,416,2.485,422,3.692,453,2.633,454,3.097,456,4.208,462,3.106,484,1.245,521,2.525,544,1.801,587,3.692,588,2.209,928,4.208,1097,2.995,1102,3.543,1105,3.097,1149,6.347,1150,2.948,1151,3.361,1152,3.602,1153,3.602,1154,5.55,1155,4.806,1156,5.55,1157,5.55,1158,6.016,1159,4.806,1160,4.806,1161,6.016,1162,2.247,1163,6.335,1164,5.55,1165,2.69,1166,5.55,1167,4.134,1168,2.948,1169,4.806,1170,4.208,1171,4.121,1172,3.427,1173,4.233,1174,6.016,1175,3.427,1176,3.097,1177,4.134,1178,4.134,1179,4.806,1180,3.427,1181,3.602,1182,3.427,1183,2.948,1184,4.806,1185,4.774,1186,3.324,1187,4.264,1188,3.324,1189,3.427,1190,3.427,1191,4.806,1192,4.134,1193,4.806,1194,3.427,1195,3.427,1196,3.097,1197,3.427,1198,4.806,1199,3.427,1200,2.878,1201,2.397,1202,1.179,1203,3.427,1204,4.774,1205,3.427,1206,4.806,1207,4.806,1208,4.806,1209,6.335,1210,3.427,1211,2.948,1212,2.633,1213,2.633,1214,3.427,1215,3.427,1216,4.134,1217,4.806]],["title/injectables/CategoryService.html",[642,0.441,1102,1.941]],["body/injectables/CategoryService.html",[3,0.155,4,0.155,9,0.117,13,0.524,15,0.777,16,2.135,28,0.828,29,0.915,31,0.666,40,0.155,51,0.603,61,0.592,66,0.731,70,0.865,71,0.019,72,0.346,73,0.279,74,0.768,76,0.628,77,1.881,79,0.747,83,0.828,85,0.608,92,0.637,100,1.108,111,2.775,114,0.964,118,0.444,132,1.069,133,1.463,138,1.394,141,1.587,147,0.845,148,0.786,153,0.232,156,0.136,165,0.188,166,0.155,167,0.718,168,0.816,177,1.195,182,3.118,192,0.895,198,1.161,222,1.43,298,1.045,322,0.012,323,0.012,371,2.184,392,0.806,405,2.394,416,2.513,429,2.59,436,1.881,438,1.79,442,2.666,443,3.101,450,2.345,451,2.311,452,2.576,467,1.36,470,2.97,471,2.814,480,1.978,482,2.082,483,1.587,484,1.473,485,2.455,499,1.36,500,2.455,505,1.233,586,2.147,588,2.311,623,1.02,624,0.917,628,1.881,633,2.013,637,1.43,642,0.592,643,1.884,644,2.319,646,1.79,647,3.115,649,3.196,651,1.55,652,0.973,656,1.978,657,2.716,658,2.082,659,1.881,660,1.676,661,2.576,662,2.196,663,1.978,664,3.674,665,3.188,671,2.97,672,3.405,673,3.405,674,2.147,675,2.147,678,2.97,679,2.196,682,2.455,684,3.856,685,3.011,686,2.196,688,2.147,690,1.978,692,2.775,695,3.469,769,1.864,802,2.754,807,2.147,810,2.508,811,3.196,828,1.884,885,1.881,948,1.233,950,2.508,982,2.196,1074,2.311,1082,2.754,1083,4.266,1084,2.517,1085,2.006,1086,3.856,1087,3.405,1088,2.754,1089,3.084,1090,3.084,1091,2.147,1092,2.508,1093,2.006,1094,3.084,1095,3.084,1096,3.084,1097,3.036,1098,2.775,1099,3.469,1100,3.81,1101,4.266,1102,3.223,1103,3.196,1104,3.469,1105,4.293,1106,4.266,1107,2.606,1108,3.81,1109,4.266,1110,4.266,1111,4.266,1112,4.266,1113,5.277,1114,2.311,1115,3.196,1116,3.084,1117,3.084,1118,4.266,1119,2.508,1120,1.505,1121,3.084,1122,3.084,1123,2.508,1124,2.147,1125,3.084,1126,3.084,1127,3.084,1128,4.266,1129,3.469,1130,4.891,1131,4.266,1132,3.084,1133,3.469,1134,3.196,1135,4.266,1136,4.266,1137,1.884,1138,3.084,1139,3.084,1140,4.266,1141,3.084,1142,3.469,1143,3.084,1144,3.084,1145,3.084,1146,3.81,1147,4.266,1148,3.084,1218,4.959,1219,3.585,1220,3.585,1221,3.585,1222,3.585,1223,3.585,1224,3.585,1225,3.585,1226,3.585]],["title/interfaces/ChatMessage.html",[624,0.683,1227,2.381]],["body/interfaces/ChatMessage.html",[3,0.166,4,0.166,9,0.124,13,0.301,15,0.484,20,2.461,25,1.28,40,0.166,41,0.509,61,0.456,71,0.019,72,0.346,73,0.286,76,0.484,78,2.021,79,0.581,83,0.638,85,0.578,114,1.28,118,0.433,135,0.88,138,1.536,146,1.603,153,0.257,156,0.145,165,0.196,166,0.166,167,0.714,168,0.834,177,1.16,192,0.907,198,0.78,208,1.448,214,1.313,215,1.252,255,1.786,276,1.057,285,0.78,298,0.573,308,1.165,322,0.012,323,0.014,325,2.721,327,2.006,328,4.06,329,3.303,336,2.908,345,2.006,355,1.379,364,0.989,367,2.388,369,1.89,380,4.336,383,2.006,389,2.461,392,0.859,394,2.671,426,2.287,427,3.118,433,1.342,439,2.137,441,1.89,479,4.109,505,1.313,513,2.461,522,2.671,528,2.006,545,2.461,546,2.287,563,1.87,624,1.087,626,1.691,642,0.618,651,1.619,652,1.037,659,1.448,662,1.691,663,1.523,682,1.89,686,1.691,713,3.978,766,3.978,767,1.691,770,3.006,794,2.671,815,2.789,819,2.721,925,2.137,985,2.563,994,2.934,1002,2.006,1006,2.137,1068,3.101,1069,1.89,1070,1.786,1091,3.101,1120,1.603,1227,4.476,1228,2.934,1229,2.934,1230,3.978,1231,2.898,1232,4.455,1233,5.334,1234,5.427,1235,3.622,1236,2.343,1237,4.455,1238,3.288,1239,3.978,1240,4.455,1241,2.671,1242,2.934,1243,2.461,1244,3.787,1245,3.285,1246,4.513,1247,5.837,1248,2.934,1249,4.23,1250,4.455,1251,5.054,1252,4.839,1253,2.461,1254,3.285,1255,3.285,1256,3.285,1257,2.934,1258,2.934,1259,2.934,1260,2.934,1261,2.898,1262,3.285,1263,2.461,1264,2.461,1265,4.513,1266,2.461,1267,3.285,1268,2.934,1269,2.137,1270,3.285,1271,3.285,1272,3.285,1273,2.934,1274,2.934,1275,2.287,1276,4.455,1277,5.841,1278,3.118,1279,3.285,1280,2.934,1281,2.671,1282,4.513,1283,3.978,1284,3.338,1285,2.898,1286,3.978,1287,3.285,1288,2.137,1289,3.285,1290,2.461,1291,2.006,1292,2.563,1293,4.455,1294,5.665,1295,1.786,1296,2.671,1297,3.285,1298,3.285,1299,3.285,1300,3.978,1301,3.285,1302,3.285,1303,3.285,1304,3.285,1305,3.978,1306,3.285,1307,3.285,1308,3.285,1309,3.285,1310,3.285,1311,3.285,1312,3.978,1313,4.455,1314,4.839,1315,4.455,1316,3.285,1317,2.934,1318,3.978,1319,3.285,1320,3.285,1321,3.285,1322,3.285,1323,3.285,1324,3.285,1325,3.285,1326,3.285,1327,3.285,1328,3.285,1329,4.513,1330,3.285,1331,2.934,1332,2.671,1333,3.285,1334,2.671,1335,3.285,1336,2.934,1337,3.285,1338,3.285,1339,2.671,1340,2.287,1341,3.285,1342,3.285,1343,2.461,1344,3.285,1345,3.285,1346,2.671,1347,2.934,1348,3.285,1349,3.978,1350,3.285,1351,2.934,1352,2.934,1353,3.978,1354,2.721,1355,2.461,1356,2.563,1357,2.671,1358,3.978,1359,2.461,1360,2.934,1361,2.934,1362,4.513,1363,2.934,1364,2.934,1365,2.934,1366,2.287,1367,2.934]],["title/interfaces/CompoDocConfig.html",[624,0.683,1368,2.381]],["body/interfaces/CompoDocConfig.html",[0,0.046,3,0.164,4,0.164,5,1.257,6,0.774,7,0.531,8,0.531,9,0.22,15,0.703,17,3.083,23,1.096,24,1.874,26,0.481,31,0.618,40,0.107,41,0.452,54,0.939,61,0.296,69,1.226,71,0.019,72,0.121,73,0.322,74,0.917,92,0.472,94,0.894,115,0.981,118,0.435,125,2.573,134,0.614,144,1.301,147,1.617,148,0.816,153,0.21,155,1.386,156,0.094,165,0.094,166,0.107,168,0.858,173,1.59,177,1.075,192,0.858,198,1.383,208,2.219,212,1.301,213,1.874,214,1.908,215,2.153,222,1.51,248,1.184,273,0.85,298,0.914,308,0.458,317,0.458,318,1.317,322,0.009,323,0.009,336,3.49,345,3.298,364,1.334,367,1.908,369,1.226,383,3.508,392,0.557,461,2.276,483,1.096,484,2.015,499,0.939,507,1.483,558,1.301,563,1.367,573,1.158,579,2.268,582,0.988,595,1.386,611,1.596,614,1.732,615,3.216,619,3.216,621,2.441,623,1.465,624,0.85,626,1.096,633,1.184,656,0.988,667,1.226,679,1.096,685,1.158,690,0.988,696,2.035,700,1.732,750,1.301,767,1.096,769,2.328,770,1.096,815,2.035,833,1.99,865,3.88,885,0.939,889,1.596,894,1.096,902,1.596,936,1.732,937,1.732,938,1.732,965,4.365,1008,3.88,1052,1.158,1069,2.746,1070,2.15,1084,1.096,1098,2.573,1173,2.441,1176,2.963,1236,2.213,1238,2.119,1261,1.386,1278,2.276,1288,3.274,1340,1.483,1354,1.301,1356,1.226,1368,2.963,1369,1.226,1370,1.386,1371,1.732,1372,3.955,1373,3.955,1374,3.955,1375,3.955,1376,3.955,1377,3.955,1378,3.955,1379,3.955,1380,3.955,1381,3.955,1382,3.955,1383,3.955,1384,3.955,1385,3.955,1386,3.955,1387,3.955,1388,3.955,1389,3.955,1390,3.955,1391,3.955,1392,3.955,1393,3.955,1394,4.262,1395,2.649,1396,1.99,1397,1.732,1398,1.99,1399,2.963,1400,1.732,1401,1.99,1402,1.483,1403,1.732,1404,2.441,1405,3.576,1406,2.909,1407,1.902,1408,1.386,1409,2.119,1410,2.909,1411,1.902,1412,3.853,1413,2.963,1414,4.304,1415,2.441,1416,1.04,1417,2.119,1418,1.902,1419,1.596,1420,5.491,1421,1.386,1422,3.216,1423,1.596,1424,1.902,1425,1.732,1426,1.902,1427,1.902,1428,2.441,1429,1.902,1430,2.909,1431,1.902,1432,1.902,1433,1.483,1434,3.88,1435,2.909,1436,5.029,1437,3.532,1438,3.532,1439,1.902,1440,5,1441,2.441,1442,1.902,1443,1.732,1444,1.902,1445,1.902,1446,1.902,1447,1.732,1448,1.732,1449,3.216,1450,3.532,1451,3.645,1452,3.503,1453,3.198,1454,4.494,1455,3.955,1456,3.946,1457,3.955,1458,4.578,1459,3.083,1460,4.258,1461,4.258,1462,4.494,1463,3.955,1464,5.044,1465,4.676,1466,4.262,1467,1.902,1468,2.119,1469,1.732,1470,4.262,1471,1.596,1472,3.532,1473,1.732,1474,4.943,1475,1.902,1476,2.909,1477,3.216,1478,1.902,1479,3.319,1480,3.216,1481,1.902,1482,2.268,1483,2.649,1484,1.902,1485,1.902,1486,1.902,1487,1.902,1488,3.645,1489,1.596,1490,1.732,1491,2.963,1492,1.902,1493,1.596,1494,2.963,1495,1.902,1496,3.532,1497,1.902,1498,3.532,1499,1.902,1500,1.902,1501,1.902,1502,2.753,1503,1.902,1504,1.902,1505,2.649,1506,2.649,1507,3.532,1508,1.732,1509,2.909,1510,1.902,1511,1.902,1512,3.216,1513,3.771,1514,2.909,1515,1.386,1516,4.494,1517,1.902,1518,3.601,1519,2.909,1520,1.902,1521,1.902,1522,1.902,1523,1.483,1524,1.732,1525,1.902,1526,1.902,1527,4.823,1528,1.902,1529,1.596,1530,2.909,1531,1.902,1532,1.902,1533,1.902,1534,1.902,1535,1.902,1536,1.902,1537,1.902,1538,1.902,1539,1.902,1540,1.902,1541,1.902,1542,1.902,1543,1.902,1544,1.902,1545,2.119,1546,1.902,1547,1.902,1548,1.902,1549,1.902,1550,1.902,1551,1.902,1552,1.483,1553,1.902,1554,1.902,1555,1.902,1556,1.902,1557,1.902,1558,5.044,1559,1.902,1560,1.902,1561,1.902,1562,1.902,1563,1.902,1564,1.902,1565,1.902,1566,1.902,1567,1.902,1568,1.732,1569,3.532,1570,2.909,1571,1.902,1572,1.902,1573,3.955,1574,4.494,1575,1.902,1576,1.902,1577,1.902,1578,3.216,1579,3.216,1580,1.902,1581,1.902,1582,1.902,1583,1.902,1584,1.483,1585,1.902,1586,3.955,1587,1.902,1588,1.902,1589,1.902,1590,2.909,1591,1.902,1592,1.732,1593,1.902,1594,1.902,1595,1.902,1596,1.902,1597,1.902,1598,1.902,1599,1.902,1600,1.99,1601,1.902,1602,1.732,1603,1.902,1604,3.532,1605,1.902,1606,1.902,1607,1.902,1608,1.902,1609,1.902,1610,1.902,1611,1.902,1612,1.902,1613,1.902,1614,1.386,1615,1.902,1616,1.902,1617,2.909,1618,1.902,1619,1.902,1620,2.909,1621,1.902,1622,1.596,1623,1.732,1624,1.732,1625,1.902,1626,1.902,1627,1.902,1628,1.596,1629,1.902,1630,1.902,1631,1.902,1632,1.732,1633,1.902,1634,3.319,1635,1.902,1636,1.386,1637,1.732,1638,1.483,1639,1.902,1640,1.902,1641,2.119,1642,1.902,1643,2.909,1644,1.902,1645,3.083,1646,1.902,1647,2.909,1648,1.902,1649,1.902,1650,1.902,1651,2.909,1652,1.902,1653,1.902,1654,0.812,1655,1.902,1656,1.386,1657,1.732,1658,1.732,1659,1.732,1660,1.732,1661,1.732,1662,1.902,1663,1.902,1664,1.596,1665,1.902,1666,1.902,1667,1.902]],["title/injectables/ConfigService.html",[642,0.441,1668,1.828]],["body/injectables/ConfigService.html",[3,0.182,4,0.182,9,0.2,13,0.331,21,2.201,27,0.785,40,0.182,41,0.542,51,0.542,61,0.735,66,0.78,71,0.019,72,0.342,73,0.295,76,0.699,78,1.898,79,0.619,83,0.922,85,0.647,114,1.403,118,0.465,134,0.811,135,0.901,153,0.209,156,0.159,165,0.159,166,0.182,168,0.96,177,1.188,311,1.301,322,0.013,323,0.013,329,3.494,392,0.945,393,3.138,442,2.568,467,2.094,501,2.363,563,2.698,628,2.094,642,0.659,644,2.581,651,2.37,652,1.141,822,3.861,830,3.861,885,2.483,948,1.445,1241,2.939,1253,4.651,1275,3.92,1416,2.749,1433,4.259,1502,3.305,1552,4.539,1638,3.92,1668,3.24,1669,3.615,1670,3.861,1671,4.735,1672,5.302,1673,5.302,1674,5.302,1675,3.613,1676,6.546,1677,6.546,1678,6.546,1679,5.52,1680,4.202,1681,3.861,1682,3.557,1683,6.208,1684,6.003,1685,4.24,1686,5.631,1687,5.631,1688,4.24,1689,3.305,1690,5.52,1691,5.52,1692,5.52,1693,4.202,1694,4.202,1695,5.52,1696,4.202,1697,5.52,1698,4.202,1699,5.52,1700,5.52,1701,5.631,1702,5.52,1703,4.202,1704,4.219,1705,5.52,1706,4.748,1707,5.52,1708,4.202,1709,5.52,1710,6.164,1711,5.52,1712,4.202,1713,4.202,1714,3.615,1715,4.202]],["title/components/DownloadComponentComponent.html",[0,0.045,272,0.792]],["body/components/DownloadComponentComponent.html",[0,0.078,1,0.563,2,0.78,3,0.109,4,0.109,5,0.638,6,0.783,7,0.537,8,0.537,9,0.235,13,0.439,15,0.774,16,1.97,18,3.339,19,1.589,21,2.066,25,0.743,26,1.449,27,1.059,28,0.418,29,0.987,31,0.337,32,0.901,33,2.985,34,1.318,35,0.563,38,0.901,40,0.225,41,0.375,51,0.375,54,1.965,61,0.456,63,3.788,64,2.566,65,2.946,66,0.714,70,0.696,71,0.019,72,0.299,73,0.304,74,0.618,75,3.339,76,0.656,78,1.314,79,0.738,80,1.041,83,0.865,85,0.536,86,2.985,91,2.293,92,0.647,94,1.379,95,1.604,96,1.786,100,0.918,101,2.462,106,1.194,113,2.462,114,0.743,115,1.92,116,2.066,118,0.43,129,1.87,130,0.944,132,1.753,133,1.588,134,0.553,135,0.317,137,4.515,138,1.345,144,2.007,148,0.734,150,3.519,151,1.891,153,0.257,156,0.095,157,2.985,158,1.109,159,1.402,163,0.68,164,1.5,165,0.196,166,0.109,167,0.722,168,0.888,173,1.604,177,0.865,178,1.615,179,2.985,182,1.052,183,1.24,187,1.24,192,0.926,198,0.78,208,0.95,212,2.433,213,2.292,214,0.862,215,1.518,217,1.615,246,3.339,247,2.433,248,1.448,255,2.165,256,2.292,257,0.563,258,0.819,259,0.619,260,1.28,261,0.619,262,0.619,263,0.563,264,0.619,265,0.537,266,0.944,267,0.563,268,0.619,269,0.563,270,0.619,271,0.619,272,1.259,273,1.362,274,0.944,275,0.563,276,0.512,277,0.619,278,0.563,279,0.619,280,0.563,281,0.619,282,1.11,283,0.619,284,0.537,285,0.512,286,0.619,287,0.563,288,0.619,289,0.563,290,0.619,291,0.619,292,0.563,293,0.619,294,0.563,295,0.619,296,0.563,297,0.591,298,0.376,299,0.619,300,0.563,301,0.619,302,0.563,303,0.619,304,0.563,305,0.591,306,0.619,307,0.563,308,0.463,309,0.619,310,0.563,311,0.591,312,0.619,313,0.591,314,0.619,315,0.563,316,0.619,317,0.463,318,0.487,319,0.537,320,0.619,321,0.619,322,0.009,323,0.009,338,2.592,341,1.691,355,1.379,361,2.175,364,0.649,371,1.253,395,1.891,416,2.275,433,0.649,448,1.691,461,1.24,473,2.985,477,4.11,521,2.007,544,1.316,563,1.379,592,1.786,623,1.318,624,0.707,625,2.342,628,0.95,631,2.858,632,2.858,638,2.007,641,1.891,644,1.786,646,1.379,648,3.311,653,3.526,680,1.752,709,3.979,721,2.138,746,1.925,772,2.288,774,3.119,776,2.935,786,4.515,789,2.672,837,2.935,841,1.925,877,3.311,899,2.672,917,3.239,928,1.752,947,3.287,985,1.891,986,2.288,987,2.288,988,2.288,1009,2.288,1075,2.462,1076,2.462,1078,2.672,1079,2.672,1080,2.672,1081,2.672,1093,1.402,1102,3.311,1137,2.007,1151,2.672,1201,1.752,1236,2.066,1285,3.8,1291,2.007,1292,1.891,1295,1.786,1296,2.672,1354,2.433,1355,1.615,1356,1.24,1408,1.402,1451,2.288,1453,2.722,1471,1.615,1479,1.615,1488,1.5,1515,2.899,1641,2.592,1645,2.288,1654,0.821,1656,1.402,1664,2.985,1681,2.672,1716,4.807,1717,5.28,1718,5.28,1719,1.752,1720,3.287,1721,5.144,1722,4.959,1723,2.288,1724,2.935,1725,2.935,1726,3.984,1727,3.984,1728,4.456,1729,4.456,1730,4.456,1731,3.821,1732,3.821,1733,4.456,1734,3.821,1735,3.821,1736,2.935,1737,2.505,1738,2.505,1739,2.505,1740,3.287,1741,3.287,1742,3.287,1743,3.287,1744,2.505,1745,3.623,1746,3.287,1747,2.505,1748,4.797,1749,2.505,1750,2.505,1751,3.287,1752,3.287,1753,4.797,1754,5.056,1755,2.505,1756,3.287,1757,3.979,1758,2.505,1759,2.505,1760,2.462,1761,2.935,1762,2.672,1763,1.615,1764,1.925,1765,3.557,1766,2.935,1767,1.402,1768,3.594,1769,1.615,1770,3.287,1771,3.984,1772,3.984,1773,2.155,1774,2.155,1775,2.155,1776,4.515,1777,2.155,1778,2.155,1779,2.155,1780,2.155,1781,1.752,1782,2.155,1783,2.155,1784,2.155,1785,2.155,1786,2.155,1787,2.155,1788,1.615,1789,2.155,1790,2.155,1791,1.5,1792,2.155,1793,2.155,1794,2.155,1795,2.155,1796,2.155,1797,2.155,1798,2.155,1799,2.155,1800,2.155,1801,3.984,1802,2.155,1803,3.239,1804,2.155,1805,2.155,1806,2.155,1807,2.155,1808,1.925,1809,2.155,1810,2.155,1811,1.925,1812,1.925,1813,3.984,1814,1.925,1815,2.155,1816,1.925,1817,1.925,1818,1.925,1819,1.925,1820,2.155,1821,2.155,1822,2.155,1823,3.287,1824,2.155,1825,2.155,1826,2.155,1827,2.155,1828,3.984,1829,2.155,1830,2.155,1831,2.155,1832,2.155,1833,2.155,1834,2.155,1835,3.287,1836,2.155,1837,4.456,1838,2.155,1839,3.287,1840,2.462,1841,2.935,1842,2.935,1843,2.155,1844,2.155,1845,2.155,1846,2.155,1847,1.925,1848,1.925,1849,2.155,1850,2.155,1851,2.155,1852,2.155,1853,2.155,1854,2.155,1855,4.797,1856,2.155,1857,2.155,1858,2.155,1859,2.155,1860,2.155,1861,2.155,1862,2.155,1863,5.554,1864,2.155,1865,2.155,1866,1.5,1867,2.155,1868,1.615,1869,1.752,1870,2.155,1871,1.752,1872,2.155,1873,2.155,1874,1.925,1875,2.155,1876,2.155,1877,2.155,1878,3.287,1879,2.155,1880,2.155,1881,2.155,1882,2.155,1883,2.155,1884,2.155,1885,2.155,1886,2.155,1887,2.155,1888,3.287,1889,2.155,1890,2.155,1891,2.155,1892,2.155]],["title/interfaces/Expense.html",[29,0.525,624,0.683]],["body/interfaces/Expense.html",[3,0.155,4,0.155,9,0.116,13,0.282,15,0.865,16,2.134,21,2.656,25,0.963,28,0.598,29,1.107,31,0.481,40,0.155,41,0.487,64,2.081,71,0.019,72,0.243,73,0.316,74,0.853,76,0.454,77,2.526,79,0.556,83,0.598,85,0.566,91,2.948,92,0.52,100,1.035,111,2.004,114,0.696,115,1.913,116,2.775,118,0.47,129,2.55,132,1.478,133,1.314,141,3.022,153,0.215,156,0.136,165,0.188,166,0.155,167,0.731,168,0.454,177,1.233,182,2.575,183,3.035,187,3.035,192,0.936,193,2.505,195,2.751,198,1.394,247,2.604,248,1.549,253,3.499,255,2.317,256,2.453,322,0.012,323,0.012,330,1.232,364,1.589,371,1.174,392,0.805,405,1.954,429,2.326,433,0.928,436,1.358,438,1.293,442,1.789,450,2.281,452,1.504,467,1.358,471,2.453,482,1.504,484,1.589,623,1.019,624,1.051,626,1.585,628,1.88,629,2.967,631,1.585,632,2.194,633,1.917,637,1.976,638,1.882,640,3.466,641,1.773,642,0.591,643,1.882,647,2.317,651,1.12,652,0.972,654,2.505,657,1.585,658,2.081,659,1.88,660,1.675,661,2.081,663,1.976,664,2.144,665,3.296,667,1.773,671,2.144,672,2.144,673,3.672,674,2.144,675,2.144,676,2.505,678,3.403,679,1.585,684,3.403,685,2.317,688,2.967,690,2.446,691,3.466,692,2.004,694,3.466,721,2.773,769,1.625,828,2.604,877,2.986,982,2.194,986,3.855,987,3.855,988,3.672,991,2.751,1058,2.751,1074,2.308,1084,2.194,1087,2.967,1092,4.657,1093,3.727,1097,1.428,1105,2.308,1107,1.882,1114,2.308,1115,2.308,1123,2.505,1124,2.144,1129,2.505,1142,2.505,1202,1.232,1231,2.004,1264,2.308,1292,3.379,1295,1.675,1584,2.144,1654,1.174,1781,2.505,1788,4.149,1791,4.394,1893,2.751,1894,5.538,1895,5.538,1896,4.263,1897,3.081,1898,3.081,1899,3.466,1900,3.081,1901,3.081,1902,3.081,1903,3.081,1904,3.081,1905,3.081,1906,3.081,1907,3.081,1908,3.081,1909,3.081,1910,3.081,1911,4.263,1912,3.081,1913,3.081,1914,3.081,1915,3.081,1916,3.081,1917,3.081,1918,3.081,1919,3.081,1920,3.081,1921,3.081,1922,3.081,1923,3.081,1924,3.081,1925,3.081,1926,4.888,1927,3.081,1928,4.888,1929,3.081,1930,3.081,1931,3.081,1932,3.081,1933,3.081,1934,4.888,1935,3.081,1936,3.081,1937,3.081,1938,3.081,1939,4.263,1940,3.081]],["title/components/ExpenseDetailsModalComponent.html",[0,0.045,275,0.83]],["body/components/ExpenseDetailsModalComponent.html",[0,0.078,1,0.675,2,1.156,3,0.13,4,0.13,5,0.73,7,0.643,8,0.643,9,0.098,13,0.406,15,0.763,16,1.366,18,3.65,19,1.568,21,2.703,23,1.935,24,2.552,25,0.583,26,1.475,27,1.078,28,0.501,29,1.089,30,1.578,31,0.587,32,1.031,33,3.323,34,1.467,35,1.273,38,1.031,40,0.13,41,0.429,48,3.96,51,0.429,54,2.148,55,3.76,61,0.358,62,2.582,63,4.049,66,0.765,70,0.587,71,0.019,72,0.307,73,0.299,74,0.522,75,3.323,76,0.554,79,0.49,80,0.675,83,0.73,85,0.552,86,3.323,91,3,92,0.658,94,1.578,95,1.835,96,2.648,97,3.76,100,1.054,102,3.057,103,2.933,106,1.771,110,3.76,114,0.85,115,1.756,116,2.703,118,0.342,129,2.519,130,1.08,133,0.937,134,0.718,135,0.653,144,2.297,146,2.638,147,1.031,148,0.817,153,0.228,156,0.166,157,1.934,158,1.329,161,2.099,162,2.582,163,0.815,165,0.114,166,0.13,167,0.459,173,1.835,178,1.934,179,3.88,182,1.835,183,1.486,184,3.76,187,1.486,189,2.582,190,2.305,192,0.38,243,3.057,246,4.283,247,3.301,248,2.205,249,3.76,250,3.358,251,3.961,252,3.961,253,2.297,254,3.76,255,2.938,256,3.11,257,0.675,258,0.937,259,0.742,260,1.4,261,0.742,262,0.742,263,0.675,264,0.742,265,0.643,266,1.08,267,0.675,268,0.742,269,0.675,270,0.742,271,0.742,272,0.643,273,0.555,274,1.08,275,1.413,276,1.583,277,0.742,278,0.675,279,0.742,280,0.675,281,0.742,282,0.643,283,0.742,284,0.643,285,0.613,286,0.742,287,0.675,288,0.742,289,0.675,290,0.742,291,0.742,292,0.675,293,0.742,294,0.675,295,0.742,296,0.675,297,0.708,298,0.451,299,0.742,300,0.675,301,0.742,302,0.675,303,0.742,304,0.675,305,0.708,306,0.742,307,0.675,308,0.555,309,0.742,310,0.675,311,0.708,312,0.742,313,0.708,314,0.742,315,0.675,316,0.742,317,0.555,318,0.583,319,0.643,320,0.742,321,0.742,322,0.01,323,0.01,330,1.503,355,1.578,364,1.132,433,1.467,436,1.658,447,2.817,450,1.433,454,3.123,483,1.935,484,1.132,487,2.446,488,2.617,492,2.446,505,1.503,647,3.032,686,1.935,696,1.935,701,5.923,708,5.555,731,3.032,741,4.624,751,3.76,763,3.057,774,3.492,810,3.057,821,3.057,885,2.148,940,3.76,1077,3.358,1152,3.98,1153,3.391,1162,2.044,1165,2.446,1181,3.883,1188,3.98,1196,2.817,1200,3.391,1202,1.032,1842,3.358,1899,3.057,1941,5.622,1942,5.622,1943,6.295,1944,2.582,1945,3.358,1946,4.371,1947,4.371,1948,5.155,1949,5.663,1950,5.663,1951,5.663,1952,5.663,1953,6.019,1954,5.155,1955,4.371,1956,4.371,1957,3.76,1958,3.001,1959,3.001,1960,2.617,1961,3.001,1962,3.001,1963,4.394,1964,3.358,1965,3.001,1966,3.001,1967,5.663,1968,3.001,1969,3.358,1970,3.001,1971,3.001,1972,3.001,1973,3.001,1974,3.001,1975,4.371,1976,3.001,1977,3.76,1978,3.001,1979,4.371,1980,3.001,1981,3.001,1982,3.001,1983,3.001,1984,3.001,1985,3.001,1986,3.001,1987,3.001,1988,3.001,1989,3.001,1990,5.155,1991,3.001,1992,3.001,1993,3.001,1994,3.001,1995,3.001,1996,3.001,1997,3.001,1998,3.001,1999,3.001,2000,4.371,2001,4.371,2002,4.371,2003,4.371,2004,4.371,2005,4.371,2006,4.371]],["title/components/ExpenseListComponent.html",[0,0.045,278,0.83]],["body/components/ExpenseListComponent.html",[0,0.07,1,0.833,2,1.036,3,0.161,4,0.161,5,0.848,7,0.794,8,0.794,9,0.121,13,0.49,15,0.643,16,2.037,19,0.833,25,0.721,26,1.501,27,1.097,28,0.619,29,1.1,30,1.832,31,0.682,32,1.196,34,1.646,35,0.833,38,1.196,40,0.161,51,0.499,61,0.69,66,0.724,70,0.777,71,0.019,72,0.319,73,0.292,74,0.69,76,0.643,80,0.833,83,0.848,85,0.529,92,0.465,96,2.373,99,2.131,100,0.527,101,3.271,103,2.798,106,1.809,115,1.844,118,0.453,130,1.254,134,0.442,135,0.47,147,1.467,153,0.192,156,0.14,163,1.006,165,0.14,166,0.161,167,0.533,177,0.848,192,0.912,198,1.181,214,1.275,215,1.215,257,0.833,258,1.087,259,0.916,260,1.538,261,0.916,262,0.916,263,0.833,264,0.916,265,0.794,266,1.254,267,0.833,268,0.916,269,0.833,270,0.916,271,0.916,272,0.794,273,0.686,274,1.254,275,0.833,276,0.757,277,0.916,278,1.577,279,0.916,280,0.833,281,0.916,282,0.794,283,0.916,284,0.794,285,0.757,286,0.916,287,0.833,288,0.916,289,0.833,290,0.916,291,0.916,292,0.833,293,0.916,294,0.833,295,0.916,296,0.833,297,0.874,298,1.035,299,0.916,300,0.833,301,0.916,302,0.833,303,0.916,304,0.833,305,0.874,306,0.916,307,0.833,308,0.686,309,0.916,310,0.833,311,0.874,312,0.916,313,0.874,314,0.916,315,0.833,316,0.916,317,0.686,318,0.721,319,0.794,320,0.916,321,0.916,322,0.012,323,0.012,334,3.189,341,2.246,364,1.315,433,1.612,454,2.246,500,1.835,633,1.809,646,1.832,656,2.024,662,2.246,707,3.238,717,3.549,719,4.365,731,3.328,769,2.3,821,3.549,839,2.22,844,2.593,880,3.189,962,1.925,963,3.729,985,1.835,993,2.593,1002,3.04,1006,2.84,1011,3.549,1024,3.189,1025,4.977,1026,3.189,1027,3.189,1028,3.189,1029,3.189,1030,3.189,1064,4.365,1075,3.271,1076,3.271,1077,3.898,1088,3.898,1091,3.726,1107,2.666,1124,2.22,1152,3.726,1162,2.373,1165,2.84,1181,3.465,1200,3.726,1269,2.84,1295,2.909,1408,2.075,1704,3.271,1723,3.039,1762,3.549,1866,2.22,1941,5.389,1942,5.389,1945,3.898,1963,3.549,2007,6.035,2008,3.189,2009,4.365,2010,5.786,2011,3.549,2012,5.074,2013,5.074,2014,5.074,2015,5.074,2016,5.074,2017,5.074,2018,6.517,2019,5.074,2020,3.707,2021,4.365,2022,3.707,2023,5.074,2024,3.707,2025,5.074,2026,3.707,2027,3.707,2028,5.074,2029,3.707,2030,3.707,2031,3.707,2032,3.707,2033,3.707,2034,2.847,2035,6.222,2036,3.707,2037,4.365,2038,5.074,2039,5.074,2040,4.445,2041,5.786,2042,5.074,2043,3.707,2044,3.898,2045,3.707,2046,2.847,2047,2.847,2048,2.847,2049,2.847,2050,2.847,2051,2.847,2052,2.847,2053,2.847,2054,2.847,2055,2.847,2056,3.707,2057,3.707,2058,3.707,2059,3.707,2060,3.189,2061,5.786,2062,3.189,2063,5.786,2064,3.707,2065,5.074,2066,3.707,2067,3.707,2068,3.707,2069,3.707,2070,3.707,2071,5.074]],["title/injectables/ExpenseService.html",[64,1.551,642,0.441]],["body/injectables/ExpenseService.html",[3,0.146,4,0.146,9,0.109,13,0.528,15,0.868,16,2.271,21,1.891,25,1.16,28,0.996,29,1.108,31,0.637,40,0.146,51,0.466,61,0.401,64,2.505,66,0.732,70,0.877,71,0.019,72,0.328,73,0.283,74,0.817,76,0.601,77,2.733,79,0.669,83,0.792,85,0.626,91,2.099,92,0.598,100,1.003,111,2.653,114,0.922,115,1.926,116,2.603,118,0.464,129,2.271,132,1.002,133,1.437,141,2.784,153,0.208,156,0.127,165,0.18,166,0.146,167,0.72,168,0.696,177,1.222,182,1.411,183,1.664,187,1.664,192,0.927,193,2.351,195,2.582,198,1.369,247,1.766,248,1.051,253,3.429,255,1.572,256,1.664,322,0.011,323,0.011,330,1.63,364,1.691,371,1.554,392,0.756,405,2.356,429,2.544,433,1.228,436,1.798,438,1.712,442,2.153,450,2.381,452,1.991,467,1.275,471,1.664,482,1.991,484,1.423,623,0.956,624,0.877,628,1.275,629,2.013,631,2.099,632,2.641,633,1.482,637,1.34,638,2.491,640,4.172,641,2.346,642,0.566,643,1.766,647,3.052,651,1.482,652,0.913,654,3.316,657,2.641,658,1.991,659,1.798,660,1.572,661,2.505,663,2.379,664,3.572,665,3.23,667,2.346,671,2.839,672,3.289,673,3.572,674,2.013,675,2.013,676,2.351,678,3.289,679,2.099,684,3.766,685,2.941,688,2.839,690,2.379,691,3.316,692,2.653,694,3.316,721,3.338,769,1.102,828,1.766,877,3.429,948,1.156,950,2.351,982,2.641,986,4.016,987,4.016,988,3.766,991,3.642,1058,2.582,1074,3.055,1084,1.488,1087,2.013,1092,3.841,1093,3.074,1097,1.34,1105,3.055,1107,2.491,1114,2.166,1115,2.166,1123,2.351,1124,2.013,1129,3.316,1142,2.351,1202,1.156,1231,2.653,1264,3.055,1292,3.39,1295,2.217,1584,2.839,1654,1.554,1781,2.351,1788,3.055,1791,4.379,1893,2.582,1894,4.078,1895,4.078,1896,2.891,1897,2.891,1898,4.078,1899,4.172,1900,4.078,1901,4.078,1902,4.078,1903,5.131,1904,2.891,1905,2.891,1906,2.891,1907,2.891,1908,2.891,1909,4.078,1910,4.078,1911,4.078,1912,2.891,1913,2.891,1914,2.891,1915,2.891,1916,2.891,1917,2.891,1918,2.891,1919,2.891,1920,2.891,1921,2.891,1922,2.891,1923,2.891,1924,2.891,1925,2.891,1926,4.724,1927,4.078,1928,4.724,1929,4.078,1930,2.891,1931,4.078,1932,4.078,1933,2.891,1934,4.724,1935,2.891,1936,2.891,1937,2.891,1938,2.891,1939,4.078,1940,2.891,2072,4.74,2073,4.74,2074,3.361,2075,3.361,2076,3.361,2077,3.361,2078,3.361,2079,3.361,2080,3.361,2081,3.361,2082,3.361]],["title/components/FooterComponent.html",[0,0.045,280,0.83]],["body/components/FooterComponent.html",[0,0.084,1,1.037,2,1.197,3,0.303,4,0.2,5,1.132,7,0.988,8,0.988,9,0.15,13,0.461,19,1.037,25,0.896,26,1.523,27,1.117,28,0.77,29,0.833,32,1.087,35,1.037,38,1.382,40,0.2,41,0.576,61,0.55,66,0.616,70,0.619,71,0.019,72,0.315,73,0.254,74,0.55,76,0.743,79,0.657,80,1.037,83,0.979,100,0.655,114,1.318,118,0.354,130,1.449,134,0.55,135,0.584,147,1.382,153,0.222,156,0.175,165,0.175,166,0.2,167,0.485,257,1.037,258,1.256,259,1.14,260,1.676,261,1.14,262,1.14,263,1.037,264,1.14,265,0.988,266,1.449,267,1.037,268,1.14,269,1.037,270,1.14,271,1.14,272,0.988,273,0.853,274,1.449,275,1.037,276,0.941,277,1.14,278,1.037,279,1.14,280,1.608,281,1.14,282,0.988,283,1.14,284,0.988,285,0.941,286,1.14,287,1.037,288,1.14,289,1.037,290,1.14,291,1.14,292,1.037,293,1.14,294,1.037,295,1.14,296,1.037,297,1.087,298,0.692,299,1.14,300,1.037,301,1.14,302,1.037,303,1.14,304,1.037,305,1.087,306,1.14,307,1.037,308,0.853,309,1.14,310,1.037,311,1.087,312,1.14,313,1.087,314,1.14,315,1.037,316,1.14,317,0.853,318,0.896,319,0.988,320,1.14,321,1.14,322,0.014,323,0.014,330,2.016,341,2.595,393,2.847,661,2.847,704,3.079,716,4.502,822,4.099,830,4.742,962,2.572,1011,4.099,1202,1.586,1236,2.338,1416,2.461,1545,3.28,1654,2.223,1668,3.765,1670,4.099,1675,3.748,1688,4.502,1769,3.777,2083,3.966,2084,7.154,2085,5.861,2086,5.861,2087,5.861,2088,6.021,2089,3.542,2090,5.861,2091,3.542,2092,3.966,2093,3.225,2094,5.042,2095,5.042,2096,5.042]],["title/components/FormModelComponent.html",[0,0.045,282,0.792]],["body/components/FormModelComponent.html",[0,0.09,1,0.977,2,1.152,3,0.188,4,0.188,5,0.942,7,0.931,8,0.931,9,0.141,13,0.342,15,0.55,19,1.652,25,0.844,26,1.517,27,1.109,28,0.725,29,0.802,32,1.33,34,1.782,35,0.977,38,1.33,40,0.188,51,0.554,66,0.697,71,0.019,72,0.276,73,0.272,80,0.977,85,0.37,92,0.517,100,0.617,106,1.958,118,0.341,130,1.394,134,0.791,135,0.715,138,1.152,153,0.214,156,0.165,163,1.179,165,0.165,166,0.188,257,0.977,258,1.209,259,1.074,260,1.639,261,1.074,262,1.074,263,0.977,264,1.074,265,0.931,266,1.394,267,0.977,268,1.074,269,0.977,270,1.074,271,1.074,272,0.931,273,0.803,274,1.394,275,0.977,276,0.887,277,1.074,278,0.977,279,1.074,280,0.977,281,1.074,282,1.421,283,1.074,284,0.931,285,0.887,286,1.074,287,0.977,288,1.074,289,0.977,290,1.074,291,1.074,292,0.977,293,1.074,294,0.977,295,1.074,296,0.977,297,1.024,298,0.652,299,1.074,300,0.977,301,1.074,302,0.977,303,1.074,304,0.977,305,1.024,306,1.074,307,0.977,308,0.803,309,1.074,310,0.977,311,1.024,312,1.074,313,1.024,314,1.074,315,0.977,316,1.074,317,0.803,318,0.844,319,0.931,320,1.074,321,1.074,322,0.013,323,0.013,341,2.497,367,2.28,380,3.378,454,3.217,461,3.282,487,3.157,597,3.945,646,2.036,682,2.792,704,2.964,772,3.378,774,3.779,823,3.378,946,2.8,962,2.139,1052,3.49,1152,3.378,1153,3.97,1162,2.637,1165,3.157,1181,3.751,1186,3.378,1188,4.293,1200,3.97,1453,3.484,1473,3.945,1515,4.067,1763,4.429,1957,4.852,1963,3.945,1964,5.093,1969,4.333,2097,5.911,2098,3.737,2099,4.333,2100,5.64,2101,5.64,2102,5.64,2103,6.63,2104,6.264,2105,4.344,2106,3.945,2107,4.344,2108,5.64,2109,4.344,2110,4.852,2111,4.333,2112,4.344,2113,5.64,2114,4.852,2115,3.378,2116,4.852,2117,4.344]],["title/injectables/GeminiApiService.html",[348,2.583,642,0.441]],["body/injectables/GeminiApiService.html",[3,0.142,4,0.142,9,0.106,13,0.463,15,0.746,16,2.276,17,2.781,21,2.348,28,0.545,29,1.052,40,0.142,41,0.456,51,0.456,61,0.554,64,2.855,66,0.654,70,0.726,71,0.019,72,0.265,73,0.27,74,0.645,76,0.589,79,0.725,83,0.776,85,0.578,91,2.607,103,1.853,106,1.452,115,1.675,118,0.44,129,2.126,133,1.503,134,0.39,135,0.414,138,1.412,153,0.266,156,0.176,165,0.205,166,0.201,167,0.68,168,0.861,177,1.135,183,2.915,187,2.915,192,0.938,208,1.762,214,1.598,215,1.772,255,1.527,256,1.616,285,1.104,322,0.013,323,0.011,325,3.269,327,1.716,328,4.521,329,3.38,332,3.996,336,3.472,345,3.094,348,4.652,354,3.568,355,1.677,361,1.371,364,0.846,367,2.025,369,2.299,374,4.966,380,3.871,381,2.809,383,2.44,389,2.105,392,1.044,427,3.365,442,1.677,443,1.95,470,3.526,475,4.523,479,4.964,500,1.616,528,1.716,546,1.955,563,1.677,595,1.828,624,0.604,631,1.446,632,1.446,642,0.703,644,2.172,648,2.44,651,1.841,652,1.261,656,1.302,661,1.95,663,2.348,682,1.616,686,2.056,703,5.065,763,3.249,770,2.754,819,3.495,831,2.809,839,4.328,899,5.055,948,1.123,1006,3.295,1068,3.725,1069,1.616,1070,2.172,1075,2.105,1076,2.105,1078,2.284,1079,2.284,1080,2.284,1081,2.284,1104,2.284,1120,1.95,1134,2.105,1187,2.509,1202,1.123,1227,3.484,1233,4.966,1234,4.153,1236,1.853,1238,3.805,1239,4.523,1241,3.249,1242,3.568,1243,2.994,1248,3.568,1252,2.509,1257,4.523,1258,4.153,1259,4.153,1260,4.153,1261,3.295,1263,2.994,1266,3.484,1273,3.568,1278,1.616,1285,1.828,1288,3.025,1292,1.616,1295,2.172,1312,4.153,1317,3.568,1331,2.509,1336,3.568,1339,2.284,1343,2.994,1346,2.284,1353,3.568,1354,3.094,1355,2.994,1356,2.915,1357,3.249,1358,3.568,1359,2.994,1360,3.568,1361,3.568,1362,4.153,1363,3.568,1364,3.568,1365,3.568,1367,2.509,1409,4.045,1681,2.284,1767,1.828,1788,3.795,1840,2.105,1841,2.509,2037,2.809,2118,5.562,2119,2.509,2120,4.645,2121,5.888,2122,4.645,2123,5.406,2124,5.888,2125,4.645,2126,2.509,2127,4.645,2128,4.645,2129,3.266,2130,5.888,2131,6.221,2132,3.266,2133,3.568,2134,6.221,2135,3.996,2136,5.888,2137,4.779,2138,5.406,2139,4.645,2140,3.266,2141,4.645,2142,3.266,2143,3.266,2144,3.266,2145,3.266,2146,3.266,2147,4.645,2148,3.266,2149,3.266,2150,3.266,2151,3.266,2152,3.266,2153,3.266,2154,3.266,2155,2.509,2156,4.645,2157,3.266,2158,4.645,2159,2.809,2160,3.266,2161,2.809,2162,3.996,2163,4.645,2164,3.266,2165,3.266,2166,3.266,2167,3.266,2168,3.266,2169,3.266,2170,3.266,2171,4.645,2172,3.266,2173,3.266,2174,3.266,2175,3.996,2176,3.996,2177,4.645,2178,5.406,2179,3.266,2180,3.266,2181,3.266,2182,3.266,2183,3.266,2184,3.266,2185,3.266,2186,3.266,2187,3.266,2188,3.266,2189,2.809,2190,2.809,2191,2.809,2192,3.266,2193,3.266,2194,3.266,2195,3.996,2196,3.266,2197,2.809,2198,4.645,2199,3.266,2200,2.509,2201,3.266,2202,3.266,2203,2.509,2204,3.266,2205,3.266,2206,4.645,2207,3.266,2208,3.266,2209,3.266,2210,3.266]],["title/components/GlobalLoaderComponent.html",[0,0.045,284,0.792]],["body/components/GlobalLoaderComponent.html",[0,0.086,1,0.959,2,1.138,3,0.185,4,0.185,5,0.931,7,0.914,8,0.914,9,0.139,13,0.489,19,0.959,25,0.829,26,1.515,27,1.108,28,0.712,29,0.792,31,0.573,32,1.314,34,1.766,35,0.959,38,1.314,40,0.185,41,0.548,51,0.548,61,0.509,66,0.718,70,0.748,71,0.019,72,0.322,73,0.269,74,0.864,76,0.706,79,0.625,80,0.959,83,0.931,85,0.474,92,0.603,100,0.606,118,0.398,130,1.377,134,0.741,135,0.787,146,2.34,147,1.552,148,0.984,153,0.235,156,0.162,163,1.158,165,0.162,166,0.185,167,0.586,257,0.959,258,1.194,259,1.054,260,1.627,261,1.054,262,1.054,263,0.959,264,1.054,265,0.914,266,1.377,267,0.959,268,1.054,269,0.959,270,1.054,271,1.054,272,0.914,273,0.789,274,1.377,275,0.959,276,0.87,277,1.054,278,0.959,279,1.054,280,0.959,281,1.054,282,0.914,283,1.054,284,1.501,285,1.56,286,1.054,287,0.959,288,1.054,289,0.959,290,1.054,291,1.054,292,0.959,293,1.054,294,0.959,295,1.054,296,0.959,297,1.005,298,0.64,299,1.054,300,0.959,301,1.054,302,0.959,303,1.054,304,0.959,305,1.005,306,1.054,307,0.959,308,0.789,309,1.054,310,0.959,311,1.005,312,1.054,313,1.005,314,1.054,315,0.959,316,1.054,317,0.789,318,0.829,319,0.914,320,1.054,321,1.054,322,0.013,323,0.013,330,1.916,341,2.467,367,2.455,395,2.758,426,4.528,427,3.683,438,2.012,492,3.684,505,1.916,515,3.591,528,3.75,545,2.748,546,2.553,592,2.606,770,3.333,823,3.337,828,2.928,1021,3.591,1070,3.385,1171,3.942,1202,1.466,1263,3.591,1366,3.337,1417,3.684,1468,3.118,1654,1.827,1689,3.337,2044,4.28,2211,6.027,2212,3.667,2213,5.572,2214,4.793,2215,4.793,2216,5.572,2217,5.572,2218,5.34,2219,4.263,2220,5.572,2221,3.897,2222,5.572,2223,4.263,2224,4.793,2225,4.793,2226,4.263,2227,4.263,2228,4.263,2229,4.263,2230,5.572]],["title/injectables/GlobalLoaderService.html",[427,1.828,642,0.441]],["body/injectables/GlobalLoaderService.html",[0,0.091,3,0.217,4,0.217,9,0.163,13,0.526,40,0.217,41,0.606,51,0.606,66,0.734,70,0.828,71,0.019,72,0.302,73,0.29,74,0.892,76,0.884,79,0.691,85,0.569,92,0.669,118,0.404,128,3.451,134,0.597,135,0.634,147,1.454,153,0.234,156,0.189,165,0.189,166,0.217,167,0.648,168,0.847,284,1.646,285,1.563,322,0.015,323,0.015,330,2.121,367,2.121,392,1.124,426,4.583,427,3.052,492,3.451,515,4.499,527,4.302,528,3.836,529,4.302,592,2.883,642,0.736,652,1.358,767,2.73,770,3.232,948,1.72,1019,4.737,1070,3.494,1171,3.692,1417,3.906,1468,3.451,1654,2.022,1689,3.692,2111,4.737,2221,4.313,2224,5.304,2225,5.304,2231,6.167,2232,4.302,2233,4.737,2234,6.166,2235,3.974,2236,5,2237,6.166,2238,5,2239,5,2240,5,2241,4.737,2242,5,2243,5,2244,5]],["title/components/GraphsComponent.html",[0,0.045,287,0.83]],["body/components/GraphsComponent.html",[0,0.065,1,0.53,2,0.745,3,0.102,4,0.102,5,0.609,6,0.737,7,0.505,8,0.505,9,0.077,13,0.471,15,0.565,16,2.275,19,0.53,23,1.614,24,2.207,25,0.458,26,1.439,27,1.052,28,0.394,29,1.034,30,1.317,31,0.886,32,0.86,35,0.53,36,1.614,38,0.86,40,0.102,41,0.493,51,0.358,54,1.903,61,0.435,64,2.595,66,0.758,70,0.771,71,0.019,72,0.332,73,0.326,74,0.684,78,1.726,79,0.608,80,0.53,85,0.509,89,3.983,92,0.628,94,1.812,95,2.107,100,0.815,103,2.001,106,1.87,107,1.805,114,1.26,115,1.406,116,2.465,129,1.812,130,0.901,132,1.496,133,1.546,134,0.787,135,0.904,138,0.91,141,1.614,148,1.124,153,0.206,156,0.089,159,1.32,165,0.089,166,0.102,167,0.629,168,0.299,177,1.082,192,0.953,197,1.811,198,1.221,220,1.649,248,1.569,257,0.53,258,0.782,259,0.583,260,1.568,261,0.583,262,0.583,263,0.53,264,0.583,265,0.505,266,0.901,267,0.53,268,0.583,269,0.53,270,0.583,271,0.583,272,0.505,273,0.436,274,0.901,275,0.53,276,0.481,277,0.583,278,0.53,279,0.583,280,0.53,281,0.583,282,0.505,283,0.583,284,0.505,285,0.481,286,0.583,287,1.389,288,0.583,289,0.53,290,0.583,291,0.583,292,0.53,293,0.583,294,0.53,295,0.583,296,0.53,297,0.556,298,0.898,299,0.583,300,0.53,301,0.583,302,0.53,303,0.583,304,0.53,305,0.556,306,0.583,307,0.53,308,0.436,309,0.583,310,0.53,311,0.556,312,0.583,313,0.556,314,0.583,315,0.53,316,0.583,317,0.436,318,0.458,319,0.505,320,0.583,321,0.583,322,0.009,323,0.009,352,2.35,361,0.99,367,2.125,397,3.247,401,3.247,415,3.425,416,2.339,425,2.028,433,0.945,487,2.808,488,2.184,501,1.61,505,1.254,544,1.239,581,1.649,582,2.001,592,2.889,623,1.632,633,1.394,704,1.916,707,3.911,712,2.041,731,2.085,748,3.137,763,3.509,764,3.795,769,2.026,794,2.551,815,1.614,826,3.95,833,1.916,839,1.412,845,3.119,848,3.249,877,1.916,885,1.383,894,1.614,946,2.35,960,2.551,962,1.383,963,4.599,972,2.801,973,3.854,993,2.551,1002,3.672,1009,3.249,1010,2.028,1052,1.705,1097,2.386,1119,3.119,1124,2.67,1162,1.705,1176,2.35,1269,2.041,1278,2.207,1416,2.88,1451,2.67,1453,2.343,1456,2.041,1483,3.795,1493,3.855,1529,2.35,1685,2.801,1840,1.52,2011,2.551,2021,4.935,2040,2.801,2046,2.801,2047,2.801,2048,2.801,2049,2.801,2050,2.801,2051,2.801,2052,2.801,2053,2.801,2054,2.801,2055,2.801,2245,2.028,2246,5.018,2247,2.551,2248,3.647,2249,3.836,2250,2.801,2251,4.459,2252,4.459,2253,3.647,2254,4.459,2255,4.459,2256,4.459,2257,4.459,2258,4.459,2259,5.426,2260,5.76,2261,4.316,2262,3.137,2263,3.137,2264,3.137,2265,3.137,2266,3.647,2267,3.425,2268,4.407,2269,2.358,2270,3.647,2271,3.647,2272,3.836,2273,2.358,2274,3.647,2275,2.358,2276,2.801,2277,2.358,2278,4.571,2279,3.647,2280,2.358,2281,5.737,2282,5.737,2283,3.647,2284,2.358,2285,3.647,2286,2.358,2287,3.137,2288,4.316,2289,2.358,2290,3.137,2291,2.358,2292,3.647,2293,2.358,2294,3.647,2295,3.137,2296,2.35,2297,4.459,2298,3.647,2299,5.018,2300,3.854,2301,3.647,2302,3.647,2303,2.358,2304,4.459,2305,2.358,2306,3.647,2307,4.316,2308,4.459,2309,2.358,2310,5.146,2311,5.018,2312,4.459,2313,2.358,2314,4.459,2315,2.358,2316,4.459,2317,2.358,2318,4.459,2319,3.647,2320,2.358,2321,2.801,2322,3.647,2323,4.459,2324,2.358,2325,4.459,2326,2.358,2327,4.459,2328,5.426,2329,5.426,2330,2.358,2331,2.358,2332,3.137,2333,3.137,2334,2.358,2335,3.836,2336,2.028,2337,2.028,2338,3.425,2339,2.358,2340,2.358,2341,2.358,2342,2.358,2343,3.854,2344,3.137,2345,2.028,2346,3.647,2347,3.137,2348,2.801,2349,6.342,2350,2.028,2351,3.647,2352,4.667,2353,2.358,2354,3.647,2355,3.647,2356,2.358,2357,3.647,2358,4.459,2359,5.737,2360,2.358,2361,3.137,2362,4.459,2363,2.028,2364,4.459,2365,4.459,2366,2.358,2367,4.459,2368,2.358,2369,3.137,2370,2.028,2371,2.028,2372,2.358,2373,2.358,2374,4.459,2375,4.459,2376,3.647,2377,2.358,2378,4.459,2379,4.459,2380,3.647,2381,2.358,2382,2.358,2383,2.028,2384,2.358,2385,2.358,2386,2.358,2387,2.358,2388,2.358,2389,2.358,2390,2.358,2391,2.358,2392,2.358,2393,2.358,2394,2.358,2395,2.028,2396,2.028,2397,2.358,2398,2.358,2399,2.358,2400,2.358,2401,2.358,2402,2.358,2403,2.358,2404,2.358,2405,2.358,2406,2.358,2407,2.358,2408,2.358,2409,2.358,2410,2.358,2411,2.358,2412,2.358,2413,2.358,2414,2.358,2415,2.358]],["title/components/HamburgerMenuComponent.html",[0,0.045,289,0.83]],["body/components/HamburgerMenuComponent.html",[0,0.079,1,0.857,2,1.056,3,0.165,4,0.165,5,0.864,6,1.192,7,0.817,8,0.817,9,0.124,13,0.518,19,0.857,25,0.741,26,1.504,27,1.099,28,0.637,29,0.735,32,1.219,34,1.67,35,0.857,36,2.29,38,1.219,40,0.165,41,0.508,51,0.508,61,0.455,66,0.73,70,0.846,71,0.019,72,0.332,73,0.255,74,0.751,76,0.655,78,1.779,79,0.58,80,0.857,83,0.864,85,0.499,92,0.622,100,0.542,103,2.063,105,3.617,114,1.319,118,0.355,126,2.283,130,1.278,132,1.542,134,0.751,135,0.655,146,2.172,148,1.043,151,3.116,153,0.222,154,2.666,156,0.144,163,1.035,165,0.144,166,0.165,167,0.662,192,0.483,257,0.857,258,1.108,259,0.942,260,1.556,261,0.942,262,0.942,263,0.857,264,0.942,265,0.817,266,1.278,267,0.857,268,0.942,269,0.857,270,0.942,271,0.942,272,0.817,273,0.705,274,1.278,275,0.857,276,0.778,277,0.942,278,0.857,279,0.942,280,0.857,281,0.942,282,0.817,283,0.942,284,0.817,285,0.778,286,0.942,287,0.857,288,0.942,289,1.526,290,1.866,291,0.942,292,0.857,293,0.942,294,0.857,295,0.942,296,0.857,297,0.899,298,0.572,299,0.942,300,0.857,301,0.942,302,0.857,303,0.942,304,0.857,305,0.899,306,0.942,307,0.857,308,1.086,309,0.942,310,0.857,311,0.899,312,0.942,313,0.899,314,0.942,315,0.857,316,0.942,317,0.705,318,0.741,319,0.817,320,0.942,321,0.942,322,0.012,323,0.012,325,3.761,330,1.779,395,2.56,396,3.617,399,4.19,422,3.973,428,4.006,433,1.34,438,1.867,453,2.928,454,3.353,456,4.403,460,6.57,462,3.952,464,5.05,499,1.962,501,1.867,505,2.165,547,2.666,554,2.666,561,3.279,599,2.457,637,2.063,720,3.097,772,3.77,815,2.29,823,3.097,1167,4.449,1170,3.617,1183,3.279,1185,5.05,1186,3.515,1187,5.055,1188,3.515,1192,4.449,1196,4.057,1202,1.311,1212,2.928,1213,2.928,1480,3.617,1523,3.77,1654,1.696,1682,3.333,1685,3.973,1760,3.333,1960,3.097,2115,4.064,2416,6.075,2417,5.425,2418,3.279,2419,4.449,2420,3.973,2421,5.172,2422,5.172,2423,4.403,2424,4.449,2425,5.87,2426,5.172,2427,5.87,2428,5.87,2429,3.973,2430,4.449,2431,6.295,2432,2.928,2433,5.172,2434,3.973,2435,4.449,2436,5.172,2437,5.05,2438,5.87,2439,3.973,2440,3.812,2441,4.449,2442,3.973,2443,3.973,2444,4.449,2445,3.812,2446,5.172,2447,4.449,2448,3.812,2449,3.812,2450,6.581,2451,5.172,2452,3.812,2453,2.928]],["title/injectables/HbsRenderService.html",[642,0.441,1401,1.941]],["body/injectables/HbsRenderService.html",[0,0.082,2,1.207,3,0.287,4,0.295,5,1.212,6,1.631,9,0.206,13,0.548,15,0.489,26,1.149,27,0.549,40,0.226,41,0.65,51,0.65,54,1.979,61,0.705,66,0.716,70,0.519,71,0.019,72,0.333,73,0.274,74,0.461,76,0.489,85,0.538,92,0.58,94,1.394,95,1.622,118,0.446,132,1.152,133,1.417,134,0.461,135,0.661,148,0.612,153,0.146,156,0.146,165,0.146,166,0.167,168,0.91,177,1.223,192,0.91,198,1.35,208,1.979,214,1.328,215,2.167,258,1.118,318,0.751,322,0.012,323,0.012,365,4.489,392,0.868,450,1.937,451,2.489,456,2.701,459,4.008,461,3.272,462,2.162,484,1.001,505,1.328,507,2.313,563,1.394,595,2.162,623,1.485,633,1.207,642,0.623,652,1.049,769,1.266,811,2.489,885,1.979,897,3.65,948,1.328,965,3.809,1009,3.125,1021,2.489,1052,2.763,1098,2.92,1107,2.029,1120,2.191,1162,2.44,1165,2.92,1290,4.489,1356,2.583,1369,3.447,1401,2.742,1414,2.489,1415,2.489,1421,2.92,1428,3.363,1433,2.313,1434,5.02,1440,3.65,1441,3.363,1447,3.65,1448,3.65,1456,2.92,1458,3.809,1459,2.313,1460,3.65,1461,4.133,1482,4.079,1488,3.539,1508,2.701,1512,2.701,1515,3.813,1600,2.742,1614,2.162,1632,2.701,1704,4.261,1767,2.162,1769,2.489,1945,2.967,2218,3.322,2235,4.565,2296,2.489,2430,3.322,2437,3.322,2444,3.322,2454,5.35,2455,2.967,2456,5.91,2457,6.329,2458,6.329,2459,6.329,2460,5.218,2461,5.218,2462,3.862,2463,3.862,2464,3.862,2465,5.218,2466,3.862,2467,3.862,2468,2.701,2469,3.862,2470,3.862,2471,3.862,2472,3.862,2473,3.862,2474,3.862,2475,3.862,2476,3.862,2477,5.218,2478,6.964,2479,5.444,2480,6.329,2481,6.812,2482,6.812,2483,3.862,2484,3.862,2485,5.91,2486,3.862,2487,3.862,2488,3.862,2489,3.862,2490,5.218,2491,3.862,2492,3.862,2493,3.322,2494,3.862,2495,3.65,2496,3.65,2497,3.862,2498,3.862,2499,3.862,2500,3.862,2501,3.862,2502,3.862,2503,5.218,2504,3.862,2505,3.862,2506,6.611,2507,6.329,2508,3.862,2509,3.862,2510,3.862,2511,3.862,2512,5.218,2513,3.862,2514,3.862,2515,3.322,2516,3.862,2517,3.862,2518,3.862,2519,5.218,2520,6.611,2521,3.862,2522,3.322,2523,3.862,2524,3.862,2525,3.862,2526,3.862,2527,3.862,2528,3.862,2529,3.322,2530,3.862,2531,5.91,2532,3.862,2533,3.862,2534,3.862,2535,5.218,2536,5.91]],["title/components/HomeComponent.html",[0,0.045,292,0.83]],["body/components/HomeComponent.html",[0,0.072,1,0.653,2,0.871,3,0.126,4,0.126,5,0.713,6,0.908,7,0.622,8,0.622,9,0.094,13,0.505,15,0.813,19,0.653,25,0.565,26,1.47,27,1.075,28,0.485,29,0.606,30,1.54,31,0.749,32,1.006,34,1.439,35,0.653,36,1.889,38,1.006,40,0.185,41,0.419,51,0.419,66,0.756,70,0.834,71,0.019,72,0.322,73,0.326,74,0.741,78,1.918,80,0.653,85,0.607,92,0.569,99,2.341,100,0.413,103,2.477,106,2.31,113,2.75,114,1.28,115,1.963,116,1.702,118,0.432,128,3.12,130,1.535,133,0.914,134,0.786,135,0.866,138,0.871,142,2.984,147,1.315,148,1.043,151,2.76,153,0.225,156,0.11,158,1.286,163,0.788,165,0.11,166,0.126,167,0.692,173,1.219,177,1.072,192,0.753,198,0.593,257,0.653,258,0.914,259,0.718,260,1.468,261,0.718,262,0.718,263,0.653,264,0.718,265,0.622,266,1.055,267,0.653,268,0.718,269,0.653,270,0.718,271,0.718,272,0.622,273,0.537,274,1.055,275,0.653,276,0.593,277,0.718,278,0.653,279,0.718,280,0.653,281,0.718,282,0.622,283,0.718,284,0.622,285,0.593,286,0.718,287,1.253,288,0.718,289,0.653,290,0.718,291,0.718,292,1.396,293,0.718,294,0.653,295,0.718,296,0.653,297,0.685,298,0.436,299,0.718,300,0.653,301,0.718,302,0.653,303,0.718,304,1.253,305,0.685,306,0.718,307,0.653,308,0.537,309,0.718,310,0.653,311,0.685,312,0.718,313,0.685,314,0.718,315,0.653,316,0.718,317,0.537,318,0.565,319,0.622,320,0.718,321,0.718,322,0.01,323,0.01,327,2.242,338,2.831,395,2.112,397,3.897,399,3.12,433,1.706,454,3.102,461,1.437,484,1.706,491,2.984,497,2.555,499,2.115,514,3.12,521,1.526,557,2.607,592,1.995,599,1.872,623,1.826,655,3.278,686,1.889,707,4.203,769,0.952,819,2.242,833,2.242,894,2.468,961,2.984,962,1.618,963,4.852,986,3.338,987,3.338,988,2.555,1002,3.923,1038,2.498,1045,2.498,1084,1.286,1162,1.995,1249,2.555,1292,2.76,1295,3.079,1334,2.984,1419,3.593,1456,1.625,1458,1.872,1468,2.388,1491,1.872,1502,3.029,1505,2.984,1506,2.984,1529,1.872,1623,2.984,1682,3.593,1723,3.338,2040,2.231,2046,2.231,2047,2.231,2048,2.231,2049,2.231,2050,2.231,2051,2.231,2052,2.231,2053,2.231,2054,2.231,2055,2.231,2060,2.498,2247,2.984,2250,3.278,2267,3.886,2268,3.886,2296,2.75,2338,5.383,2343,3.278,2348,2.231,2361,2.498,2363,2.498,2441,4.796,2537,2.498,2538,3.67,2539,5.058,2540,4.267,2541,5.058,2542,5.058,2543,5.058,2544,5.058,2545,4.267,2546,4.267,2547,4.267,2548,6.21,2549,5.575,2550,5.575,2551,3.67,2552,4.267,2553,4.267,2554,4.267,2555,5.058,2556,2.904,2557,4.267,2558,4.267,2559,4.267,2560,4.267,2561,4.267,2562,2.904,2563,4.267,2564,4.267,2565,2.904,2566,4.267,2567,2.904,2568,2.904,2569,2.904,2570,4.267,2571,6.585,2572,5.342,2573,2.904,2574,5.575,2575,4.267,2576,2.904,2577,4.267,2578,2.904,2579,4.267,2580,2.904,2581,2.904,2582,3.67,2583,3.67,2584,2.904,2585,4.267,2586,5.058,2587,2.904,2588,2.904,2589,2.904,2590,2.904,2591,2.904,2592,2.031,2593,2.904,2594,5.939,2595,4.267,2596,4.267,2597,4.267,2598,4.267,2599,4.267,2600,4.267,2601,2.904,2602,4.267,2603,4.267,2604,5.575,2605,4.267,2606,4.267,2607,2.904,2608,2.904,2609,4.267,2610,2.904,2611,2.904,2612,2.904,2613,2.904,2614,2.904,2615,2.904,2616,2.904,2617,6.21,2618,5.058,2619,4.267,2620,5.058,2621,2.904,2622,2.904,2623,2.904,2624,2.498,2625,2.904,2626,2.904,2627,2.904]],["title/components/InstallAppPopupComponentComponent.html",[0,0.045,294,0.83]],["body/components/InstallAppPopupComponentComponent.html",[0,0.09,1,0.874,2,1.07,3,0.168,4,0.168,5,0.875,7,0.833,8,0.833,9,0.126,13,0.412,15,0.492,19,0.874,25,0.755,26,1.506,27,1.121,28,0.649,29,0.745,30,1.892,31,0.917,32,1.235,34,1.687,35,0.874,38,1.235,40,0.168,41,0.515,51,0.515,61,0.464,66,0.717,70,0.522,71,0.019,72,0.359,73,0.275,74,0.464,76,0.664,79,0.587,80,0.874,83,0.875,85,0.446,92,0.48,99,2.2,100,0.552,106,1.638,118,0.317,130,1.295,134,0.464,135,0.492,138,1.393,148,1.05,150,3.137,151,2.593,153,0.225,156,0.147,163,1.055,165,0.147,166,0.168,167,0.408,222,2.53,257,0.874,258,1.123,259,0.96,260,1.568,261,0.96,262,0.96,263,0.874,264,0.96,265,0.833,266,1.295,267,0.874,268,0.96,269,0.874,270,0.96,271,0.96,272,0.833,273,0.719,274,1.295,275,0.874,276,0.793,277,0.96,278,0.874,279,0.96,280,0.874,281,0.96,282,0.833,283,0.96,284,0.833,285,0.793,286,0.96,287,0.874,288,0.96,289,0.874,290,0.96,291,0.96,292,0.874,293,0.96,294,1.426,295,1.912,296,1.754,297,0.916,298,0.584,299,0.96,300,0.874,301,0.96,302,0.874,303,0.96,304,0.874,305,0.916,306,0.96,307,0.874,308,0.719,309,0.96,310,0.874,311,0.916,312,0.96,313,0.916,314,0.96,315,0.874,316,0.96,317,0.719,318,0.755,319,0.833,320,0.96,321,0.96,322,0.012,323,0.012,341,2.319,393,2.664,397,2.753,404,4.874,414,6,418,5.698,454,3.216,462,2.932,478,5.458,484,1.357,491,3.664,492,2.932,541,5.358,597,3.664,601,3.342,648,2.753,704,2.753,767,2.319,774,2.593,817,4.507,823,3.799,885,1.987,889,3.377,962,1.987,982,2.319,1152,3.799,1153,3.799,1162,2.45,1165,2.932,1181,3.55,1186,3.799,1200,3.137,1202,1.336,1275,3.137,1318,4.025,1416,2.2,1668,3.627,1671,5.088,1714,3.342,1719,2.718,1724,4.025,1725,4.025,1963,3.664,1969,4.025,2089,2.985,2091,2.985,2111,4.025,2115,4.087,2116,4.507,2197,4.507,2628,6,2629,5.239,2630,6.345,2631,6.345,2632,5.239,2633,3.886,2634,5.239,2635,4.507,2636,3.886,2637,3.886,2638,5.239,2639,3.886,2640,4.507,2641,3.886,2642,3.886,2643,4.507,2644,5.239,2645,3.377,2646,5.239,2647,4.507]],["title/components/MusicComponent.html",[0,0.045,300,0.83]],["body/components/MusicComponent.html",[0,0.072,1,0.538,2,0.753,3,0.104,4,0.104,5,0.616,6,0.748,7,0.513,8,0.513,9,0.078,13,0.473,15,0.641,19,0.538,20,2.377,23,1.632,25,0.875,26,1.442,27,1.054,28,0.4,29,0.524,30,1.331,31,0.679,32,0.869,34,1.28,35,0.538,36,1.632,38,0.869,40,0.16,41,0.362,51,0.362,61,0.44,66,0.777,68,1.432,70,0.808,71,0.019,72,0.329,73,0.301,74,0.741,76,0.467,78,1.739,79,0.567,80,0.538,83,0.616,85,0.612,92,0.623,94,1.331,95,1.548,99,2.123,100,0.34,103,1.471,106,1.153,114,1.306,116,2.301,118,0.437,121,4.349,130,1.25,133,0.79,134,0.76,135,0.807,142,2.579,146,1.548,147,0.869,148,0.953,153,0.228,156,0.091,158,1.059,163,1.001,165,0.091,166,0.104,167,0.669,168,0.57,173,1.004,177,1.106,192,0.88,198,0.919,208,1.707,214,1.268,215,0.784,217,1.542,222,1.471,257,0.538,258,1.084,259,0.591,260,1.25,261,0.591,262,0.591,263,0.538,264,0.591,265,0.513,266,0.911,267,0.538,268,0.591,269,0.538,270,0.591,271,0.591,272,0.513,273,0.832,274,0.911,275,0.538,276,0.488,277,0.591,278,0.538,279,0.591,280,0.538,281,0.591,282,1.084,283,0.591,284,0.513,285,0.488,286,0.591,287,0.538,288,0.591,289,0.538,290,0.591,291,0.591,292,0.538,293,0.591,294,0.538,295,0.591,296,0.538,297,0.564,298,0.676,299,0.591,300,1.297,301,0.591,302,0.538,303,0.591,304,0.538,305,0.564,306,0.591,307,0.538,308,1.243,309,0.591,310,0.538,311,0.564,312,0.591,313,0.564,314,0.591,315,0.538,316,0.591,317,0.442,318,0.465,319,0.513,320,0.591,321,0.591,322,0.013,323,0.009,325,3.347,327,2.657,329,2.364,330,1.268,336,1.825,338,2.518,345,3.032,355,1.825,364,1.685,371,1.209,383,2.364,393,2.123,432,4.349,433,1.815,441,1.825,449,3.172,450,1.658,452,1.548,454,2.662,480,1.471,482,1.548,484,1.65,487,2.064,513,2.377,514,2.83,517,2.058,518,2.058,553,2.058,556,3.172,557,1.724,563,2.39,569,2.058,573,1.119,633,1.707,641,1.825,648,1.257,651,1.581,657,1.992,658,1.004,662,1.632,665,2.503,667,2.503,702,4.893,715,2.9,721,2.064,750,1.937,764,2.579,774,2.856,822,2.579,894,1.632,902,2.377,915,2.832,925,3.229,931,4.698,932,2.058,982,1.632,1002,1.257,1011,2.579,1052,1.119,1068,3.028,1069,1.184,1146,2.832,1188,2.208,1196,2.377,1211,2.058,1212,1.838,1244,3.875,1246,3.884,1247,5.927,1249,3.814,1263,2.377,1264,2.377,1265,5.424,1266,4.105,1274,2.832,1278,1.184,1280,3.456,1281,3.536,1282,1.838,1283,1.838,1285,1.339,1286,4.432,1288,2.064,1292,1.825,1295,1.724,1305,3.456,1314,3.884,1329,3.884,1332,1.673,1340,1.432,1349,2.832,1352,3.456,1359,2.377,1395,3.147,1416,1.548,1459,1.432,1568,3.536,1578,1.673,1579,1.673,1641,2.064,1654,0.784,1656,1.339,1668,3.073,1675,1.825,1688,2.832,1723,2.208,1763,1.542,1764,1.838,1808,1.838,1812,1.838,1814,1.838,1816,1.838,1817,1.838,1818,1.838,1960,2.208,2034,2.832,2088,3.87,2091,1.838,2092,2.058,2093,1.673,2094,3.172,2095,3.172,2096,3.172,2191,3.172,2572,2.058,2624,2.058,2648,2.058,2649,6.208,2650,3.687,2651,3.687,2652,4.499,2653,3.687,2654,6.208,2655,4.499,2656,4.499,2657,5.056,2658,3.687,2659,3.687,2660,3.687,2661,6.37,2662,6.013,2663,3.687,2664,5.056,2665,5.056,2666,3.687,2667,5.056,2668,5.056,2669,5.056,2670,3.687,2671,2.392,2672,3.687,2673,3.687,2674,3.687,2675,2.392,2676,5.77,2677,3.687,2678,2.392,2679,3.687,2680,3.687,2681,2.392,2682,6.505,2683,3.687,2684,3.687,2685,2.392,2686,3.687,2687,3.687,2688,3.687,2689,2.392,2690,2.392,2691,5.056,2692,2.392,2693,3.687,2694,3.687,2695,2.392,2696,3.687,2697,3.687,2698,3.172,2699,2.392,2700,5.77,2701,2.392,2702,3.687,2703,2.392,2704,3.687,2705,2.392,2706,3.687,2707,2.392,2708,2.392,2709,3.687,2710,2.392,2711,3.687,2712,2.832,2713,3.687,2714,3.172,2715,2.392,2716,3.687,2717,2.392,2718,2.392,2719,5.056,2720,2.392,2721,2.392,2722,2.392,2723,3.172,2724,3.687,2725,2.392,2726,2.392,2727,2.392,2728,4.499,2729,2.392,2730,2.392,2731,2.392,2732,2.392,2733,2.392,2734,3.687,2735,2.392,2736,2.392,2737,2.392,2738,2.392,2739,2.392,2740,2.392,2741,6.013,2742,2.392,2743,3.687,2744,4.499,2745,3.687,2746,3.687,2747,3.687,2748,2.392,2749,4.499,2750,2.392,2751,2.392,2752,2.392,2753,3.687,2754,2.392,2755,2.392,2756,5.77,2757,2.392,2758,3.687,2759,2.392,2760,2.392,2761,3.172,2762,2.392,2763,4.499,2764,2.392,2765,2.392,2766,2.392,2767,3.687,2768,2.392,2769,2.392,2770,2.392,2771,2.392,2772,2.392,2773,3.687,2774,2.392,2775,2.392,2776,2.392,2777,2.392,2778,1.838,2779,2.392,2780,2.392,2781,2.392,2782,3.687,2783,2.392,2784,2.392,2785,3.687,2786,2.392,2787,3.687,2788,2.392,2789,2.392,2790,2.392,2791,2.392,2792,2.392,2793,2.392,2794,2.392,2795,2.392,2796,2.392,2797,2.392,2798,2.392,2799,2.392,2800,2.392,2801,2.392,2802,2.392,2803,2.392,2804,2.392,2805,2.392,2806,2.392,2807,2.392,2808,2.392,2809,4.499,2810,2.392,2811,2.392,2812,3.687,2813,3.687,2814,5.77,2815,3.687,2816,5.056,2817,5.056,2818,5.056,2819,5.056,2820,2.392,2821,2.392,2822,2.392]],["title/components/NavbarComponent.html",[0,0.045,302,0.83]],["body/components/NavbarComponent.html",[0,0.082,1,0.953,2,1.133,3,0.184,4,0.184,5,0.927,6,1.325,7,0.908,8,0.908,9,0.138,13,0.487,17,3.324,19,0.953,25,0.824,26,1.515,27,1.107,28,0.708,29,0.933,31,0.746,32,1.309,34,1.761,35,0.953,36,2.457,38,1.309,40,0.184,41,0.545,51,0.545,61,0.506,66,0.651,70,0.746,71,0.019,72,0.321,73,0.241,74,0.662,76,0.703,78,1.909,79,0.622,80,0.953,83,0.927,85,0.361,92,0.508,99,2.331,100,0.602,105,3.882,114,1.434,118,0.374,130,1.372,132,1.959,134,0.813,135,0.537,148,0.88,153,0.249,156,0.161,163,1.151,165,0.161,166,0.184,167,0.651,257,0.953,258,1.19,259,1.048,260,1.623,261,1.048,262,1.048,263,0.953,264,1.048,265,0.908,266,1.372,267,0.953,268,1.048,269,0.953,270,1.048,271,1.048,272,0.908,273,0.784,274,1.372,275,0.953,276,0.865,277,1.048,278,0.953,279,1.048,280,0.953,281,1.048,282,0.908,283,1.048,284,0.908,285,0.865,286,1.048,287,0.953,288,1.048,289,1.573,290,1.372,291,1.048,292,0.953,293,1.048,294,0.953,295,1.048,296,0.953,297,0.999,298,0.636,299,1.048,300,0.953,301,1.048,302,1.573,303,1.048,304,0.953,305,0.999,306,1.048,307,0.953,308,0.784,309,1.048,310,0.953,311,0.999,312,1.048,313,0.999,314,1.048,315,0.953,316,1.048,317,0.784,318,0.824,319,0.908,320,1.048,321,1.048,322,0.013,323,0.013,330,1.909,395,2.747,396,3.882,399,4.275,405,1.909,428,4.092,433,1.438,441,2.747,454,3.237,462,3.106,492,3.106,497,4.082,499,2.105,504,4.775,505,2.259,514,3.106,547,2.964,554,2.964,599,2.731,637,2.214,715,3.577,720,3.324,750,2.916,823,3.324,962,2.105,1021,3.577,1170,3.882,1186,3.324,1202,1.458,1489,3.577,1654,2.235,1760,3.577,2115,4.189,2417,3.256,2419,4.775,2420,5.554,2423,3.882,2429,4.264,2432,3.256,2434,4.264,2439,4.264,2442,4.264,2443,5.045,2453,3.256,2823,3.646,2824,6.568,2825,6.995,2826,6.19,2827,5.551,2828,6.19,2829,5.551,2830,5.551,2831,4.775,2832,4.238,2833,4.775,2834,4.238,2835,4.238,2836,4.775]],["title/components/PieChartComponent.html",[0,0.045,304,0.83]],["body/components/PieChartComponent.html",[0,0.075,1,0.594,2,0.812,3,0.114,4,0.114,5,0.664,6,0.825,7,0.566,8,0.566,9,0.086,13,0.419,15,0.335,16,2.12,19,0.594,23,1.76,24,2.366,25,0.513,26,1.457,27,1.065,28,0.441,29,0.987,30,1.435,31,0.715,35,0.594,36,1.76,38,0.937,40,0.114,41,0.391,51,0.391,54,2.018,61,0.635,64,2.689,66,0.763,68,2.38,70,0.642,71,0.019,72,0.321,73,0.328,74,0.57,76,0.335,78,1.367,79,0.672,80,0.594,85,0.545,89,3.429,92,0.648,94,2.165,95,2.518,96,1.859,100,0.997,103,2.122,106,1.784,107,2.968,114,0.773,115,1.378,118,0.424,125,2.676,126,1.581,128,2.225,129,1.726,130,1.482,133,1.577,134,0.742,135,0.811,138,1.224,147,0.622,148,0.95,153,0.202,155,1.477,156,0.1,159,1.477,165,0.1,166,0.114,167,0.654,168,0.606,177,0.889,182,1.669,192,0.92,197,2.028,198,1.165,208,1.001,214,0.908,215,1.303,220,1.846,246,2.562,248,1.243,257,0.894,258,0.852,259,0.653,260,1.315,261,0.653,262,0.653,263,0.594,264,0.653,265,0.566,266,0.982,267,0.594,268,0.653,269,0.594,270,0.653,271,0.653,272,0.566,273,0.488,274,0.982,275,0.594,276,0.539,277,0.653,278,0.594,279,0.653,280,0.594,281,0.653,282,0.566,283,0.653,284,0.566,285,0.539,286,0.653,287,0.594,288,0.653,289,0.594,290,0.653,291,0.653,292,0.594,293,0.653,294,0.594,295,0.653,296,0.594,297,0.622,298,0.857,299,0.653,300,0.594,301,0.653,302,0.594,303,0.653,304,1.196,305,1.51,306,0.653,307,0.594,308,0.488,309,0.653,310,0.594,311,0.622,312,0.653,313,0.622,314,0.653,315,0.594,316,0.653,317,0.488,318,0.513,319,0.566,320,0.653,321,0.653,322,0.009,323,0.009,352,2.562,357,1.701,361,1.669,364,1.03,397,3.151,401,2.088,416,2.312,433,1.03,439,2.225,450,1.966,459,2.028,467,2.164,480,1.585,484,1.03,488,2.38,501,1.435,514,2.225,521,2.088,544,1.387,581,1.846,582,1.907,623,1.131,633,1.495,647,1.234,658,1.108,659,1.813,707,3.193,712,2.977,715,3.429,717,1.846,731,2.668,733,4.112,769,1.871,844,3.721,845,1.846,849,4.576,959,5.508,960,3.721,963,4.223,972,3.053,973,4.087,1002,3.442,1003,3.053,1009,1.581,1032,5.508,1052,2.91,1097,2.482,1102,3.269,1119,3.721,1120,2.396,1162,2.488,1168,2.271,1201,1.846,1204,2.271,1216,2.271,1235,2.78,1269,2.676,1284,3.081,1291,1.387,1412,1.581,1416,1.108,1459,1.581,1482,1.581,1489,1.701,1493,1.701,1524,1.846,1545,2.225,1840,1.701,1899,2.78,2247,3.344,2249,4.112,2260,2.271,2261,4.576,2262,4.576,2263,4.576,2264,4.576,2265,3.419,2267,4.383,2268,4.383,2276,4.087,2278,4.775,2287,3.419,2288,4.576,2290,3.419,2295,3.419,2310,2.271,2321,4.383,2333,3.419,2335,3.419,2336,2.271,2337,2.271,2338,3.672,2343,3.672,2344,3.419,2345,2.271,2347,3.419,2348,3.053,2350,2.271,2352,4.112,2369,3.419,2370,2.271,2371,2.271,2383,2.271,2395,2.271,2396,2.271,2468,1.846,2493,3.419,2522,3.419,2582,2.271,2583,3.419,2592,5.102,2837,5.604,2838,2.028,2839,3.975,2840,3.419,2841,4.112,2842,4.781,2843,3.975,2844,4.781,2845,4.781,2846,4.781,2847,4.576,2848,3.975,2849,3.975,2850,2.64,2851,2.64,2852,2.64,2853,5.996,2854,2.64,2855,2.64,2856,2.64,2857,5.32,2858,2.64,2859,2.64,2860,3.419,2861,3.975,2862,2.64,2863,4.383,2864,5.706,2865,3.975,2866,2.64,2867,2.64,2868,2.64,2869,2.64,2870,2.64,2871,3.975,2872,3.975,2873,2.64,2874,2.64,2875,2.64,2876,2.64,2877,2.64,2878,2.64,2879,2.64,2880,2.64,2881,2.64,2882,4.781,2883,2.64,2884,2.64,2885,2.64,2886,2.64,2887,2.64,2888,4.781,2889,3.975,2890,4.781,2891,4.781,2892,5.996,2893,4.781,2894,4.781,2895,4.781,2896,5.996,2897,4.781,2898,4.781,2899,4.781,2900,2.64,2901,4.781,2902,3.975,2903,2.64,2904,4.781,2905,2.64,2906,3.975,2907,2.64,2908,2.64,2909,2.64,2910,2.64,2911,2.64,2912,2.64,2913,2.64,2914,2.271,2915,2.64,2916,2.64,2917,4.781,2918,2.64,2919,3.975,2920,2.64,2921,2.64,2922,2.64,2923,2.64,2924,2.64,2925,3.975,2926,2.64,2927,2.64]],["title/injectables/PostApiService.html",[431,2.583,642,0.441]],["body/injectables/PostApiService.html",[3,0.239,4,0.182,9,0.136,13,0.434,15,0.698,16,2.222,40,0.182,51,0.541,61,0.657,65,3.372,66,0.647,70,0.563,71,0.019,72,0.205,73,0.182,74,0.5,76,0.698,77,2.48,78,1.894,79,0.618,83,0.92,85,0.524,92,0.504,100,0.875,115,1.085,133,1.59,138,1.541,148,0.664,153,0.269,156,0.159,165,0.159,166,0.182,167,0.714,168,0.861,171,2.508,177,0.92,192,0.952,193,2.929,212,2.201,215,1.373,251,3.852,322,0.013,323,0.013,329,3.057,336,2.073,354,5.022,355,1.989,364,1.085,369,2.073,392,0.942,394,3.852,405,1.894,416,2.604,429,2.735,431,4.573,433,1.427,444,3.852,445,5.022,446,4.738,448,2.438,450,2.018,480,2.607,501,1.512,522,2.929,549,5.022,557,2.575,563,2.222,573,1.958,587,4.727,588,2.699,594,3.603,595,2.344,596,3.603,608,3.603,625,2.984,642,0.657,646,1.989,651,1.722,652,1.137,659,2.334,666,3.217,721,2.344,811,3.55,885,2.089,914,3.603,915,4.231,916,5.998,948,1.441,962,2.089,1068,3.298,1069,2.073,1086,4.175,1097,2.607,1114,2.699,1115,2.699,1238,3.902,1249,2.508,1253,3.55,1261,3.801,1269,3.083,1275,3.298,1284,3.55,1359,3.55,1409,3.444,1456,3.801,1636,3.083,1638,3.298,1668,3.57,1768,3.966,2110,4.738,2119,3.217,2126,3.217,2714,4.738,2928,5.624,2929,4.738,2930,5.508,2931,5.508,2932,4.231,2933,6.792,2934,6.538,2935,6.538,2936,4.188,2937,5.508,2938,3.55,2939,4.188,2940,5.508,2941,5.508,2942,6.154,2943,4.188,2944,5.508,2945,5.508,2946,5.508,2947,4.573,2948,6.154,2949,4.188,2950,3.217,2951,4.188,2952,4.188,2953,4.188,2954,5.508,2955,4.188,2956,5.508,2957,4.188,2958,5.508,2959,4.188,2960,4.188,2961,4.188,2962,4.188,2963,4.188,2964,4.188,2965,4.188,2966,4.188,2967,5.508,2968,4.188,2969,5.508,2970,4.188,2971,4.188,2972,4.188,2973,4.188,2974,4.188,2975,4.188,2976,4.188,2977,4.188,2978,3.217,2979,4.188,2980,3.217]],["title/injectables/SaavnService.html",[642,0.441,1244,2.381]],["body/injectables/SaavnService.html",[3,0.15,4,0.15,9,0.113,13,0.476,15,0.438,20,3.118,25,1.315,40,0.15,41,0.475,51,0.475,61,0.577,66,0.711,70,0.749,71,0.019,72,0.357,73,0.286,74,0.666,76,0.613,78,2.187,79,0.677,83,0.808,85,0.611,114,1.281,118,0.441,134,0.666,135,0.9,138,1.509,146,2.032,153,0.25,156,0.131,165,0.183,166,0.15,167,0.692,168,0.909,177,1.129,192,0.888,198,0.706,208,1.312,214,1.19,215,1.134,255,1.618,276,0.988,285,0.988,298,0.727,308,1.276,322,0.011,323,0.014,325,3.174,327,2.542,328,4.358,329,3.455,336,2.762,345,2.931,355,1.747,364,0.896,367,2.266,369,1.713,380,4.131,383,1.818,389,2.23,392,0.778,394,3.384,426,2.897,427,3.415,433,1.445,439,1.936,441,2.395,479,3.902,505,1.19,513,2.23,522,2.42,528,1.818,545,2.23,546,2.072,563,2.181,624,0.895,642,0.577,651,1.744,652,0.939,659,1.312,662,1.532,663,1.93,682,2.395,686,1.532,713,3.717,766,4.286,767,2.142,770,2.47,794,2.42,815,2.815,819,2.542,925,1.936,948,1.19,985,2.395,994,2.658,1002,1.818,1006,2.708,1068,2.897,1069,1.713,1070,2.262,1091,2.897,1120,2.032,1227,4.447,1228,5.3,1229,2.658,1230,2.658,1231,1.936,1232,2.977,1233,4.641,1234,4.641,1236,1.93,1237,2.977,1238,3.687,1239,3.717,1240,4.162,1241,2.42,1242,2.658,1243,2.23,1244,4.246,1245,4.162,1246,5.06,1247,5.878,1248,3.717,1249,4.298,1250,4.799,1251,5.667,1252,5.385,1253,3.118,1254,4.799,1255,4.162,1256,4.162,1257,4.286,1258,3.717,1259,3.717,1260,3.717,1261,3.122,1262,4.162,1263,3.118,1264,3.118,1265,4.884,1266,3.118,1267,4.162,1268,3.717,1269,2.708,1270,4.162,1271,2.977,1272,2.977,1273,2.658,1274,3.717,1275,2.897,1276,4.799,1277,5.817,1278,3.147,1279,4.162,1280,3.717,1281,3.384,1282,4.641,1283,4.286,1284,3.596,1285,3.122,1286,4.286,1287,4.162,1288,2.708,1289,2.977,1290,2.23,1291,1.818,1292,2.395,1293,4.162,1294,5.469,1295,1.618,1296,2.42,1297,2.977,1298,2.977,1299,2.977,1300,3.717,1301,2.977,1302,2.977,1303,2.977,1304,2.977,1305,3.717,1306,2.977,1307,2.977,1308,2.977,1309,2.977,1310,2.977,1311,2.977,1312,3.717,1313,4.162,1314,4.641,1315,4.162,1316,2.977,1317,2.658,1318,3.717,1319,2.977,1320,2.977,1321,2.977,1322,2.977,1323,2.977,1324,2.977,1325,2.977,1326,2.977,1327,2.977,1328,2.977,1329,4.286,1330,2.977,1331,2.658,1332,2.42,1333,2.977,1334,2.42,1335,2.977,1336,2.658,1337,2.977,1338,2.977,1339,2.42,1340,2.072,1341,2.977,1342,2.977,1343,2.23,1344,2.977,1345,2.977,1346,2.42,1347,2.658,1348,2.977,1349,3.717,1350,2.977,1351,2.658,1352,2.658,1353,3.717,1354,2.542,1355,2.23,1356,2.395,1357,2.42,1358,3.717,1359,2.23,1360,2.658,1361,2.658,1362,4.286,1363,2.658,1364,2.658,1365,2.658,1366,2.897,1367,4.641,2126,2.658,2981,4.838,2982,4.838,2983,4.838,2984,3.46,2985,3.46,2986,3.46,2987,3.46,2988,3.46]],["title/interfaces/Schema.html",[402,2.381,624,0.683]],["body/interfaces/Schema.html",[3,0.157,4,0.157,9,0.117,13,0.284,16,2.087,21,1.44,27,0.811,29,0.513,31,0.669,41,0.605,51,0.355,66,0.38,71,0.019,72,0.244,76,0.458,77,2.912,79,0.559,83,0.603,85,0.602,91,1.599,92,0.648,100,0.513,114,0.702,115,0.936,116,1.44,118,0.433,129,1.799,132,1.835,133,1.55,134,0.844,135,0.632,138,1.5,148,0.79,153,0.216,156,0.137,165,0.137,166,0.157,167,0.733,168,0.867,177,1.247,182,2.093,183,1.788,187,1.788,192,0.924,198,1.165,322,0.012,323,0.012,330,1.242,392,0.812,402,4.909,403,3.829,405,1.242,429,1.89,433,1.291,436,2.334,438,1.304,442,2.061,443,2.397,444,3.486,448,1.599,450,1.184,467,1.37,480,2.276,482,1.516,484,0.936,485,1.788,490,5.128,501,1.304,578,3.212,582,1.44,603,2.328,624,1.056,625,2.584,626,1.599,628,1.89,630,2.526,631,1.599,632,1.599,642,0.595,645,4.303,646,1.304,651,1.784,652,0.981,657,1.599,658,2.093,659,1.89,660,1.689,661,2.584,663,2.663,690,2.276,696,2.527,704,1.897,720,2.162,731,1.689,769,1.184,885,2.165,982,1.599,985,1.788,1006,3.194,1084,1.599,1085,2.789,1086,2.162,1097,2.91,1120,3.136,1133,2.526,1202,1.242,1290,3.212,1291,1.897,1416,1.516,1452,3.418,1545,2.021,1552,3.685,1654,1.184,1668,3.196,1670,2.526,1675,2.825,1767,2.789,1791,2.162,2093,2.526,2133,2.774,2645,2.328,2938,2.328,2950,2.774,2978,3.829,2989,2.774,2990,4.288,2991,4.288,2992,3.611,2993,3.611,2994,4.288,2995,3.107,2996,3.107,2997,3.107,2998,3.829,2999,3.107,3000,3.107,3001,3.107,3002,3.107,3003,3.107,3004,3.107,3005,3.107,3006,4.288,3007,3.107,3008,3.107,3009,4.288,3010,3.107,3011,3.107,3012,4.288,3013,2.526,3014,2.526,3015,2.526,3016,2.526,3017,2.526,3018,2.526,3019,3.107,3020,3.107,3021,4.288,3022,3.107,3023,4.91,3024,5.294,3025,3.107,3026,4.288,3027,4.288,3028,4.288,3029,4.288,3030,4.288,3031,3.107,3032,4.288,3033,4.288,3034,3.107,3035,3.107,3036,4.288,3037,4.288,3038,3.107,3039,3.107,3040,4.288,3041,4.288,3042,3.107,3043,3.107,3044,4.288,3045,3.107,3046,3.107,3047,3.107,3048,4.288,3049,3.107,3050,3.107,3051,3.107,3052,3.107,3053,4.288,3054,3.107,3055,3.107,3056,3.107,3057,3.107,3058,3.107,3059,3.107,3060,3.107,3061,3.107,3062,3.107,3063,3.107,3064,3.107,3065,3.107,3066,3.107,3067,3.107,3068,3.107,3069,3.107,3070,3.107,3071,3.107,3072,3.107,3073,3.107,3074,3.107,3075,3.107,3076,3.107]],["title/components/SearchButtonComponent.html",[0,0.045,307,0.83]],["body/components/SearchButtonComponent.html",[0,0.084,1,0.868,2,1.065,3,0.167,4,0.167,5,1.057,6,1.207,7,0.827,8,0.827,9,0.126,13,0.411,15,0.489,19,0.868,25,0.75,26,1.505,27,1.1,28,0.645,29,0.741,30,1.883,31,0.701,32,1.23,34,1.681,35,0.868,36,2.309,38,1.23,40,0.167,41,0.513,51,0.513,61,0.622,66,0.744,70,0.518,71,0.019,72,0.289,73,0.274,74,0.622,76,0.661,79,0.585,80,0.868,83,0.871,85,0.503,92,0.624,99,2.19,100,0.549,106,2.333,107,2.582,114,1.23,118,0.233,125,3.306,126,2.311,128,2.919,130,1.289,134,0.622,135,0.802,138,1.292,147,0.91,148,1.003,151,2.582,153,0.24,155,2.16,156,0.146,158,1.709,163,1.048,165,0.146,166,0.167,167,0.406,168,0.489,171,3.123,173,1.621,252,3.648,257,0.868,258,1.118,259,0.954,260,1.564,261,0.954,262,0.954,263,0.868,264,0.954,265,0.827,266,1.289,267,0.868,268,0.954,269,0.868,270,0.954,271,0.954,272,0.827,273,0.714,274,1.289,275,0.868,276,0.788,277,0.954,278,0.868,279,0.954,280,0.868,281,0.954,282,0.827,283,0.954,284,0.827,285,1.422,286,0.954,287,0.868,288,0.954,289,0.868,290,0.954,291,0.954,292,0.868,293,0.954,294,0.868,295,0.954,296,0.868,297,0.91,298,0.58,299,0.954,300,0.868,301,0.954,302,0.868,303,0.954,304,0.868,305,0.91,306,0.954,307,1.592,308,1.435,309,0.954,310,0.868,311,0.91,312,0.954,313,0.91,314,0.954,315,0.868,316,0.954,317,0.714,318,0.75,319,0.827,320,0.954,321,0.954,322,0.012,323,0.012,333,4.487,338,3.306,426,3.789,427,3.132,477,3.648,492,2.919,505,1.794,515,3.362,528,2.028,545,2.488,546,2.311,573,1.805,612,2.965,667,2.582,830,3.648,891,4.487,925,2.919,962,1.978,1070,2.439,1091,4.241,1152,4.079,1153,4.079,1165,2.919,1181,3.538,1196,3.362,1200,3.123,1266,4.81,1468,2.919,1477,2.7,1491,2.488,1624,4.426,1689,3.123,1960,3.123,1964,4.007,1977,4.487,2115,3.789,2175,5.443,2447,4.487,2551,5.443,3077,6.174,3078,6.174,3079,3.32,3080,5.216,3081,5.216,3082,5.908,3083,5.216,3084,5.908,3085,5.908,3086,6.327,3087,6.327,3088,3.86,3089,5.216,3090,5.908,3091,3.86,3092,5.216,3093,5.216,3094,5.216,3095,5.216,3096,4.861,3097,3.86,3098,5.216,3099,5.216,3100,5.216,3101,5.216,3102,3.86,3103,5.216,3104,3.86,3105,3.86,3106,5.216,3107,5.216,3108,3.86,3109,5.908,3110,3.86,3111,3.86,3112,3.86,3113,5.216,3114,3.86,3115,3.86,3116,3.86,3117,3.86,3118,3.86,3119,3.86,3120,3.86,3121,3.86,3122,3.86]],["title/injectables/SectionService.html",[428,2.067,642,0.441]],["body/injectables/SectionService.html",[2,1.28,3,0.223,4,0.223,9,0.167,13,0.493,15,0.893,40,0.223,41,0.616,51,0.616,66,0.711,70,0.69,71,0.019,72,0.251,73,0.223,74,0.613,79,0.703,85,0.437,92,0.574,103,2.5,107,3.487,114,1.479,118,0.409,134,0.748,135,0.794,146,2.632,153,0.237,156,0.195,165,0.195,166,0.223,167,0.54,168,0.857,222,2.5,322,0.015,323,0.015,327,3.293,330,2.156,392,1.155,393,2.632,399,4.376,409,6.214,428,3.508,436,2.377,441,3.103,497,3.753,499,2.672,637,2.5,642,0.748,646,2.263,652,1.394,750,3.293,948,1.766,1170,4.384,1243,3.31,1268,5.412,1425,4.384,1654,2.218,2233,4.815,2831,5.392,3123,4.418,3124,6.268,3125,7.224,3126,7.045,3127,7.045,3128,6.765,3129,6.268,3130,5.136,3131,6.268,3132,5.136,3133,6.268,3134,6.268,3135,6.268,3136,5.136,3137,6.268,3138,5.392,3139,5.136]],["title/interfaces/Session.html",[624,0.683,1405,2.381]],["body/interfaces/Session.html",[0,0.048,3,0.174,4,0.174,5,1.266,6,0.837,7,0.574,8,0.574,9,0.224,15,0.727,17,1.603,23,1.185,24,1.988,26,0.52,31,0.648,40,0.116,41,0.474,54,1.015,61,0.319,69,1.325,71,0.019,72,0.131,73,0.261,92,0.491,94,0.967,115,1.041,118,0.435,125,2.698,134,0.639,144,1.407,147,1.643,148,0.849,153,0.217,155,1.498,156,0.101,165,0.101,166,0.116,168,0.873,173,1.687,177,1.098,192,0.873,198,1.407,208,2.286,212,1.407,213,2.842,214,1.974,215,2.196,222,1.602,248,1.256,273,0.892,298,0.939,308,0.495,317,0.495,318,1.34,322,0.01,323,0.01,336,3.537,345,3.379,364,1.388,367,1.974,369,1.325,383,3.574,392,0.602,461,2.386,483,1.185,484,1.934,499,1.015,507,1.603,558,1.407,563,1.45,573,1.252,579,2.405,582,1.068,595,1.498,611,1.725,614,1.872,615,3.372,619,3.372,621,2.589,623,1.524,624,0.892,626,1.185,633,1.256,656,1.068,667,1.325,679,1.185,685,1.252,690,1.068,696,2.134,700,1.872,750,1.407,767,1.185,769,2.358,770,2.372,815,2.134,833,2.111,865,4.015,885,1.015,889,1.725,894,1.185,902,1.725,936,1.872,937,1.872,938,1.872,965,4.441,1008,4.015,1052,1.252,1069,2.842,1070,2.254,1084,1.185,1098,2.698,1173,2.589,1176,3.107,1236,2.29,1238,2.248,1261,1.498,1278,2.386,1288,3.374,1340,1.603,1354,1.407,1356,1.325,1368,2.589,1369,1.325,1370,1.498,1371,1.872,1372,2.057,1373,2.057,1374,2.057,1375,2.057,1376,2.057,1377,2.057,1378,2.057,1379,2.057,1380,2.057,1381,2.057,1382,2.057,1383,2.057,1384,2.057,1385,2.057,1386,2.057,1387,2.057,1388,2.057,1389,2.057,1390,2.057,1391,2.057,1392,2.057,1393,2.057,1394,3.086,1395,2.81,1396,2.111,1397,1.872,1398,2.111,1399,3.107,1400,1.872,1401,2.111,1402,1.603,1403,1.872,1404,2.589,1405,3.885,1406,4.41,1407,2.057,1408,1.498,1409,2.248,1410,3.086,1411,2.057,1412,3.938,1413,3.107,1414,4.384,1415,2.589,1416,1.124,1417,2.248,1418,2.057,1419,1.725,1420,5.558,1421,1.498,1422,3.372,1423,1.725,1424,2.057,1425,1.872,1426,2.057,1427,2.057,1428,2.589,1429,2.057,1430,3.086,1431,2.057,1432,2.057,1433,1.603,1434,4.015,1435,3.086,1436,5.088,1437,3.704,1438,3.704,1439,2.057,1440,5.061,1441,2.589,1442,2.057,1443,1.872,1444,2.057,1445,2.057,1446,2.057,1447,1.872,1448,1.872,1449,3.372,1450,3.704,1451,3.744,1452,3.61,1453,3.285,1454,4.631,1455,4.115,1456,3.999,1457,4.115,1458,4.636,1459,3.208,1460,4.372,1461,4.372,1462,4.631,1463,4.115,1464,5.146,1465,4.802,1466,4.41,1467,2.057,1468,2.248,1469,1.872,1470,4.41,1471,1.725,1472,3.704,1473,1.872,1474,5.052,1475,2.057,1476,3.086,1477,3.372,1478,2.057,1479,3.453,1480,3.372,1481,2.057,1482,2.405,1483,2.81,1484,2.057,1485,2.057,1486,2.057,1487,2.057,1488,3.744,1489,1.725,1490,1.872,1491,3.107,1492,2.057,1493,1.725,1494,3.107,1495,2.057,1496,3.704,1497,2.057,1498,3.704,1499,2.057,1500,2.057,1501,2.057,1502,2.887,1503,2.057,1504,2.057,1505,2.81,1506,2.81,1507,3.704,1508,1.872,1509,3.086,1510,2.057,1511,2.057,1512,3.372,1513,3.885,1514,3.086,1515,1.498,1516,4.631,1517,2.057,1518,3.747,1519,3.086,1520,2.057,1521,2.057,1522,2.057,1523,1.603,1524,1.872,1525,2.057,1526,2.057,1527,4.94,1528,2.057,1529,1.725,1530,3.086,1531,2.057,1532,2.057,1533,2.057,1534,2.057,1535,2.057,1536,2.057,1537,2.057,1538,2.057,1539,2.057,1540,2.057,1541,2.057,1542,2.057,1543,2.057,1544,2.057,1545,2.248,1546,2.057,1547,2.057,1548,2.057,1549,2.057,1550,2.057,1551,2.057,1552,1.603,1553,2.057,1554,2.057,1555,2.057,1556,2.057,1557,2.057,1558,5.146,1559,2.057,1560,2.057,1561,2.057,1562,2.057,1563,2.057,1564,2.057,1565,2.057,1566,2.057,1567,2.057,1568,1.872,1569,3.704,1570,3.086,1571,2.057,1572,2.057,1573,4.115,1574,4.631,1575,2.057,1576,2.057,1577,2.057,1578,3.372,1579,3.372,1580,2.057,1581,2.057,1582,2.057,1583,2.057,1584,1.603,1585,2.057,1586,4.115,1587,2.057,1588,2.057,1589,2.057,1590,3.086,1591,2.057,1592,1.872,1593,2.057,1594,2.057,1595,2.057,1596,2.057,1597,2.057,1598,2.057,1599,2.057,1600,2.111,1601,2.057,1602,1.872,1603,2.057,1604,3.704,1605,2.057,1606,2.057,1607,2.057,1608,2.057,1609,2.057,1610,2.057,1611,2.057,1612,2.057,1613,2.057,1614,1.498,1615,2.057,1616,2.057,1617,3.086,1618,2.057,1619,2.057,1620,3.086,1621,2.057,1622,1.725,1623,1.872,1624,1.872,1625,2.057,1626,2.057,1627,2.057,1628,1.725,1629,2.057,1630,2.057,1631,2.057,1632,1.872,1633,2.057,1634,3.453,1635,2.057,1636,1.498,1637,1.872,1638,1.603,1639,2.057,1640,2.057,1641,2.248,1642,2.057,1643,3.086,1644,2.057,1645,3.208,1646,2.057,1647,3.086,1648,2.057,1649,2.057,1650,2.057,1651,3.086,1652,2.057,1653,2.057,1654,0.878,1655,2.057,1656,1.498,1657,1.872,1658,1.872,1659,1.872,1660,1.872,1661,1.872,1662,2.057,1663,2.057,1664,1.725,1665,2.057,1666,2.057,1667,2.057]],["title/components/SettingItemComponent.html",[0,0.045,310,0.83]],["body/components/SettingItemComponent.html",[0,0.09,1,1.095,2,1.238,3,0.211,4,0.211,5,1.013,7,1.043,8,1.043,9,0.158,13,0.383,19,1.095,25,0.946,26,1.528,27,1.117,28,0.813,29,0.862,30,2.19,31,0.815,32,1.148,35,1.095,38,1.43,40,0.211,66,0.512,71,0.019,72,0.297,73,0.211,80,1.095,100,0.692,106,1.896,118,0.367,130,1.499,132,1.809,147,1.43,153,0.184,156,0.184,165,0.184,166,0.211,257,1.095,258,1.3,259,1.203,260,1.709,261,1.203,262,1.203,263,1.095,264,1.203,265,1.043,266,1.499,267,1.095,268,1.203,269,1.095,270,1.203,271,1.203,272,1.043,273,0.9,274,1.499,275,1.095,276,0.994,277,1.203,278,1.095,279,1.203,280,1.095,281,1.203,282,1.043,283,1.203,284,1.043,285,0.994,286,1.203,287,1.095,288,1.203,289,1.095,290,1.203,291,1.203,292,1.095,293,1.203,294,1.095,295,1.203,296,1.095,297,1.148,298,0.731,299,1.203,300,1.095,301,1.203,302,1.095,303,1.203,304,1.095,305,1.148,306,1.203,307,1.095,308,0.9,309,1.203,310,1.555,311,1.768,312,1.203,313,1.148,314,1.203,315,1.095,316,1.203,317,0.9,318,0.946,319,1.043,320,1.203,321,1.203,322,0.014,323,0.014,367,2.086,439,3.394,501,2.19,592,2.836,682,3.002,690,2.893,1052,3.506,1104,4.242,1153,3.632,1162,2.836,1231,3.394,1236,2.419,1716,4.242,2099,4.659,2106,4.242,2640,5.217,3140,5.217,3141,5.217,3142,4.188,3143,5.217,3144,5.217,3145,6.065,3146,4.868]],["title/components/SidebarComponent.html",[0,0.045,315,0.83]],["body/components/SidebarComponent.html",[0,0.086,1,0.938,2,1.122,3,0.181,4,0.181,5,0.918,6,1.304,7,0.894,8,0.894,9,0.136,13,0.483,19,0.938,25,0.811,26,1.513,27,1.106,28,1.026,29,0.928,30,1.983,31,0.738,32,1.295,34,1.748,35,0.938,36,2.432,38,1.295,40,0.181,41,0.54,51,0.54,61,0.498,66,0.646,70,0.738,71,0.019,72,0.341,73,0.266,74,0.656,76,0.696,79,0.616,80,0.938,83,0.918,85,0.355,92,0.503,99,2.307,100,0.593,103,2.191,105,3.842,114,1.269,118,0.41,130,1.358,132,1.947,134,0.809,135,0.529,146,2.924,153,0.233,156,0.158,163,1.133,165,0.158,166,0.181,167,0.646,257,0.938,258,1.177,259,1.031,260,1.614,261,1.031,262,1.031,263,0.938,264,1.031,265,0.894,266,1.358,267,0.938,268,1.031,269,0.938,270,1.031,271,1.031,272,0.894,273,0.772,274,1.358,275,0.938,276,0.852,277,1.031,278,0.938,279,1.031,280,0.938,281,1.031,282,0.894,283,1.031,284,0.894,285,0.852,286,1.031,287,0.938,288,1.031,289,0.938,290,1.031,291,1.031,292,0.938,293,1.031,294,0.938,295,1.031,296,0.938,297,0.984,298,0.922,299,1.031,300,0.938,301,1.031,302,0.938,303,1.031,304,0.938,305,0.984,306,1.031,307,0.938,308,0.772,309,1.031,310,0.938,311,0.984,312,1.031,313,0.984,314,1.031,315,1.566,316,1.031,317,0.772,318,0.811,319,0.894,320,1.031,321,1.031,322,0.013,323,0.013,325,2.887,389,3.541,393,2.307,395,2.719,399,4.238,405,2.245,428,4.08,433,1.423,438,1.983,441,2.719,454,3.227,462,3.075,497,3.29,499,2.791,501,1.983,547,2.918,554,2.918,578,3.541,597,3.842,599,2.689,625,2.307,637,2.191,690,2.191,750,2.887,767,2.432,815,2.432,961,3.842,962,2.084,966,4.726,1186,3.29,1202,1.435,1334,3.842,1490,5.147,1654,2.14,1760,3.541,2011,3.842,2200,4.22,2420,5.535,2423,3.842,2424,4.726,2429,4.22,2432,3.205,2434,4.22,2435,4.726,2439,4.22,2442,4.22,2443,4.22,2453,3.205,2833,4.726,3147,3.589,3148,5.494,3149,5.494,3150,4.726,3151,5.494,3152,6.142,3153,5.494,3154,6.142,3155,5.494,3156,4.172,3157,5.494,3158,5.494,3159,4.172]],["title/injectables/StorageService.html",[429,1.401,642,0.441]],["body/injectables/StorageService.html",[3,0.126,4,0.126,9,0.094,13,0.505,16,2.191,21,1.158,27,0.882,29,0.606,31,0.679,40,0.126,41,0.631,51,0.548,61,0.346,66,0.785,70,0.834,71,0.019,72,0.322,73,0.296,74,0.741,76,0.54,77,2.949,79,0.625,83,0.712,85,0.647,91,1.285,92,0.671,100,0.606,114,0.829,115,0.752,116,1.158,118,0.448,129,1.54,132,1.964,133,1.576,134,0.878,135,0.752,138,1.537,148,0.801,153,0.192,156,0.11,165,0.11,166,0.126,167,0.692,168,0.94,177,1.209,182,1.791,183,1.437,187,1.437,192,0.888,198,1.032,322,0.01,323,0.01,330,1.467,392,0.653,402,4.919,403,2.23,405,1.467,429,2.114,433,1.444,436,2.497,438,1.54,442,1.826,443,2.123,444,3.899,448,1.285,450,0.952,467,1.101,480,2.223,482,1.791,484,1.105,485,2.111,490,5.383,501,1.54,578,3.593,582,1.158,603,1.871,624,0.789,625,2.765,628,1.101,630,2.03,631,1.285,632,1.285,642,0.509,645,4.516,646,1.54,651,1.743,652,0.788,657,2.468,658,1.791,659,1.618,660,1.357,661,2.765,663,2.795,690,1.701,696,2.749,704,2.241,720,2.554,731,1.357,769,0.952,885,1.918,948,0.998,982,1.888,985,2.111,1006,3.475,1084,1.285,1085,2.387,1086,1.738,1097,2.968,1120,3.144,1133,2.983,1202,0.998,1290,3.593,1291,2.241,1416,1.791,1452,3.028,1545,2.83,1552,4.196,1654,0.952,1668,3.326,1670,2.983,1675,3.073,1767,1.624,1791,1.738,2089,2.23,2093,2.03,2133,3.277,2645,2.749,2938,1.871,2950,2.23,2978,4.282,2989,2.23,2990,2.497,2991,2.497,2994,2.497,2995,2.497,2996,3.669,2997,3.669,2998,4.282,2999,3.669,3000,3.669,3001,4.35,3002,4.35,3003,4.35,3004,4.35,3005,4.795,3006,3.669,3007,2.497,3008,4.795,3009,3.669,3010,2.497,3011,4.795,3012,3.669,3013,2.03,3014,2.03,3015,2.03,3016,2.03,3017,2.03,3018,2.03,3019,2.497,3020,4.795,3021,3.669,3022,2.497,3023,5.108,3024,5.664,3025,3.669,3026,3.669,3027,3.669,3028,3.669,3029,3.669,3030,3.669,3031,2.497,3032,3.669,3033,3.669,3034,2.497,3035,2.497,3036,3.669,3037,3.669,3038,2.497,3039,2.497,3040,3.669,3041,3.669,3042,2.497,3043,2.497,3044,3.669,3045,2.497,3046,2.497,3047,3.669,3048,3.669,3049,2.497,3050,2.497,3051,2.497,3052,2.497,3053,3.669,3054,2.497,3055,4.795,3056,4.795,3057,2.497,3058,4.795,3059,2.497,3060,4.795,3061,2.497,3062,4.795,3063,4.795,3064,2.497,3065,4.795,3066,2.497,3067,4.795,3068,2.497,3069,3.669,3070,2.497,3071,2.497,3072,3.669,3073,2.497,3074,2.497,3075,3.669,3076,2.497,3160,4.265,3161,4.265,3162,4.265,3163,4.265,3164,4.265,3165,4.265,3166,2.903,3167,2.903,3168,2.903,3169,2.903,3170,2.903,3171,2.903,3172,2.903,3173,2.903,3174,2.903,3175,2.903,3176,2.903,3177,2.903,3178,2.903,3179,2.903,3180,2.903,3181,2.903,3182,2.903,3183,2.903,3184,2.903,3185,2.903,3186,2.903]],["title/interfaces/Template.html",[5,0.617,624,0.683]],["body/interfaces/Template.html",[0,0.048,3,0.174,4,0.174,5,1.272,6,0.836,7,0.573,8,0.573,9,0.224,15,0.727,17,1.6,23,1.183,24,1.986,26,0.52,31,0.647,40,0.116,41,0.473,54,1.014,61,0.319,69,1.323,71,0.019,72,0.262,73,0.285,92,0.49,94,0.965,115,1.039,118,0.435,125,2.696,134,0.639,144,1.404,147,1.642,148,0.848,153,0.217,155,1.496,156,0.101,165,0.101,166,0.116,168,0.873,173,1.685,177,1.098,192,0.873,198,1.406,208,2.285,212,1.404,213,1.986,214,1.973,215,2.195,222,1.6,248,1.254,273,0.891,298,0.938,308,0.494,317,0.494,318,1.339,322,0.01,323,0.01,336,3.536,345,3.377,364,1.387,367,1.973,369,1.323,383,3.573,392,0.601,461,2.384,483,1.183,484,1.922,499,1.014,507,1.6,558,1.404,563,1.448,573,1.25,579,2.402,582,1.066,595,1.496,611,1.723,614,1.869,615,3.369,619,3.369,621,2.586,623,1.523,624,0.891,626,1.183,633,1.254,656,1.066,667,1.323,679,1.183,685,2.252,690,1.066,696,2.132,700,1.869,750,1.404,767,1.183,769,2.358,770,1.183,815,2.132,833,2.108,865,4.012,885,1.014,889,1.723,894,1.183,902,1.723,936,1.869,937,1.869,938,1.869,965,4.439,1008,4.012,1052,1.25,1069,2.839,1070,2.252,1084,1.183,1098,2.696,1173,2.586,1176,3.104,1236,2.288,1238,2.245,1261,1.496,1278,2.384,1288,3.372,1340,1.6,1354,1.404,1356,1.323,1368,2.586,1369,1.323,1370,1.496,1371,1.869,1372,2.053,1373,2.053,1374,2.053,1375,2.053,1376,2.053,1377,2.053,1378,2.053,1379,2.053,1380,2.053,1381,2.053,1382,2.053,1383,2.053,1384,2.053,1385,2.053,1386,2.053,1387,2.053,1388,2.053,1389,2.053,1390,2.053,1391,2.053,1392,2.053,1393,2.053,1394,3.082,1395,2.806,1396,2.108,1397,1.869,1398,2.108,1399,3.104,1400,1.869,1401,2.108,1402,1.6,1403,1.869,1404,3.697,1405,3.697,1406,3.082,1407,2.053,1408,1.496,1409,2.245,1410,3.082,1411,2.053,1412,3.936,1413,3.104,1414,4.382,1415,2.586,1416,1.122,1417,2.245,1418,2.053,1419,1.723,1420,5.557,1421,1.496,1422,3.369,1423,1.723,1424,2.053,1425,1.869,1426,2.053,1427,2.053,1428,2.586,1429,2.053,1430,3.082,1431,2.053,1432,2.053,1433,1.6,1434,4.012,1435,3.082,1436,5.086,1437,3.7,1438,3.7,1439,2.053,1440,5.059,1441,2.586,1442,2.053,1443,1.869,1444,2.053,1445,2.053,1446,2.053,1447,1.869,1448,1.869,1449,3.369,1450,3.7,1451,3.741,1452,3.607,1453,3.283,1454,4.628,1455,4.112,1456,3.998,1457,4.112,1458,4.635,1459,3.205,1460,4.37,1461,4.37,1462,4.628,1463,4.112,1464,5.144,1465,4.8,1466,4.407,1467,2.053,1468,2.245,1469,1.869,1470,4.407,1471,1.723,1472,3.7,1473,1.869,1474,5.05,1475,2.053,1476,3.082,1477,3.369,1478,2.053,1479,3.45,1480,3.369,1481,2.053,1482,2.402,1483,2.806,1484,2.053,1485,2.053,1486,2.053,1487,2.053,1488,3.741,1489,1.723,1490,1.869,1491,3.104,1492,2.053,1493,1.723,1494,3.104,1495,2.053,1496,3.7,1497,2.053,1498,3.7,1499,2.053,1500,2.053,1501,2.053,1502,2.884,1503,2.053,1504,2.053,1505,2.806,1506,2.806,1507,3.7,1508,1.869,1509,3.082,1510,2.053,1511,2.053,1512,3.369,1513,3.883,1514,3.082,1515,1.496,1516,4.628,1517,2.053,1518,3.744,1519,3.082,1520,2.053,1521,2.053,1522,2.053,1523,1.6,1524,1.869,1525,2.053,1526,2.053,1527,4.937,1528,2.053,1529,1.723,1530,3.082,1531,2.053,1532,2.053,1533,2.053,1534,2.053,1535,2.053,1536,2.053,1537,2.053,1538,2.053,1539,2.053,1540,2.053,1541,2.053,1542,2.053,1543,2.053,1544,2.053,1545,2.245,1546,2.053,1547,2.053,1548,2.053,1549,2.053,1550,2.053,1551,2.053,1552,1.6,1553,2.053,1554,2.053,1555,2.053,1556,2.053,1557,2.053,1558,5.144,1559,2.053,1560,2.053,1561,2.053,1562,2.053,1563,2.053,1564,2.053,1565,2.053,1566,2.053,1567,2.053,1568,1.869,1569,3.7,1570,3.082,1571,2.053,1572,2.053,1573,4.112,1574,4.628,1575,2.053,1576,2.053,1577,2.053,1578,3.369,1579,3.369,1580,2.053,1581,2.053,1582,2.053,1583,2.053,1584,1.6,1585,2.053,1586,4.112,1587,2.053,1588,2.053,1589,2.053,1590,3.082,1591,2.053,1592,1.869,1593,2.053,1594,2.053,1595,2.053,1596,2.053,1597,2.053,1598,2.053,1599,2.053,1600,2.108,1601,2.053,1602,1.869,1603,2.053,1604,3.7,1605,2.053,1606,2.053,1607,2.053,1608,2.053,1609,2.053,1610,2.053,1611,2.053,1612,2.053,1613,2.053,1614,1.496,1615,2.053,1616,2.053,1617,3.082,1618,2.053,1619,2.053,1620,3.082,1621,2.053,1622,1.723,1623,1.869,1624,1.869,1625,2.053,1626,2.053,1627,2.053,1628,1.723,1629,2.053,1630,2.053,1631,2.053,1632,1.869,1633,2.053,1634,3.45,1635,2.053,1636,1.496,1637,1.869,1638,1.6,1639,2.053,1640,2.053,1641,2.245,1642,2.053,1643,3.082,1644,2.053,1645,3.205,1646,2.053,1647,3.082,1648,2.053,1649,2.053,1650,2.053,1651,3.082,1652,2.053,1653,2.053,1654,0.876,1655,2.053,1656,1.496,1657,1.869,1658,1.869,1659,1.869,1660,1.869,1661,1.869,1662,2.053,1663,2.053,1664,1.723,1665,2.053,1666,2.053,1667,2.053]],["title/injectables/TemplateEditorService.html",[642,0.441,1396,1.941]],["body/injectables/TemplateEditorService.html",[3,0.182,4,0.182,9,0.136,31,0.955,40,0.182,41,0.541,51,0.541,66,0.758,70,0.878,71,0.019,72,0.32,73,0.302,74,0.78,85,0.593,92,0.661,118,0.456,134,0.657,135,0.861,148,0.976,153,0.159,156,0.159,165,0.159,166,0.182,168,0.946,177,1.165,192,0.78,222,1.672,258,1.181,322,0.013,323,0.013,361,1.76,364,1.76,380,2.51,392,1.239,401,2.202,437,3.605,450,1.374,582,1.672,611,2.701,642,0.657,652,1.138,683,3.854,807,3.3,826,3.3,846,3.605,894,1.855,948,1.441,1021,3.551,1171,2.51,1188,4.319,1213,4.729,1236,1.672,1249,3.3,1291,2.202,1332,4.751,1351,3.22,1369,3.612,1370,4.083,1396,2.895,1402,2.51,1513,2.701,1518,4.751,1523,2.51,1592,3.854,1600,3.569,1776,5.218,1847,3.22,1960,4.41,2235,3.551,2241,3.22,2296,2.701,2468,2.931,2479,5.844,3187,3.22,3188,6.156,3189,6.539,3190,5.51,3191,6.539,3192,5.51,3193,5.51,3194,4.191,3195,5.51,3196,4.191,3197,5.51,3198,4.191,3199,4.191,3200,5.51,3201,4.191,3202,5.51,3203,4.191,3204,5.51,3205,4.191,3206,4.191,3207,4.729,3208,6.539,3209,4.191,3210,4.191,3211,4.191,3212,4.191,3213,4.191,3214,3.605,3215,4.191,3216,4.191,3217,4.191,3218,4.191,3219,4.191,3220,4.191,3221,4.191,3222,4.191,3223,5.51,3224,4.191,3225,4.191,3226,4.191,3227,4.191,3228,4.191,3229,4.191,3230,4.191,3231,4.191,3232,4.191,3233,5.51,3234,4.191,3235,4.191,3236,4.191,3237,4.191,3238,4.191,3239,4.191,3240,4.191,3241,3.605,3242,3.605,3243,4.191,3244,4.191,3245,4.191,3246,4.191,3247,4.191,3248,4.191,3249,4.191,3250,5.51,3251,5.51,3252,4.191,3253,6.156,3254,6.156,3255,4.191,3256,4.191,3257,4.191,3258,4.191,3259,4.191,3260,5.51,3261,6.156,3262,6.156,3263,6.539,3264,3.605,3265,4.191,3266,4.191,3267,4.191,3268,4.191,3269,4.191,3270,4.191]],["title/modules/TemplatePlaygroundModule.html",[2495,2.583,3271,2.583]],["body/modules/TemplatePlaygroundModule.html",[3,0.235,4,0.235,5,1.083,9,0.177,32,1.28,34,1.845,69,2.688,71,0.019,153,0.289,156,0.206,158,2.404,163,1.474,165,0.206,166,0.235,257,1.221,317,1.43,322,0.015,323,0.015,338,3.628,339,5.576,369,2.688,370,4.171,371,1.78,616,3.798,1369,2.688,1370,3.039,1396,3.911,1397,3.798,1398,3.911,1399,3.5,1400,3.798,1401,3.911,1402,3.252,1403,3.798,1413,3.5,1745,3.798,2300,4.98,2495,3.798,2496,3.798,3271,5.423,3272,5.962,3273,4.847,3274,5.324,3275,4.671,3276,4.671,3277,4.671,3278,4.671,3279,5.43,3280,6.482,3281,6.482,3282,5.43]],["title/components/ToastComponent.html",[0,0.045,319,0.792]],["body/components/ToastComponent.html",[0,0.087,1,0.901,2,1.092,3,0.305,4,0.174,5,0.894,7,0.859,8,0.859,9,0.13,13,0.474,19,0.901,23,2.369,25,0.779,26,1.509,27,1.103,28,0.894,29,0.76,32,0.945,35,0.901,38,1.261,40,0.174,51,0.526,61,0.478,65,3.445,66,0.633,70,0.719,71,0.019,72,0.314,73,0.314,74,0.638,76,0.814,79,0.6,80,1.707,81,3.742,83,0.894,85,0.455,92,0.588,94,1.932,95,2.247,99,2.247,100,0.57,118,0.364,130,1.488,132,1.596,134,0.478,135,0.508,147,1.261,153,0.203,156,0.152,164,2.4,165,0.152,166,0.174,167,0.675,171,2.4,192,0.763,213,3.616,215,2.258,257,0.901,258,1.147,259,0.991,260,1.588,261,0.991,262,0.991,263,0.901,264,0.991,265,0.859,266,1.322,267,0.901,268,0.991,269,0.901,270,0.991,271,0.991,272,0.859,273,0.741,274,1.322,275,0.901,276,0.818,277,0.991,278,0.901,279,0.991,280,0.901,281,0.991,282,0.859,283,0.991,284,0.859,285,0.818,286,0.991,287,0.901,288,0.991,289,0.901,290,0.991,291,0.991,292,0.901,293,0.991,294,0.901,295,0.991,296,0.901,297,0.945,298,0.602,299,0.991,300,0.901,301,0.991,302,0.901,303,0.991,304,0.901,305,0.945,306,0.991,307,0.901,308,0.741,309,0.991,310,0.901,311,0.945,312,0.991,313,0.945,314,0.991,315,0.901,316,0.991,317,0.741,318,0.779,319,1.531,320,0.991,321,0.991,322,0.013,323,0.013,341,2.369,357,3.448,367,2.21,397,2.811,448,2.369,573,3.004,633,1.883,634,3.079,644,2.502,650,4.626,679,1.775,720,3.204,770,3.113,804,4.936,805,3.079,808,4.602,815,1.775,892,3.448,897,2.804,898,3.079,900,3.079,925,4.152,946,2.584,962,2.029,985,1.984,1053,3.448,1098,2.244,1107,2.106,1134,4.438,1137,2.811,1173,2.584,1202,1.379,1236,2.134,1278,2.981,1366,2.4,1436,2.804,1449,2.804,1452,2.4,1453,2.106,1494,3.881,1513,3.448,1523,2.4,1602,2.804,1689,3.847,1803,4.494,1868,2.584,2099,4.11,2115,2.4,2203,4.11,2214,4.602,2215,5.18,2221,3.742,2235,3.448,2647,5.18,2841,5.18,2847,5.527,2860,4.602,3138,4.602,3264,4.602,3283,3.448,3284,5.35,3285,5.35,3286,5.35,3287,6.022,3288,4.009,3289,4.009,3290,4.009,3291,5.35,3292,5.35,3293,5.35,3294,4.009,3295,4.009,3296,4.602,3297,5.35,3298,4.009,3299,5.35,3300,4.009,3301,4.009,3302,4.009,3303,3.448,3304,4.009,3305,4.009,3306,4.009,3307,4.009,3308,4.009,3309,3.448,3310,4.009,3311,4.009,3312,4.009,3313,4.009,3314,4.009,3315,4.009,3316,4.009,3317,4.009,3318,3.448,3319,4.009]],["title/injectables/ToastService.html",[65,1.727,642,0.441]],["body/injectables/ToastService.html",[0,0.089,3,0.313,4,0.208,9,0.156,13,0.517,27,0.855,40,0.208,41,0.591,51,0.591,65,3.219,66,0.69,70,0.808,71,0.019,72,0.294,73,0.327,74,0.718,76,0.94,79,0.675,80,1.719,85,0.512,92,0.63,118,0.397,128,3.367,132,1.794,134,0.784,135,0.609,147,1.419,153,0.228,156,0.182,165,0.182,166,0.208,167,0.723,168,0.832,213,3.729,215,2.323,319,1.638,322,0.014,323,0.014,367,2.069,392,1.477,393,2.526,447,3.878,448,3.047,487,3.367,488,3.603,526,4.135,592,3.071,633,2.053,642,0.718,652,1.305,767,2.664,770,3.248,925,4.106,948,1.653,962,2.282,1003,4.622,1019,4.622,1134,4.436,1137,3.161,1417,3.367,1494,3.878,1689,3.603,1704,3.098,1803,4.814,2114,5.176,2203,4.622,2221,4.208,2235,3.878,2241,4.622,2778,4.622,2932,5.287,3296,5.176,3320,4.135,3321,6.017,3322,6.017,3323,6.017,3324,6.017,3325,4.807,3326,4.807,3327,4.807,3328,4.807,3329,4.807,3330,4.807,3331,4.807]],["title/interfaces/User.html",[138,0.754,624,0.683]],["body/interfaces/User.html",[3,0.175,4,0.175,9,0.131,13,0.317,15,0.68,27,0.763,31,0.541,40,0.175,41,0.527,51,0.396,71,0.019,72,0.337,73,0.325,76,0.51,77,1.527,79,0.677,81,3.753,83,0.672,85,0.548,92,0.491,114,0.783,118,0.474,133,1.293,135,0.874,138,1.581,147,1.265,148,0.638,153,0.203,156,0.153,165,0.203,166,0.175,167,0.705,168,0.51,177,1.209,192,0.68,248,1.678,322,0.013,323,0.013,364,1.668,371,1.759,392,0.905,393,2.703,401,2.819,405,1.845,416,1.937,429,2.441,433,1.823,436,2.035,438,1.454,439,3.378,442,2.324,443,2.955,448,2.849,450,2.11,452,2.253,467,1.527,471,2.656,473,3.458,480,2.14,482,1.691,483,2.375,484,1.737,485,2.656,499,2.035,500,3.539,501,2.179,505,2.214,557,1.883,582,2.14,586,2.411,603,4.148,624,1.116,626,1.782,628,2.035,637,2.14,642,0.64,643,2.115,646,1.454,651,1.259,652,1.093,656,2.14,657,1.782,658,2.253,659,2.035,660,1.883,661,2.534,662,2.375,665,3.186,696,1.782,712,3.003,731,3.224,779,3.753,800,3.093,819,3.623,820,4.944,826,3.213,828,2.819,848,3.213,982,1.782,1085,3.602,1087,3.213,1099,2.816,1103,2.595,1120,2.895,1202,1.385,1231,2.253,1366,2.411,1409,3.003,1622,3.458,1675,3.186,1682,3.458,2106,4.502,2137,4.122,2155,4.636,2645,2.595,2712,3.093,2938,4.148,2947,4.502,2980,4.122,3013,4.502,3014,4.823,3015,4.502,3016,4.502,3017,4.502,3018,4.502,3332,3.093,3333,4.616,3334,4.616,3335,4.616,3336,4.616,3337,4.616,3338,4.616,3339,4.616,3340,4.616,3341,4.616,3342,4.616,3343,4.616,3344,4.616,3345,4.616,3346,3.464,3347,3.464,3348,4.616,3349,3.464,3350,3.464,3351,5.192,3352,4.616,3353,4.616,3354,3.464,3355,3.464,3356,3.464,3357,3.464,3358,3.464,3359,3.464,3360,3.464]],["title/interfaces/UserData.html",[624,0.683,1768,2.381]],["body/interfaces/UserData.html",[0,0.074,3,0.135,4,0.135,6,0.976,9,0.226,13,0.246,15,0.832,16,1.991,18,2.9,19,1.511,21,2.301,25,0.607,26,0.607,27,0.444,29,0.955,31,0.419,32,0.736,33,2.9,34,1.28,38,0.736,40,0.25,41,0.442,54,1.185,61,0.373,63,3.399,64,2.423,65,2.698,71,0.019,72,0.153,73,0.301,75,2.9,76,0.57,78,1.074,79,0.686,80,0.702,83,0.751,86,2.9,91,2.554,92,0.615,94,1.128,95,1.311,96,1.46,100,0.987,101,2.013,106,0.976,113,2.013,114,0.607,115,1.822,116,2.301,118,0.385,129,2.083,132,1.573,133,1.597,134,0.373,137,4.051,138,1.436,144,1.641,148,0.713,150,3.158,151,1.546,153,0.269,156,0.118,157,2.9,158,1.383,159,1.748,163,0.848,164,1.87,165,0.2,166,0.135,167,0.754,168,0.867,173,1.889,177,0.964,178,2.013,179,3.399,182,1.311,183,1.546,187,1.546,192,0.951,198,0.919,208,1.185,212,2.771,213,2.61,214,1.074,215,1.729,217,2.013,247,2.771,248,1.649,255,2.466,256,2.61,272,0.964,273,1.301,282,0.964,322,0.011,323,0.011,338,2.518,341,1.383,355,1.128,361,2.423,364,0.809,371,1.024,395,1.546,416,2.083,433,0.809,448,1.383,461,1.546,473,3.399,477,3.688,521,1.641,544,1.641,563,1.624,592,1.46,623,1.501,624,0.975,625,2.756,626,1.383,628,1.706,631,2.906,632,2.906,638,1.641,641,1.546,644,1.46,646,1.128,648,3.032,653,3.229,680,2.184,709,3.456,721,1.748,772,1.87,774,2.856,776,2.399,786,4.051,789,2.184,837,2.399,841,2.399,877,3.032,899,3.147,917,2.184,928,2.184,985,1.546,986,1.87,987,1.87,988,1.87,1009,2.694,1075,2.9,1076,2.9,1078,3.147,1079,3.147,1080,3.147,1081,3.147,1093,1.748,1102,3.032,1137,1.641,1151,2.184,1201,2.184,1235,3.147,1236,1.794,1285,3.674,1291,1.641,1292,1.546,1295,1.46,1296,2.184,1354,2.771,1355,2.013,1356,1.546,1408,1.748,1451,2.694,1453,3.032,1471,2.013,1479,2.013,1488,1.87,1515,3.229,1641,2.518,1645,2.694,1654,1.024,1656,1.748,1664,3.399,1681,2.184,1716,2.184,1717,2.399,1718,2.399,1719,2.184,1720,2.687,1721,4.698,1722,4.432,1723,1.87,1724,2.399,1725,2.399,1726,2.687,1727,2.687,1728,2.687,1729,2.687,1730,2.687,1733,2.687,1736,2.399,1740,2.687,1741,2.687,1742,2.687,1743,2.687,1745,3.147,1746,2.687,1748,4.536,1751,2.687,1752,2.687,1753,4.536,1754,4.536,1756,2.687,1757,4.051,1760,2.013,1761,2.399,1762,2.184,1763,2.013,1764,2.399,1765,4.051,1766,3.456,1767,2.518,1768,4.411,1769,2.9,1770,5.261,1771,5.479,1772,5.479,1773,2.687,1774,2.687,1775,2.687,1776,4.893,1777,2.687,1778,2.687,1779,2.687,1780,2.687,1781,2.184,1782,2.687,1783,2.687,1784,2.687,1785,2.687,1786,2.687,1787,2.687,1788,2.013,1789,2.687,1790,2.687,1791,1.87,1792,2.687,1793,2.687,1794,2.687,1795,2.687,1796,2.687,1797,2.687,1798,2.687,1799,2.687,1800,2.687,1801,4.536,1802,2.687,1803,3.688,1804,2.687,1805,2.687,1806,2.687,1807,2.687,1808,2.399,1809,2.687,1810,2.687,1811,2.399,1812,2.399,1813,4.536,1814,2.399,1815,2.687,1816,2.399,1817,2.399,1818,2.399,1819,2.399,1820,2.687,1821,2.687,1822,2.687,1823,3.87,1824,2.687,1825,2.687,1826,2.687,1827,2.687,1828,4.536,1829,2.687,1830,2.687,1831,2.687,1832,2.687,1833,2.687,1834,2.687,1835,3.87,1836,2.687,1837,4.963,1838,2.687,1839,3.87,1840,2.9,1841,3.456,1842,3.456,1843,2.687,1844,2.687,1845,2.687,1846,2.687,1847,2.399,1848,2.399,1849,2.687,1850,2.687,1851,2.687,1852,2.687,1853,2.687,1854,2.687,1855,5.261,1856,2.687,1857,2.687,1858,2.687,1859,2.687,1860,2.687,1861,2.687,1862,2.687,1863,5.887,1864,2.687,1865,2.687,1866,1.87,1867,2.687,1868,2.013,1869,2.184,1870,2.687,1871,2.184,1872,2.687,1873,2.687,1874,2.399,1875,2.687,1876,2.687,1877,2.687,1878,3.87,1879,2.687,1880,2.687,1881,2.687,1882,2.687,1883,2.687,1884,2.687,1885,2.687,1886,2.687,1887,2.687,1888,3.87,1889,2.687,1890,2.687,1891,2.687,1892,2.687]],["title/injectables/UserService.html",[416,1.334,642,0.441]],["body/injectables/UserService.html",[3,0.171,4,0.171,9,0.128,13,0.524,15,0.808,27,0.56,31,0.71,40,0.171,51,0.627,61,0.47,66,0.736,70,0.894,71,0.019,72,0.335,73,0.312,74,0.761,76,0.67,77,2.005,79,0.768,81,2.754,83,0.883,85,0.62,92,0.584,114,1.028,118,0.46,133,1.468,135,0.923,138,1.593,147,0.928,148,0.838,153,0.2,156,0.149,165,0.2,166,0.171,167,0.699,168,0.756,177,1.204,192,0.67,248,1.231,322,0.013,323,0.013,364,1.775,371,2.091,392,0.885,393,2.22,401,2.069,405,2.356,416,2.303,429,2.655,433,1.939,436,2.42,438,1.909,439,3.34,442,2.569,443,3.084,448,1.743,450,1.291,452,2.679,467,1.494,471,1.949,473,2.538,480,2.544,482,2.22,483,1.743,484,1.653,485,3.158,499,1.494,500,3.158,501,2.155,505,1.818,557,2.472,582,1.571,586,3.166,603,2.538,624,0.978,628,1.494,637,1.571,642,0.631,643,2.069,646,1.909,651,1.653,652,1.069,656,1.571,657,2.824,658,2.22,659,2.005,660,1.841,661,2.877,662,2.824,665,3.158,696,2.34,712,2.204,731,2.472,779,2.754,800,4.061,819,3.136,820,4.061,826,2.358,828,2.069,848,2.358,948,1.354,950,2.754,982,2.34,1085,2.204,1087,2.358,1099,3.698,1103,3.407,1120,3.084,1202,1.354,1231,2.959,1235,4.174,1366,3.166,1409,2.204,1622,2.538,1675,2.617,1682,2.538,2106,4.976,2137,3.025,2155,5.112,2645,3.407,2712,3.025,2938,2.538,2947,3.698,2980,4.061,3013,2.754,3014,3.698,3015,2.754,3016,2.754,3017,2.754,3018,2.754,3332,3.025,3333,3.387,3334,3.387,3335,3.387,3336,3.387,3337,3.387,3338,3.387,3339,3.387,3340,3.387,3341,3.387,3342,3.387,3343,3.387,3344,3.387,3345,3.387,3346,4.548,3347,4.548,3348,5.134,3349,4.548,3350,4.548,3351,5.134,3352,4.548,3353,4.548,3354,3.387,3355,3.387,3356,3.387,3357,4.548,3358,5.488,3359,4.548,3360,3.387,3361,5.287,3362,5.287,3363,3.938,3364,3.938,3365,3.938,3366,3.938,3367,3.938,3368,3.938,3369,3.938]],["title/injectables/ZipExportService.html",[642,0.441,1398,1.941]],["body/injectables/ZipExportService.html",[3,0.208,4,0.208,5,1.15,6,2.053,9,0.224,15,0.609,28,1.097,40,0.208,51,0.591,66,0.69,70,0.808,71,0.019,72,0.294,73,0.285,74,0.718,85,0.559,92,0.551,107,2.379,118,0.429,153,0.182,156,0.182,165,0.182,166,0.208,168,0.916,177,0.803,192,0.898,251,3.362,258,1.03,273,0.889,318,0.934,322,0.014,323,0.014,361,2.526,392,1.081,452,2.018,475,3.692,507,2.878,514,2.69,563,2.172,623,1.712,642,0.718,652,1.305,683,3.362,685,2.248,717,3.362,761,3.692,807,3.933,833,2.525,894,2.128,901,4.135,948,1.653,1137,2.525,1171,3.933,1269,3.676,1284,3.098,1300,3.692,1343,3.878,1347,3.692,1357,3.362,1369,3.407,1398,3.161,1399,4.568,1402,2.878,1404,3.098,1414,4.884,1415,4.728,1443,3.362,1502,2.878,1600,3.161,1614,3.676,1628,3.878,1641,4.046,1645,4.122,1656,2.69,1657,3.362,1658,3.362,1659,3.362,1660,3.362,1661,3.362,1686,4.135,1767,3.367,1769,3.098,1811,3.692,1819,3.692,1866,2.878,2034,3.692,2135,4.135,2200,3.692,2468,3.362,2529,4.135,2947,4.208,3144,4.135,3241,5.176,3242,5.65,3309,4.135,3370,5.287,3371,3.692,3372,6.017,3373,6.017,3374,6.883,3375,6.017,3376,4.807,3377,6.017,3378,4.807,3379,7.417,3380,4.807,3381,4.622,3382,4.807,3383,4.807,3384,4.807,3385,5.65,3386,4.807,3387,4.807,3388,4.807,3389,4.807,3390,4.807,3391,4.807,3392,4.807,3393,4.807,3394,4.807,3395,4.807,3396,6.017,3397,4.807,3398,6.017,3399,6.883,3400,4.807,3401,4.807,3402,4.807,3403,4.807,3404,4.807,3405,4.807,3406,4.135,3407,4.807,3408,4.807,3409,4.807,3410,4.807,3411,4.807,3412,4.135,3413,4.807,3414,4.807,3415,4.807,3416,4.807]],["title/coverage.html",[1423,3.263]],["body/coverage.html",[0,0.094,1,0.945,5,0.702,9,0.137,10,3.615,11,3.228,12,3.615,15,0.532,27,0.876,29,0.597,35,0.945,64,1.764,65,1.965,71,0.019,73,0.182,100,0.597,138,0.858,161,2.939,198,1.504,253,4.159,263,0.945,265,0.901,267,0.945,269,0.945,272,0.901,275,0.945,276,1.127,278,0.945,280,0.945,282,0.901,284,0.901,287,0.945,289,0.945,292,0.945,294,0.945,296,1.241,297,0.991,300,0.945,302,0.945,304,0.945,307,0.945,310,0.945,313,0.991,315,0.945,317,0.777,319,0.901,322,0.013,323,0.013,324,3.615,348,2.939,374,3.228,391,3.615,402,2.708,416,1.517,427,2.08,428,2.352,429,1.594,431,2.939,528,2.9,534,3.615,541,3.228,549,3.228,558,2.208,624,1.363,625,1.764,627,4.24,637,1.676,642,0.904,651,1.314,653,2.352,699,3.615,958,3.615,1082,4.24,1093,2.352,1097,1.676,1102,2.208,1149,3.615,1150,3.615,1227,2.708,1228,4.24,1229,4.24,1244,2.708,1368,2.708,1369,3.647,1370,3.906,1371,4.578,1396,2.208,1398,2.208,1401,2.208,1405,2.708,1412,2.516,1423,2.708,1600,2.208,1614,2.352,1668,2.08,1669,3.615,1716,4.311,1717,4.24,1718,4.24,1719,4.311,1763,2.708,1768,2.708,1893,4.24,1941,4.24,1942,4.24,1943,3.615,1944,3.615,2007,3.615,2008,3.615,2083,3.615,2097,3.615,2098,3.615,2118,3.615,2119,4.24,2211,3.615,2212,3.615,2231,3.615,2232,3.615,2245,3.615,2278,2.708,2416,3.615,2417,3.228,2418,3.615,2454,4.24,2455,4.24,2537,3.615,2592,3.861,2628,3.615,2648,3.615,2823,3.615,2837,4.24,2838,4.24,2928,3.615,2989,4.24,3077,3.615,3078,3.615,3079,3.615,3123,3.615,3140,3.615,3141,3.615,3142,3.615,3147,3.615,3187,4.24,3207,3.228,3273,2.939,3283,3.615,3320,3.615,3332,4.24,3370,4.24,3371,4.24,3381,3.228,3417,4.202,3418,4.202,3419,7.631,3420,6.164,3421,4.202,3422,4.202,3423,4.202,3424,6.164,3425,5.52,3426,4.748,3427,7.579,3428,3.615,3429,3.615,3430,3.615,3431,3.615,3432,3.615,3433,3.615,3434,4.202,3435,6.799,3436,4.202,3437,4.202,3438,6.978,3439,5.52,3440,5.52,3441,5.52,3442,4.202,3443,6.164,3444,4.202,3445,4.202,3446,4.202,3447,4.202,3448,4.202,3449,4.202,3450,6.978,3451,5.52,3452,5.52,3453,3.615,3454,4.202,3455,4.202,3456,5.52,3457,3.615,3458,3.615,3459,5.849,3460,3.615,3461,3.615,3462,3.615,3463,3.615,3464,4.202]],["title/dependencies.html",[69,2.202,1634,1.982]],["body/dependencies.html",[69,2.823,71,0.019,156,0.216,158,2.525,163,1.549,322,0.016,323,0.016,355,2.059,370,5.435,371,2.188,372,4.907,520,4.907,551,4.907,716,4.382,1243,3.676,1636,3.192,1757,4.382,1765,5.127,1766,4.382,2247,3.989,2307,5.741,2332,4.907,2863,4.382,3465,7.691,3466,5.704,3467,5.704,3468,5.704,3469,5.704,3470,5.704,3471,5.704,3472,5.704,3473,5.704,3474,4.907,3475,5.704,3476,5.704,3477,5.704,3478,5.704,3479,5.704,3480,5.704,3481,5.704,3482,5.704,3483,5.704,3484,5.704,3485,5.704,3486,5.704,3487,5.704,3488,5.704,3489,5.704]],["title/index.html",[40,0.16,3385,3.177]],["body/index.html",[2,0.882,15,0.547,16,2.357,19,0.971,21,1.722,27,0.888,28,1.105,29,1.043,69,2.137,71,0.019,77,2.509,78,1.485,90,3.714,91,2.487,100,1.018,102,3.02,106,1.35,115,1.821,116,2.241,129,2.028,133,1.573,138,1.435,141,2.765,147,1.018,150,2.585,153,0.164,165,0.164,222,1.722,247,3.281,248,2.068,255,2.627,256,3.091,273,0.799,276,0.882,296,0.971,298,0.993,305,1.018,308,1.039,322,0.013,323,0.013,327,2.268,329,2.019,330,1.932,355,2.028,361,1.813,393,2.952,396,4.368,397,3.889,401,2.268,404,3.317,405,1.932,441,2.137,443,2.359,445,4.316,447,2.783,480,1.722,500,2.137,501,2.028,511,3.714,515,3.621,521,2.952,557,2.019,582,1.722,623,1.229,625,3.006,628,1.638,629,2.585,638,2.268,641,2.137,646,1.559,647,2.92,649,2.783,656,2.241,686,1.911,702,3.317,706,3.317,707,2.416,708,4.316,711,3.714,712,3.495,715,2.783,761,3.317,765,3.714,767,2.765,774,2.781,779,3.02,799,3.714,807,3.364,815,2.487,819,2.268,839,2.585,848,2.585,877,2.268,890,3.714,942,3.714,960,4.626,961,4.368,962,2.131,993,3.02,1097,2.491,1100,4.316,1103,2.783,1108,3.317,1151,3.02,1171,2.585,1177,4.833,1178,3.714,1230,3.317,1281,3.02,1285,2.416,1339,4.368,1346,3.02,1417,2.416,1419,4.025,1421,2.416,1422,3.93,1428,2.783,1482,3.74,1584,3.364,1614,3.495,1628,2.783,1636,2.416,1721,3.317,1722,3.317,1723,2.585,1761,3.317,1762,3.02,1866,2.585,1868,2.783,1869,3.02,1871,3.02,1960,3.364,2009,3.714,2011,3.93,2044,3.317,2159,3.714,2161,3.714,2162,3.714,2176,3.714,2189,4.833,2190,3.714,2195,3.714,2233,3.317,2250,4.798,2276,4.316,2278,2.783,2296,2.783,2321,3.317,2423,3.93,2515,3.714,2538,3.714,2635,3.714,2643,3.714,2698,3.714,2836,4.833,2840,3.714,2914,5.373,2929,3.714,2932,3.317,3143,3.714,3150,3.714,3303,3.714,3318,3.714,3406,4.833,3412,3.714,3490,4.317,3491,4.317,3492,4.317,3493,5.618,3494,5.618,3495,7.258,3496,4.317,3497,4.317,3498,4.317,3499,4.317,3500,5.618,3501,4.317,3502,4.317,3503,3.714,3504,4.317,3505,4.317,3506,4.317,3507,5.618,3508,4.317,3509,4.317,3510,4.317,3511,4.317,3512,4.317,3513,4.317,3514,4.317,3515,4.317,3516,4.317,3517,4.317,3518,5.618,3519,4.317,3520,4.317,3521,4.317,3522,4.317,3523,4.317,3524,3.714,3525,3.714,3526,3.714,3527,4.317,3528,4.317,3529,4.317,3530,4.317,3531,4.317,3532,4.317,3533,4.317,3534,4.317,3535,5.618,3536,4.317,3537,4.317,3538,4.317,3539,4.317,3540,4.317,3541,4.317,3542,4.317,3543,5.618,3544,4.317,3545,4.317,3546,4.317,3547,4.317,3548,4.317,3549,4.317,3550,4.317,3551,4.317,3552,4.317,3553,4.317,3554,4.317,3555,3.714,3556,4.317,3557,4.317,3558,4.317,3559,4.317,3560,4.317,3561,4.317,3562,4.317,3563,4.317,3564,4.317,3565,4.317,3566,4.317,3567,4.317,3568,4.317,3569,4.317,3570,4.317,3571,4.317,3572,5.618,3573,4.317,3574,4.317,3575,4.317,3576,4.317,3577,4.317,3578,4.317]],["title/modules.html",[2496,3.541]],["body/modules.html",[71,0.016,322,0.016,323,0.016,371,2.005,2496,4.277,3271,4.277,3579,6.115,3580,6.115,3581,6.115]],["title/overview.html",[1421,2.833]],["body/overview.html",[2,1.191,69,2.887,71,0.018,198,1.191,257,1.311,317,1.411,322,0.016,323,0.016,616,4.08,623,1.66,626,2.582,948,2.006,1396,3.751,1398,3.751,1401,3.751,1413,3.759,1421,3.264,1745,4.08,2300,5.194,2495,4.729,3096,4.481,3271,5.437,3272,5.018,3273,4.08,3274,4.481,3275,5.018,3276,5.018,3277,5.018,3278,5.018,3582,5.833,3583,5.018]],["title/properties.html",[41,0.437,1634,1.982]],["body/properties.html",[41,0.602,71,0.017,322,0.016,323,0.016,1675,3.033,3584,6.127]],["title/routes.html",[558,2.66]],["body/routes.html",[71,0.017,322,0.017,323,0.017,558,3.228]],["title/miscellaneous/variables.html",[3585,2.645,3586,3.827]],["body/miscellaneous/variables.html",[0,0.06,9,0.119,15,0.462,21,1.454,27,0.921,31,1.019,40,0.158,71,0.019,72,0.37,73,0.314,76,0.462,78,1.254,114,1.115,132,1.087,134,0.878,135,0.932,148,0.578,182,3.164,198,1.539,214,1.254,222,1.454,248,1.569,250,2.801,265,1.075,322,0.012,323,0.012,325,1.916,328,2.35,329,3.131,355,2.071,357,3.234,361,1.531,371,1.645,393,3.068,398,3.136,433,0.945,441,1.805,442,2.339,452,1.531,467,1.383,483,1.614,497,2.183,513,3.234,514,2.041,557,2.346,558,3.404,563,1.811,623,1.037,651,2.026,662,1.614,769,2.471,805,4.406,826,2.183,833,1.916,848,3.004,894,1.614,897,3.509,898,2.801,900,3.854,1004,3.136,1084,3.336,1085,4.218,1086,4.513,1097,2.288,1107,1.916,1120,2.107,1137,1.916,1236,1.454,1253,3.234,1275,3.004,1343,2.35,1369,2.839,1370,2.041,1404,3.982,1408,2.041,1412,3.435,1416,2.721,1433,3.435,1441,2.35,1469,2.55,1600,2.636,1636,3.839,1637,3.509,1638,3.004,1671,2.801,1672,3.136,1673,3.136,1674,3.136,1675,2.483,1683,4.316,1684,4.316,1687,3.136,1701,6.011,1704,3.234,1706,5.573,1736,3.854,1848,2.801,1866,2.183,1868,2.35,1869,2.55,1871,2.55,1874,2.801,2062,3.136,2272,3.136,2278,3.234,2454,2.801,2455,3.854,2592,2.55,2723,3.136,2761,3.136,2778,4.406,2837,2.801,2838,3.854,2863,2.801,2998,2.801,3096,2.801,3187,3.854,3207,3.854,3214,3.136,3273,4.012,3274,3.854,3370,2.801,3371,3.854,3381,3.854,3426,3.136,3428,4.934,3429,3.136,3430,4.316,3431,3.136,3432,4.316,3433,3.136,3453,3.136,3457,3.136,3458,3.136,3459,3.136,3460,4.316,3461,4.316,3462,4.316,3463,4.316,3474,4.316,3503,3.136,3524,3.136,3525,3.136,3526,3.136,3555,3.136,3583,3.136,3585,4.316,3586,3.136,3587,6.479,3588,3.646,3589,3.646,3590,3.646,3591,3.646,3592,5.017,3593,3.646,3594,3.646,3595,3.646,3596,3.646,3597,3.646,3598,3.646,3599,3.646,3600,3.646,3601,3.646,3602,3.646,3603,3.646,3604,5.017,3605,5.017,3606,3.646,3607,3.646,3608,3.646,3609,3.646,3610,3.646,3611,3.646,3612,3.646,3613,3.646,3614,3.646,3615,5.017,3616,3.646,3617,3.646,3618,3.646,3619,3.646,3620,3.646,3621,3.646,3622,3.646,3623,3.646,3624,3.646,3625,3.646,3626,3.646,3627,3.646,3628,3.646,3629,3.646,3630,3.646,3631,3.646,3632,3.646,3633,5.017,3634,3.646,3635,3.646,3636,3.646,3637,3.646,3638,3.646,3639,3.646,3640,3.646,3641,3.646,3642,3.646,3643,3.646,3644,5.017,3645,3.646,3646,3.646,3647,5.017,3648,3.646,3649,3.646,3650,3.646,3651,3.646,3652,5.017,3653,3.646,3654,5.017,3655,3.646,3656,3.646,3657,3.646,3658,3.646,3659,3.646,3660,3.646,3661,3.646,3662,3.646,3663,3.646,3664,3.646,3665,3.646,3666,3.646,3667,3.646,3668,3.646,3669,3.646,3670,3.646,3671,3.646,3672,3.646,3673,3.646,3674,3.646,3675,3.646,3676,3.646,3677,3.646,3678,3.646,3679,3.646,3680,3.646,3681,3.646,3682,3.646,3683,3.646,3684,3.646,3685,3.646,3686,3.646,3687,3.646,3688,3.646,3689,3.646,3690,3.646,3691,3.646,3692,3.646,3693,3.646]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":1041,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":3584,"title":{},"body":{"properties.html":{}}}],["0.125rem",{"_index":1521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15.0",{"_index":3489,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":1509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.18.5",{"_index":3487,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3",{"_index":2911,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.375rem",{"_index":1528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.543.0",{"_index":3479,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":1501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":1474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":1514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":1516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":1465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":3420,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":3423,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":3422,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3424,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3418,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3421,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":1535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":1534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":1512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["009688",{"_index":3666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":3640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":1049,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":2067,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":2066,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0–1",{"_index":2032,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":1039,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":1045,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":3481,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1/1",{"_index":3427,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":3096,"title":{},"body":{"components/SearchButtonComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":3451,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["100,000,000",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["1000",{"_index":914,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["100px",{"_index":2625,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":1439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":2525,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["10rem",{"_index":1179,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":1004,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["110",{"_index":1872,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["111",{"_index":2917,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":3655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["13",{"_index":3657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":3441,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3214,"title":{},"body":{"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["14/14",{"_index":3455,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":1852,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["145",{"_index":1853,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["15",{"_index":3583,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":3480,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3434,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2062,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":3445,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/17",{"_index":3425,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":3670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":3465,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":3469,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":3444,"title":{},"body":{"coverage.html":{}}}],["1c7430",{"_index":1542,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":1541,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":1487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":1460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":1454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1st",{"_index":2039,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["2",{"_index":361,"title":{},"body":{"components/AiComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1259,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":3486,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3442,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":3439,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2025",{"_index":1011,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["20px",{"_index":2520,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["2196f3",{"_index":3638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":3436,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":1854,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["23px",{"_index":2627,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":916,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["24/24",{"_index":3454,"title":{},"body":{"coverage.html":{}}}],["25.9.21",{"_index":3687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250px",{"_index":1492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["255",{"_index":1860,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["26",{"_index":3582,"title":{},"body":{"overview.html":{}}}],["28/28",{"_index":3443,"title":{},"body":{"coverage.html":{}}}],["28a745",{"_index":1472,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["29",{"_index":2151,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["2rem",{"_index":1455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1866,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":3476,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3456,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":899,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["300",{"_index":1554,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3000",{"_index":1803,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["300ms",{"_index":1555,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["320kbps",{"_index":2688,"title":{},"body":{"components/MusicComponent.html":{}}}],["320kbps')?.url",{"_index":2740,"title":{},"body":{"components/MusicComponent.html":{}}}],["33",{"_index":1864,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["350",{"_index":2298,"title":{},"body":{"components/GraphsComponent.html":{}}}],["38/38",{"_index":3448,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":3648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1868,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.0.3",{"_index":3472,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":3475,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3473,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3470,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3450,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":928,"title":{},"body":{"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["46",{"_index":1865,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["48",{"_index":1875,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["495057",{"_index":1497,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":3631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e555b",{"_index":1539,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":1508,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1869,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":3477,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3435,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["500",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["5000",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["545b62",{"_index":1538,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["55",{"_index":1867,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["58",{"_index":1835,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["59",{"_index":1939,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":1871,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6/6",{"_index":3452,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":915,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["600",{"_index":1496,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["607d8b",{"_index":3651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":3664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c757d",{"_index":1466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":1874,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":3484,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3437,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1845,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8",{"_index":1408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":3483,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3438,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":895,"title":{},"body":{"components/BudgetComponent.html":{}}}],["800",{"_index":926,"title":{},"body":{"components/BudgetComponent.html":{}}}],["85",{"_index":1870,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8bc34a",{"_index":3654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1848,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["9/9",{"_index":3440,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1940,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":3643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":3656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":2403,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.click",{"_index":1660,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":1658,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.expense_count",{"_index":1126,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.href",{"_index":1657,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.name",{"_index":2802,"title":{},"body":{"components/MusicComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":1127,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.style.display",{"_index":3416,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a.time.split(\":\").map(number",{"_index":2377,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a4",{"_index":1827,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["ability",{"_index":3548,"title":{},"body":{"index.html":{}}}],["above",{"_index":1690,"title":{},"body":{"injectables/ConfigService.html":{}}}],["acc",{"_index":1065,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accepted",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["accepts",{"_index":331,"title":{},"body":{"components/AiComponent.html":{}}}],["acceptsuggestiononenter",{"_index":3229,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":2645,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accessed",{"_index":650,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["accesses",{"_index":2937,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":2272,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1334,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["account",{"_index":3340,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accurate",{"_index":1315,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":1624,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":1473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["activation",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["activepath",{"_index":3154,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual",{"_index":2634,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["actual_component",{"_index":321,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":802,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["add(data",{"_index":671,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["add/edit",{"_index":773,"title":{},"body":{"components/BudgetComponent.html":{}}}],["added",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["additional",{"_index":1347,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["address",{"_index":3339,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["adjusted",{"_index":1901,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["afterviewinit",{"_index":2841,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["again",{"_index":1632,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["aggregates",{"_index":2853,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ahours",{"_index":2374,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":325,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":264,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":342,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":340,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":263,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasybkbmhcsvna6d8bpyjqqhbpdymn7_nvm2w",{"_index":3682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1282,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["albumname",{"_index":1301,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1327,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["align",{"_index":1451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["alignment",{"_index":2108,"title":{},"body":{"components/FormModelComponent.html":{}}}],["all.filter(c",{"_index":1144,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":694,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.map(item",{"_index":688,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":675,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.some(c",{"_index":1141,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allow",{"_index":2222,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["allowed",{"_index":797,"title":{},"body":{"components/BudgetComponent.html":{}}}],["allowed/day",{"_index":3545,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":3502,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2233,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["alongside",{"_index":2085,"title":{},"body":{"components/FooterComponent.html":{}}}],["alphabetically",{"_index":1111,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["already",{"_index":1351,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":683,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["amber",{"_index":3669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":2375,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":2021,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{}}}],["amt",{"_index":2063,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":2134,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["analyze",{"_index":1312,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":2145,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["anchor",{"_index":2442,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":355,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":369,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":3466,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":370,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":3467,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":3468,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":3460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":3599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":892,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["animated",{"_index":718,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatedbudgetprogress",{"_index":724,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatepercentage",{"_index":739,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animates",{"_index":756,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animation",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":2302,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":2179,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":2164,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":2882,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2912,"title":{},"body":{"components/PieChartComponent.html":{}}}],["aoa",{"_index":1881,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(headerrow",{"_index":1885,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(object.values(row",{"_index":1887,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["apexaxischartseries",{"_index":2304,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":2297,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":2307,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":2314,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":2316,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexstroke",{"_index":2318,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":2323,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":2325,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":2327,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":2308,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":2312,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":329,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":375,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":2119,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:103",{"_index":2132,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2936,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:23",{"_index":2127,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:37",{"_index":2943,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:45",{"_index":2142,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:74",{"_index":2140,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:76",{"_index":2939,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":374,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2948,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service",{"_index":2732,"title":{},"body":{"components/MusicComponent.html":{}}}],["api/saavan.service.ts",{"_index":1229,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:153",{"_index":2984,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:34",{"_index":2988,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:39",{"_index":2987,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:44",{"_index":2983,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:63",{"_index":2985,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:80",{"_index":2986,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":1559,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["api_response_app_version",{"_index":2967,"title":{},"body":{"injectables/PostApiService.html":{}}}],["apiurl",{"_index":1257,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["app_current_version",{"_index":2969,"title":{},"body":{"injectables/PostApiService.html":{}}}],["app_version",{"_index":3018,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":265,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig",{"_index":3430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":2190,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["appearance",{"_index":3397,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":1442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1355,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["applicationconfig",{"_index":3615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":3686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{}}}],["appname",{"_index":1671,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1681,"title":{},"body":{"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["appversion",{"_index":2088,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["apr",{"_index":2048,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":2408,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":2246,"title":{},"body":{"components/GraphsComponent.html":{}}}],["args",{"_index":2500,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":2502,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":2501,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arguments",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["arial",{"_index":2519,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":663,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":2356,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":2400,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":2390,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1286,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artist.name).join",{"_index":1309,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artists",{"_index":1283,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname",{"_index":1305,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname)}${formatfield('is",{"_index":1328,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artistsname.split(',')[0].trim",{"_index":2768,"title":{},"body":{"components/MusicComponent.html":{}}}],["aseconds",{"_index":2376,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":2196,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":2205,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":2177,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assign",{"_index":3349,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["assigned",{"_index":1106,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["assist",{"_index":2202,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":389,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["associated",{"_index":1087,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["associates",{"_index":1128,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["async",{"_index":345,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["attached",{"_index":1909,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attaches",{"_index":1898,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attempting",{"_index":1138,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["attribute.name",{"_index":3261,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":3263,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["audio",{"_index":2654,"title":{},"body":{"components/MusicComponent.html":{}}}],["aug",{"_index":2051,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":2411,"title":{},"body":{"components/GraphsComponent.html":{}}}],["authentication",{"_index":1256,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["auto",{"_index":1494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["autoclosingbrackets",{"_index":3226,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":3268,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":3227,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatic",{"_index":3684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":667,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":3211,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autotable",{"_index":1766,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["autotable(doc",{"_index":1843,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["available",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["average",{"_index":705,"title":{},"body":{"components/BudgetComponent.html":{}}}],["averages",{"_index":2169,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":942,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["avgallowedperday",{"_index":725,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgallowedperday.tofixed(2",{"_index":943,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday",{"_index":726,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday.tofixed(2",{"_index":944,"title":{},"body":{"components/BudgetComponent.html":{}}}],["await",{"_index":383,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["axis",{"_index":2311,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":1124,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":1125,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":2381,"title":{},"body":{"components/GraphsComponent.html":{}}}],["back",{"_index":2825,"title":{},"body":{"components/NavbarComponent.html":{}}}],["backend",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backgroundcolor",{"_index":2907,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2896,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":2615,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":2558,"title":{},"body":{"components/HomeComponent.html":{}}}],["backup",{"_index":2947,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["backup_frequency",{"_index":3013,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["backups",{"_index":3335,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":1520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bar",{"_index":715,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1253,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseinstructions",{"_index":2156,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":1254,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["bash",{"_index":3401,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":2518,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["becomes",{"_index":834,"title":{},"body":{"components/BudgetComponent.html":{}}}],["before",{"_index":1137,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2926,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":2191,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{}}}],["behavior",{"_index":2443,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["behaviorsubject",{"_index":3125,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":3135,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["below",{"_index":1838,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["best",{"_index":1345,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1339,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["between",{"_index":815,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":804,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":2378,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":3634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":3305,"title":{},"body":{"components/ToastComponent.html":{}}}],["blinkmacsystemfont",{"_index":1444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":1641,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["blob([content",{"_index":1810,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["block",{"_index":3122,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockcomment",{"_index":3266,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["blockkey",{"_index":2545,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":2554,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":2183,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":900,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":2379,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1356,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["bodystyles",{"_index":1861,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["boolean",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":3273,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":3626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bordercolor",{"_index":2901,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2908,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":1459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["box",{"_index":368,"title":{},"body":{"components/AiComponent.html":{}}}],["boxes",{"_index":3544,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":3267,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":2480,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["brightness",{"_index":2030,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["broadcast",{"_index":2831,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["broadcasting",{"_index":2435,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["browse",{"_index":3581,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":371,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/server",{"_index":2674,"title":{},"body":{"components/MusicComponent.html":{}}}],["browserdistfolder",{"_index":3461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":3281,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["browser’s",{"_index":3565,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":2380,"title":{},"body":{"components/GraphsComponent.html":{}}}],["btn",{"_index":1527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["budget",{"_index":625,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["budget's",{"_index":791,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget'},{'name",{"_index":268,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget.component.css",{"_index":723,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget.component.html",{"_index":722,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget_id",{"_index":630,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcolorclass",{"_index":727,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetcomponent",{"_index":267,"title":{"components/BudgetComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetdata",{"_index":1772,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["budgetform",{"_index":728,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetkey",{"_index":3003,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetmessage",{"_index":729,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetprogress",{"_index":730,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgets",{"_index":645,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetschema",{"_index":3021,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":653,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["build",{"_index":1736,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":1956,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["bullet",{"_index":2184,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":2115,"title":{},"body":{"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["button'},{'name",{"_index":309,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":3082,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":3083,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":3079,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":3104,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":3105,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":3108,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3089,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":3102,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":3097,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":3091,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":3078,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":1142,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculate",{"_index":710,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculatebudgetprogress",{"_index":740,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculated",{"_index":758,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculates",{"_index":760,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["calculatetotalexpenses",{"_index":978,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":983,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculations",{"_index":782,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calendar",{"_index":961,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":969,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":968,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":269,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":970,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":971,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":1635,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":3204,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["callbacks",{"_index":2918,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"injectables/ToastService.html":{}}}],["calls",{"_index":1262,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["cancel",{"_index":947,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["canvas",{"_index":2857,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvasref",{"_index":2844,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvg",{"_index":3471,"title":{},"body":{"dependencies.html":{}}}],["care",{"_index":3663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2479,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["cash",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1914,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":2881,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":1217,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":1216,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1919,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1918,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1917,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["categories",{"_index":1097,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1915,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1897,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":1208,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1894,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1895,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1788,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["categorycolors",{"_index":2845,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydata",{"_index":1771,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":1140,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":3001,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":2846,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":1156,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":3006,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":1166,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":1102,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["categorytotals",{"_index":2888,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":2892,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":1163,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":2890,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2899,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cellwidth",{"_index":1863,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["center",{"_index":1453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["certain",{"_index":2559,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":894,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":2290,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changemonth",{"_index":979,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":989,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/ZipExportService.html":{}}}],["changes['currentdate",{"_index":2337,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":2336,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":2278,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":306,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":2593,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":2842,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":2843,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":2838,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:101",{"_index":2851,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:116",{"_index":2854,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:140",{"_index":2852,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:160",{"_index":2855,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:188",{"_index":2862,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:22",{"_index":2875,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":2869,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:28",{"_index":2867,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:31",{"_index":2874,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:34",{"_index":2870,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:37",{"_index":2868,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:40",{"_index":2873,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:43",{"_index":2866,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:46",{"_index":2850,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:49",{"_index":2849,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:69",{"_index":2859,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:85",{"_index":2856,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:94",{"_index":2858,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2863,"title":{},"body":{"components/PieChartComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart/pie",{"_index":2592,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":2254,"title":{},"body":{"components/GraphsComponent.html":{}}}],["charts",{"_index":2247,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":2255,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":2256,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":2257,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":2209,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1227,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{}}}],["checks",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["choiceresult.outcome",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["chosen",{"_index":3529,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["classes",{"_index":1053,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["cleanedsong",{"_index":2759,"title":{},"body":{"components/MusicComponent.html":{}}}],["clear",{"_index":1602,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["clearinterval(interval",{"_index":935,"title":{},"body":{"components/BudgetComponent.html":{}}}],["clearinterval(this.interval",{"_index":2749,"title":{},"body":{"components/MusicComponent.html":{}}}],["clears",{"_index":996,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleartimeout(this.savetimeout",{"_index":1570,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":3609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["clickedinside",{"_index":2451,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicking",{"_index":2421,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":1186,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close",{"_index":1188,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["closed",{"_index":1964,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/SearchButtonComponent.html":{}}}],["closedownloaddatamodal",{"_index":1728,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["closemodal",{"_index":741,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["closemodel",{"_index":2103,"title":{},"body":{"components/FormModelComponent.html":{}}}],["closeplayermodal",{"_index":2657,"title":{},"body":{"components/MusicComponent.html":{}}}],["closes",{"_index":772,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/UserData.html":{}}}],["closing",{"_index":1946,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":3612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":3275,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":3277,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":3276,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":3278,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":656,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["color",{"_index":769,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":2621,"title":{},"body":{"components/HomeComponent.html":{}}}],["colors",{"_index":717,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{}}}],["column",{"_index":1438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":1484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columnstyles",{"_index":1862,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["combining",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1303,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["comment",{"_index":3253,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":3223,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":2472,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["communicates",{"_index":3151,"title":{},"body":{"components/SidebarComponent.html":{}}}],["communicating",{"_index":2120,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["compact",{"_index":2419,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{}}}],["compare",{"_index":2475,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":2515,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["compliant",{"_index":2996,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["compodoc",{"_index":1415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":1368,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":3291,"title":{},"body":{"components/ToastComponent.html":{}}}],["component'},{'name",{"_index":274,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["component.component",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["component.component.css",{"_index":1725,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.html",{"_index":1724,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.ts",{"_index":1719,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component.component.ts:107",{"_index":1739,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:119",{"_index":1738,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:191",{"_index":1755,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:210",{"_index":1750,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:224",{"_index":1737,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:235",{"_index":1747,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:26",{"_index":2633,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:302",{"_index":1744,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:32",{"_index":2639,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:40",{"_index":2632,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:56",{"_index":1758,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:57",{"_index":2637,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:61",{"_index":1759,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:66",{"_index":2636,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:67",{"_index":1735,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:94",{"_index":1749,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/download",{"_index":1718,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component/form",{"_index":2733,"title":{},"body":{"components/MusicComponent.html":{}}}],["component/graphs/graphs.component",{"_index":2590,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/install",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["component/pie",{"_index":2591,"title":{},"body":{"components/HomeComponent.html":{}}}],["component_template",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["components/download",{"_index":1717,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["components/setting",{"_index":3140,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["computed",{"_index":1090,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["conditional",{"_index":2485,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditions",{"_index":1691,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config",{"_index":1412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":2950,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["configservice",{"_index":1668,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["configurable",{"_index":3284,"title":{},"body":{"components/ToastComponent.html":{}}}],["configuration",{"_index":1416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm('are",{"_index":936,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirmanddownload",{"_index":1729,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["confirmation",{"_index":780,"title":{},"body":{"components/BudgetComponent.html":{}}}],["connects",{"_index":2234,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["consider",{"_index":1333,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["consistency",{"_index":1101,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["console.error(\"chart.js",{"_index":2886,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2927,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":1059,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('download",{"_index":1808,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('error",{"_index":1069,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('gemini",{"_index":2149,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":3027,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["console.error('no",{"_index":1631,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('submit",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["console.log('backup",{"_index":2975,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":3111,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('creating",{"_index":1633,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('posting",{"_index":2961,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('reset",{"_index":1629,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":1576,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":1663,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('user",{"_index":608,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["console.warn('failed",{"_index":2765,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('user",{"_index":2977,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":1143,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":1646,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructing",{"_index":753,"title":{},"body":{"components/BudgetComponent.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["constructor(categoryservice",{"_index":1168,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(configservice",{"_index":2089,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(expenseservice",{"_index":746,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":3088,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":2219,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":2126,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":1202,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(saavnservice",{"_index":2671,"title":{},"body":{"components/MusicComponent.html":{}}}],["constructor(sectionservice",{"_index":2432,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":950,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":3288,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructors",{"_index":1427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructs",{"_index":2270,"title":{},"body":{"components/GraphsComponent.html":{}}}],["contain",{"_index":2023,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["container",{"_index":1523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1269,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["contains",{"_index":1686,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ZipExportService.html":{}}}],["content",{"_index":1236,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["contentdisposition",{"_index":1647,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":1652,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1357,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["context",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2921,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2920,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2919,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":2204,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":3576,"title":{},"body":{"index.html":{}}}],["control",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["controlled",{"_index":2214,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["conversation",{"_index":1251,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["convert",{"_index":2807,"title":{},"body":{"components/MusicComponent.html":{}}}],["converts",{"_index":334,"title":{},"body":{"components/AiComponent.html":{},"components/ExpenseListComponent.html":{}}}],["copyright",{"_index":2797,"title":{},"body":{"components/MusicComponent.html":{}}}],["count",{"_index":1110,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["counter",{"_index":757,"title":{},"body":{"components/BudgetComponent.html":{}}}],["counts",{"_index":1112,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["cover",{"_index":2822,"title":{},"body":{"components/MusicComponent.html":{}}}],["coverage",{"_index":1423,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":1098,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["created",{"_index":1577,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["createnoderequesthandler(app",{"_index":3606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["createsession",{"_index":1571,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["creating",{"_index":749,"title":{},"body":{"components/BudgetComponent.html":{}}}],["creation",{"_index":700,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crypto.randomuuid",{"_index":674,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":807,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["ctx",{"_index":2902,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":731,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":2267,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["currentmonth",{"_index":972,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":2345,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":2350,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":3351,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":3353,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1280,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1302,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1307,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1308,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.primary[0]?.name",{"_index":2817,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.artists?.all",{"_index":1306,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1326,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1323,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.isliked",{"_index":1330,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1324,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1325,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name",{"_index":2816,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1320,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1321,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1322,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentstep",{"_index":930,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentstep).tofixed(1",{"_index":933,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentyear",{"_index":973,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":2395,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":2396,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["curve",{"_index":2319,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":1171,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["customfavicon",{"_index":1372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customizable",{"_index":2100,"title":{},"body":{"components/FormModelComponent.html":{}}}],["customization",{"_index":3406,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["customization.html",{"_index":3415,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":3408,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":3392,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":3396,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["cyan",{"_index":3641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":2061,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["d.quality",{"_index":2739,"title":{},"body":{"components/MusicComponent.html":{}}}],["daily",{"_index":712,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark:text",{"_index":3312,"title":{},"body":{"components/ToastComponent.html":{}}}],["darken",{"_index":2010,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor",{"_index":2015,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":2024,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkened",{"_index":2033,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkens",{"_index":2027,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":2538,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.album?.name",{"_index":2799,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.artists?.primary",{"_index":2800,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.copyright",{"_index":2798,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.duration",{"_index":2792,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.label",{"_index":2793,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.language",{"_index":2796,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.map((exp",{"_index":1839,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["data.name",{"_index":2789,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.playcount",{"_index":2795,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.type",{"_index":2790,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.year",{"_index":2791,"title":{},"body":{"components/MusicComponent.html":{}}}],["data/categories",{"_index":2995,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["datablock",{"_index":2206,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":2258,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2906,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2909,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2910,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2913,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["date().getfullyear",{"_index":1015,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":1013,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().toisostring().replace(/[:.]/g",{"_index":1813,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date().toisostring().split('t')[0",{"_index":1774,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date(`${a.date}t${a.time",{"_index":1921,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1923,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":880,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1933,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1935,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2957,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":2600,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(this.latestbudget.fromdate",{"_index":875,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(this.latestbudget.todate",{"_index":876,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(todate",{"_index":1781,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{}}}],["date(value",{"_index":2607,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":1038,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getdate",{"_index":2058,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date.getfullyear",{"_index":2060,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":2613,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:'short",{"_index":1411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datea",{"_index":1920,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1925,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1922,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1924,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":1762,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["datestr",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":707,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":1073,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":2366,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":2342,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":2355,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":2353,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":2354,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayname",{"_index":2056,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days",{"_index":839,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":2357,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[date.getday",{"_index":2057,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days[value",{"_index":2360,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":1040,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":988,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ddd",{"_index":2522,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["ddthh:mm:ss",{"_index":1902,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["debounce",{"_index":1556,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":1594,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dec",{"_index":2055,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":2414,"title":{},"body":{"components/GraphsComponent.html":{}}}],["decimal",{"_index":635,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["decimals",{"_index":669,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["declarations",{"_index":3272,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":2468,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":1531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["decreases",{"_index":2029,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dee2e6",{"_index":1462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deep",{"_index":3647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1689,"title":{},"body":{"injectables/ConfigService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defaultschema",{"_index":3024,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultschema[key",{"_index":3044,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultviewtype",{"_index":2541,"title":{},"body":{"components/HomeComponent.html":{}}}],["deferredprompt",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["define",{"_index":3303,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["defines",{"_index":2990,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["definitions",{"_index":3235,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["delay",{"_index":891,"title":{},"body":{"components/BudgetComponent.html":{},"components/SearchButtonComponent.html":{}}}],["delegate",{"_index":3323,"title":{},"body":{"injectables/ToastService.html":{}}}],["delete",{"_index":647,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":2616,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":693,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":1136,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1931,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deletebudget",{"_index":742,"title":{},"body":{"components/BudgetComponent.html":{}}}],["deleted",{"_index":940,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["deletes",{"_index":692,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deleting",{"_index":751,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["deletion",{"_index":1139,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delimiter",{"_index":3262,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":2534,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1682,"title":{},"body":{"injectables/ConfigService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["deploying",{"_index":3680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depth",{"_index":2490,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["design",{"_index":3556,"title":{},"body":{"index.html":{}}}],["designed",{"_index":3494,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":3562,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":3189,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["destruction",{"_index":2693,"title":{},"body":{"components/MusicComponent.html":{}}}],["detailed",{"_index":3572,"title":{},"body":{"index.html":{}}}],["details",{"_index":276,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["detect",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["detection",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":2830,"title":{},"body":{"components/NavbarComponent.html":{}}}],["determines",{"_index":1685,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["dev",{"_index":3610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":3575,"title":{},"body":{"index.html":{}}}],["development",{"_index":1706,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1672,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["device's",{"_index":3530,"title":{},"body":{"index.html":{}}}],["devices",{"_index":3557,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":837,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["different",{"_index":3150,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["differentiation",{"_index":3673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":320,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directory",{"_index":3399,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":3614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":1373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":1374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":1375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":1376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":1377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":1378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":1379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":1380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":1381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":1382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":1383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":1384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":1385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":1386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disables",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["disablesearch",{"_index":1387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":1388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":1389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":1390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disappears",{"_index":3297,"title":{},"body":{"components/ToastComponent.html":{}}}],["dismiss",{"_index":2647,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{}}}],["dismissed",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["dismisses",{"_index":2116,"title":{},"body":{"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["dismissinstall",{"_index":2630,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["displayed",{"_index":823,"title":{},"body":{"components/BudgetComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{}}}],["displayedpercentage",{"_index":732,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displayedpercentage.tofixed(1",{"_index":941,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displaying",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displays",{"_index":962,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["disposition",{"_index":1649,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["distinct",{"_index":3672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":3523,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":3604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":1824,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1829,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.save(`expenses",{"_index":1876,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(10",{"_index":1833,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(14",{"_index":1831,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(sub",{"_index":1834,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(title",{"_index":1832,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doctype",{"_index":3255,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":2437,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":1659,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.appendchild(link",{"_index":1816,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["document.body.removechild(a",{"_index":1661,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(link",{"_index":1818,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["document.createelement('a",{"_index":1656,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('div",{"_index":3306,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":3300,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":1167,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":1183,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1614,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["documentation/.../hbs",{"_index":3594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":3596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":3595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":1369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":2530,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":350,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2864,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["downloadblob",{"_index":3372,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":3375,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadcomponentcomponent",{"_index":272,"title":{"components/DownloadComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["downloaddata",{"_index":1730,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaddataform",{"_index":1726,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaded",{"_index":1664,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["downloading",{"_index":1665,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloads",{"_index":2679,"title":{},"body":{"components/MusicComponent.html":{}}}],["downloadsong",{"_index":2658,"title":{},"body":{"components/MusicComponent.html":{}}}],["downloadsong(song",{"_index":2677,"title":{},"body":{"components/MusicComponent.html":{}}}],["drinks",{"_index":3627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":271,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":1154,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":1155,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1150,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":1194,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":1184,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":1182,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":1180,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":1175,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":1172,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":1197,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1199,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":1169,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":1190,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":1189,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":1195,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":1164,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":925,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["during",{"_index":2778,"title":{},"body":{"components/MusicComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":716,"title":{},"body":{"components/BudgetComponent.html":{},"components/FooterComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":808,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["e",{"_index":1058,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1916,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["e9ecef",{"_index":1476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":1107,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["easily",{"_index":3496,"title":{},"body":{"index.html":{}}}],["edit",{"_index":708,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["edited",{"_index":1967,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editform",{"_index":1948,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editing",{"_index":701,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["editor",{"_index":1518,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":1397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":3187,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":3206,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":3198,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":3194,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":3201,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":3203,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":3196,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":3199,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":3205,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":1546,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":1560,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["education",{"_index":3642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":2730,"title":{},"body":{"components/MusicComponent.html":{}}}],["elapseddays",{"_index":918,"title":{},"body":{"components/BudgetComponent.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["elements",{"_index":768,"title":{},"body":{"components/BudgetComponent.html":{}}}],["email",{"_index":3014,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":1152,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitted",{"_index":1963,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["emitting",{"_index":3112,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":2182,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":3497,"title":{},"body":{"index.html":{}}}],["empty",{"_index":662,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":826,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3342,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":641,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["endpoint",{"_index":1638,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":3602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhances",{"_index":1317,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["enhancing",{"_index":1338,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["ensures",{"_index":3000,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["ensuring",{"_index":649,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["enter",{"_index":3099,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":3106,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":3637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":800,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["entries",{"_index":3527,"title":{},"body":{"index.html":{}}}],["entry",{"_index":629,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"index.html":{}}}],["environment",{"_index":651,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":1707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.appname",{"_index":1695,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.developmentenvironment",{"_index":1697,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.liveapiurl",{"_index":1702,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.localapiurl",{"_index":1705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":3689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":1241,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":1068,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["error('failed",{"_index":1579,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":2528,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["etc",{"_index":1284,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["event",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":1212,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":2452,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.innerwidth",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.value",{"_index":2602,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.url",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["event.urlafterredirects",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":3617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1181,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["events",{"_index":1945,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{}}}],["example",{"_index":1704,"title":{},"body":{"injectables/ConfigService.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["exceeded",{"_index":904,"title":{},"body":{"components/BudgetComponent.html":{}}}],["excel",{"_index":1722,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["exceldata",{"_index":1878,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exceldata.length",{"_index":1882,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exchanged",{"_index":1232,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["excluding",{"_index":1129,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["exist",{"_index":1133,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["existing",{"_index":679,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["exists",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["exp",{"_index":1064,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":1075,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.category_icon",{"_index":2071,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":1076,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.date",{"_index":1840,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["exp.isextraspending",{"_index":1841,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.location",{"_index":1080,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.note",{"_index":1079,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.payment_mode",{"_index":1081,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.time",{"_index":1078,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["expands",{"_index":3081,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expected",{"_index":2712,"title":{},"body":{"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":262,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.amount",{"_index":1782,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_id",{"_index":1790,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_name",{"_index":1789,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.component",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.date",{"_index":1783,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.expense_id",{"_index":1792,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.isextraspending",{"_index":1793,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.location",{"_index":1785,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.note",{"_index":1786,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.payment_mode",{"_index":1787,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.service",{"_index":1095,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense.time",{"_index":1784,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":1083,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1791,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["expensecountmap",{"_index":1116,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":1122,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedata",{"_index":1770,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expensedetailsmodalcomponent",{"_index":275,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":3002,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":278,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":299,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["expenses.component.ts",{"_index":3447,"title":{},"body":{"coverage.html":{}}}],["expenses.filter((exp",{"_index":879,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expenses.filter(exp",{"_index":2372,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":2346,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1912,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":1117,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1942,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":3009,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":2018,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["expensesinrange",{"_index":878,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expensewise",{"_index":3678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["experience",{"_index":1318,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1348,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":3534,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["export.service",{"_index":1400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":3371,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":3378,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":3380,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":3376,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporting",{"_index":1720,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exports",{"_index":1745,"title":{},"body":{"components/DownloadComponentComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["exporttemplates",{"_index":3373,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":3377,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttoexcel",{"_index":1731,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttoexcel(data",{"_index":1743,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exporttopdf",{"_index":1732,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttopdf(data",{"_index":1746,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exportzip",{"_index":1630,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":3474,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extension",{"_index":1754,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["externally",{"_index":3293,"title":{},"body":{"components/ToastComponent.html":{}}}],["extra",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["extract",{"_index":1300,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["exwise",{"_index":1688,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["f0f8ff",{"_index":2524,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":3659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f8f9fa",{"_index":1457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fade",{"_index":3315,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":803,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fast",{"_index":3567,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["features",{"_index":330,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["features/add",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["features/ai/ai.component",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["features/budget/budget.component",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["features/calendar/calendar.component",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["features/home/home.component",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["features/list",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["features/music/music.component",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["features/settings/settings.component",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["feb",{"_index":2047,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":2406,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":648,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["fetch(song.url",{"_index":2804,"title":{},"body":{"components/MusicComponent.html":{}}}],["fetched",{"_index":817,"title":{},"body":{"components/BudgetComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["fetches",{"_index":2121,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["fetching",{"_index":1365,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff0000",{"_index":2031,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["ff4081",{"_index":3661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":3646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":3628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":3632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":1469,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":3636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2916,"title":{},"body":{"components/PieChartComponent.html":{}}}],["fff5f5",{"_index":2527,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":1091,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["fieldname",{"_index":1294,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":686,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.content",{"_index":3384,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":1645,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":1651,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":1653,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":3379,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":3382,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1776,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fillcolor",{"_index":1851,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["filter",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["filter(loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredexpensedata",{"_index":1797,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":3033,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["filtering",{"_index":2274,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["final",{"_index":1795,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finaldata",{"_index":1796,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finalize",{"_index":1240,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finally",{"_index":2779,"title":{},"body":{"components/MusicComponent.html":{}}}],["finance",{"_index":3504,"title":{},"body":{"index.html":{}}}],["financial",{"_index":2159,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":3611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1584,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["firstday",{"_index":1037,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstsong",{"_index":2773,"title":{},"body":{"components/MusicComponent.html":{}}}],["firstvaluefrom",{"_index":1242,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1360,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fit",{"_index":1340,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fits",{"_index":1316,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fixed",{"_index":2820,"title":{},"body":{"components/MusicComponent.html":{}}}],["flag",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":2579,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1260,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":1436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["flexibility",{"_index":3549,"title":{},"body":{"index.html":{}}}],["floating",{"_index":3080,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2635,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["focus",{"_index":3101,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":2201,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":3103,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["folder",{"_index":3605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":1440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":3410,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1847,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fontstyle",{"_index":1858,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["food",{"_index":3524,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":2084,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":2087,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":2086,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":280,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":2585,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":2542,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":2301,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["format",{"_index":1292,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["formatdateforinput",{"_index":2546,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":2561,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1297,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1319,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":2547,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":2564,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1723,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["formatted",{"_index":1295,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["formattedexpense",{"_index":1911,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":2359,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formattime",{"_index":2659,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(duration",{"_index":2819,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(progress",{"_index":2818,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(seconds",{"_index":2680,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(song.duration",{"_index":2815,"title":{},"body":{"components/MusicComponent.html":{}}}],["formatting",{"_index":1349,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formmodelcomponent",{"_index":282,"title":{"components/FormModelComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["forms",{"_index":1957,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{}}}],["formsmodule",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["forwards",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":1074,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["frame",{"_index":1526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":3508,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":3334,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fri",{"_index":1029,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["friendly",{"_index":2176,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":3653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1937,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":631,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["fromdate.gettime",{"_index":913,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":2150,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":3507,"title":{},"body":{"index.html":{}}}],["full",{"_index":1366,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fullnames",{"_index":2404,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":2415,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fully",{"_index":3292,"title":{},"body":{"components/ToastComponent.html":{}}}],["function",{"_index":1291,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["functionality",{"_index":1628,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["functions",{"_index":3613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":1761,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["g",{"_index":2064,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gap",{"_index":1463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gathers",{"_index":2940,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":328,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":353,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":3681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":348,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generate",{"_index":901,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ZipExportService.html":{}}}],["generated",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["generateexpenseanalysisprompt",{"_index":2123,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":2129,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generatereadme",{"_index":3374,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generates",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{}}}],["generateuserid",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["generating",{"_index":3394,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":3393,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":1418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generic",{"_index":2991,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getall",{"_index":664,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getallbudgets",{"_index":3056,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":3055,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":3060,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiurl",{"_index":1676,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappname",{"_index":1677,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":3065,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":2072,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1929,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getcategorykey",{"_index":3062,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":2548,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":3063,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":2016,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":2035,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1367,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlanguagefromfiletype",{"_index":3190,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":3195,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlast30daysexpenses",{"_index":2124,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlocalisostring",{"_index":1903,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getmockdata",{"_index":2457,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getresponse",{"_index":2125,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":2141,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsongurl",{"_index":2660,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsongurl(song",{"_index":2684,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":1113,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getuser",{"_index":3058,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdata",{"_index":3358,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2934,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":3067,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":3361,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":3357,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":1678,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gifts",{"_index":3658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":985,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["global",{"_index":285,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":3090,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":284,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":427,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["globally",{"_index":2215,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["go",{"_index":3505,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":2549,"title":{},"body":{"components/HomeComponent.html":{}}}],["google",{"_index":1248,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["goprevious",{"_index":2550,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["graphs",{"_index":2250,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":288,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":2252,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":2253,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":287,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":1054,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":805,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":3519,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":2172,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":3652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["groceries",{"_index":3630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":810,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["grouped",{"_index":2282,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":1072,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":1174,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["h3",{"_index":1495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":1519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["halign",{"_index":1855,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["hamburger",{"_index":290,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":289,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":811,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{}}}],["handlebars",{"_index":1600,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":2471,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":3252,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":2456,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handler",{"_index":3608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["handling",{"_index":3347,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hashed",{"_index":3344,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hbs",{"_index":1402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":1401,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":1562,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["head",{"_index":1846,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["header",{"_index":1008,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headerrow",{"_index":1883,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["headers",{"_index":1354,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["headstyles",{"_index":1850,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["health",{"_index":3639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1176,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hello",{"_index":2174,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":2162,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":1290,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["helpers",{"_index":2473,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpful",{"_index":2158,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":2195,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hex",{"_index":1088,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{}}}],["hh:mm:ss",{"_index":1896,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["hi",{"_index":2173,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hidden",{"_index":1480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hiddeninput",{"_index":2623,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":2626,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["hidedarkmodetoggle",{"_index":1391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":1392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hides",{"_index":2224,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["hiding",{"_index":2111,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["highest",{"_index":2686,"title":{},"body":{"components/MusicComponent.html":{}}}],["highlights",{"_index":966,"title":{},"body":{"components/CalendarComponent.html":{},"components/SidebarComponent.html":{}}}],["history",{"_index":1252,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["holding",{"_index":3137,"title":{},"body":{"injectables/SectionService.html":{}}}],["holds",{"_index":3157,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":2539,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":2540,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":292,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["hooks",{"_index":1426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":3219,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":3121,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":1192,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":2384,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2933,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":2388,"title":{},"body":{"components/GraphsComponent.html":{}}}],["href",{"_index":2536,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["htmlaudioelement",{"_index":2716,"title":{},"body":{"components/MusicComponent.html":{}}}],["htmlelement",{"_index":1213,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["htmlinputelement",{"_index":2572,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["http",{"_index":1261,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["http://localhost:8000",{"_index":1683,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1238,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":339,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["httpheaders",{"_index":1239,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://compodoc.app/guides/template",{"_index":3414,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1684,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1258,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1255,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":2037,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":3665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":2194,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":1084,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":637,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identifying",{"_index":2166,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ignores",{"_index":359,"title":{},"body":{"components/AiComponent.html":{}}}],["img",{"_index":2821,"title":{},"body":{"components/MusicComponent.html":{}}}],["immediately",{"_index":3532,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1627,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":1622,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["include",{"_index":1346,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/NavbarComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":1393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["including",{"_index":763,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{}}}],["incorrect",{"_index":3554,"title":{},"body":{"index.html":{}}}],["increases",{"_index":824,"title":{},"body":{"components/BudgetComponent.html":{}}}],["increment",{"_index":929,"title":{},"body":{"components/BudgetComponent.html":{}}}],["independent",{"_index":3511,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2992,"title":{},"body":{"interfaces/Schema.html":{}}}],["indicate",{"_index":2723,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":828,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["indicating",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["indicator",{"_index":1468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indicators",{"_index":2128,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["indigo",{"_index":3649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1276,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":1769,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["informative",{"_index":3542,"title":{},"body":{"index.html":{}}}],["init",{"_index":2583,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["initform",{"_index":1949,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initial",{"_index":1751,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["initialization",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["initialize",{"_index":846,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["initialized",{"_index":3138,"title":{},"body":{"injectables/SectionService.html":{},"components/ToastComponent.html":{}}}],["initializeeditor",{"_index":1592,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":3197,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":2458,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["initializing",{"_index":1567,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{}}}],["inject(platform_id",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["injectable",{"_index":642,"title":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":948,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injected",{"_index":2271,"title":{},"body":{"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["input[type=\"date",{"_index":2618,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":2620,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":2563,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":2566,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":2571,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":2604,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":1162,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["inr",{"_index":3338,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":2640,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":703,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["install",{"_index":295,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["installapp",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installapppopupcomponentcomponent",{"_index":294,"title":{"components/InstallAppPopupComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["installation",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installing",{"_index":2646,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["instances",{"_index":2871,"title":{},"body":{"components/PieChartComponent.html":{}}}],["instructions",{"_index":2135,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["integrates",{"_index":720,"title":{},"body":{"components/BudgetComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{}}}],["integrating",{"_index":1245,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["intended",{"_index":2929,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interact",{"_index":2673,"title":{},"body":{"components/MusicComponent.html":{}}}],["interacting",{"_index":654,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["interaction",{"_index":326,"title":{},"body":{"components/AiComponent.html":{}}}],["interactive",{"_index":3520,"title":{},"body":{"index.html":{}}}],["interface",{"_index":624,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":626,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["internal",{"_index":1425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["intersect",{"_index":2329,"title":{},"body":{"components/GraphsComponent.html":{}}}],["interval",{"_index":931,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["intuitive",{"_index":3558,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1296,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["is_active",{"_index":1085,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_app_updated",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_backup",{"_index":3015,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isappupdated",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["isbrowser",{"_index":657,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":1157,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":1056,"title":{},"body":{"components/CalendarComponent.html":{}}}],["iscurrentsongliked",{"_index":2655,"title":{},"body":{"components/MusicComponent.html":{}}}],["isdarkmode",{"_index":733,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":3622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditmode",{"_index":734,"title":{},"body":{"components/BudgetComponent.html":{}}}],["iseditopen",{"_index":1953,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["isinitial",{"_index":2512,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":2510,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isliked",{"_index":2661,"title":{},"body":{"components/MusicComponent.html":{}}}],["ismenuopen",{"_index":2427,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["ismusicroute",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":2612,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":2608,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":2611,"title":{},"body":{"components/HomeComponent.html":{}}}],["iso",{"_index":640,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["isopen",{"_index":3084,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["istabenabled",{"_index":2504,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":2218,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{}}}],["italic",{"_index":1517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":690,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["item'},{'name",{"_index":312,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":2352,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":689,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":1132,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":3145,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":3142,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":3146,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":2347,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1928,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.name",{"_index":1667,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.note?.trim",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.time.split",{"_index":2387,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":3035,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["item/setting",{"_index":3141,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":3043,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["itemdate",{"_index":1934,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1936,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":1452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["jan",{"_index":2046,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":2405,"title":{},"body":{"components/GraphsComponent.html":{}}}],["javascript",{"_index":3242,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["job",{"_index":1311,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["js",{"_index":3241,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json",{"_index":1285,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["json.parse(cleanedsong",{"_index":2764,"title":{},"body":{"components/MusicComponent.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":3029,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":3057,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":3032,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":3061,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":3059,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":678,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["json.stringify(budgets",{"_index":3074,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(categories",{"_index":3071,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(currentsettings",{"_index":3355,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(finaldata",{"_index":1799,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["json.stringify(last15daysexpenses",{"_index":2207,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":3054,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(updated",{"_index":1145,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":3046,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(user",{"_index":3076,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsondata",{"_index":1798,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jspdf",{"_index":1765,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1825,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jszip",{"_index":3381,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jul",{"_index":2050,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":2410,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":2049,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":2409,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":1449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["keep",{"_index":2200,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SidebarComponent.html":{},"injectables/ZipExportService.html":{}}}],["key",{"_index":1120,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":2560,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":2555,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyed",{"_index":2872,"title":{},"body":{"components/PieChartComponent.html":{}}}],["keyframes",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":655,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/HomeComponent.html":{}}}],["keyword",{"_index":3251,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":3540,"title":{},"body":{"index.html":{}}}],["label",{"_index":1052,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{}}}],["labelalignment",{"_index":2104,"title":{},"body":{"components/FormModelComponent.html":{}}}],["labels",{"_index":1032,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["lang.id",{"_index":3246,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1332,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["laptop",{"_index":3561,"title":{},"body":{"index.html":{}}}],["last",{"_index":1409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["last15daysexpenses",{"_index":2130,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2938,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2956,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2960,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2954,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastsaved",{"_index":1410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["latest",{"_index":779,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["latestbudget",{"_index":735,"title":{},"body":{"components/BudgetComponent.html":{}}}],["launch",{"_index":3518,"title":{},"body":{"index.html":{}}}],["layout",{"_index":3411,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["leave",{"_index":3683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["legend",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["length",{"_index":3094,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["letter",{"_index":1499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["let’s",{"_index":2199,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":3577,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":3506,"title":{},"body":{"index.html":{}}}],["lg",{"_index":3311,"title":{},"body":{"components/ToastComponent.html":{}}}],["li",{"_index":1504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":1511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":1510,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["light",{"_index":848,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":3510,"title":{},"body":{"index.html":{}}}],["liked",{"_index":1329,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["limit",{"_index":908,"title":{},"body":{"components/BudgetComponent.html":{}}}],["line",{"_index":2321,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["linebreak",{"_index":1849,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linenumbers",{"_index":3216,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":1654,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["link.click",{"_index":1817,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["link.download",{"_index":1814,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["link.href",{"_index":1812,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["linked",{"_index":1089,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["links",{"_index":3148,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":2014,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":2013,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":2008,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":2022,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:28",{"_index":2020,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:33",{"_index":2019,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:49",{"_index":2043,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:60",{"_index":2036,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:95",{"_index":2026,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":2007,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SidebarComponent.html":{}}}],["listener",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["listening",{"_index":1313,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":1185,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["listexpensescomponent",{"_index":297,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":3533,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1235,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["live",{"_index":1433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["liveapiurl",{"_index":1673,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":842,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadbudgets",{"_index":743,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadcategories",{"_index":1158,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loaddata",{"_index":2261,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":2262,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":2279,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":2582,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["loader",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":286,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":2217,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":2216,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":2212,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:23",{"_index":2227,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:28",{"_index":2220,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":2226,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:55",{"_index":2223,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":2232,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:17",{"_index":2240,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2238,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:33",{"_index":2239,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:40",{"_index":2236,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loading",{"_index":1070,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadmonthdata",{"_index":2263,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":2283,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadsessionconfig",{"_index":1588,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":1580,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":2264,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":2285,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["localapiurl",{"_index":1674,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1687,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":3045,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.budgetkey",{"_index":3073,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.categorykey",{"_index":3070,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":677,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":1130,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1926,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":3354,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":3053,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":2143,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2951,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2952,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":3573,"title":{},"body":{"index.html":{}}}],["logged",{"_index":1135,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["logic",{"_index":3515,"title":{},"body":{"index.html":{}}}],["long",{"_index":1048,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":1071,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lucide",{"_index":3478,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":833,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["mainartist",{"_index":2767,"title":{},"body":{"components/MusicComponent.html":{}}}],["mainartist}`).subscribe",{"_index":2770,"title":{},"body":{"components/MusicComponent.html":{}}}],["maintains",{"_index":3124,"title":{},"body":{"injectables/SectionService.html":{}}}],["making",{"_index":3412,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["manage",{"_index":1170,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["management",{"_index":3493,"title":{},"body":{"index.html":{}}}],["manager",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["managing",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["map",{"_index":1119,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["map((a",{"_index":2801,"title":{},"body":{"components/MusicComponent.html":{}}}],["map((category",{"_index":1121,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1913,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":2348,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":1118,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":388,"title":{},"body":{"components/AiComponent.html":{}}}],["mapping",{"_index":2493,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["mar",{"_index":2040,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":2407,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":1488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["mark",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":335,"title":{},"body":{"components/AiComponent.html":{}}}],["marked",{"_index":372,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":384,"title":{},"body":{"components/AiComponent.html":{}}}],["marks",{"_index":1741,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["match",{"_index":1341,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matches",{"_index":680,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["matching",{"_index":323,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil((todate.gettime",{"_index":912,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.floor(seconds",{"_index":2782,"title":{},"body":{"components/MusicComponent.html":{}}}],["math.max(b",{"_index":2070,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":2069,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(math.ceil((today.gettime",{"_index":919,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totalbudget",{"_index":884,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totaldays",{"_index":921,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.min((spent",{"_index":883,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.round(data.amount",{"_index":676,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":691,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":1173,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":3095,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2923,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":291,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":2834,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":2425,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":2426,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":2418,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:26",{"_index":2448,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":2433,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":2445,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":2436,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:75",{"_index":2440,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":2417,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":3674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merged",{"_index":3675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merges",{"_index":681,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["message",{"_index":770,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":2203,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["met",{"_index":1692,"title":{},"body":{"injectables/ConfigService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["metatag",{"_index":3257,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":3256,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":2113,"title":{},"body":{"components/FormModelComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["middle",{"_index":1857,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["milliseconds",{"_index":3296,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mime",{"_index":1756,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["mimetype",{"_index":1753,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["min",{"_index":2781,"title":{},"body":{"components/MusicComponent.html":{}}}],["minimal",{"_index":1394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":3212,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minimumfractiondigits",{"_index":2922,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minmax(200px",{"_index":1486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minute",{"_index":2385,"title":{},"body":{"components/GraphsComponent.html":{}}}],["min}:${sec.tostring().padstart(2",{"_index":2784,"title":{},"body":{"components/MusicComponent.html":{}}}],["miscellaneous",{"_index":3585,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":2978,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["mm",{"_index":987,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mm:ss",{"_index":2683,"title":{},"body":{"components/MusicComponent.html":{}}}],["mobile",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["mock",{"_index":2526,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["modal",{"_index":774,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["modal'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1947,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1944,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":1974,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:112",{"_index":1968,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:117",{"_index":1973,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1961,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1958,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1959,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1962,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:36",{"_index":1965,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1966,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:42",{"_index":1978,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:45",{"_index":1955,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:57",{"_index":1971,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:62",{"_index":1970,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:80",{"_index":1972,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:88",{"_index":1976,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/expense",{"_index":1943,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":974,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modaltitle",{"_index":975,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":380,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["model'},{'name",{"_index":283,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["model.component",{"_index":1764,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{}}}],["model.component.css",{"_index":2102,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.html",{"_index":2101,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts",{"_index":2098,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["model.component.ts:23",{"_index":2105,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:29",{"_index":2107,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:37",{"_index":2109,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:45",{"_index":2112,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model/form",{"_index":1763,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/MusicComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["modelreply",{"_index":1362,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modern",{"_index":3509,"title":{},"body":{"index.html":{}}}],["modify",{"_index":3409,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":2495,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["modules",{"_index":2496,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["mon",{"_index":1025,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["monaco",{"_index":3207,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":3209,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":3238,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":3245,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":3247,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":3265,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":3248,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["money",{"_index":3491,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":3574,"title":{},"body":{"index.html":{}}}],["monospace",{"_index":1467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["month",{"_index":963,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":1047,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":3571,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":2248,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":2394,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":2402,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":2399,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":2398,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":960,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["monthname",{"_index":2362,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":2361,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":2397,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":2363,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":993,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":2401,"title":{},"body":{"components/GraphsComponent.html":{}}}],["months[date.getmonth",{"_index":2059,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["monthstr",{"_index":1043,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1277,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{},"injectables/ZipExportService.html":{}}}],["mouse",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["mouseevent",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["msg",{"_index":385,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":382,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":379,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":3541,"title":{},"body":{"index.html":{}}}],["music",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["music'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component.css",{"_index":2652,"title":{},"body":{"components/MusicComponent.html":{}}}],["music.component.html",{"_index":2653,"title":{},"body":{"components/MusicComponent.html":{}}}],["musiccomponent",{"_index":300,"title":{"components/MusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1905,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["n.tostring().padstart(2",{"_index":1906,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["navbar",{"_index":2824,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":2826,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":2827,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":302,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2423,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["navigateandclose",{"_index":2429,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":2439,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":2441,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{}}}],["navigating",{"_index":3149,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navigation",{"_index":2420,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["navtabs",{"_index":2506,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":2508,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":2513,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":2514,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["need",{"_index":3566,"title":{},"body":{"index.html":{}}}],["negative",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":684,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newest",{"_index":1910,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newurl",{"_index":2775,"title":{},"body":{"components/MusicComponent.html":{}}}],["next",{"_index":1249,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["nextsong",{"_index":2662,"title":{},"body":{"components/MusicComponent.html":{}}}],["nextsong.trim",{"_index":2758,"title":{},"body":{"components/MusicComponent.html":{}}}],["ng",{"_index":2332,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":3482,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":2847,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":2251,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngmodule",{"_index":3280,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngonchanges",{"_index":2265,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":2287,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1568,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["node.js",{"_index":3601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notice",{"_index":2523,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["notify",{"_index":1969,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["nov",{"_index":2054,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":2413,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2959,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2973,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":364,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["num",{"_index":2065,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":633,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number(item.amount",{"_index":1057,"title":{},"body":{"components/CalendarComponent.html":{}}}],["number(target.value",{"_index":2786,"title":{},"body":{"components/MusicComponent.html":{}}}],["object",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2894,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2897,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":3037,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["object.keys(exceldata[0",{"_index":1884,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["object.values(categorytotals",{"_index":2895,"title":{},"body":{"components/PieChartComponent.html":{}}}],["objects",{"_index":1006,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["observable",{"_index":1268,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{}}}],["observe",{"_index":1642,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["occurs",{"_index":2438,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["oct",{"_index":2053,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":2412,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offline",{"_index":2644,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["offset",{"_index":992,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":672,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2932,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["onchangecallback",{"_index":3188,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onchanges",{"_index":2249,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":2430,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":2444,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclickinstallapp",{"_index":2631,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["ondelete",{"_index":1950,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ondocumentclick",{"_index":1159,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":1191,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["one",{"_index":835,"title":{},"body":{"components/BudgetComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninputchange",{"_index":2551,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":2570,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":2552,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":2575,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(event",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":3086,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onseek",{"_index":2663,"title":{},"body":{"components/MusicComponent.html":{}}}],["onseek(event",{"_index":2694,"title":{},"body":{"components/MusicComponent.html":{}}}],["onselect",{"_index":2017,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":2042,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsongfinished",{"_index":2664,"title":{},"body":{"components/MusicComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["opacity",{"_index":621,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1960,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["open/closed",{"_index":2446,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["opendownloaddatamodal",{"_index":1733,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["opened",{"_index":1977,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["openeditmodal",{"_index":744,"title":{},"body":{"components/BudgetComponent.html":{}}}],["openmodal",{"_index":745,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":998,"title":{},"body":{"components/CalendarComponent.html":{}}}],["openplayermodal",{"_index":2665,"title":{},"body":{"components/MusicComponent.html":{}}}],["opens",{"_index":789,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["operations",{"_index":1103,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["operator",{"_index":2477,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimized",{"_index":3560,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":1482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["options.fn(this",{"_index":2481,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":2482,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["orange",{"_index":3633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1836,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["organization",{"_index":3552,"title":{},"body":{"index.html":{}}}],["original",{"_index":2034,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/MusicComponent.html":{},"injectables/ZipExportService.html":{}}}],["orlength",{"_index":2498,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["others",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["outline",{"_index":2622,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":1200,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":1165,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":1187,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":799,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["overflow",{"_index":1479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1421,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":3221,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["owns",{"_index":1094,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["p",{"_index":3309,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["p.text).join('\\n\\n",{"_index":1364,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":1634,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pad",{"_index":1904,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1908,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getmonth",{"_index":1907,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["padding",{"_index":965,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":3404,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":3144,"title":{},"body":{"components/SettingItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["pagewidth",{"_index":1828,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pairs",{"_index":2994,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["panel",{"_index":1475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":1481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["paragraph",{"_index":2187,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["parameterhints",{"_index":3225,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["parent",{"_index":1153,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{}}}],["parse",{"_index":2766,"title":{},"body":{"components/MusicComponent.html":{}}}],["parsed",{"_index":2606,"title":{},"body":{"components/HomeComponent.html":{}}}],["parsefloat(exp.amount",{"_index":882,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parsefloat(this.latestbudget.amount.tostring",{"_index":874,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parseint(exp.amount",{"_index":1066,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":2351,"title":{},"body":{"components/GraphsComponent.html":{}}}],["part",{"_index":1092,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":685,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":3405,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["parts",{"_index":1233,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1363,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":3660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2945,"title":{},"body":{"injectables/PostApiService.html":{}}}],["password",{"_index":3343,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":3031,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pastdata.filter((item",{"_index":3034,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["path",{"_index":1404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/section",{"_index":3158,"title":{},"body":{"components/SidebarComponent.html":{}}}],["path/to/custom/templates",{"_index":3403,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["patterns",{"_index":2168,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pause",{"_index":2650,"title":{},"body":{"components/MusicComponent.html":{}}}],["pauses",{"_index":2704,"title":{},"body":{"components/MusicComponent.html":{}}}],["payment",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["payment_mode",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["pdf",{"_index":1721,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["per",{"_index":706,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"index.html":{}}}],["percent",{"_index":2025,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":719,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["perform",{"_index":2110,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/PostApiService.html":{}}}],["performed",{"_index":3341,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["period",{"_index":639,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{}}}],["persist",{"_index":3346,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["persistent",{"_index":3516,"title":{},"body":{"index.html":{}}}],["personal",{"_index":3503,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":3550,"title":{},"body":{"index.html":{}}}],["pick",{"_index":2131,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":2574,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":305,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["pie/doughnut",{"_index":2839,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartcomponent",{"_index":304,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":3662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(filter(event",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["places",{"_index":636,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["plain",{"_index":3345,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["platform_id",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["platformid",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/MusicComponent.html":{}}}],["play",{"_index":2649,"title":{},"body":{"components/MusicComponent.html":{}}}],["playback",{"_index":2697,"title":{},"body":{"components/MusicComponent.html":{}}}],["playcount",{"_index":2794,"title":{},"body":{"components/MusicComponent.html":{}}}],["player",{"_index":2676,"title":{},"body":{"components/MusicComponent.html":{}}}],["playground",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":3282,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":1371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":3279,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":2454,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":1370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":3370,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playing",{"_index":1281,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["plays",{"_index":2700,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong",{"_index":2666,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong(url",{"_index":2702,"title":{},"body":{"components/MusicComponent.html":{}}}],["please",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["plugins",{"_index":2915,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["points",{"_index":2185,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":2157,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":2170,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":2193,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pop",{"_index":3254,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["popup",{"_index":296,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":1524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["positive",{"_index":994,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1700,"title":{},"body":{"injectables/ConfigService.html":{}}}],["post",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":431,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2966,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2974,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2944,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2935,"title":{},"body":{"injectables/PostApiService.html":{}}}],["pre",{"_index":790,"title":{},"body":{"components/BudgetComponent.html":{}}}],["predefined",{"_index":2998,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["predict",{"_index":2163,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":2165,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preference",{"_index":843,"title":{},"body":{"components/BudgetComponent.html":{}}}],["preferences",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["preferred",{"_index":820,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prepare",{"_index":1794,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pressed",{"_index":2691,"title":{},"body":{"components/MusicComponent.html":{}}}],["presses",{"_index":3098,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevent",{"_index":1760,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["preventing",{"_index":2833,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["prevents",{"_index":2557,"title":{},"body":{"components/HomeComponent.html":{}}}],["preview",{"_index":1434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":1548,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":1557,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["previous/next",{"_index":964,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevmonthdays",{"_index":1042,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":1532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":1533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["privacy",{"_index":3570,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["process",{"_index":2197,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["processes",{"_index":2281,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":333,"title":{},"body":{"components/AiComponent.html":{},"components/SearchButtonComponent.html":{}}}],["production",{"_index":1701,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":3333,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["progress",{"_index":702,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"index.html":{}}}],["promise",{"_index":1288,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["prompt",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":2208,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompting",{"_index":2629,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["prompts",{"_index":2122,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":2887,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"properties.html":{}}}],["property",{"_index":2106,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provide",{"_index":713,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":3619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":682,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{}}}],["providedin",{"_index":652,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["providehttpclient",{"_index":3625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3274,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":646,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":3676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":3677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":3620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":3616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1670,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pt",{"_index":1826,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["public",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":3644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":2161,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["purposes",{"_index":2012,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["pwa",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["q",{"_index":2734,"title":{},"body":{"components/MusicComponent.html":{}}}],["quality",{"_index":2687,"title":{},"body":{"components/MusicComponent.html":{}}}],["query",{"_index":1266,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":2138,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":2198,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quickly",{"_index":3538,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":3222,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":1507,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["random",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":877,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["raw",{"_index":381,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactively",{"_index":3134,"title":{},"body":{"injectables/SectionService.html":{}}}],["read",{"_index":1099,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["read/write",{"_index":3568,"title":{},"body":{"index.html":{}}}],["readable",{"_index":2038,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["readme",{"_index":3385,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":1552,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["ready",{"_index":2139,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recent",{"_index":831,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":3671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommend",{"_index":1335,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["recommendation",{"_index":1250,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":3348,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["records",{"_index":709,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":897,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":3690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/ToastService.html":{}}}],["reflected",{"_index":3531,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshes",{"_index":787,"title":{},"body":{"components/BudgetComponent.html":{}}}],["refreshpreview",{"_index":1618,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":1615,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":2235,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":2237,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":3324,"title":{},"body":{"injectables/ToastService.html":{}}}],["registered",{"_index":2241,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{}}}],["registerhandlebarslanguage",{"_index":3191,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":2459,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registering",{"_index":3322,"title":{},"body":{"injectables/ToastService.html":{}}}],["registers",{"_index":2221,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":3624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":1104,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/SettingItemComponent.html":{}}}],["relative",{"_index":1525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":2488,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["release",{"_index":3555,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2714,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["reloads",{"_index":2295,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["remaining",{"_index":711,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["remainingdays",{"_index":920,"title":{},"body":{"components/BudgetComponent.html":{}}}],["remove",{"_index":3318,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["removes",{"_index":3100,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["render",{"_index":1003,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["render.service",{"_index":1403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":2455,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":2466,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":2463,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":2462,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":2464,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":2461,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendercalendar",{"_index":980,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":1000,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":2848,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":2861,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendered",{"_index":365,"title":{},"body":{"components/AiComponent.html":{},"injectables/HbsRenderService.html":{}}}],["rendering",{"_index":357,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["rendermode",{"_index":3692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":3693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renders",{"_index":959,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["rendertemplate",{"_index":2460,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":2465,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rent",{"_index":3650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat",{"_index":1350,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["repeat(auto",{"_index":1485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["replace",{"_index":2761,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["replace(/^```json",{"_index":2760,"title":{},"body":{"components/MusicComponent.html":{}}}],["replaced",{"_index":3688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":695,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["reply",{"_index":2180,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["report",{"_index":1748,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["representing",{"_index":628,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["represents",{"_index":1230,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["reqhandler",{"_index":3462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":3607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":354,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["required",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PieChartComponent.html":{}}}],["requires",{"_index":3321,"title":{},"body":{"injectables/ToastService.html":{}}}],["res",{"_index":1359,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["res.app_version",{"_index":2968,"title":{},"body":{"injectables/PostApiService.html":{}}}],["res.blob",{"_index":2806,"title":{},"body":{"components/MusicComponent.html":{}}}],["res.data?.results",{"_index":2771,"title":{},"body":{"components/MusicComponent.html":{}}}],["res.ok",{"_index":2805,"title":{},"body":{"components/MusicComponent.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1361,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":2095,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["reset",{"_index":1413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["resetting",{"_index":1623,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":1621,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resize",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve(serverdistfolder",{"_index":3603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":2171,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":336,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":1643,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":1591,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":1648,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":1575,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":1574,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":1583,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsehtml",{"_index":343,"title":{},"body":{"components/AiComponent.html":{}}}],["responsetype",{"_index":1640,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsibilities",{"_index":1331,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":644,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["responsive",{"_index":2914,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restart",{"_index":2706,"title":{},"body":{"components/MusicComponent.html":{}}}],["restartsong",{"_index":2667,"title":{},"body":{"components/MusicComponent.html":{}}}],["restricts",{"_index":3093,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["result",{"_index":2478,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":322,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":2772,"title":{},"body":{"components/MusicComponent.html":{}}}],["results.map(exp",{"_index":2154,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["results[0",{"_index":2774,"title":{},"body":{"components/MusicComponent.html":{}}}],["ret",{"_index":2487,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["retrieve",{"_index":982,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":822,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["retrieves",{"_index":661,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":748,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["returned",{"_index":362,"title":{},"body":{"components/AiComponent.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["reusable",{"_index":2099,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"components/ToastComponent.html":{}}}],["rgb",{"_index":2028,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["rgb(${math.max(r",{"_index":2068,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["rights",{"_index":2094,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["roboto",{"_index":1446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":1234,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":266,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":634,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["roundedselection",{"_index":3217,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["rounds",{"_index":668,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["route",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":558,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1886,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rows",{"_index":1837,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rules",{"_index":777,"title":{},"body":{"components/BudgetComponent.html":{}}}],["run",{"_index":2930,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":2860,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["rxjs",{"_index":1243,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavn",{"_index":1246,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1244,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safe",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["safehtml",{"_index":363,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1293,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["same",{"_index":1109,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["sample",{"_index":2531,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":2532,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sanitized",{"_index":337,"title":{},"body":{"components/AiComponent.html":{}}}],["sanitizer",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["sans",{"_index":1447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sat",{"_index":1030,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["save",{"_index":696,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["save_delay",{"_index":1553,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveddata",{"_index":3028,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["saveddata.map((item",{"_index":3039,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings",{"_index":3048,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings[key",{"_index":3051,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedtheme",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["savetemplate(content",{"_index":1610,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":1551,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":865,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scales",{"_index":2924,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schedule",{"_index":1605,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":1601,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":402,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["schemakeys",{"_index":3036,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemakeys.foreach((key",{"_index":3041,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemas",{"_index":2999,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["screen",{"_index":2213,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["screens",{"_index":3143,"title":{},"body":{"components/SettingItemComponent.html":{},"index.html":{}}}],["screenshots",{"_index":3578,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":3398,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollable",{"_index":1178,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":3218,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":3213,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":3240,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seamless",{"_index":2643,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["search",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["searchbuttoncomponent",{"_index":307,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":2073,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1932,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searches",{"_index":1264,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["searching",{"_index":1900,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searchinput",{"_index":3085,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchsong",{"_index":2668,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsongs",{"_index":2981,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1270,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sec",{"_index":2783,"title":{},"body":{"components/MusicComponent.html":{}}}],["second",{"_index":2386,"title":{},"body":{"components/GraphsComponent.html":{}}}],["secondary",{"_index":1536,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":1537,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seconds",{"_index":2682,"title":{},"body":{"components/MusicComponent.html":{}}}],["seconds\\n",{"_index":1298,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sections",{"_index":2424,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":428,"title":{"injectables/SectionService.html":{}},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionservice.currentsection",{"_index":2434,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionsource",{"_index":3128,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":3679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":2698,"title":{},"body":{"components/MusicComponent.html":{},"index.html":{}}}],["seeking",{"_index":2651,"title":{},"body":{"components/MusicComponent.html":{}}}],["seeks",{"_index":2696,"title":{},"body":{"components/MusicComponent.html":{}}}],["seektime",{"_index":2785,"title":{},"body":{"components/MusicComponent.html":{}}}],["segoe",{"_index":1445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["selectcategory",{"_index":1160,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":1193,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1954,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":2000,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":2001,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":2002,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":2006,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":2004,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":2005,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":2003,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedfile",{"_index":1549,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":1431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":1432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":1597,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selecting",{"_index":1151,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":346,"title":{},"body":{"components/AiComponent.html":{}}}],["sender",{"_index":1237,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sendmessage(message",{"_index":2210,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sends",{"_index":332,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2941,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":2186,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":2052,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1304,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["september",{"_index":1010,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["series",{"_index":2306,"title":{},"body":{"components/GraphsComponent.html":{}}}],["serif",{"_index":1448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":1636,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":3428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":3463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":3691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":3432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["service/backend",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["service/config/config.service",{"_index":2091,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{}}}],["service/gemini",{"_index":373,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":841,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/category.service",{"_index":1201,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/storage.service",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/saavan",{"_index":2731,"title":{},"body":{"components/MusicComponent.html":{}}}],["service/section/section.service",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["services",{"_index":352,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["session",{"_index":1405,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":1406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":1407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["seteditorcontent",{"_index":3192,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":3200,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setinterval",{"_index":932,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["setonchangecallback",{"_index":3193,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":3202,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["sets",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["setsection",{"_index":3127,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":3129,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":311,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":310,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["settings'},{'name",{"_index":314,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":2553,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":2577,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":3310,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":2328,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/global",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/toast/toast.component",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":3526,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":2175,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shorter",{"_index":360,"title":{},"body":{"components/AiComponent.html":{}}}],["shouldbackup",{"_index":2958,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/SettingItemComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["show(message",{"_index":3326,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":2225,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["show/hide",{"_index":1263,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["showaibutton",{"_index":2428,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":2828,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showbudgetsection",{"_index":736,"title":{},"body":{"components/BudgetComponent.html":{}}}],["showconfigpanel",{"_index":1550,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["showdownloaddatamodal",{"_index":1727,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["showing",{"_index":1019,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["showinstallbutton",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":737,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showplayermodal",{"_index":2656,"title":{},"body":{"components/MusicComponent.html":{}}}],["shows",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{}}}],["shows/hides",{"_index":2422,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showtoast",{"_index":3287,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":3294,"title":{},"body":{"components/ToastComponent.html":{}}}],["side",{"_index":1637,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":1490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["sidebar'},{'name",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":3152,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":3153,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":315,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signal",{"_index":2728,"title":{},"body":{"components/MusicComponent.html":{}}}],["signal(0",{"_index":2719,"title":{},"body":{"components/MusicComponent.html":{}}}],["signature",{"_index":2535,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["silently",{"_index":2931,"title":{},"body":{"injectables/PostApiService.html":{}}}],["similar",{"_index":1337,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["simple",{"_index":2491,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["simplechanges",{"_index":2288,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["single",{"_index":1231,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["size",{"_index":1464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skipped",{"_index":2976,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2979,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["sm",{"_index":1543,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["small",{"_index":890,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["smart",{"_index":1310,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":3501,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":794,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":3120,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":2322,"title":{},"body":{"components/GraphsComponent.html":{}}}],["smoothly",{"_index":755,"title":{},"body":{"components/BudgetComponent.html":{}}}],["sole",{"_index":2160,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["solid",{"_index":1461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["something",{"_index":1336,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["song",{"_index":1247,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song'}.mp3",{"_index":2810,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.artists.primary[0]?.name",{"_index":2813,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.downloadurl?.find((d",{"_index":2738,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.name",{"_index":2809,"title":{},"body":{"components/MusicComponent.html":{}}}],["song?.url",{"_index":2803,"title":{},"body":{"components/MusicComponent.html":{}}}],["songdetails",{"_index":2763,"title":{},"body":{"components/MusicComponent.html":{}}}],["songname",{"_index":1352,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1265,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song’s",{"_index":1344,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sort",{"_index":1100,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["sort((a",{"_index":1123,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":3537,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":1105,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":1450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":1500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specific",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":3500,"title":{},"body":{"index.html":{}}}],["specified",{"_index":991,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["specify",{"_index":3400,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spend",{"_index":798,"title":{},"body":{"components/BudgetComponent.html":{}}}],["spending",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["spent",{"_index":765,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["spent/day",{"_index":3546,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":3592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":3588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":3598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":3597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.ts",{"_index":3590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":3593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":3589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":3591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":3587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:121",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:174",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:185",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:193",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:203",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":3426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":3429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":3431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":3433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":1149,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/form",{"_index":2097,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":2245,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":2326,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":2324,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":2330,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":2269,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":2331,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":2291,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":2289,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":2293,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":2277,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":2284,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":2280,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":2275,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":2273,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":2286,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":2305,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":2313,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":2317,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":2303,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":2309,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":2315,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":2320,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/install",{"_index":2628,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1941,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":2837,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":3077,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/settings",{"_index":1716,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":324,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:27",{"_index":366,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:30",{"_index":351,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:48",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":699,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{}}}],["src/app/features/budget/budget.component.ts:102",{"_index":793,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:107",{"_index":747,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:145",{"_index":783,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:154",{"_index":775,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:166",{"_index":792,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:176",{"_index":788,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:189",{"_index":771,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:197",{"_index":784,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:226",{"_index":781,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:245",{"_index":759,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:31",{"_index":809,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:310",{"_index":754,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:331",{"_index":778,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:36",{"_index":816,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:41",{"_index":836,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:47",{"_index":832,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:52",{"_index":829,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:57",{"_index":814,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:62",{"_index":806,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:67",{"_index":812,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:72",{"_index":796,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:77",{"_index":801,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:82",{"_index":838,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:87",{"_index":827,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:92",{"_index":818,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:97",{"_index":825,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":958,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:141",{"_index":984,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:156",{"_index":999,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:171",{"_index":995,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":1016,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:27",{"_index":1014,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:30",{"_index":1007,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":1022,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:36",{"_index":1005,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:39",{"_index":1020,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:42",{"_index":1018,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:45",{"_index":1017,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:48",{"_index":1012,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:51",{"_index":981,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:61",{"_index":1023,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:67",{"_index":997,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:76",{"_index":990,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:94",{"_index":1001,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":2537,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":2567,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":2573,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":2576,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":2562,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":2565,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":2556,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":2581,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":2587,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":2588,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":2589,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":2580,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":2584,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":2578,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":2569,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":2568,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":3446,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":2648,"title":{},"body":{"components/MusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts:101",{"_index":2703,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:125",{"_index":2699,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:174",{"_index":2681,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:185",{"_index":2695,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:199",{"_index":2710,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:218",{"_index":2692,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:228",{"_index":2708,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:237",{"_index":2689,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:242",{"_index":2678,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:264",{"_index":2727,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:267",{"_index":2701,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:272",{"_index":2675,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:277",{"_index":2705,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:28",{"_index":2726,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:287",{"_index":2690,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:31",{"_index":2729,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:34",{"_index":2717,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:37",{"_index":2718,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:40",{"_index":2725,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:43",{"_index":2720,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:46",{"_index":2721,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:49",{"_index":2715,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:52",{"_index":2722,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:55",{"_index":2672,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:76",{"_index":2707,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:91",{"_index":2685,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":3449,"title":{},"body":{"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":2533,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/service/backend",{"_index":2928,"title":{},"body":{"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts",{"_index":1669,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts:19",{"_index":1698,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:24",{"_index":1696,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:29",{"_index":1708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:36",{"_index":1703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:43",{"_index":1679,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:61",{"_index":1680,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:84",{"_index":1693,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:93",{"_index":1694,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/gemini",{"_index":2118,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":2231,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":627,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:109",{"_index":957,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":951,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:43",{"_index":955,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:52",{"_index":954,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:63",{"_index":952,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:79",{"_index":956,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:97",{"_index":953,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":1082,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:103",{"_index":1220,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:119",{"_index":1225,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:132",{"_index":1221,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:152",{"_index":1226,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:41",{"_index":1219,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:60",{"_index":1224,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:70",{"_index":1223,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:92",{"_index":1222,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":3453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1893,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:119",{"_index":2075,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:133",{"_index":2082,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:147",{"_index":2078,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:157",{"_index":2076,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:171",{"_index":2081,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:55",{"_index":2074,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:69",{"_index":2080,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:78",{"_index":2079,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:89",{"_index":2077,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2989,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:114",{"_index":3175,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:130",{"_index":3180,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:162",{"_index":3178,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:185",{"_index":3167,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:194",{"_index":3166,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:203",{"_index":3172,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:212",{"_index":3168,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:217",{"_index":3170,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:220",{"_index":3171,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:223",{"_index":3169,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:226",{"_index":3173,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:233",{"_index":3182,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:242",{"_index":3181,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:251",{"_index":3183,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:29",{"_index":3185,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:32",{"_index":3186,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:35",{"_index":3184,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:38",{"_index":3165,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:52",{"_index":3174,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:59",{"_index":3176,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:74",{"_index":3177,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:9",{"_index":2993,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:92",{"_index":3179,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":3332,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:102",{"_index":3366,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:112",{"_index":3365,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:122",{"_index":3369,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:53",{"_index":3363,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:68",{"_index":3367,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:77",{"_index":3364,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:88",{"_index":3368,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1228,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":3123,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:21",{"_index":3136,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:27",{"_index":3132,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:34",{"_index":3130,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":3320,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:19",{"_index":3329,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:27",{"_index":3325,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:39",{"_index":3327,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":2083,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:22",{"_index":2090,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":2211,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":2416,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":2823,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:25",{"_index":2829,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:48",{"_index":2832,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":3147,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:25",{"_index":3155,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:48",{"_index":3156,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":3283,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:17",{"_index":3289,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:30",{"_index":3290,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:41",{"_index":3295,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":3457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":3458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":3459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":3513,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":638,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["starty",{"_index":1844,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["state",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["statements",{"_index":3417,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1545,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FooterComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["statistics",{"_index":762,"title":{},"body":{"components/BudgetComponent.html":{}}}],["status",{"_index":902,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["stay",{"_index":840,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stays",{"_index":3569,"title":{},"body":{"index.html":{}}}],["steps",{"_index":927,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stops",{"_index":3492,"title":{},"body":{"index.html":{}}}],["storage",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storage.service",{"_index":643,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":3023,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["storageservice",{"_index":429,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["storageservice.isbrowser",{"_index":3026,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["store",{"_index":1146,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["stores",{"_index":830,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/SearchButtonComponent.html":{}}}],["stream",{"_index":3133,"title":{},"body":{"injectables/SectionService.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["string(date.getmonth",{"_index":2614,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":1044,"title":{},"body":{"components/CalendarComponent.html":{}}}],["strings",{"_index":3224,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["stroke",{"_index":2259,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1767,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["structured",{"_index":2133,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["style",{"_index":1278,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":3395,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":2011,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["sub",{"_index":1830,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":785,"title":{},"body":{"components/BudgetComponent.html":{}}}],["submitedit",{"_index":1951,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["subscribe",{"_index":3126,"title":{},"body":{"injectables/SectionService.html":{}}}],["subscribe((event",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":3645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["success/error",{"_index":752,"title":{},"body":{"components/BudgetComponent.html":{}}}],["success:hover",{"_index":1540,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":2946,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["such",{"_index":704,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["suffix",{"_index":2041,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["suggest",{"_index":1314,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":766,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested/day",{"_index":3547,"title":{},"body":{"index.html":{}}}],["suggestedperday",{"_index":738,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestedperday.tofixed(2",{"_index":945,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/MusicComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suggestnextsong",{"_index":2982,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1287,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestontriggercharacters",{"_index":3228,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suggests",{"_index":1274,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["suitable",{"_index":1279,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":881,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["summarizing",{"_index":813,"title":{},"body":{"components/BudgetComponent.html":{}}}],["summary",{"_index":3543,"title":{},"body":{"index.html":{}}}],["sun",{"_index":1024,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["support",{"_index":3579,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1899,"title":{},"body":{"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{}}}],["sure",{"_index":937,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surface",{"_index":1055,"title":{},"body":{"components/CalendarComponent.html":{}}}],["surroundingpairs",{"_index":3269,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":3580,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2296,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["switches",{"_index":2294,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":2266,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":2292,"title":{},"body":{"components/GraphsComponent.html":{}}}],["swupdate",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["symbol",{"_index":821,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["sync",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncbudgetwithschema",{"_index":3020,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synccategorieswithschema",{"_index":3005,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced",{"_index":3040,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced[key",{"_index":3042,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings",{"_index":3049,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings['app_version",{"_index":3052,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings[key",{"_index":3050,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncexpenseswithschema",{"_index":3008,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncing",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuser",{"_index":3160,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncuser(storagekey",{"_index":3047,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuserwithschema",{"_index":3011,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncwithschema",{"_index":3161,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncwithschema(storagekey",{"_index":3025,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syntax",{"_index":2529,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":1443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":2155,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["t.id",{"_index":2509,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":3259,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":1428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["tabcompletion",{"_index":3230,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":2507,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":1093,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3464,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3258,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tailored",{"_index":3499,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":1177,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2949,"title":{},"body":{"injectables/PostApiService.html":{}}}],["taken",{"_index":1699,"title":{},"body":{"injectables/ConfigService.html":{}}}],["tap",{"_index":3535,"title":{},"body":{"index.html":{}}}],["target",{"_index":1211,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{}}}],["teal",{"_index":3667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":3512,"title":{},"body":{"index.html":{}}}],["technology",{"_index":3514,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{"interfaces/Template.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":1429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":1430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":2467,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":1396,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":3271,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":1414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":3391,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["term",{"_index":1267,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["text",{"_index":367,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["textcolor",{"_index":1859,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["that's",{"_index":2188,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["theme_mode",{"_index":3017,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["then((content",{"_index":3389,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["thinking",{"_index":390,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":3159,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.animatedbudgetprogress",{"_index":887,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.animatepercentage",{"_index":893,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.appname",{"_index":1714,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.appversion",{"_index":2092,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["this.audio",{"_index":2741,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.currenttime",{"_index":2787,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.onended",{"_index":2752,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.pause",{"_index":2745,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.paused",{"_index":2743,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.play",{"_index":2744,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.src",{"_index":2746,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.avgallowedperday",{"_index":922,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.avgspentperday",{"_index":923,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetcolorclass",{"_index":896,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform",{"_index":847,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.invalid",{"_index":858,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.markallastouched",{"_index":859,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.patchvalue",{"_index":854,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.reset",{"_index":851,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.value",{"_index":860,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetkey",{"_index":3066,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetmessage",{"_index":903,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress",{"_index":886,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress.tofixed(1",{"_index":934,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets",{"_index":866,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets.length",{"_index":869,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets[this.budgets.length",{"_index":871,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.add(data",{"_index":863,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.delete(this.latestbudget.budget_id",{"_index":939,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.getall",{"_index":867,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.update(this.latestbudget.budget_id",{"_index":861,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatebudgetprogress",{"_index":872,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":1050,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":1036,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":1051,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":1046,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2903,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":1204,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":1207,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":2878,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2898,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":2880,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":3030,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":2879,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":2891,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":1214,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":1215,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryselected.emit(category",{"_index":1210,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":2876,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":1205,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":1206,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2904,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2905,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":2367,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":2365,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.close.emit",{"_index":2117,"title":{},"body":{"components/FormModelComponent.html":{}}}],["this.closedownloaddatamodal",{"_index":1801,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.closemodal",{"_index":864,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.closemodal.emit",{"_index":1998,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.config",{"_index":1590,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.getapiurl",{"_index":2962,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.configservice.getappname",{"_index":2641,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.configservice.getversion",{"_index":2093,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.confirmanddownload",{"_index":1779,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.createsession",{"_index":1563,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currency",{"_index":844,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currency}${(spent",{"_index":906,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${remaining.tofixed(2",{"_index":910,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${spent.tofixed(2",{"_index":905,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${totalbudget.tofixed(2",{"_index":909,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currentdate",{"_index":2594,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":2370,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":2343,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":2344,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":2597,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":2599,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":2598,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":2601,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":1034,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentsong",{"_index":2747,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentsong?.url",{"_index":2742,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentyear",{"_index":1035,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":2586,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.deferredprompt",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.prompt",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.userchoice.then((choiceresult",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1999,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayedpercentage",{"_index":888,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.downloadblob(content",{"_index":3390,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.downloaddataform",{"_index":1775,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.invalid",{"_index":1777,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markallastouched",{"_index":1778,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markaspristine",{"_index":1821,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markasuntouched",{"_index":1822,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.reset",{"_index":1820,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.value",{"_index":1780,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.duration.set(song.duration",{"_index":2748,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1996,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1980,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1989,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1992,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1995,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editor",{"_index":3208,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":3270,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":3232,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":3239,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":1593,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":1599,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":1595,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":3064,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":2877,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2900,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":2889,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseselected.emit(expense",{"_index":2045,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":1061,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":2152,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.exporttoexcel(filteredexpensedata",{"_index":1806,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.exporttopdf(filteredexpensedata",{"_index":1804,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["this.filteredlocationsuggestions",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":2605,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":2609,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":2148,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generatereadme",{"_index":3386,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.generateuserid",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":3352,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":673,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getall().find(item",{"_index":1930,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":3237,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.getlast30daysexpenses",{"_index":2146,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getsongurl(firstsong",{"_index":2776,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2963,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":3117,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":3116,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":2242,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":2244,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":2243,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1273,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":2228,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":2144,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1271,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1289,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.handlebarsinstance",{"_index":2470,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":2516,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":2476,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":2486,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":2511,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":2505,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":2499,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":2489,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":2484,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.history",{"_index":1358,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1353,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1272,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":1589,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":1598,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":1581,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":1572,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":1613,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":1639,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":1611,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(url",{"_index":2964,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1979,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.initializeeditor",{"_index":1566,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":2469,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.installapp.emit",{"_index":2642,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.interval",{"_index":2750,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isappupdated",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isbrowser",{"_index":665,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":1209,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.iscurrentsongliked",{"_index":2756,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isdarkmode",{"_index":849,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["this.iseditmode",{"_index":852,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.iseditopen",{"_index":1990,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.isexpenseroute",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":2450,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismusicroute",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isopen",{"_index":3109,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isvisible",{"_index":2230,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.lastsaved",{"_index":1608,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.latestbudget",{"_index":870,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.amount",{"_index":855,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.fromdate",{"_index":856,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.todate",{"_index":857,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.liveapiurl",{"_index":1711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.loadbudgets",{"_index":850,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadcategories",{"_index":1203,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":2335,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":2885,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":2340,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmonthdata",{"_index":2883,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":2339,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsessionconfig",{"_index":1565,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":1564,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":2884,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":2341,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.localapiurl",{"_index":1710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.locationsuggestions",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":2229,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":387,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":1062,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":1063,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":1067,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onchangecallback",{"_index":3233,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":3234,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onsongfinished",{"_index":2753,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.playsong(newurl",{"_index":2777,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["this.previewframe.nativeelement.src",{"_index":1620,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":1619,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.progress.set(0",{"_index":2780,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(seektime",{"_index":2788,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(this.audio.currenttime",{"_index":2751,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query",{"_index":3113,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":3119,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim",{"_index":2735,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query.trim().length",{"_index":3118,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.registerhandlebarslanguage",{"_index":3236,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":2474,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":1033,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2893,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.router.events",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["this.saavnservice.searchsongs(`${songname",{"_index":2769,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.searchsongs(q).subscribe((res",{"_index":2736,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.suggestnextsong(transformeddata",{"_index":2757,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":386,"title":{},"body":{"components/AiComponent.html":{}}}],["this.save_delay",{"_index":1609,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":1607,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":1569,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":1604,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":1596,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.search.emit(this.query",{"_index":3114,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":3115,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":3110,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":2453,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":3131,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":3139,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1994,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1991,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1981,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1982,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1983,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1988,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1987,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1985,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1986,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1984,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedfile",{"_index":1586,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":1587,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":1558,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":1650,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showaibutton",{"_index":2449,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":2835,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showbudgetsection",{"_index":868,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.showconfigpanel",{"_index":1617,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showdownloaddatamodal",{"_index":1823,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.showinstallbutton",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.showlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":853,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showplayermodal",{"_index":2812,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.songs.set(res.data.results",{"_index":2737,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":666,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":1115,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":1114,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getuser",{"_index":2980,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.syncbudgetwithschema",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.synccategorieswithschema",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncexpenseswithschema",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncuserwithschema",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.updatebudgets(budgets",{"_index":698,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["this.storageservice.updatecategories(categories",{"_index":1148,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.storageservice.updateuser(user",{"_index":3360,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.suggestedperday",{"_index":924,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.syncuser(this.userkey",{"_index":3019,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.budgetkey",{"_index":3022,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.categorykey",{"_index":3007,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.expensekey",{"_index":3010,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.templates",{"_index":1582,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":1585,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.theme.mode",{"_index":2334,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":2364,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":3330,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":3331,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":3298,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["this.toastservice.show('budget",{"_index":862,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('error",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.toastservice.show('excel",{"_index":1807,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('expense",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('failed",{"_index":1809,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('json",{"_index":1802,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('pdf",{"_index":1805,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.today",{"_index":1773,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toggleedit",{"_index":1997,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":2358,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":1060,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.transformsongdata(this.currentsong",{"_index":2755,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.triggerdownload(jsondata",{"_index":1800,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.userinput.trim",{"_index":377,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":3068,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('app_version",{"_index":2970,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('currency",{"_index":845,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2955,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('is_app_updated",{"_index":2971,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.update('last_backup",{"_index":2972,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":1715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.viewtype",{"_index":2338,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":2595,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":2596,"title":{},"body":{"components/HomeComponent.html":{}}}],["though",{"_index":3563,"title":{},"body":{"index.html":{}}}],["through",{"_index":3528,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1578,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["thu",{"_index":1028,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["ticks",{"_index":2925,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["timeamountmap",{"_index":2368,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":2392,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":2382,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":2389,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeout",{"_index":1603,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["times",{"_index":946,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":2391,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":2393,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["timestamp}.${extension",{"_index":1815,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.pdf",{"_index":1877,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.xlsx",{"_index":1891,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestr",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["tips",{"_index":3407,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":1009,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["titlecase",{"_index":2617,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1938,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["toast.classname",{"_index":3307,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":3286,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":3285,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":3316,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":3319,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.service",{"_index":2953,"title":{},"body":{"injectables/PostApiService.html":{}}}],["toastcomponent",{"_index":319,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":3299,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":3317,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":3302,"title":{},"body":{"components/ToastComponent.html":{}}}],["toasts",{"_index":3301,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["todate",{"_index":632,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["todate.toisostring",{"_index":2153,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":917,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["todaysexpenses",{"_index":2371,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":2383,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":2373,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":2369,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["today’s",{"_index":967,"title":{},"body":{"components/CalendarComponent.html":{}}}],["todo",{"_index":1626,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":1419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":1161,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleconfigpanel",{"_index":1616,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleedit",{"_index":1952,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglelike",{"_index":2669,"title":{},"body":{"components/MusicComponent.html":{}}}],["togglemenu",{"_index":2431,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":1196,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":3087,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["token",{"_index":3250,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":3249,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tomato",{"_index":3629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":2181,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":2299,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":2260,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":1489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":1573,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":764,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{}}}],["totalamount",{"_index":2349,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalbudget",{"_index":873,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalbudget).tofixed(2",{"_index":907,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totaldays",{"_index":911,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalexpenses",{"_index":976,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":3559,"title":{},"body":{"index.html":{}}}],["touched",{"_index":1742,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trackbyname(index",{"_index":1666,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tracker",{"_index":2836,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["tracks",{"_index":2447,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["transform",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transformed",{"_index":2713,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformeddata",{"_index":2754,"title":{},"body":{"components/MusicComponent.html":{}}}],["transforms",{"_index":2711,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata",{"_index":2670,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata(data",{"_index":2709,"title":{},"body":{"components/MusicComponent.html":{}}}],["transition",{"_index":1477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transitions",{"_index":795,"title":{},"body":{"components/BudgetComponent.html":{}}}],["translatey(0",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":2492,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":2494,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":2497,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":1529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["travel",{"_index":3525,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":2167,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["trigger",{"_index":889,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["triggerdownload",{"_index":1734,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["triggerdownload(content",{"_index":1752,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggered",{"_index":2638,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["triggering",{"_index":1740,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["trim",{"_index":2762,"title":{},"body":{"components/MusicComponent.html":{}}}],["trimmedinput",{"_index":376,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":378,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["ts",{"_index":3243,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":3402,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["tslib",{"_index":3485,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":1026,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["two",{"_index":1108,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeclasses",{"_index":3304,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":3314,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":3313,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":658,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typeparam",{"_index":3356,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":3244,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["typically",{"_index":2114,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/ToastService.html":{}}}],["typing",{"_index":3539,"title":{},"body":{"index.html":{}}}],["ui",{"_index":767,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["ui/ux",{"_index":3498,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":1077,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":659,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["undone",{"_index":1625,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unique",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["universal",{"_index":3600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":2814,"title":{},"body":{"components/MusicComponent.html":{}}}],["unless",{"_index":2483,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unrelated",{"_index":2178,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":3553,"title":{},"body":{"index.html":{}}}],["up",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":687,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":1131,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1927,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":3350,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateallbudgets",{"_index":949,"title":{},"body":{"injectables/BudgetService.html":{}}}],["updateallbudgets(budgets",{"_index":697,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["updateallcategories",{"_index":1218,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateallcategories(categories",{"_index":1147,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["updatebudgets",{"_index":3162,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatebudgets(budgets",{"_index":3072,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatecategories",{"_index":3163,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatecategories(categories",{"_index":3069,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateconfig",{"_index":1612,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":3038,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatedexpense",{"_index":1993,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":2147,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":3164,"title":{},"body":{"injectables/StorageService.html":{}}}],["updateuser(user",{"_index":3075,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateuserdata",{"_index":3362,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdata(user",{"_index":3359,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":750,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["upi",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":3551,"title":{},"body":{"index.html":{}}}],["upon",{"_index":3517,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["url.createobjecturl(blob",{"_index":2808,"title":{},"body":{"components/MusicComponent.html":{}}}],["url.createobjecturl(zipblob",{"_index":1655,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(link.href",{"_index":2811,"title":{},"body":{"components/MusicComponent.html":{}}}],["url.revokeobjecturl(url",{"_index":1662,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.startswith('/music",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["urls",{"_index":2724,"title":{},"body":{"components/MusicComponent.html":{}}}],["usage",{"_index":761,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["usd",{"_index":3337,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1343,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":819,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.service",{"_index":1096,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2942,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":1086,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_password",{"_index":3016,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":1768,"title":{"interfaces/UserData.html":{}},"body":{"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2965,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":344,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":3004,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userquery",{"_index":2136,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":3495,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":3012,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":416,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":2333,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":2137,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uses",{"_index":1275,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":327,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["utilities",{"_index":3635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":2009,"title":{},"body":{"components/ExpenseListComponent.html":{},"index.html":{}}}],["val?.tolowercase().trim",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1975,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["validates",{"_index":786,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validation",{"_index":776,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["validators.max(100000000",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(100",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["valign",{"_index":1856,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2503,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["value.split",{"_index":2610,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":2603,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":885,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["value}\\n",{"_index":1299,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":260,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":3419,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3586,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1675,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/MusicComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":3685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":3220,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["via",{"_index":2044,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"index.html":{}}}],["vibe",{"_index":1342,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":2865,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":1198,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('editorcontainer",{"_index":1544,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":1547,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('searchinput",{"_index":3107,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":2840,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["viewtype",{"_index":2268,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":2543,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":2544,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["visible",{"_index":1021,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":3413,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visual",{"_index":714,"title":{},"body":{"components/BudgetComponent.html":{}}}],["visualizes",{"_index":3522,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2189,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":3210,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["v{{appversion",{"_index":2096,"title":{},"body":{"components/FooterComponent.html":{},"components/MusicComponent.html":{}}}],["w",{"_index":3264,"title":{},"body":{"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["w+)(\\s*=\\s",{"_index":3260,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":938,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":1134,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["warning)defaults",{"_index":3328,"title":{},"body":{"injectables/ToastService.html":{}}}],["way",{"_index":2997,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":2192,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":2619,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":1027,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["weekday",{"_index":1031,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":977,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekly",{"_index":3336,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":1470,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["whenever",{"_index":3092,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["white",{"_index":1513,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["whole",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('beforeinstallprompt",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["window.innerwidth",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["window.localstorage",{"_index":660,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window.location.href.includes(\"exwise",{"_index":1713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.location.href.includes(\"localhost",{"_index":1712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.settimeout(async",{"_index":1606,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1811,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1819,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window:resize",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize(event",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["wise",{"_index":3521,"title":{},"body":{"index.html":{}}}],["wisely",{"_index":3490,"title":{},"body":{"index.html":{}}}],["within",{"_index":721,"title":{},"body":{"components/BudgetComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{}}}],["without",{"_index":670,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["wordbasedsuggestions",{"_index":3231,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":3215,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["workbook",{"_index":1879,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["worker",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":3621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":3564,"title":{},"body":{"index.html":{}}}],["worksheet",{"_index":1888,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["wrap",{"_index":2517,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":2521,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wraps",{"_index":1873,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":2310,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xlsx",{"_index":1757,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["xlsx.utils.aoa_to_sheet(aoa",{"_index":1889,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_append_sheet(workbook",{"_index":1890,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_new",{"_index":1880,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.writefile(workbook",{"_index":1892,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xs",{"_index":3308,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["year",{"_index":1002,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["yearly",{"_index":2276,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["years",{"_index":3536,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":898,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1842,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["yyyy",{"_index":986,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":2624,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["zip",{"_index":1399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":3387,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":3383,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":3388,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":1644,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":1398,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":1561,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":3488,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2300,"title":{},"body":{"components/GraphsComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0), Validators.max(100000000)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n\n                \n                    Amount cannot exceed 100,000,000\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount cannot exceed 100,000,000                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for AI interaction using Gemini API.\nFeatures:\n\nAccepts user input.\nSends input to Gemini API for processing.\nConverts AI Markdown response to sanitized HTML for display.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor to inject services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles AI requests.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular sanitizer for safe HTML rendering.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends the user input to the Gemini API.\n\nIgnores input shorter than 2 characters.\nConverts returned Markdown to sanitized HTML.\n\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:30\n                        \n                    \n\n            \n                \n                    AI response rendered as sanitized HTML\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:27\n                        \n                    \n\n            \n                \n                    User input from the text box\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n/**\n * Component for AI interaction using Gemini API.\n * \n * Features:\n * - Accepts user input.\n * - Sends input to Gemini API for processing.\n * - Converts AI Markdown response to sanitized HTML for display.\n */\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n\n  /** User input from the text box */\n  userInput = '';\n\n  /** AI response rendered as sanitized HTML */\n  responseHtml: SafeHtml | null = null;\n\n  /**\n   * Constructor to inject services.\n   * \n   * @param geminiApi Service that handles AI requests.\n   * @param sanitizer Angular sanitizer for safe HTML rendering.\n   */\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Sends the user input to the Gemini API.\n   * - Ignores input shorter than 2 characters.\n   * - Converts returned Markdown to sanitized HTML.\n   */\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                                GlobalLoaderComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                CalendarComponent\n                                AiComponent\n                                MusicComponent\n                                InstallAppPopupComponentComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                deferredPrompt\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMobile\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                showInstallButton\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                installApp\n                            \n                            \n                                isAppUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, sectionService: SectionService, storageService: StorageService, router: Router, postApiService: PostApiService, toastService: ToastService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:75\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Local storage schema sync service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router to track route changes\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying toast notifications\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installApp\n                        \n                    \n                \n            \n            \n                \ninstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Triggers the PWA installation prompt if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppUpdated\n                        \n                    \n                \n            \n            \n                \nisAppUpdated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Checks if the application is updated.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the app is updated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:50\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deferredPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n            \n                \n                     PWA installation prompt event\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:60\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:55\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInstallButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:75\n                        \n                    \n\n            \n                \n                     Flag to control the display of the installation prompt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:92\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { ToastComponent } from './shared/toast/toast.component';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { AddExpenseComponent } from './features/add-expense/add-expense.component';\nimport { SettingsComponent } from './features/settings/settings.component';\nimport { ListExpensesComponent } from './features/list-expenses/list-expenses.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CalendarComponent } from './features/calendar/calendar.component';\nimport { BudgetComponent } from './features/budget/budget.component';\nimport { AiComponent } from './features/ai/ai.component';\nimport { MusicComponent } from './features/music/music.component';\nimport { InstallAppPopupComponentComponent } from './component/install-app-popup-component/install-app-popup-component.component';\n\nimport { StorageService } from './service/localStorage/storage.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { SectionService } from './service/section/section.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\nimport { ToastService } from './service/toast/toast.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent,\n    GlobalLoaderComponent, CommonModule, AddExpenseComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent, CalendarComponent, AiComponent, MusicComponent, InstallAppPopupComponentComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   *  PWA installation prompt event\n   */\n  deferredPrompt: any;\n\n  /**\n   *  Flag to control the display of the installation prompt\n   */\n  showInstallButton = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param sectionService Service to track current section changes\n   * @param storageService Local storage schema sync service\n   * @param router Angular Router to track route changes\n   * @param postApiService Backend API post service\n   * @param swUpdate Service Worker update manager\n   * @param platformId Angular platform ID to check if running in browser\n   * @param toastService Service for displaying toast notifications\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private sectionService: SectionService,\n    private storageService: StorageService,\n    private router: Router,\n    private postApiService: PostApiService,\n    private toastService: ToastService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n\n    // Track route changes to detect page-specific routes\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        const url = event.urlAfterRedirects || event.url;\n        this.isExpenseRoute = url === '/';\n        this.isMusicRoute = url.startsWith('/music');\n      });\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth  {\n        this.loader.hide();\n      }, 500);\n\n      // Sync schema for stored data\n      this.storageService.syncCategoriesWithSchema();\n      this.storageService.syncExpensesWithSchema();\n      this.storageService.syncUserWithSchema();\n      this.storageService.syncBudgetWithSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n\n      // Show update toast if app is not updated\n      if (!this.isAppUpdated()) {\n        setTimeout(() => {\n          this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n        }, 500);\n      }\n\n      // Listen for PWA installation prompt\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.deferredPrompt = event;\n        this.showInstallButton = true;\n      });\n    }\n  }\n\n  /**\n   * Event listener for window resize to update mobile view detection.\n   * @param event Resize event object\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = event.target.innerWidth ('is_app_updated') ?? false;\n  }\n\n  /**\n   * Triggers the PWA installation prompt if available.\n   */\n  installApp() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt();\n      this.deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.showInstallButton = false;\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n        this.deferredPrompt = null;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n    \n      \n      \n        \n          \n          \n            \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n    \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a budget entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget amount (rounded to 2 decimal places).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the budget.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BudgetComponent.html":{"url":"components/BudgetComponent.html","title":"component - BudgetComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/budget/budget.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for managing budget creation, editing, progress tracking,\nand displaying insights such as average spending per day.\nFeatures:\n\nAdd, edit, and delete budget records stored in LocalStorage.\nCalculate budget progress, remaining amount, and daily spending suggestions.\nProvide visual progress bar with dynamic colors and animated percentage.\nIntegrates with ExpenseService to calculate expenses within the budget period.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-budget\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./budget.component.html\n            \n\n\n\n            \n                styleUrl\n                ./budget.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedBudgetProgress\n                            \n                            \n                                avgAllowedPerDay\n                            \n                            \n                                avgSpentPerDay\n                            \n                            \n                                budgetColorClass\n                            \n                            \n                                budgetForm\n                            \n                            \n                                budgetMessage\n                            \n                            \n                                budgetProgress\n                            \n                            \n                                budgets\n                            \n                            \n                                currency\n                            \n                            \n                                displayedPercentage\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                isEditMode\n                            \n                            \n                                latestBudget\n                            \n                            \n                                showBudgetSection\n                            \n                            \n                                showModal\n                            \n                            \n                                suggestedPerDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animatePercentage\n                            \n                            \n                                calculateBudgetProgress\n                            \n                            \n                                closeModal\n                            \n                            \n                                createForm\n                            \n                            \n                                deleteBudget\n                            \n                            \n                                loadBudgets\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, budgetService: BudgetService, toastService: ToastService, fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/budget/budget.component.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving expenses from LocalStorage.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for creating, updating, and deleting budgets.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying success/error notifications.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder for constructing the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving user-specific settings (currency, theme).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animatePercentage\n                        \n                    \n                \n            \n            \n                \nanimatePercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:310\n                        \n                    \n\n\n            \n                \n                        Smoothly animates the budget percentage counter\nfrom 0 to the calculated progress value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBudgetProgress\n                        \n                    \n                \n            \n            \n                \ncalculateBudgetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:245\n                        \n                    \n\n\n            \n                \n                        Calculates budget usage statistics including:\n\nTotal spent amount in the budget period.\nRemaining budget.\nProgress percentage.\nSuggested per-day spending.\n\nAlso updates UI elements such as progress bar color and budget message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Closes the add/edit budget modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Creates and returns the reactive budget form with validation rules.\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                FormGroup instance with controls for amount, fromDate, and toDate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBudget\n                        \n                    \n                \n            \n            \n                \ndeleteBudget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:331\n                        \n                    \n\n\n            \n                \n                        Deletes the latest budget after user confirmation\nand updates the budget list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBudgets\n                        \n                    \n                \n            \n            \n                \nloadBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:226\n                        \n                    \n\n\n            \n                \n                        Loads all budgets from LocalStorage and sets the latest budget\nas the active budget for progress calculations.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after component initialization.\nLoads existing budgets and initializes the budget section if data exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Handles form submission for adding or updating a budget.\nValidates input, updates LocalStorage, and refreshes the budget list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Opens the modal for editing the latest budget.\nPre-fills the form with the latest budget's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Opens the modal for adding a new budget.\nResets the form and disables edit mode.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedBudgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:102\n                        \n                    \n\n            \n                \n                    Animated progress value used for smooth progress bar transitions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgAllowedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:72\n                        \n                    \n\n            \n                \n                    Average amount allowed to spend per day over the entire budget period.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgSpentPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:77\n                        \n                    \n\n            \n                \n                    Average amount actually spent per day so far in the budget period.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetColorClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bg-green-500'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:62\n                        \n                    \n\n            \n                \n                    CSS class for the progress bar color (changes dynamically based on usage).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:31\n                        \n                    \n\n            \n                \n                    Reactive form group to handle budget input fields (amount, fromDate, toDate).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:67\n                        \n                    \n\n            \n                \n                    Text message summarizing budget usage and remaining amount.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:57\n                        \n                    \n\n            \n                \n                    Percentage of the budget spent, between 0 and 100.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of all stored budgets fetched from the BudgetService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:92\n                        \n                    \n\n            \n                \n                    User's preferred currency symbol or code (retrieved from UserService).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:107\n                        \n                    \n\n            \n                \n                    Animated percentage value displayed as the budget percentage increases smoothly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:97\n                        \n                    \n\n            \n                \n                    Whether dark mode is enabled in the UI (based on user settings).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:87\n                        \n                    \n\n            \n                \n                    Indicates whether the modal is currently in \"edit\" mode (true) or \"add\" mode (false).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latestBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:52\n                        \n                    \n\n            \n                \n                    Stores the latest budget entry (most recent in the list).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBudgetSection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:47\n                        \n                    \n\n            \n                \n                    Controls the visibility of the main budget section on the UI.\nBecomes true if at least one budget exists.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:41\n                        \n                    \n\n            \n                \n                    Controls the visibility of the add/edit budget modal dialog.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:82\n                        \n                    \n\n            \n                \n                    Suggested daily spending for the remaining days to stay within budget.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { Budget, BudgetService } from '../../service/localStorage/budget.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Component responsible for managing budget creation, editing, progress tracking,\n * and displaying insights such as average spending per day.\n *\n * Features:\n * - Add, edit, and delete budget records stored in LocalStorage.\n * - Calculate budget progress, remaining amount, and daily spending suggestions.\n * - Provide visual progress bar with dynamic colors and animated percentage.\n * - Integrates with ExpenseService to calculate expenses within the budget period.\n */\n@Component({\n  selector: 'app-budget',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule],\n  templateUrl: './budget.component.html',\n  styleUrl: './budget.component.css'\n})\nexport class BudgetComponent implements OnInit {\n\n  /**\n   * Reactive form group to handle budget input fields (amount, fromDate, toDate).\n   */\n  budgetForm: FormGroup;\n\n  /**\n   * Array of all stored budgets fetched from the BudgetService.\n   */\n  budgets: Budget[] = [];\n\n  /**\n   * Controls the visibility of the add/edit budget modal dialog.\n   */\n  showModal = false;\n\n  /**\n   * Controls the visibility of the main budget section on the UI.\n   * Becomes true if at least one budget exists.\n   */\n  showBudgetSection = false;\n\n  /**\n   * Stores the latest budget entry (most recent in the list).\n   */\n  latestBudget!: Budget;\n\n  /**\n   * Percentage of the budget spent, between 0 and 100.\n   */\n  budgetProgress = 0;\n\n  /**\n   * CSS class for the progress bar color (changes dynamically based on usage).\n   */\n  budgetColorClass = 'bg-green-500';\n\n  /**\n   * Text message summarizing budget usage and remaining amount.\n   */\n  budgetMessage = '';\n\n  /**\n   * Average amount allowed to spend per day over the entire budget period.\n   */\n  avgAllowedPerDay = 0;\n\n  /**\n   * Average amount actually spent per day so far in the budget period.\n   */\n  avgSpentPerDay = 0;\n\n  /**\n   * Suggested daily spending for the remaining days to stay within budget.\n   */\n  suggestedPerDay = 0;\n\n  /**\n   * Indicates whether the modal is currently in \"edit\" mode (true) or \"add\" mode (false).\n   */\n  isEditMode = false;\n\n  /**\n   * User's preferred currency symbol or code (retrieved from UserService).\n   */\n  currency: string | null;\n\n  /**\n   * Whether dark mode is enabled in the UI (based on user settings).\n   */\n  isDarkMode: boolean = false;\n\n  /**\n   * Animated progress value used for smooth progress bar transitions.\n   */\n  animatedBudgetProgress = 0;\n\n  /**\n   * Animated percentage value displayed as the budget percentage increases smoothly.\n   */\n  displayedPercentage = 0;\n\n  /**\n   * Creates an instance of BudgetComponent.\n   *\n   * @param expenseService Service for retrieving expenses from LocalStorage.\n   * @param budgetService Service for creating, updating, and deleting budgets.\n   * @param toastService Service for displaying success/error notifications.\n   * @param fb Angular FormBuilder for constructing the reactive form.\n   * @param userService Service for retrieving user-specific settings (currency, theme).\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private budgetService: BudgetService,\n    private toastService: ToastService,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) {\n    // Load user currency preference\n    this.currency = this.userService.getValue('currency');\n\n    // Initialize the reactive form\n    this.budgetForm = this.createForm();\n\n    // Check and apply theme settings\n    const savedTheme = this.userService.getValue('theme_mode') ?? 'light';\n    if (savedTheme === 'dark') {\n      this.isDarkMode = true;\n    }\n    else {\n      this.isDarkMode = false;\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after component initialization.\n   * Loads existing budgets and initializes the budget section if data exists.\n   */\n  ngOnInit(): void {\n    this.loadBudgets();\n  }\n\n  /**\n   * Creates and returns the reactive budget form with validation rules.\n   *\n   * @returns FormGroup instance with controls for amount, fromDate, and toDate.\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      fromDate: ['', Validators.required],\n      toDate: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Opens the modal for adding a new budget.\n   * Resets the form and disables edit mode.\n   */\n  openModal(): void {\n    this.budgetForm.reset();\n    this.isEditMode = false;\n    this.showModal = true;\n  }\n\n  /**\n   * Opens the modal for editing the latest budget.\n   * Pre-fills the form with the latest budget's data.\n   */\n  openEditModal(): void {\n    this.isEditMode = true;\n    this.showModal = true;\n    this.budgetForm.patchValue({\n      amount: this.latestBudget.amount,\n      fromDate: this.latestBudget.fromDate,\n      toDate: this.latestBudget.toDate,\n    });\n  }\n\n  /**\n   * Closes the add/edit budget modal.\n   */\n  closeModal(): void {\n    this.showModal = false;\n  }\n\n  /**\n   * Handles form submission for adding or updating a budget.\n   * Validates input, updates LocalStorage, and refreshes the budget list.\n   */\n  onSubmit(): void {\n    if (this.budgetForm.invalid) {\n      this.budgetForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.budgetForm.value;\n\n    try {\n      if (this.isEditMode) {\n        this.budgetService.update(this.latestBudget.budget_id, data);\n        this.toastService.show('Budget updated successfully!', 'success');\n      } else {\n        this.budgetService.add(data);\n        this.toastService.show('Budget added successfully!', 'success');\n      }\n\n      this.loadBudgets();\n      this.closeModal();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error saving budget.', 'error');\n    }\n  }\n\n  /**\n   * Loads all budgets from LocalStorage and sets the latest budget\n   * as the active budget for progress calculations.\n   */\n  loadBudgets(): void {\n    this.budgets = this.budgetService.getAll();\n    this.showBudgetSection = this.budgets.length > 0;\n\n    if (this.showBudgetSection) {\n      this.latestBudget = this.budgets[this.budgets.length - 1];\n      this.calculateBudgetProgress();\n    }\n  }\n\n  /**\n   * Calculates budget usage statistics including:\n   * - Total spent amount in the budget period.\n   * - Remaining budget.\n   * - Progress percentage.\n   * - Suggested per-day spending.\n   *\n   * Also updates UI elements such as progress bar color and budget message.\n   */\n  calculateBudgetProgress(): void {\n    const totalBudget = parseFloat(this.latestBudget.amount.toString());\n    const fromDate = new Date(this.latestBudget.fromDate);\n    const toDate = new Date(this.latestBudget.toDate);\n\n    // Filter expenses within the budget date range\n    const expenses: Expense[] = this.expenseService.getAll();\n    const expensesInRange = expenses.filter((exp: any) => {\n      const date = new Date(exp.date);\n      return date >= fromDate && date  sum + parseFloat(exp.amount), 0);\n    const percentage = Math.min((spent / totalBudget) * 100, 100);\n    const remaining = Math.max(totalBudget - spent, 0);\n\n    // Update progress values\n    this.budgetProgress = percentage;\n    this.animatedBudgetProgress = 0;\n    this.displayedPercentage = 0;\n\n    // Trigger animation after a small delay\n    setTimeout(() => {\n      this.animatedBudgetProgress = this.budgetProgress;\n    }, 100);\n\n    // Animate the percentage counter\n    this.animatePercentage();\n\n    // Dynamically change progress bar color based on usage\n    if (percentage > 80) this.budgetColorClass = 'bg-red-500';\n    else if (percentage > 50) this.budgetColorClass = 'bg-yellow-500';\n    else if (percentage > 30) this.budgetColorClass = 'bg-blue-500';\n    else this.budgetColorClass = 'bg-green-500';\n\n    // Generate budget status message\n    if (spent > totalBudget) {\n      this.budgetMessage =\n        `⚠️ You have exceeded your budget! You spent ${this.currency}${spent.toFixed(2)} ` +\n        `which is ${this.currency}${(spent - totalBudget).toFixed(2)} over the limit set ` +\n        `between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 😰`;\n    } else {\n      this.budgetMessage =\n        `✅ You have spent ${this.currency}${spent.toFixed(2)} out of ` +\n        `${this.currency}${totalBudget.toFixed(2)} between ` +\n        `${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 💸 Remaining: ` +\n        `${this.currency}${remaining.toFixed(2)}`;\n    }\n\n    // Calculate average daily insights\n    const totalDays = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n    const today = new Date();\n    const elapsedDays = Math.max(Math.ceil((today.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)), 1);\n    const remainingDays = Math.max(totalDays - elapsedDays, 1);\n\n    this.avgAllowedPerDay = totalBudget / totalDays;\n    this.avgSpentPerDay = spent / elapsedDays;\n    this.suggestedPerDay = remaining / remainingDays;\n  }\n\n  /**\n   * Smoothly animates the budget percentage counter\n   * from 0 to the calculated progress value.\n   */\n  animatePercentage(): void {\n    const duration = 800;\n    const steps = 40;\n    const increment = this.budgetProgress / steps;\n    let currentStep = 0;\n\n    const interval = setInterval(() => {\n      currentStep++;\n      this.displayedPercentage = +(increment * currentStep).toFixed(1);\n\n      if (currentStep >= steps) {\n        this.displayedPercentage = +this.budgetProgress.toFixed(1);\n        clearInterval(interval);\n      }\n    }, duration / steps);\n  }\n\n  /**\n   * Deletes the latest budget after user confirmation\n   * and updates the budget list.\n   */\n  deleteBudget(): void {\n    if (confirm('Are you sure you want to delete this budget?')) {\n      this.budgetService.delete(this.latestBudget.budget_id);\n      this.toastService.show('Budget deleted successfully', 'success');\n      this.closeModal();\n    }\n    this.loadBudgets();\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            💰 Budget Progress\n            \n                \n\n                    \n                        {{ displayedPercentage.toFixed(1) }}%\n                    \n\n                \n            \n\n            \n                {{ budgetMessage }}\n            \n\n            \n                \n                    Avg Allowed / Day\n                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}\n                \n                \n                    Spent / Day\n                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}\n                \n                \n                    Suggested / Day\n                    {{currency}}{{ suggestedPerDay.toFixed(2) }}\n                \n            \n        \n        \n            \n                \n                    Update\n                \n                \n                    Delete\n                \n            \n        \n\n    \n\n    \n    \n        \n            \n            \n                \n            \n\n            \n            \n                \n            \n            \n                ➕ Add Budget\n            \n        \n    \n\n    \n    \n        \n            \n                \n                    {{ isEditMode ? 'Update Budget' : 'Add Budget' }}\n                \n\n                &times;\n            \n            \n                Amount\n                \n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n                From Date\n                \n                \n                    From Date is required\n                \n                To Date\n                \n                \n                    To Date is required\n                \n                \n                    Cancel\n                    Save\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            💰 Budget Progress                                                                        {{ displayedPercentage.toFixed(1) }}%                                                                            {{ budgetMessage }}                                                            Avg Allowed / Day                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}                                                    Spent / Day                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}                                                    Suggested / Day                    {{currency}}{{ suggestedPerDay.toFixed(2) }}                                                                                            Update                                                    Delete                                                                                                                                                                                            ➕ Add Budget                                                                                        {{ isEditMode ? \\'Update Budget\\' : \\'Add Budget\\' }}                                ×                                        Amount                                                    Amount cannot be negative                                                    Amount is required                                From Date                                                    From Date is required                                To Date                                                    To Date is required                                                    Cancel                    Save                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BudgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing budgets in local storage.\nProvides methods to add, update, delete, and fetch budgets,\nwhile ensuring data is only accessed in the browser environment.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllBudgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Adds a new budget entry to local storage.\nAutomatically generates a unique budget_id and rounds the amount to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The budget data (without budget_id) to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Deletes a budget entry from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets stored in local storage.\n\n\n                        \n                            Returns :         Budget[]\n\n                        \n                            \n                                A list of all saved budgets, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Updates an existing budget entry in local storage.\nMatches by budget_id and merges with the provided data.\nThe amount is always rounded to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial budget fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllBudgets\n                        \n                    \n                \n            \n            \n                \nupdateAllBudgets(budgets: Budget[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Replaces all budgets in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                            Budget[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that renders a monthly calendar view with expense tracking.\nFeatures:\n\nDisplays days of the current month with previous/next month padding.\nHighlights today’s date.\nCalculates total expenses per month and per day.\nOpens modal to view daily expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of CalendarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve expenses from local storage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user settings such as currency.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Calculates the total expenses for a given date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date (YYYY-MM-DD)\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Changes the calendar month by a specified offset.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of months to change (positive or negative)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Closes the daily expenses modal and clears modal data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that initializes the calendar view\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Opens the modal to show expenses for a specific day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date string (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Renders the calendar for a given year and month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Year to render\n\n                                            \n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Month to render (0-11)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of calendar day objects for rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:30\n                        \n                    \n\n            \n                \n                    Calendar header title (e.g., \"September 2025\")\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:48\n                        \n                    \n\n            \n                \n                    Currency symbol from user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:27\n                        \n                    \n\n            \n                \n                    Current month of the calendar (0-11)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n            \n                \n                    Current year of the calendar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:45\n                        \n                    \n\n            \n                \n                    List of expenses for the selected day in the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:42\n                        \n                    \n\n            \n                \n                    Title of the modal showing daily expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:39\n                        \n                    \n\n            \n                \n                    Whether the daily expense modal is visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n            \n                \n                    Total expenses in the current month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:61\n                        \n                    \n\n            \n                \n                    Service to retrieve user settings such as currency.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                        \n                    \n\n            \n                \n                    Weekday labels\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Component that renders a monthly calendar view with expense tracking.\n *\n * Features:\n * - Displays days of the current month with previous/next month padding.\n * - Highlights today’s date.\n * - Calculates total expenses per month and per day.\n * - Opens modal to view daily expenses.\n */\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\nexport class CalendarComponent implements OnInit {\n\n  /** Current year of the calendar */\n  currentYear = new Date().getFullYear();\n\n  /** Current month of the calendar (0-11) */\n  currentMonth = new Date().getMonth();\n\n  /** Calendar header title (e.g., \"September 2025\") */\n  calendarTitle = '';\n\n  /** Total expenses in the current month */\n  totalExpenses = 0;\n\n  /** Array of calendar day objects for rendering */\n  calendarDays: any[] = [];\n\n  /** Whether the daily expense modal is visible */\n  showModal = false;\n\n  /** Title of the modal showing daily expenses */\n  modalTitle = '';\n\n  /** List of expenses for the selected day in the modal */\n  modalExpenses: any[] = [];\n\n  /** Currency symbol from user settings */\n  currency: string | null;\n\n  /** Weekday labels */\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  /**\n   * Creates an instance of CalendarComponent.\n   *\n   * @param expenseService Service to retrieve expenses from local storage.\n   * @param userService Service to retrieve user settings such as currency.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /** Angular lifecycle hook that initializes the calendar view */\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Changes the calendar month by a specified offset.\n   *\n   * @param offset Number of months to change (positive or negative)\n   */\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Renders the calendar for a given year and month.\n   *\n   * @param year Year to render\n   * @param month Month to render (0-11)\n   */\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Render previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Render current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  /**\n   * Opens the modal to show expenses for a specific day.\n   *\n   * @param dateStr Date string (YYYY-MM-DD)\n   */\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  /**\n   * Closes the daily expenses modal and clears modal data.\n   */\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a category used to group expenses.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category (e.g., hex or CSS color).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of expenses linked to this category.\n(This is a computed field and not part of the stored table.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon representing the category (e.g., from an icon set).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the category is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display name of the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user ID that owns this category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing categories in local storage.\nProvides methods to create, read, update, delete, and sort categories,\nensuring data consistency with associated expenses.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle local storage operations.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user-related values (like user ID).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Adds a new category to local storage.\nGenerates a unique category_id and associates it with the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Category data excluding category_id and user_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Deletes a category from local storage by its ID.\nIf the category does not exist, a warning is logged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from local storage.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                List of all categories, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories sorted by the number of expenses assigned to each.\nIf two categories have the same count, they are sorted alphabetically by name.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                Sorted list of categories with expense counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment\nwith localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Updates an existing category in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial category fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllCategories\n                        \n                    \n                \n            \n            \n                \nupdateAllCategories(categories: Category[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Replaces all categories in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                            Category[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of categories to store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ChatMessage interface\nRepresents a single message exchanged between the user and the model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text content of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role of the message sender (user or model).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appName\n                            \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                            \n                                    Private\n                                    Readonly\n                                liveAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                localAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                            \n                                getAppName\n                            \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/config/config.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL depending on the environment.\n\n\"local\" → http://localhost:8000\n\"live\" → https://exwiseapi.onrender.com\nAny other value → Determines based on current window location.\nIf the URL contains \"localhost\", returns http://localhost:8000.\nIf the URL contains \"exwise\", returns https://exwiseapi.onrender.com.\nDefaults to http://localhost:8000 if none of the above conditions are met.\n\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Returns the application name defined in environment settings.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The application name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:24\n                        \n                    \n\n            \n                \n                    The application name, retrieved from environment settings.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:19\n                        \n                    \n\n            \n                \n                    The current environment setting taken from environment configuration.\nPossible values:\n\n\"local\" → Uses localhost API endpoint.\n\"live\" → Uses production API endpoint.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        liveAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.liveAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:36\n                        \n                    \n\n            \n                \n                    The production (live) API base URL.\nExample: https://exwiseapi.onrender.com\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        localAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.localAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:43\n                        \n                    \n\n            \n                \n                    The local development API base URL.\nExample: http://localhost:8000\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:29\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting taken from environment configuration.\n   * \n   * Possible values:\n   * - `\"local\"` → Uses localhost API endpoint.\n   * - `\"live\"` → Uses production API endpoint.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n\n  /** \n   * The application name, retrieved from environment settings. \n   */\n  private readonly appName: string = environment.appName;\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  private readonly liveAPIUrl: string = environment.liveAPIUrl;\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  private readonly localAPIUrl: string = environment.localAPIUrl;\n\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL depending on the environment.\n   *\n   * - `\"local\"` → `http://localhost:8000`\n   * - `\"live\"` → `https://exwiseapi.onrender.com`\n   * - Any other value → Determines based on current window location.\n   * - If the URL contains `\"localhost\"`, returns `http://localhost:8000`.\n   * - If the URL contains `\"exwise\"`, returns `https://exwiseapi.onrender.com`.\n   * - Defaults to `http://localhost:8000` if none of the above conditions are met.\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return this.localAPIUrl;\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return this.liveAPIUrl;\n    }\n    else {\n      if (window.location.href.includes(\"localhost\")) {\n        return this.localAPIUrl;\n      }\n      else if (window.location.href.includes(\"exwise\")) {\n        return this.liveAPIUrl;\n      }\n      return this.localAPIUrl;\n    }\n  }\n\n  /**\n   * Returns the application name defined in environment settings.\n   *\n   * @returns {string} The application name.\n   */\n  getAppName(): string {\n    return this.appName;\n  }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadComponentComponent.html":{"url":"components/DownloadComponentComponent.html","title":"component - DownloadComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DownloadComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/download-component/download-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for exporting user expenses\ninto JSON, PDF, or Excel formats within a given date range.\nThis component provides a modal dialog with a form\nto select a date range and file type, validates the input,\nand triggers the download of filtered expense data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-component\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            ReactiveFormsModule\n                                FormModelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./download-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                downloadDataForm\n                            \n                            \n                                showDownloadDataModal\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDownloadDataModal\n                            \n                            \n                                confirmAndDownload\n                            \n                            \n                                downloadData\n                            \n                            \n                                    Private\n                                exportToExcel\n                            \n                            \n                                    Private\n                                exportToPDF\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDownloadDataModal\n                            \n                            \n                                    Private\n                                triggerDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, fb: FormBuilder, toastService: ToastService, categoryService: CategoryService, userService: UserService, budgetService: BudgetService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadComponentComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch and filter expenses.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder to build the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch category data.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch user data.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch budget data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDownloadDataModal\n                        \n                    \n                \n            \n            \n                \ncloseDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Closes the download modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmAndDownload\n                        \n                    \n                \n            \n            \n                \nconfirmAndDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Validates date range and triggers the appropriate\nexport function (JSON, PDF, Excel) based on user selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadData\n                        \n                    \n                \n            \n            \n                \ndownloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Validates the form before triggering data download.\nMarks all controls as touched if the form is invalid.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToExcel(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:302\n                        \n                    \n\n\n            \n                \n                        Exports expense data to an Excel file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToPDF\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToPDF(data: any[], fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Exports expense data to a formatted PDF file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date of the report.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date of the report.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the form\nwith default controls and validators.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDownloadDataModal\n                        \n                    \n                \n            \n            \n                \nopenDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Opens the modal and resets the download form\nto its initial state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        triggerDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerDownload(content: string, mimeType: string, extension: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Creates a file blob and triggers the browser to download it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File content to download.\n\n                                            \n                                        \n                                        \n                                                mimeType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    MIME type of the file.\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File extension (json, pdf, xlsx).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadDataForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:56\n                        \n                    \n\n            \n                \n                    Reactive form instance for selecting date range and file type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDownloadDataModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:61\n                        \n                    \n\n            \n                \n                    Controls the visibility of the download data modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                        \n                    \n\n            \n                \n                    Current date in yyyy-MM-dd format,\nused for validation to prevent future dates.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n\n    \n        From Date\n        \n        \n            From Date is required\n        \n\n        To Date\n        \n\n        \n            To Date is required\n        \n\n        File Type\n        \n            JSON\n            PDF\n            EXCEL\n        \n\n        \n            Cancel\n            Download\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                From Date                            From Date is required                To Date                            To Date is required                File Type                    JSON            PDF            EXCEL                            Cancel            Download            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an expense entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense amount\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category color (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category icon (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category ID associated with this expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category name (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the expense in YYYY-MM-DD format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this is extra spending\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional location of the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional note about the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Payment mode used for the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the expense in HH:MM:SS format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal component for displaying and editing expense details.\nFeatures:\n\nShows details of a selected expense.\nSupports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\nEmits events to parent components for closing, deleting, or editing expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseDetailsModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder service for building reactive forms.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Currency symbol to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:30\n                            \n                        \n                \n                    \n                        Whether the edit mode is currently open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:24\n                            \n                        \n                \n                    \n                        The currently selected expense object\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when the modal should be closed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:36\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense should be deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:39\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense has been edited\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Emits the closeModal event to notify parent to close the modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the reactive edit form with default or selected expense values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Updates the form when a new category is selected from the dropdown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Emits the delete event with the selected expense ID\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Submits the edited expense if the form is valid.\nEmits the edit event with the updated expense data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Toggles the edit mode of the modal.\nInitializes the form with current expense values if edit mode is opened.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    Form group for editing the expense\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:42\n                        \n                    \n\n            \n                \n                    Name of the currently selected category for editing\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n/**\n * Modal component for displaying and editing expense details.\n *\n * Features:\n * - Shows details of a selected expense.\n * - Supports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\n * - Emits events to parent components for closing, deleting, or editing expenses.\n */\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n\n  /** The currently selected expense object */\n  @Input() selectedExpense: any;\n\n  /** Currency symbol to display in the modal */\n  @Input() currency: string | null = '';\n\n  /** Whether the edit mode is currently open */\n  @Input() isEditOpen: boolean = false;\n\n  /** Event emitted when the modal should be closed */\n  @Output() closeModal = new EventEmitter();\n\n  /** Event emitted when the selected expense should be deleted */\n  @Output() delete = new EventEmitter();\n\n  /** Event emitted when the selected expense has been edited */\n  @Output() edit = new EventEmitter();\n\n  /** Name of the currently selected category for editing */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Form group for editing the expense */\n  editForm!: FormGroup;\n\n  /**\n   * Creates an instance of ExpenseDetailsModalComponent.\n   *\n   * @param fb FormBuilder service for building reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  /** Angular lifecycle hook called on component initialization */\n  ngOnInit(): void {}\n\n  /**\n   * Initializes the reactive edit form with default or selected expense values.\n   */\n  initForm(): void {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  /**\n   * Updates the form when a new category is selected from the dropdown.\n   *\n   * @param category The selected category object.\n   */\n  onCategorySelected(category: any): void {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  /**\n   * Toggles the edit mode of the modal.\n   * Initializes the form with current expense values if edit mode is opened.\n   */\n  toggleEdit(): void {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  /**\n   * Submits the edited expense if the form is valid.\n   * Emits the `edit` event with the updated expense data.\n   */\n  submitEdit(): void {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  /** Emits the `closeModal` event to notify parent to close the modal */\n  close(): void {\n    this.closeModal.emit();\n  }\n\n  /** Emits the `delete` event with the selected expense ID */\n  onDelete(): void {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        ExpenseListComponent\nDisplays a list of expenses with formatted dates and emits\nevents when an expense is selected. Also provides a utility\nto darken colors for styling purposes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseListComponent.\nInitializes the currency to an empty string.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:28\n                            \n                        \n                \n                    \n                        The currency symbol or code to display with expense amounts.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                            \n                        \n                \n                    \n                        The list of expense objects to display.\nEach expense should contain at least a date field.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when an expense is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Darkens a given HEX color by a percentage.\nConverts the color to RGB and decreases brightness.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HEX color string (e.g., #FF0000).\n\n                                            \n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The percentage (0–1) to darken the color.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The darkened color as an RGB string, or the original color on error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Formats the date of an expense into a human-readable string.\nExample: Mon 1st Mar 2025\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object containing a date field.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string with day, suffix, month, and year.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an expense.\nEmits the selected expense via the expenseSelected output.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object that was selected.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * ExpenseListComponent\n *\n * Displays a list of expenses with formatted dates and emits\n * events when an expense is selected. Also provides a utility\n * to darken colors for styling purposes.\n */\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\nexport class ExpenseListComponent {\n  /**\n   * The list of expense objects to display.\n   * Each expense should contain at least a `date` field.\n   */\n  @Input() expenses: any[] = [];\n\n  /**\n   * The currency symbol or code to display with expense amounts.\n   */\n  @Input() currency: string | null;\n\n  /**\n   * Event emitted when an expense is selected.\n   */\n  @Output() expenseSelected = new EventEmitter();\n\n  /**\n   * Creates an instance of ExpenseListComponent.\n   * Initializes the currency to an empty string.\n   */\n  constructor() {\n    this.currency = '';\n  }\n\n  /**\n   * Handles the selection of an expense.\n   * Emits the selected expense via the `expenseSelected` output.\n   *\n   * @param expense The expense object that was selected.\n   */\n  onSelect(expense: any): void {\n    this.expenseSelected.emit(expense);\n  }\n\n  /**\n   * Formats the date of an expense into a human-readable string.\n   * Example: `Mon 1st Mar 2025`\n   *\n   * @param exp The expense object containing a `date` field.\n   * @returns A formatted date string with day, suffix, month, and year.\n   */\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const months = [\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n\n    const dayName = days[date.getDay()];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n\n    const suffix = (d: number): string => {\n      if (d > 3 && d > 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing expenses stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve expenses.\nAutomatically attaches category metadata to each expense.\nSupports searching expenses by date range.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Adds a new expense to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Expense data excluding expense_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Deletes an expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage with category metadata attached.\n\n\n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of formatted {@link Expense} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Retrieves a single expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                The expense object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Searches expenses within a date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of expenses within the specified date range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Updates an existing expense by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial data to update the expense with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer component that displays application information such as version.\nFeatures:\n\nRetrieves the app version from ConfigService.\nDisplays static footer content alongside dynamic version info.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of FooterComponent.\nRetrieves the current app version from ConfigService and\nstores it in appVersion for display in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing configuration and version info.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the current application version retrieved from ConfigService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Footer component that displays application information such as version.\n *\n * Features:\n * - Retrieves the app version from {@link ConfigService}.\n * - Displays static footer content alongside dynamic version info.\n */\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n  /**\n   * Stores the current application version retrieved from {@link ConfigService}.\n   */\n  appVersion: string = '';\n\n  /**\n   * Creates an instance of FooterComponent.\n   *\n   * Retrieves the current app version from {@link ConfigService} and\n   * stores it in {@link appVersion} for display in the template.\n   *\n   * @param configService Service providing configuration and version info.\n   */\n  constructor(private configService: ConfigService) {\n    this.appVersion = this.configService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormModelComponent.html":{"url":"components/FormModelComponent.html","title":"component - FormModelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FormModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/form-model/form-model.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable modal component for forms.\nThis component displays a modal with a customizable label\nand provides an output event to notify when the modal is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-model\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-model.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-model.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelAlignment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:23\n                            \n                        \n                \n                    \n                        The label text displayed in the form modal.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelAlignment\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"center\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:29\n                            \n                        \n                \n                    \n                        Alignment of the label text: 'left', 'center', or 'right'.\nDefault is 'left'.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:37\n                            \n                        \n                \n                    \n                        Event emitted when the modal is closed.\nThe parent component can listen to this event\nto perform actions such as hiding the modal.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModel\n                        \n                    \n                \n            \n            \n                \ncloseModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/form-model/form-model.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Closes the modal and emits the close event.\nThis method is typically called when the user\nclicks a close button or dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * A reusable modal component for forms.\n * \n * This component displays a modal with a customizable label\n * and provides an output event to notify when the modal is closed.\n */\n@Component({\n  selector: 'app-form-model',\n  imports: [CommonModule],\n  templateUrl: './form-model.component.html',\n  styleUrl: './form-model.component.css'\n})\nexport class FormModelComponent {\n\n  /**\n   * The label text displayed in the form modal.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label: string = '';\n\n  /** Alignment of the label text: 'left', 'center', or 'right'.\n   * \n   * Default is 'left'.\n   */\n  @Input() labelAlignment: 'left' | 'center' | 'right' = 'left';\n\n  /**\n   * Event emitted when the modal is closed.\n   * \n   * The parent component can listen to this event\n   * to perform actions such as hiding the modal.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Closes the modal and emits the `close` event.\n   * \n   * This method is typically called when the user\n   * clicks a close button or dismisses the modal.\n   */\n  closeModel(): void {\n    this.close.emit();\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ label }}\n            \n        \n\n        \n        \n            &times;\n        \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ label }}                                                ×                    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GeminiApiService\nThis service is responsible for communicating with the\nGoogle Gemini API to analyze the user's expense data.\nIt fetches the last 30 days of expenses, generates prompts,\nand retrieves AI-generated insights for the user.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of GeminiApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API requests.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to show/hide global loading indicators.\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch expense data from local storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Generates a structured AI prompt for expense analysis.\nIncludes instructions for the model and the last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s input or question.\n\n                                            \n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of expense objects from the last 30 days.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string prompt ready for Gemini API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Fetches the user's expenses from the last 30 days.\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n\n                        \n                            Returns :     Pick[]\n\n                        \n                            \n                                An array of expense objects with selected fields:\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Sends a prompt to the Gemini API and returns the generated response.\nEnhances the prompt with the user's last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s query or message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A string response from Gemini with analysis or insights.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                        \n                    \n\n            \n                \n                    API URL for the Gemini model including the environment API key.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n/**\n * GeminiApiService\n *\n * This service is responsible for communicating with the\n * Google Gemini API to analyze the user's expense data.\n * It fetches the last 30 days of expenses, generates prompts,\n * and retrieves AI-generated insights for the user.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  /**\n   * API URL for the Gemini model including the environment API key.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of GeminiApiService.\n   *\n   * @param http Angular HttpClient for API requests.\n   * @param globalLoaderService Service to show/hide global loading indicators.\n   * @param expenseService Service to fetch expense data from local storage.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService,\n    private expenseService: ExpenseService\n  ) {}\n\n  /**\n   * Sends a prompt to the Gemini API and returns the generated response.\n   * Enhances the prompt with the user's last 30 days of expenses.\n   *\n   * @param prompt The user’s query or message.\n   * @returns A string response from Gemini with analysis or insights.\n   */\n  async getResponse(prompt: string): Promise {\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  /**\n   * Fetches the user's expenses from the last 30 days.\n   *\n   * @returns An array of expense objects with selected fields:\n   * amount, note, location, date, category_name, payment_mode, isExtraSpending.\n   */\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  /**\n   * Generates a structured AI prompt for expense analysis.\n   * Includes instructions for the model and the last 30 days of expenses.\n   *\n   * @param userQuery The user’s input or question.\n   * @param last15DaysExpenses Array of expense objects from the last 30 days.\n   * @returns A formatted string prompt ready for Gemini API.\n   */\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global loader component to display a full-screen loading indicator.\nFeatures:\n\nShows a loading message with optional custom text.\nCan be controlled globally via GlobalLoaderService.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of GlobalLoaderComponent.\nRegisters this component with the GlobalLoaderService\nto allow global show/hide control.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing the global loader state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional custom message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Loading...'\n                                            \n\n                                            \n                                                    Optional message to display; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates whether the loader is currently visible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                        \n                    \n\n            \n                \n                    Text message displayed on the loader.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Global loader component to display a full-screen loading indicator.\n *\n * Features:\n * - Shows a loading message with optional custom text.\n * - Can be controlled globally via {@link GlobalLoaderService}.\n */\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n\n  /**\n   * Indicates whether the loader is currently visible.\n   */\n  isVisible = false;\n\n  /**\n   * Text message displayed on the loader.\n   */\n  message = '';\n\n  /**\n   * Creates an instance of GlobalLoaderComponent.\n   *\n   * Registers this component with the {@link GlobalLoaderService}\n   * to allow global show/hide control.\n   *\n   * @param globalLoaderService Service for managing the global loader state.\n   */\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  /**\n   * Shows the global loader with an optional custom message.\n   *\n   * @param text Optional message to display; defaults to \"Loading...\".\n   */\n  show(text: string = 'Loading...'): void {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.isVisible = false;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to control the global loading indicator component.\nFeatures:\n\nAllows showing and hiding a global loader with optional custom message.\nConnects with GlobalLoaderComponent to display the loader UI.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Registers the global loader component instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The GlobalLoaderComponent instance to control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                            \n                                                    Optional loading message; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:17\n                        \n                    \n\n            \n                \n                    Reference to the registered global loader component\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n/**\n * Service to control the global loading indicator component.\n *\n * Features:\n * - Allows showing and hiding a global loader with optional custom message.\n * - Connects with {@link GlobalLoaderComponent} to display the loader UI.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  /** Reference to the registered global loader component */\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  /**\n   * Registers the global loader component instance.\n   *\n   * @param component The {@link GlobalLoaderComponent} instance to control.\n   */\n  register(component: GlobalLoaderComponent): void {\n    this.globalLoaderComponent = component;\n  }\n  \n  /**\n   * Shows the global loader with an optional message.\n   *\n   * @param text Optional loading message; defaults to \"Loading...\".\n   */\n  show(text: string = \"Loading...\"): void {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.globalLoaderComponent?.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hamburger menu component for mobile or compact navigation.\nFeatures:\n\nToggles visibility of the menu.\nCloses menu when clicking outside of it.\nShows/hides AI button depending on the current section.\nIntegrates with SectionService to navigate between sections.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of HamburgerMenuComponent.\nSubscribes to SectionService.currentSection$ to manage the\nvisibility of the AI button based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the selected section and closes the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default anchor behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Toggles the hamburger menu open/closed state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Tracks whether the hamburger menu is currently open.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:26\n                        \n                    \n\n            \n                \n                    Determines whether the AI button should be displayed.\nHidden when the current section is 'ai'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Hamburger menu component for mobile or compact navigation.\n *\n * Features:\n * - Toggles visibility of the menu.\n * - Closes menu when clicking outside of it.\n * - Shows/hides AI button depending on the current section.\n * - Integrates with {@link SectionService} to navigate between sections.\n */\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  /**\n   * Determines whether the AI button should be displayed.\n   * Hidden when the current section is 'ai'.\n   */\n  showAIButton = false;\n\n  /**\n   * Tracks whether the hamburger menu is currently open.\n   */\n  isMenuOpen = false;\n\n  /**\n   * Creates an instance of HamburgerMenuComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to manage the\n   * visibility of the AI button based on the current section.\n   *\n   * @param sectionService Service for managing and broadcasting the active section.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n\n  /**\n   * Toggles the hamburger menu open/closed state.\n   */\n  toggleMenu(): void {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  /**\n   * Listens for clicks on the document to close the menu\n   * if the click occurs outside the hamburger menu container.\n   *\n   * @param event The mouse click event.\n   */\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent): void {\n    const clickedInside = event.target instanceof HTMLElement \n      && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  /**\n   * Navigates to the selected section and closes the menu.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default anchor behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstallAppPopupComponentComponent.html":{"url":"components/InstallAppPopupComponentComponent.html","title":"component - InstallAppPopupComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  InstallAppPopupComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that displays a popup prompting the user to install the app as a PWA.\nThis component shows a modal with the app name and an install button when\nshowInstallButton is set to true. It uses the ConfigService to retrieve\nthe application name and emits an event when the user clicks install.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-install-app-popup-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./install-app-popup-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./install-app-popup-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissInstall\n                            \n                            \n                                onClickinstallApp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showInstallButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                installApp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of the install popup component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch configuration values such as the app name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showInstallButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:26\n                            \n                        \n                \n                    \n                        Controls the visibility of the install popup.\nWhen set to true, the popup will be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        installApp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when the user clicks on the \"Install\" button.\nThe parent component can listen to this event to trigger\nthe actual PWA installation flow.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissInstall\n                        \n                    \n                \n            \n            \n                \ndismissInstall()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Dismisses the install popup.\nSets showInstallButton to false, hiding the popup from view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickinstallApp\n                        \n                    \n                \n            \n            \n                \nonClickinstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Handles the click event of the \"Install\" button.\nEmits the installApp event to notify the parent component\nthat the installation process should be triggered.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:32\n                        \n                    \n\n            \n                \n                    The application name fetched from ConfigService.\nDisplayed inside the popup UI.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Component that displays a popup prompting the user to install the app as a PWA.\n * \n * This component shows a modal with the app name and an install button when \n * `showInstallButton` is set to true. It uses the `ConfigService` to retrieve \n * the application name and emits an event when the user clicks install.\n */\n@Component({\n  selector: 'app-install-app-popup-component',\n  imports: [CommonModule],\n  templateUrl: './install-app-popup-component.component.html',\n  styleUrl: './install-app-popup-component.component.css',\n  standalone: true,\n})\nexport class InstallAppPopupComponentComponent {\n\n  /**\n   * Controls the visibility of the install popup.\n   * \n   * When set to true, the popup will be displayed.\n   */\n  @Input() showInstallButton: boolean = false;\n\n  /**\n   * The application name fetched from `ConfigService`.\n   * Displayed inside the popup UI.\n   */\n  appName: string;\n\n  /**\n   * Event emitted when the user clicks on the \"Install\" button.\n   * \n   * The parent component can listen to this event to trigger\n   * the actual PWA installation flow.\n   */\n  @Output() installApp = new EventEmitter();\n\n  /**\n   * Creates an instance of the install popup component.\n   *\n   * @param configService Service to fetch configuration values such as the app name.\n   */\n  constructor(private configService: ConfigService) {\n    this.appName = this.configService.getAppName();\n  }\n\n  /**\n   * Handles the click event of the \"Install\" button.\n   * \n   * Emits the `installApp` event to notify the parent component\n   * that the installation process should be triggered.\n   */\n  onClickinstallApp() {\n    this.installApp.emit();\n  }\n\n  /**\n   * Dismisses the install popup.\n   * \n   * Sets `showInstallButton` to false, hiding the popup from view.\n   */\n  dismissInstall() {\n    this.showInstallButton = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ✕\n\n    \n    Install {{ appName }}\n    \n    \n      Get a seamless experience and offline access by installing this app.\n    \n\n    \n    \n      \n        Install\n      \n      \n        Dismiss\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ✕        Install {{ appName }}              Get a seamless experience and offline access by installing this app.                          Install                    Dismiss            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstallAppPopupComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MusicComponent.html":{"url":"components/MusicComponent.html","title":"component - MusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to search, play, and suggest songs using Saavn API and AI suggestions.\nFeatures:\n\nSearch for songs by query.\nPlay, pause, and track song progress.\nAutomatically suggest next song based on AI suggestion.\nHandles time formatting and seeking within a song.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                FormModelComponent\n                \n            \n\n            \n                styleUrls\n                ./music.component.css\n            \n\n\n\n            \n                templateUrl\n                ./music.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                            \n                                audio\n                            \n                            \n                                currentSong\n                            \n                            \n                                duration\n                            \n                            \n                                interval\n                            \n                            \n                                isBrowser\n                            \n                            \n                                isCurrentSongLiked\n                            \n                            \n                                progress\n                            \n                            \n                                query\n                            \n                            \n                                showPlayerModal\n                            \n                            \n                                songs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePlayerModal\n                            \n                            \n                                    Async\n                                downloadSong\n                            \n                            \n                                formatTime\n                            \n                            \n                                getSongUrl\n                            \n                            \n                                isLiked\n                            \n                            \n                                nextSong\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSeek\n                            \n                            \n                                    Async\n                                onSongFinished\n                            \n                            \n                                openPlayerModal\n                            \n                            \n                                playSong\n                            \n                            \n                                restartSong\n                            \n                            \n                                searchSong\n                            \n                            \n                                toggleLike\n                            \n                            \n                                transformSongData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(saavnService: SaavnService, configService: ConfigService, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/music/music.component.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of MusicComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        saavnService\n                                                  \n                                                        \n                                                                        SaavnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to interact with Saavn API.\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve application configuration.\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to detect browser/server environment.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePlayerModal\n                        \n                    \n                \n            \n            \n                \nclosePlayerModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:272\n                        \n                    \n\n\n            \n                \n                        Close the player modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadSong(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Downloads a song\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Formats seconds into MM:SS string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of seconds\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted time string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongUrl\n                        \n                    \n                \n            \n            \n                \ngetSongUrl(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Returns the highest quality 320kbps download URL of a song.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                URL string or empty string if not available\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n            \n                \nisLiked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:237\n                        \n                    \n\n\n            \n                \n                        Checks if a song is liked\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextSong\n                        \n                    \n                \n            \n            \n                \nnextSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Play next song when Next is pressed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:218\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component destruction\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Seeks the audio playback to a specific time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input change event from the seek bar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSongFinished\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSongFinished()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Handles the end of a song. Suggests the next song using AI and automatically plays it.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPlayerModal\n                        \n                    \n                \n            \n            \n                \nopenPlayerModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:267\n                        \n                    \n\n\n            \n                \n                        Open the player modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(url: string, song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Plays or pauses a song. If a new song is selected, plays it from the beginning.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL of the song to play\n\n                                            \n                                        \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Song object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restartSong\n                        \n                    \n                \n            \n            \n                \nrestartSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:277\n                        \n                    \n\n\n            \n                \n                        Restart current song when Previous is pressed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSong\n                        \n                    \n                \n            \n            \n                \nsearchSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Searches for songs based on the current query.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLike\n                        \n                    \n                \n            \n            \n                \ntoggleLike()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Toggles the like status of a song\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformSongData\n                        \n                    \n                \n            \n            \n                \ntransformSongData(data: any, isLiked: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:199\n                        \n                    \n\n\n            \n                \n                        Transforms a song object to the expected format for AI suggestion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Original song object\n\n                                            \n                                        \n                                        \n                                                isLiked\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Transformed object with relevant song metadata\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:49\n                        \n                    \n\n            \n                \n                    Current application version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLAudioElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML audio element for playing songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:37\n                        \n                    \n\n            \n                \n                    Currently playing song object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:43\n                        \n                    \n\n            \n                \n                    Total duration of the current song in seconds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:46\n                        \n                    \n\n            \n                \n                    Interval ID for updating song progress\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:52\n                        \n                    \n\n            \n                \n                    Flag to indicate if running in browser environment\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentSongLiked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:55\n                        \n                    \n\n            \n                \n                    Set to store URLs of liked songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:40\n                        \n                    \n\n            \n                \n                    Progress of the current song in seconds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:28\n                        \n                    \n\n            \n                \n                    Current search query for songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlayerModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:264\n                        \n                    \n\n            \n                \n                    Flag to show/hide the player modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:31\n                        \n                    \n\n            \n                \n                    List of songs retrieved from search results\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal, effect, OnDestroy, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SaavnService } from '../../service/saavan-api/saavan.service';\nimport { ConfigService } from '../../service/config/config.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { FormModelComponent } from '../../component/form-model/form-model.component';\n\n/**\n * Component to search, play, and suggest songs using Saavn API and AI suggestions.\n *\n * Features:\n * - Search for songs by query.\n * - Play, pause, and track song progress.\n * - Automatically suggest next song based on AI suggestion.\n * - Handles time formatting and seeking within a song.\n */\n@Component({\n  selector: 'app-music',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FormModelComponent],\n  templateUrl: './music.component.html',\n  styleUrls: ['./music.component.css']\n})\nexport class MusicComponent implements OnDestroy {\n\n  /** Current search query for songs */\n  query = '';\n\n  /** List of songs retrieved from search results */\n  songs = signal([]);\n\n  /** HTML audio element for playing songs */\n  audio: HTMLAudioElement | null = null;\n\n  /** Currently playing song object */\n  currentSong: any = null;\n\n  /** Progress of the current song in seconds */\n  progress = signal(0);\n\n  /** Total duration of the current song in seconds */\n  duration = signal(0);\n\n  /** Interval ID for updating song progress */\n  interval: any = null;\n\n  /** Current application version */\n  appVersion: string;\n\n  /** Flag to indicate if running in browser environment */\n  isBrowser: boolean;\n\n  /** Set to store URLs of liked songs */\n  isCurrentSongLiked: boolean = false;\n\n  /**\n   * Creates an instance of MusicComponent.\n   *\n   * @param saavnService Service to interact with Saavn API.\n   * @param configService Service to retrieve application configuration.\n   * @param platformId Angular platform ID to detect browser/server environment.\n   */\n  constructor(\n    private saavnService: SaavnService,\n    private configService: ConfigService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.appVersion = this.configService.getVersion();\n    this.isBrowser = isPlatformBrowser(this.platformId);\n  }\n\n  /**\n   * Searches for songs based on the current query.\n   */\n  searchSong(): void {\n    const q = this.query.trim();\n    if (q) {\n      this.saavnService.searchSongs(q).subscribe((res) => {\n        this.songs.set(res.data.results || []);\n      });\n    }\n  }\n\n  /**\n   * Returns the highest quality 320kbps download URL of a song.\n   *\n   * @param song Song object\n   * @returns URL string or empty string if not available\n   */\n  getSongUrl(song: any): string {\n    return song.downloadUrl?.find((d: any) => d.quality === '320kbps')?.url || '';\n  }\n\n  /**\n   * Plays or pauses a song. If a new song is selected, plays it from the beginning.\n   *\n   * @param url URL of the song to play\n   * @param song Song object\n   */\n  playSong(url: string, song: any): void {\n    if (!this.isBrowser) return;\n    if (!this.audio) this.audio = new Audio();\n\n    if (this.currentSong?.url === url) {\n      this.audio.paused ? this.audio.play() : this.audio.pause();\n    } else {\n      this.audio.src = url;\n      this.audio.play();\n      this.currentSong = { ...song, url };\n      this.duration.set(song.duration);\n    }\n\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.audio) this.progress.set(this.audio.currentTime);\n    }, 500);\n\n    this.audio.onended = () => this.onSongFinished();\n  }\n\n  /**\n   * Handles the end of a song. Suggests the next song using AI and automatically plays it.\n   */\n  async onSongFinished(): Promise {\n    if (!this.isBrowser) return;\n    try {\n      const transformedData = this.transformSongData(this.currentSong, this.isCurrentSongLiked);\n      const nextSong = await this.saavnService.suggestNextSong(transformedData);\n\n      if (!nextSong || typeof nextSong !== 'string' || nextSong.trim() === '') return;\n\n      let cleanedSong = nextSong.trim()\n        .replace(/^```json/, '').replace(/^```/, '')\n        .replace(/```$/, '').trim();\n\n      let songDetails: { songName: string; artistsName: string };\n      try {\n        songDetails = JSON.parse(cleanedSong);\n      } catch {\n        console.warn('Failed to parse AI response as JSON');\n        return;\n      }\n\n      const { songName, artistsName } = songDetails || {};\n      const mainArtist = artistsName ? artistsName.split(',')[0].trim() : '';\n      if (!songName || !mainArtist) return;\n\n      this.saavnService.searchSongs(`${songName} ${mainArtist}`).subscribe({\n        next: (res) => {\n          const results = res.data?.results || [];\n          if (results.length > 0) {\n            const firstSong = results[0];\n            const newUrl = this.getSongUrl(firstSong);\n            this.playSong(newUrl, firstSong);\n          }\n        },\n        error: (err) => console.error('Error during song search:', err)\n      });\n    } finally {\n      this.currentSong = null;\n      this.progress.set(0);\n      clearInterval(this.interval);\n      this.isCurrentSongLiked = false;\n    }\n  }\n\n  /**\n   * Formats seconds into MM:SS string for display.\n   *\n   * @param seconds Number of seconds\n   * @returns Formatted time string\n   */\n  formatTime(seconds: number): string {\n    const min = Math.floor(seconds / 60);\n    const sec = Math.floor(seconds % 60);\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  }\n\n  /**\n   * Seeks the audio playback to a specific time.\n   *\n   * @param event Input change event from the seek bar\n   */\n  onSeek(event: Event): void {\n    if (!this.isBrowser || !this.audio) return;\n    const target = event.target as HTMLInputElement;\n    const seekTime = Number(target.value);\n    this.audio.currentTime = seekTime;\n    this.progress.set(seekTime);\n  }\n\n  /**\n   * Transforms a song object to the expected format for AI suggestion.\n   *\n   * @param data Original song object\n   * @returns Transformed object with relevant song metadata\n   */\n  transformSongData(data: any, isLiked: boolean): any {\n    return {\n      name: data.name,\n      type: data.type,\n      year: data.year,\n      duration: data.duration,\n      label: data.label,\n      playCount: data.playCount,\n      language: data.language,\n      copyright: data.copyright,\n      album: { name: data.album?.name || '' },\n      artists: {\n        all: (data.artists?.primary || []).map((a: any) => ({ name: a.name }))\n      },\n      isLiked: isLiked\n    };\n  }\n\n  /** Angular lifecycle hook called on component destruction */\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.src = '';\n      this.audio = null;\n    }\n  }\n\n  /** Toggles the like status of a song */\n  toggleLike() {\n    if (this.isCurrentSongLiked) {\n      this.isCurrentSongLiked = false;\n    } else {\n      this.isCurrentSongLiked = true;\n    }\n  }\n\n  /** Checks if a song is liked */\n  isLiked(): boolean {\n    return this.isCurrentSongLiked;\n  }\n\n  /** Downloads a song */\n  async downloadSong(song: any) {\n    if (!song?.url) return;\n\n    try {\n      const res = await fetch(song.url);\n      if (!res.ok) throw new Error('Failed to fetch song');\n\n      const blob = await res.blob(); // Convert response to Blob\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `${song.name || 'song'}.mp3`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(link.href);\n\n    } catch (err) {\n      console.error('Download failed:', err);\n    }\n  }\n\n  /** Flag to show/hide the player modal */\n  showPlayerModal = false;\n\n  /** Open the player modal */\n  openPlayerModal() {\n    this.showPlayerModal = true;\n  }\n\n  /** Close the player modal */\n  closePlayerModal() {\n    this.showPlayerModal = false;\n  }\n\n  /** Restart current song when Previous is pressed */\n  restartSong() {\n    if (this.audio) {\n      this.audio.currentTime = 0;\n      if (this.audio.paused) {\n        this.audio.play();\n      }\n    }\n  }\n\n  /** Play next song when Next is pressed */\n  nextSong() {\n    this.onSongFinished();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Search\n    \n  \n\n  \n  \n    \n      \n\n      \n        \n      \n    \n\n    \n      {{ song.name }}\n      {{ song.artists.primary[0]?.name || 'Unknown Artist' }}\n    \n\n    {{ formatTime(song.duration) }}\n  \n\n\n\n\n\n\n  \n  \n\n  \n  \n    \n      \n        {{ currentSong.name }}\n        \n          {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n        \n      \n\n      \n        \n          {{ formatTime(progress()) }} / {{ formatTime(duration()) }}\n        \n\n        \n        \n          \n        \n\n        \n        \n          \n        \n\n      \n    \n\n    \n    \n  \n\n\n\n  © 2025 exwise. All rights reserved. v{{appVersion}}\n\n\n\n\n  \n\n    \n    \n\n    \n    \n      \n        {{ currentSong.name }}\n      \n      \n        {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n      \n    \n\n    \n    \n\n      \n      \n        \n      \n\n      \n      \n        \n        \n          {{ formatTime(progress()) }}\n          {{ formatTime(duration()) }}\n        \n      \n\n      \n      \n        \n      \n    \n\n    \n    \n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./music.component.css\n                \n                /* Optional: Style the bottom bar */\n.fixed {\n  z-index: 50;\n}\n\nimg {\n  object-fit: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search                                                      {{ song.name }}      {{ song.artists.primary[0]?.name || \\'Unknown Artist\\' }}        {{ formatTime(song.duration) }}                            {{ currentSong.name }}                  {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                      {{ formatTime(progress()) }} / {{ formatTime(duration()) }}                                                                                                  © 2025 exwise. All rights reserved. v{{appVersion}}                                {{ currentSong.name }}                    {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                                                                  {{ formatTime(progress()) }}          {{ formatTime(duration()) }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navbar component that displays the top navigation bar.\nFeatures:\n\nShows a back button when the current section is not 'home'.\nIntegrates with SectionService to track and update the current section.\nIncludes the HamburgerMenuComponent for mobile or compact navigation.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavbarComponent.\nSubscribes to SectionService.currentSection$ to determine\nwhether the back button should be visible based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage and broadcast the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles navigation link clicks by updating the current section\nand preventing default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Flag indicating whether the back button should be displayed.\nTrue when the current section is not 'home'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n/**\n * Navbar component that displays the top navigation bar.\n *\n * Features:\n * - Shows a back button when the current section is not 'home'.\n * - Integrates with {@link SectionService} to track and update the current section.\n * - Includes the {@link HamburgerMenuComponent} for mobile or compact navigation.\n */\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  /**\n   * Flag indicating whether the back button should be displayed.\n   * True when the current section is not 'home'.\n   */\n  showBackButton = false;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to determine\n   * whether the back button should be visible based on the current section.\n   *\n   * @param sectionService Service used to manage and broadcast the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  /**\n   * Handles navigation link clicks by updating the current section\n   * and preventing default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to render a pie/doughnut chart of expenses by category.\nSupports monthly, daily, and yearly views.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject required services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get category data\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get expense data\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get user preferences\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n                \n                    \n                        Current date to filter expenses\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:46\n                            \n                        \n                \n                    \n                        View type: 'month' | 'day' | 'year'\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the selected view type\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders daily expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders monthly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders yearly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook after view initialization.\nLoads chart data after canvas element is available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook for input changes.\nReloads chart if viewType or currentDate changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed inputs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook runs on component init.\nInitializes theme, categories, expenses, and category mapping.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Renders a Chart.js chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart ID\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart type ('doughnut', 'line', 'bar', etc.)\n\n                                            \n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:43\n                        \n                    \n\n            \n                \n                    Reference to the canvas element for Chart.js\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:28\n                        \n                    \n\n            \n                \n                    List of all categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Map of category name to its color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Map of category_id to category name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:34\n                        \n                    \n\n            \n                \n                    Chart instances keyed by chart ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:40\n                        \n                    \n\n            \n                \n                    User-selected currency\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:31\n                        \n                    \n\n            \n                \n                    List of all expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    Dark mode flag from user settings\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/** Chart.js instance */\ndeclare const Chart: any;\n\n/**\n * Component to render a pie/doughnut chart of expenses by category.\n * Supports monthly, daily, and yearly views.\n */\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /** Dark mode flag from user settings */\n  isDarkMode: boolean = false;\n\n  /** Map of category_id to category name */\n  categoryMap: any = {};\n\n  /** List of all categories */\n  categories: Category[] = [];\n\n  /** List of all expenses */\n  expenses: Expense[] = [];\n\n  /** Chart instances keyed by chart ID */\n  charts: { [key: string]: any } = {};\n\n  /** Map of category name to its color */\n  categoryColors: { [key: string]: string } = {};\n\n  /** User-selected currency */\n  currency: string | null;\n\n  /** Reference to the canvas element for Chart.js */\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n\n  /** View type: 'month' | 'day' | 'year' */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /** Current date to filter expenses */\n  @Input() currentDate!: Date;\n\n  /**\n   * Constructor to inject required services.\n   * @param categoryService Service to get category data\n   * @param expenseService Service to get expense data\n   * @param userService Service to get user preferences\n   */\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /**\n   * Lifecycle hook runs on component init.\n   * Initializes theme, categories, expenses, and category mapping.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  /**\n   * Lifecycle hook after view initialization.\n   * Loads chart data after canvas element is available.\n   */\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook for input changes.\n   * Reloads chart if viewType or currentDate changes.\n   * @param changes Object containing changed inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /** Loads chart data based on the selected view type */\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  /** Aggregates and renders monthly expense data */\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders daily expense data */\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders yearly expense data */\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /**\n   * Renders a Chart.js chart\n   * @param id Chart ID\n   * @param type Chart type ('doughnut', 'line', 'bar', etc.)\n   * @param config Chart configuration containing labels, data, colors, etc.\n   */\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\nimport { ToastService } from '../../toast/toast.service';\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   * @param toastService Displays notifications to the user\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService,\n    private toastService: ToastService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      // console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: (res: any) => {\n          console.log('User data posted successfully. Response:', res);\n          const api_response_app_version = res.app_version;\n          const app_current_version = this.userService.getValue('app_version');\n          if (api_response_app_version != app_current_version) {\n            this.userService.update('is_app_updated', false);\n            setTimeout(() => {\n              this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n            }, 500);\n          }\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SaavnService\nService for integrating with Saavn API (song search) and\nGoogle Gemini API (next song recommendation).\nIt manages search, AI-based suggestions, and conversation history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of SaavnService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API calls.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader service to show/hide loading UI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Returns the full conversation history between user and model.\n\n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                            \n                                An array of ChatMessage objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Searches for songs using the Saavn API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search term provided by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable containing the list of matching songs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Suggests the next song based on the current song metadata.\nUses Gemini API to infer mood and style, and returns the most suitable next track.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently playing song object with metadata (name, album, artists, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A JSON string with the suggested song name and artist.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                        \n                    \n\n            \n                \n                    Gemini API URL with authentication key from environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:39\n                        \n                    \n\n            \n                \n                    Base URL for Saavn song search API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:34\n                        \n                    \n\n            \n                \n                    Conversation history between user and AI model.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema interface for local storage items.\nDefines a generic structure for syncing data with default values.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:9\n                            \n                        \n                \n                    \n                        Key-value pairs representing item properties\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { ConfigService } from '../config/config.service';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\ninterface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Syncs categories, expenses, user, and budget data with predefined schemas.\n * - Provides helper methods to get and update local storage items.\n * - Ensures default values exist for missing properties.\n * - Integrates with {@link ConfigService} to retrieve app version for user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /**\n   * Creates an instance of StorageService.\n   *\n   * @param configService Service providing app configuration such as version.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Checks if the current environment has access to localStorage.\n   *\n   * @returns `true` if localStorage is available, `false` otherwise.\n   */\n  private static isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Syncs categories in localStorage with the default schema and predefined categories.\n   */\n  syncCategoriesWithSchema(): void {\n    const categorySchema: Schema = {\n      category_id: \"\",\n      name: \"\",\n      icon: \"\",\n      color: \"\",\n      is_active: \"\",\n      user_id: \"\"\n    };\n    return this.syncWithSchema(this.categoryKey, categorySchema);\n  }\n\n  /**\n   * Syncs expenses in localStorage with the default schema.\n   */\n  syncExpensesWithSchema(): void {\n    const expenseSchema: Schema = {\n      expense_id: \"\",\n      category_id: \"\",\n      amount: \"\",\n      date: \"\",\n      location: \"\",\n      note: \"\",\n      payment_mode: \"\",\n      time: \"\",\n      isExtraSpending: false\n    };\n    return this.syncWithSchema(this.expenseKey, expenseSchema);\n  }\n\n  /**\n   * Syncs user data in localStorage with the default schema.\n   */\n  syncUserWithSchema(): void {\n    const userSchema: Schema = {\n      id: \"\",\n      backup_frequency: \"\",\n      email: \"\",\n      is_active: \"\",\n      is_backup: \"\",\n      last_backup: \"\",\n      name: \"\",\n      notifications: \"\",\n      user_password: \"\",\n      theme_mode: \"dark\",\n      currency: \"₹\",\n      app_version: \"0\",\n      is_app_updated: true\n    };\n    return this.syncUser(this.userKey, userSchema);\n  }\n\n  /**\n   * Syncs budget data in localStorage with the default schema.\n   */\n  syncBudgetWithSchema(): void {\n    const budgetSchema: Schema = {\n      budget_id: \"\",\n      amount: 0,\n      fromDate: \"\",\n      toDate: \"\"\n    };\n    return this.syncWithSchema(this.budgetKey, budgetSchema);\n  }\n\n  /**\n   * Helper function to sync any localStorage data array with a given schema.\n   *\n   * @param storageKey The localStorage key to sync.\n   * @param defaultSchema The default schema to apply to missing properties.\n   */\n  private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    if (storageKey === this.categoryKey) {\n      const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n      const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n      savedData = [...filteredPastData, ...Categories];\n    }\n\n    const schemaKeys = Object.keys(defaultSchema);\n    const updatedData = savedData.map((item: Schema) => {\n      const synced: Schema = {};\n      schemaKeys.forEach((key: string) => {\n        synced[key] = key in item ? item[key] : defaultSchema[key];\n      });\n      return synced;\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(updatedData));\n  }\n\n  /**\n   * Syncs user data in localStorage with a schema and updates the app version.\n   *\n   * @param storageKey The localStorage key for the user.\n   * @param defaultSchema The default schema to apply.\n   */\n  private syncUser(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n    const schemaKeys = Object.keys(defaultSchema);\n    const syncedSettings: Schema = {};\n\n    schemaKeys.forEach((key: string) => {\n      syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n    });\n    syncedSettings['app_version'] = this.configService.getVersion();\n\n    localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n  }\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage and broadcast the current active section of the application.\nFeatures:\n\nMaintains the currently selected section using a BehaviorSubject.\nProvides an observable currentSection$ to subscribe to section changes.\nAllows updating the current section with setSection.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Updates the current active section.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new section identifier to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable stream of the current section.\nComponents can subscribe to reactively track section changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:21\n                        \n                    \n\n            \n                \n                    Internal BehaviorSubject holding the current section.\nInitialized with 'home'.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service to manage and broadcast the current active section of the application.\n *\n * Features:\n * - Maintains the currently selected section using a {@link BehaviorSubject}.\n * - Provides an observable {@link currentSection$} to subscribe to section changes.\n * - Allows updating the current section with {@link setSection}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n\n  /**\n   * Internal BehaviorSubject holding the current section.\n   * Initialized with 'home'.\n   */\n  private sectionSource = new BehaviorSubject('home');\n\n  /**\n   * Observable stream of the current section.\n   * Components can subscribe to reactively track section changes.\n   */\n  currentSection$ = this.sectionSource.asObservable();\n\n  /**\n   * Updates the current active section.\n   *\n   * @param section The new section identifier to set.\n   */\n  setSection(section: string): void {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/setting-item/setting-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable component to display a single setting item.\nThis component can be used inside settings screens or\npreferences pages to show a label or related content.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/settings-components/setting-item/setting-item.component.ts:22\n                            \n                        \n                \n                    \n                        The text label for the setting item.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * A reusable component to display a single setting item.\n * \n * This component can be used inside settings screens or\n * preferences pages to show a label or related content.\n */\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n\n  /**\n   * The text label for the setting item.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label!: string;\n\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidebar navigation component.\nThis component:\n\nDisplays sidebar links for navigating between different application sections.\nHighlights the currently active section.\nCommunicates with SectionService to update and listen to the current active section.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of SidebarComponent.\nSubscribes to SectionService.currentSection$ to keep track of\nthe currently selected section and update the UI accordingly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles sidebar link clicks by updating the current section\nand preventing the default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default navigation).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                        \n                    \n\n            \n                \n                    Holds the name of the currently active navigation path/section.\nUsed to apply active styling to the sidebar item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Sidebar navigation component.\n *\n * This component:\n * - Displays sidebar links for navigating between different application sections.\n * - Highlights the currently active section.\n * - Communicates with {@link SectionService} to update and listen to the current active section.\n */\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  /**\n   * Holds the name of the currently active navigation path/section.\n   * Used to apply active styling to the sidebar item.\n   */\n  activePath: string = '';\n\n  /**\n   * Creates an instance of SidebarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to keep track of\n   * the currently selected section and update the UI accordingly.\n   *\n   * @param sectionService Service for managing and broadcasting the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  /**\n   * Handles sidebar link clicks by updating the current section\n   * and preventing the default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default navigation).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing LocalStorage data in a structured and schema-compliant way.\nFeatures:\n\nSyncs categories, expenses, user, and budget data with predefined schemas.\nProvides helper methods to get and update local storage items.\nEnsures default values exist for missing properties.\nIntegrates with ConfigService to retrieve app version for user data.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                isBrowser\n                            \n                            \n                                syncBudgetWithSchema\n                            \n                            \n                                syncCategoriesWithSchema\n                            \n                            \n                                syncExpensesWithSchema\n                            \n                            \n                                    Private\n                                syncUser\n                            \n                            \n                                syncUserWithSchema\n                            \n                            \n                                    Private\n                                syncWithSchema\n                            \n                            \n                                updateBudgets\n                            \n                            \n                                updateCategories\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of StorageService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing app configuration such as version.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of budget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:185\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of category objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:212\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of expense objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:223\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for budgets\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for categories\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:220\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for expenses\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Retrieves user data from localStorage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                User object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the current environment has access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if localStorage is available, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncBudgetWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncBudgetWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Syncs budget data in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCategoriesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncCategoriesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Syncs categories in localStorage with the default schema and predefined categories.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncExpensesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncExpensesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Syncs expenses in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:162\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with a schema and updates the app version.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key for the user.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUserWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncUserWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with the default schema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Helper function to sync any localStorage data array with a given schema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key to sync.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply to missing properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBudgets\n                        \n                    \n                \n            \n            \n                \nupdateBudgets(budgets: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:242\n                        \n                    \n\n\n            \n                \n                        Updates the budgets in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategories\n                        \n                    \n                \n            \n            \n                \nupdateCategories(categories: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:233\n                        \n                    \n\n\n            \n                \n                        Updates the categories in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of categories to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Updates the user data in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:35\n                        \n                    \n\n            \n                \n                    LocalStorage key for budgets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:29\n                        \n                    \n\n            \n                \n                    LocalStorage key for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:32\n                        \n                    \n\n            \n                \n                    LocalStorage key for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:38\n                        \n                    \n\n            \n                \n                    LocalStorage key for user settings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { ConfigService } from '../config/config.service';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\ninterface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Syncs categories, expenses, user, and budget data with predefined schemas.\n * - Provides helper methods to get and update local storage items.\n * - Ensures default values exist for missing properties.\n * - Integrates with {@link ConfigService} to retrieve app version for user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /**\n   * Creates an instance of StorageService.\n   *\n   * @param configService Service providing app configuration such as version.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Checks if the current environment has access to localStorage.\n   *\n   * @returns `true` if localStorage is available, `false` otherwise.\n   */\n  private static isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Syncs categories in localStorage with the default schema and predefined categories.\n   */\n  syncCategoriesWithSchema(): void {\n    const categorySchema: Schema = {\n      category_id: \"\",\n      name: \"\",\n      icon: \"\",\n      color: \"\",\n      is_active: \"\",\n      user_id: \"\"\n    };\n    return this.syncWithSchema(this.categoryKey, categorySchema);\n  }\n\n  /**\n   * Syncs expenses in localStorage with the default schema.\n   */\n  syncExpensesWithSchema(): void {\n    const expenseSchema: Schema = {\n      expense_id: \"\",\n      category_id: \"\",\n      amount: \"\",\n      date: \"\",\n      location: \"\",\n      note: \"\",\n      payment_mode: \"\",\n      time: \"\",\n      isExtraSpending: false\n    };\n    return this.syncWithSchema(this.expenseKey, expenseSchema);\n  }\n\n  /**\n   * Syncs user data in localStorage with the default schema.\n   */\n  syncUserWithSchema(): void {\n    const userSchema: Schema = {\n      id: \"\",\n      backup_frequency: \"\",\n      email: \"\",\n      is_active: \"\",\n      is_backup: \"\",\n      last_backup: \"\",\n      name: \"\",\n      notifications: \"\",\n      user_password: \"\",\n      theme_mode: \"dark\",\n      currency: \"₹\",\n      app_version: \"0\",\n      is_app_updated: true\n    };\n    return this.syncUser(this.userKey, userSchema);\n  }\n\n  /**\n   * Syncs budget data in localStorage with the default schema.\n   */\n  syncBudgetWithSchema(): void {\n    const budgetSchema: Schema = {\n      budget_id: \"\",\n      amount: 0,\n      fromDate: \"\",\n      toDate: \"\"\n    };\n    return this.syncWithSchema(this.budgetKey, budgetSchema);\n  }\n\n  /**\n   * Helper function to sync any localStorage data array with a given schema.\n   *\n   * @param storageKey The localStorage key to sync.\n   * @param defaultSchema The default schema to apply to missing properties.\n   */\n  private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    if (storageKey === this.categoryKey) {\n      const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n      const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n      savedData = [...filteredPastData, ...Categories];\n    }\n\n    const schemaKeys = Object.keys(defaultSchema);\n    const updatedData = savedData.map((item: Schema) => {\n      const synced: Schema = {};\n      schemaKeys.forEach((key: string) => {\n        synced[key] = key in item ? item[key] : defaultSchema[key];\n      });\n      return synced;\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(updatedData));\n  }\n\n  /**\n   * Syncs user data in localStorage with a schema and updates the app version.\n   *\n   * @param storageKey The localStorage key for the user.\n   * @param defaultSchema The default schema to apply.\n   */\n  private syncUser(storageKey: string, defaultSchema: Schema): void {\n    if (!StorageService.isBrowser()) {\n      console.error('localStorage is not available in this environment.');\n      return;\n    }\n\n    const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n    const schemaKeys = Object.keys(defaultSchema);\n    const syncedSettings: Schema = {};\n\n    schemaKeys.forEach((key: string) => {\n      syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n    });\n    syncedSettings['app_version'] = this.configService.getVersion();\n\n    localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n  }\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        ToastComponent\nA reusable component responsible for rendering toast notifications.\nIt integrates with ToastService to display messages dynamically\nand handles auto-dismiss after a configurable duration.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of ToastComponent.\nso that it can be accessed globally.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to register this component instance\nso that it can be accessed globally.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component's view has been fully initialized.\nRegisters this component with the ToastService so it can be controlled externally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with a message, style, and duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text content of the toast\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning), defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before the toast disappears, defaults to 3000\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n * ToastComponent\n *\n * A reusable component responsible for rendering toast notifications.\n * It integrates with `ToastService` to display messages dynamically\n * and handles auto-dismiss after a configurable duration.\n */\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent implements AfterViewInit {\n\n  /**\n   * Creates an instance of ToastComponent.\n   * @param toastService Service used to register this component instance\n   * so that it can be accessed globally.\n   */\n  constructor(private toastService: ToastService) { }\n\n  /**\n   * Lifecycle hook that runs after component's view has been fully initialized.\n   * Registers this component with the `ToastService` so it can be controlled externally.\n   */\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n\n  /**\n   * Displays a toast notification with a message, style, and duration.\n   *\n   * @param message The text content of the toast\n   * @param type The type of toast (`success` | `error` | `info` | `warning`), defaults to `'success'`\n   * @param duration Duration in milliseconds before the toast disappears, defaults to `3000`\n   */\n  showToast(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      // Clear any existing toasts\n      toastContainer.innerHTML = '';\n\n      // Define style classes for each toast type\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      // Create toast element\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      // Add message and dismiss button\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      // Auto-remove toast after the given duration\n      setTimeout(() => {\n        toast.remove();\n      }, duration);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ToastService\nA service for displaying toast notifications in the application.\nIt requires registering a ToastComponent instance so it can delegate\nshowing messages to the UI component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Registers the toast component instance.\nMust be called once, typically from the root component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Instance of ToastComponent used to render notifications\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Displays a toast message.\nExample :        Defaults to `'success'`\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The message text to display\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning)Defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before auto-hide (default: 3000)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:19\n                        \n                    \n\n            \n                \n                    Reference to the toast component instance.\nThis is registered once during app initialization.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n/**\n * ToastService\n *\n * A service for displaying toast notifications in the application.\n * It requires registering a `ToastComponent` instance so it can delegate\n * showing messages to the UI component.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  /**\n   * Reference to the toast component instance.\n   * This is registered once during app initialization.\n   */\n  private toastComponent!: ToastComponent;\n\n  /**\n   * Registers the toast component instance.\n   * Must be called once, typically from the root component.\n   *\n   * @param toast Instance of `ToastComponent` used to render notifications\n   */\n  register(toast: ToastComponent): void {\n    this.toastComponent = toast;\n  }\n\n  /**\n   * Displays a toast message.\n   *\n   * @param message The message text to display\n   * @param type The type of toast (`success` | `error` | `info` | `warning`)  \n   *             Defaults to `'success'`\n   * @param duration Duration in milliseconds before auto-hide (default: `3000`)\n   */\n  show(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    this.toastComponent?.showToast(message, type, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user profile and application settings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_app_updated\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Application version associated with the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Frequency of backups (e.g., daily, weekly).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred currency code (e.g., USD, INR).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_app_updated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_app_updated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user’s app has been updated to the latest version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if backup is enabled for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last performed backup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's display name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification preferences (e.g., enabled/disabled).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred theme mode (e.g., light, dark).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password (hashed or plain depending on storage implementation).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/settings-components/download-component/download-component.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the structure of user data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            budgetData\n                                        \n                                \n                                \n                                        \n                                            categoryData\n                                        \n                                \n                                \n                                        \n                                            expenseData\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        budgetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budgetData:         Budget[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Budget[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryData:         Category[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expenseData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expenseData:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         User | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user data and preferences in local storage.\nProvides methods to read, update, and persist user settings.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getUserData\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for handling local storage operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user object from storage.\n\n\n                        \n                            Returns :     Record\n\n                        \n                            \n                                User data object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Retrieves full user data.\n\n\n                        \n                            Returns :         User | literal type\n\n                        \n                            \n                                The user object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:102\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a specific user property by key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The value if it exists, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Checks if the service is running in a browser environment\nwith access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Updates a single user property in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to update.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value to assign.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserData\n                        \n                    \n                \n            \n            \n                \nupdateUserData(user: User | literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Updates the entire user object in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new user object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/component/form-model/form-model.component.ts\n            \n            component\n            FormModelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                        src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n            \n            component\n            InstallAppPopupComponentComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            component\n            DownloadComponentComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            interface\n            UserData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                        src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            canvg : ^4.0.3\n        \n            chart.js : ^4.5.0\n        \n            express : ^4.18.2\n        \n            jspdf : ^3.0.2\n        \n            jspdf-autotable : ^5.0.2\n        \n            lucide-angular : ^0.543.0\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            xlsx : ^0.18.5\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).\n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data in pdf, json, excel formats)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage (though it works as PWA).\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:\n👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n            \n                \n                    Angular Universal Node.js app engine\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n            \n                \n                    Express server\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n            \n                \n                    Browser distribution folder\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n            \n                \n                    Server distribution folder\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Application configuration\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Bootstrap the Angular application with server-specific configuration\n\n                \n            \n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n            \n                \n                    Predefined categories for the application\n\n                \n            \n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Chart.js instance\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Merged application configuration for server-side rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n            \n                \n                    Server-specific application configuration\n\n                \n            \n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** \n   * Name of the application. \n   */\n  appName: 'ExpenseWise',\n\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyBkBmHCsVna6d8bPYjQQhbpdymn7_Nvm2w',\n\n  /**\n   * Current environment type.\n   * - 'local' for local development (uses localhost API endpoint)\n   * - 'live' for production (uses production API endpoint)\n   * - leave empty for automatic detection based on current window location\n   */\n  developmentEnvironment: '', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.9.21', // Current application version\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  liveAPIUrl: \"https://exwiseapi.onrender.com\",\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  localAPIUrl: \"http://localhost:8000\"\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: '', component: AppComponent }, // your main app content\n    { path: 'music', component: AppComponent }, // for music\n    { path: '**', redirectTo: '' }, // catch-all\n]\n                    \n                \n\n            \n                \n                    Application routes\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n            \n                \n                    Application routes for server-side rendering\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
