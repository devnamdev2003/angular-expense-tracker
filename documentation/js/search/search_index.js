var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.141,1,0.906]],["body/components/AddExpenseComponent.html",[0,0.246,1,1.306,2,0.897,3,0.101,4,0.101,5,0.754,6,0.949,7,0.622,8,0.622,9,0.076,10,6.503,11,5.832,12,2.355,13,0.414,14,4.932,15,0.945,16,2.153,17,2.35,18,4.382,19,1.665,20,5.772,21,3.151,22,4.101,23,2.093,24,2.517,25,0.571,26,1.631,27,1.307,28,1.246,29,1.18,30,1.633,31,0.628,32,1.018,33,3.494,34,1.576,35,1.306,36,1.984,37,4.932,38,1.018,39,4.101,40,0.127,41,0.412,42,4.932,43,4.932,44,4.932,45,4.932,46,4.932,47,4.932,48,3.823,49,4.932,50,4.932,51,0.488,52,5.488,53,5.488,54,2.185,55,3.545,56,5.488,57,5.488,58,5.488,59,4.101,60,4.101,61,0.801,62,2.355,63,4.382,64,3.035,65,3.37,66,0.94,67,4.101,68,2.506,69,2.093,70,0.84,71,0.017,72,0.277,73,0.327,74,0.763,75,3.494,76,0.689,77,2.087,78,2.741,79,0.725,80,1.174,81,2.906,82,2.724,83,0.86,84,4.101,85,0.734,86,4.547,87,4.101,88,2.724,89,2.906,90,3.545,91,3.487,92,0.823,93,2.724,94,1.633,95,1.885,96,1.984,97,3.545,98,2.724,99,1.984,100,1.18,101,2.687,102,4.382,103,2.754,104,2.724,105,2.906,106,2.592,107,2.214,108,4.101,109,2.724,110,3.545,111,2.214,112,2.724,113,2.906,114,0.897,115,1.902,116,2.754,117,4.101,118,0.59,119,2.724,120,5.488,121,6.885,122,5.488,123,4.101,124,2.724,125,2.826,126,1.561,127,4.101,128,2.35,129,2.82,130,1.421,131,2.724,132,1.367,133,1.224,134,0.937,135,1.03,136,2.724,137,4.254,138,0.965,139,2.724,140,2.724,141,2.522,142,4.254,143,2.724,144,2.662,145,2.724,146,1.984,147,1.107,148,1.266,149,2.724,150,3.596,151,2.962,152,2.724,153,0.32,154,1.785,155,1.561,156,0.141,157,1.93,158,1.39,159,1.664,160,2.724,161,1.93,162,2.355,163,0.834,164,1.785,165,0.089,166,0.154,167,0.776,168,0.72,169,2.724,170,2.724,171,1.785,172,2.724,173,2.386,174,4.101,175,4.101,176,2.724,177,1.009,178,1.93,179,4.382,180,2.724,181,2.724,182,2.157,183,2.093,184,4.744,185,2.724,186,2.724,187,2.093,188,4.932,189,2.355,190,3.179,191,2.355,192,1.079,193,1.785,194,3.545,195,1.93,196,2.724,197,2.112,198,1.131,199,2.724,200,4.101,201,2.724,202,2.724,203,2.724,204,2.724,205,2.724,206,2.724,207,2.724,208,1.192,209,2.724,210,2.724,211,2.724,212,1.561,213,1.471,214,1.136,215,1.876,216,2.724,217,2.112,218,2.724,219,4.932,220,2.112,221,2.724,222,1.794,223,4.101,224,2.724,225,2.724,226,4.932,227,2.724,228,2.724,229,2.724,230,2.724,231,4.101,232,4.932,233,4.101,234,2.724,235,2.724,236,2.724,237,2.724,238,4.932,239,4.101,240,2.724,241,2.724,242,2.724,243,3.179,244,4.101,245,4.101,246,4.679,247,2.214,248,1.428,249,3.545,250,3.179,251,3.888,252,3.888,253,2.35,254,3.545,255,1.984,256,2.214,257,0.649,258,0.936,259,0.705,260,1.421,261,0.705,262,0.705,263,0.649,264,0.705,265,0.649,266,1.062,267,0.676,268,0.705,269,0.649,270,0.705,271,0.705,272,0.622,273,0.458,274,1.062,275,0.649,276,0.596,277,0.705,278,0.649,279,0.705,280,0.649,281,0.705,282,0.649,283,0.705,284,0.622,285,0.705,286,0.622,287,0.596,288,0.705,289,0.649,290,0.705,291,0.649,292,0.705,293,0.705,294,0.649,295,0.705,296,0.649,297,0.705,298,0.649,299,0.676,300,0.458,301,0.705,302,0.676,303,1.277,304,0.649,305,0.705,306,0.649,307,0.676,308,0.705,309,0.649,310,0.705,311,0.649,312,0.823,313,0.705,314,0.649,315,0.649,316,0.676,317,0.705,318,0.676,319,0.705,320,0.649,321,0.705,322,0.547,323,0.571,324,0.622,325,0.705,326,0.705,327,0.008,328,0.008]],["title/components/AiComponent.html",[0,0.141,263,0.906]],["body/components/AiComponent.html",[0,0.255,1,0.962,2,1.189,3,0.15,4,0.15,5,0.999,7,0.922,8,0.922,9,0.113,13,0.364,19,0.962,25,0.847,26,1.681,27,1.348,28,0.711,29,0.985,30,2.163,31,0.832,32,1.349,34,1.961,35,0.962,38,1.349,40,0.189,41,0.546,51,0.647,61,0.958,66,0.824,68,3.319,70,0.619,71,0.017,72,0.257,73,0.287,74,0.561,79,0.718,80,0.962,85,0.431,99,2.628,100,0.648,106,2.612,118,0.336,130,1.407,134,0.793,135,0.872,138,1.241,147,1.467,153,0.372,156,0.209,158,2.062,163,1.237,165,0.131,166,0.229,167,0.682,168,0.793,177,0.999,192,1.032,252,3.849,257,0.962,258,1.727,259,1.046,260,1.699,261,1.046,262,1.046,263,1.563,264,1.046,265,0.962,266,1.407,267,1.003,268,1.046,269,0.962,270,1.046,271,1.046,272,0.922,273,0.679,274,1.407,275,0.962,276,0.884,277,1.046,278,0.962,279,1.046,280,0.962,281,1.046,282,0.962,283,1.046,284,0.922,285,1.046,286,0.922,287,0.884,288,1.046,289,0.962,290,1.046,291,0.962,292,1.046,293,1.046,294,0.962,295,1.046,296,0.962,297,1.046,298,0.962,299,1.003,300,0.679,301,1.046,302,1.003,303,1.589,304,0.962,305,1.046,306,0.962,307,1.003,308,1.046,309,0.962,310,1.046,311,0.962,312,1.091,313,1.046,314,0.962,315,0.962,316,1.003,317,1.046,318,1.003,319,1.046,320,0.962,321,1.046,322,0.811,323,0.847,324,0.922,325,1.046,326,1.046,327,0.011,328,0.011,329,3.493,330,4.368,331,5.433,332,3.113,333,4.623,334,3.6,335,2.067,336,5.433,337,5.675,338,4.697,339,5.675,340,6.565,341,3.543,342,7.054,343,3.75,344,5.307,345,5.433,346,2.266,347,5.433,348,6.139,349,6.139,350,3.517,351,7.054,352,4.04,353,4.651,354,7.054,355,6.565,356,5.433,357,3.319,358,6.139,359,4.212,360,2.163,361,5.433,362,3.56,363,4.04,364,5.433,365,5.433,366,2.377,367,5.433,368,6.565,369,1.927,370,4.697,371,4.04,372,2.067,373,5.433,374,2.062,375,3.132,376,1.291,377,4.697,378,4.04,379,3.132,380,3.493,381,4.04,382,4.04,383,4.04,384,4.04,385,2.468,386,3.493,387,6.139,388,2.315,389,4.04,390,5.433,391,4.04,392,4.04,393,4.04,394,3.56,395,5.433]],["title/components/AppComponent.html",[0,0.141,265,0.906]],["body/components/AppComponent.html",[0,0.248,1,0.734,2,0.984,3,0.167,4,0.115,5,0.827,6,1.074,7,0.704,8,0.704,9,0.086,13,0.39,19,0.734,25,0.646,26,1.648,27,1.336,28,0.542,29,0.851,30,1.79,31,0.949,32,1.116,34,1.695,35,0.734,36,2.175,38,1.116,40,0.144,41,0.452,51,0.535,54,2.321,61,0.851,65,3.493,66,0.912,68,1.884,70,0.812,71,0.017,72,0.26,73,0.273,74,0.737,79,0.937,80,1.388,85,0.712,92,0.598,94,1.79,95,2.066,96,2.175,100,0.495,114,1.275,118,0.538,126,1.767,130,1.164,134,0.774,135,0.851,138,1.248,147,1.214,148,1.305,153,0.371,154,2.021,156,0.232,163,0.944,164,2.021,165,0.1,166,0.175,167,0.839,168,0.999,171,2.946,177,0.827,192,0.892,198,0.593,248,1.074,257,0.734,258,1.026,259,0.798,260,1.509,261,0.798,262,0.798,263,0.734,264,0.798,265,1.54,266,1.164,267,0.766,268,0.798,269,0.734,270,0.798,271,0.798,272,0.704,273,0.518,274,1.164,275,0.734,276,0.675,277,0.798,278,0.734,279,0.798,280,0.734,281,0.798,282,0.734,283,0.798,284,0.704,285,0.798,286,1.331,287,1.356,288,0.798,289,0.734,290,0.798,291,0.734,292,0.798,293,0.798,294,0.734,295,0.798,296,1.388,297,1.373,298,1.263,299,0.766,300,0.518,301,0.798,302,0.766,303,1.373,304,0.734,305,0.798,306,0.734,307,0.766,308,0.798,309,0.734,310,0.798,311,0.734,312,0.903,313,0.798,314,0.734,315,0.734,316,0.766,317,0.798,318,0.766,319,0.798,320,0.734,321,0.798,322,0.619,323,0.646,324,0.704,325,0.798,326,0.798,327,0.009,328,0.009,334,2.294,357,2.747,360,2.321,369,0.905,376,1.436,380,2.666,396,2.666,397,1.275,398,2.698,399,2.946,400,2.175,401,3.476,402,2.175,403,3.485,404,3.341,405,4.52,406,3.346,407,3.551,408,3.185,409,4.947,410,2.326,411,3.887,412,5.305,413,5.305,414,4.496,415,5.305,416,5.305,417,5.305,418,4.586,419,4.113,420,2.824,421,5.83,422,5.04,423,5.83,424,4.496,425,3.185,426,4.496,427,2.666,428,4.183,429,2.975,430,4.851,431,4.733,432,5.04,433,1.675,434,4.496,435,5.594,436,1.71,437,3.485,438,1.93,439,3.04,440,4.496,441,3.485,442,3.887,443,2.946,444,2.175,445,3.887,446,2.328,447,2.946,448,1.79,449,2.185,450,3.372,451,3.084,452,4.131,453,4.496,454,5.305,455,4.113,456,4.586,457,2.707,458,3.04,459,5.305,460,4.586,461,3.084,462,2.747,463,1.875,464,4.496,465,3.82,466,5.83,467,3.485,468,3.084,469,3.185,470,5.775,471,4.947,472,2.438,473,3.084,474,2.066,475,2.998,476,1.606,477,2.427,478,3.084,479,2.946,480,2.747,481,4.496,482,3.887,483,3.485,484,2.576,485,4.496,486,4.496,487,3.084,488,3.084,489,4.52,490,2.121,491,4.496,492,3.562,493,3.084,494,2.175,495,2.747,496,2.946,497,3.084,498,2.666,499,2.666,500,2.666,501,2.666,502,2.427,503,2.666,504,3.485,505,3.084,506,3.084,507,3.084,508,1.767,509,2.021,510,1.884,511,3.084,512,2.391,513,1.122,514,1.074,515,1.286,516,2.391,517,2.666,518,2.666,519,3.084,520,3.084,521,2.427,522,3.084,523,2.391,524,1.884,525,4.496,526,2.391,527,1.349,528,3.084,529,3.084,530,3.084,531,2.021,532,4.52,533,2.021,534,3.084,535,3.084,536,3.084,537,1.492,538,3.084,539,2.666,540,1.767,541,1.173,542,2.666,543,2.185,544,3.084,545,2.946,546,5.305,547,3.887,548,3.084,549,3.084,550,2.391,551,3.084,552,3.084,553,3.084,554,3.084,555,4.496,556,3.887,557,3.084,558,3.084,559,2.021,560,2.666,561,4.496,562,2.185,563,2.185,564,2.391,565,3.084,566,3.084,567,3.185,568,3.084,569,2.946,570,3.084,571,0.944]],["title/interfaces/Budget.html",[572,0.529,573,1.748]],["body/interfaces/Budget.html",[3,0.161,4,0.161,9,0.121,13,0.29,15,0.913,28,1.001,31,0.663,40,0.203,41,0.572,51,0.516,61,0.632,71,0.017,73,0.316,76,0.728,77,1.648,79,0.752,83,0.908,85,0.607,92,0.761,111,2.339,115,1.9,118,0.65,129,3.024,133,1.787,141,1.991,148,0.797,153,0.294,156,0.224,165,0.185,166,0.246,167,0.903,168,0.831,177,1.349,192,0.957,253,3.867,300,1.068,327,0.012,328,0.012,366,2.953,376,2.156,397,0.948,410,2.213,436,1.648,438,1.576,446,1.898,448,2.266,462,2.647,463,2.65,472,1.991,474,1.991,476,1.413,477,2.339,513,2.455,514,2.554,515,3.059,524,2.647,572,0.883,573,3.676,574,1.648,575,3.359,576,1.898,577,4.594,578,5.489,579,3.265,580,3.265,581,2.213,582,4.927,583,4.92,584,4.92,585,1.982,586,3.072,587,5.835,588,4.423,589,3.072,590,0.678,591,2.096,592,2.211,593,5.196,594,1.576,595,2.753,596,2.483,597,2.839,598,3.359,599,1.982,600,1.17,601,3.477,602,2.647,603,3.07,604,1.807,605,2.096,606,2.616,607,1.725,608,2.266,609,2.096,610,1.807,611,2.096,612,1.445,613,2.483,614,3.391,615,3.359,616,2.339,617,3.746,618,4.92,619,3.746,620,2.483,621,2.647,622,3.642,623,2.647,624,2.483,625,3.07,626,5.494,627,3.642,628,2.096,629,3.07,630,3.746,631,2.904,632,3.07,633,3.883,634,2.753,635,2.096,636,3.746,637,3.477,638,4.92,639,2.53,640,3.07,641,2.483,642,3.746,643,2.839,644,3.07,645,2.096,646,3.746,647,3.746]],["title/injectables/BudgetService.html",[590,0.453,601,2.324]],["body/injectables/BudgetService.html",[3,0.144,4,0.144,9,0.108,13,0.467,15,1.036,28,1.225,31,0.809,40,0.181,51,0.768,61,0.771,66,0.895,70,1.034,71,0.017,72,0.283,73,0.316,74,0.938,76,0.888,77,2.009,79,0.853,83,1.107,85,0.773,92,0.818,111,2.851,115,1.487,118,0.625,129,2.889,133,1.865,141,2.427,148,0.971,153,0.273,156,0.2,165,0.172,166,0.22,167,0.875,168,0.942,177,1.311,192,0.888,253,3.697,300,1.171,327,0.011,328,0.011,366,2.954,376,2.318,397,0.848,410,2.527,436,2.009,438,1.921,446,2.151,448,2.569,462,3.227,463,2.506,472,2.427,474,2.427,476,1.492,477,2.851,513,2.594,514,2.669,515,3.197,524,3.227,572,0.734,573,3.666,575,3.004,576,1.292,577,4.672,578,5.46,579,1.874,580,1.874,581,1.349,582,4.658,583,3.35,584,3.35,585,1.349,586,2.091,587,4.566,588,3.461,589,2.091,590,0.629,591,1.874,592,2.695,593,5.432,594,1.921,595,3.37,596,3.026,597,3.461,598,4.094,599,2.247,600,1.046,601,3.942,602,3.227,603,3.742,604,2.202,605,3.121,606,2.427,607,1.542,608,2.102,609,1.874,610,2.202,611,2.555,612,1.761,613,3.697,614,3.266,615,3.004,616,2.851,617,4.566,618,5.578,619,4.566,620,3.026,621,3.671,622,3.443,623,2.367,624,2.22,625,2.745,626,5.194,627,3.443,628,2.555,629,3.742,630,4.566,631,3.293,632,3.742,633,4.125,634,3.266,635,2.555,636,4.566,637,3.227,638,4.566,639,2.392,640,2.745,641,3.026,642,4.566,643,2.539,644,3.742,645,2.555,646,4.566,647,3.35,648,1.292,649,5.281,650,2.367,651,3.875,652,3.875,653,3.875,654,3.875,655,3.875,656,3.875,657,3.875]],["title/components/CalendarComponent.html",[0,0.141,269,0.906]],["body/components/CalendarComponent.html",[0,0.221,1,0.667,2,0.916,3,0.104,4,0.104,5,0.77,7,0.639,8,0.639,9,0.078,13,0.419,15,1.093,16,2.677,19,0.667,21,1.746,23,2.137,24,2.559,25,0.587,26,1.635,27,1.311,28,0.493,29,1.093,31,0.429,32,1.04,34,1.602,35,0.667,38,1.04,40,0.131,41,0.421,51,0.499,54,2.215,61,0.611,64,2.977,66,0.939,70,0.912,71,0.017,72,0.272,73,0.337,74,0.828,76,0.704,79,0.787,80,0.667,83,0.878,85,0.666,91,1.924,92,0.793,94,1.667,95,1.924,96,2.026,100,0.45,103,1.746,107,2.26,114,1.489,115,1.981,116,1.746,118,0.6,130,1.084,133,1.245,134,0.994,135,1.093,138,1.048,142,2.171,148,1.023,153,0.287,156,0.145,159,1.711,163,0.858,165,0.091,166,0.159,167,0.785,168,0.409,173,1.355,192,1.144,194,4.811,198,1.398,208,1.225,214,1.746,243,3.246,247,2.26,248,1.458,257,0.667,258,0.956,259,0.725,260,1.618,261,0.725,262,0.725,263,0.667,264,0.725,265,0.667,266,1.084,267,0.695,268,0.725,269,1.488,270,0.725,271,0.725,272,0.639,273,0.471,274,1.084,275,0.667,276,0.613,277,0.725,278,0.667,279,0.725,280,0.667,281,0.725,282,0.667,283,0.725,284,0.639,285,0.725,286,0.639,287,0.613,288,0.725,289,0.667,290,0.725,291,0.667,292,0.725,293,0.725,294,0.667,295,0.725,296,0.667,297,0.725,298,0.667,299,0.695,300,0.843,301,0.725,302,0.695,303,1.298,304,0.667,305,0.725,306,0.667,307,0.695,308,0.725,309,0.667,310,0.725,311,0.667,312,0.841,313,0.725,314,0.667,315,0.667,316,0.695,317,0.725,318,0.695,319,0.725,320,0.667,321,0.725,322,0.562,323,0.587,324,0.639,325,0.725,326,0.725,327,0.009,328,0.009,335,1.593,346,1.746,360,1.667,362,2.744,369,1.229,372,1.065,402,3.023,405,3.246,419,3.888,420,2.801,490,1.523,508,1.605,514,1.458,515,1.746,521,1.512,537,2.026,541,2.266,569,1.836,571,1.535,579,2.026,580,2.692,581,2.481,586,1.512,589,1.512,596,1.605,612,1.396,658,2.422,659,4.811,660,3.553,661,5.298,662,1.593,663,3.646,664,5.052,665,4.188,666,2.744,667,3.62,668,4.188,669,5.015,670,5.886,671,4.811,672,4.354,673,4.314,674,4.167,675,4.069,676,4.188,677,4.188,678,5.015,679,5.957,680,3.637,681,3.888,682,3.888,683,5.015,684,5.957,685,5.015,686,5.957,687,5.015,688,4.188,689,4.188,690,4.811,691,4.188,692,4.188,693,2.422,694,4.188,695,3.039,696,3.286,697,2.801,698,2.801,699,2.707,700,1.605,701,3.188,702,3.188,703,3.4,704,4.188,705,2.801,706,2.399,707,5.957,708,2.967,709,2.137,710,3.246,711,2.801,712,2.744,713,4.188,714,2.801,715,4.188,716,2.801,717,2.399,718,4.188,719,2.801,720,2.935,721,4.845,722,5.149,723,2.801,724,2.399,725,2.801,726,2.967,727,3.4,728,1.746,729,3.62,730,3.246,731,2.801,732,3.246,733,4.188,734,2.801,735,4.188,736,2.801,737,2.801,738,2.801,739,3.246,740,2.801,741,2.744,742,2.801,743,2.801,744,3.62,745,3.62,746,3.62,747,3.62,748,3.62,749,3.62,750,3.62,751,4.188,752,3.62,753,2.171,754,2.171,755,4.188,756,5.957,757,2.801,758,2.801,759,2.171,760,4.188,761,4.811,762,2.801,763,4.188,764,4.188,765,4.188,766,5.015,767,2.801,768,2.422,769,2.801,770,2.801,771,2.801,772,2.801,773,2.801,774,2.801,775,1.168,776,2.422,777,1.523,778,2.801,779,2.422,780,2.801,781,2.801,782,2.801,783,2.801,784,3.246,785,2.801,786,2.801,787,2.801,788,4.188,789,2.801,790,2.422,791,2.801,792,2.801,793,2.801,794,4.188,795,2.744,796,1.512,797,1.355,798,2.801,799,2.801,800,4.188,801,1.985,802,2.558,803,2.744,804,2.744,805,3.246,806,2.967,807,2.967,808,2.967,809,2.967]],["title/interfaces/Category.html",[100,0.611,572,0.529]],["body/interfaces/Category.html",[3,0.143,4,0.143,9,0.107,13,0.257,15,0.842,16,2.477,29,1.032,31,0.588,40,0.179,41,0.528,51,0.457,61,0.56,71,0.017,72,0.298,73,0.333,76,0.645,77,1.46,79,0.79,83,0.805,85,0.637,92,0.725,100,1.29,111,2.072,114,0.84,118,0.654,132,1.75,133,1.596,138,1.184,141,2.412,147,1.417,148,0.706,153,0.332,156,0.198,165,0.171,166,0.218,167,0.893,168,0.873,177,1.366,182,3.35,192,1.234,198,1.149,222,2.296,300,1.08,327,0.011,328,0.011,376,1.91,397,0.84,410,2.082,420,2.559,436,1.46,438,1.397,446,2.372,447,2.516,448,2.089,462,2.346,463,2.494,472,1.764,474,1.764,475,1.857,476,1.303,477,2.072,490,1.909,513,2.338,514,2.477,515,2.966,531,2.516,533,2.516,571,1.175,572,0.831,574,1.46,576,2.143,581,2.477,585,1.827,590,0.625,591,1.857,592,1.959,594,1.397,595,2.539,597,2.516,599,1.337,600,1.036,604,1.601,605,1.857,606,2.412,607,1.528,608,2.089,609,1.857,610,2.189,611,1.857,612,1.28,613,2.2,614,3.256,620,2.2,621,2.346,622,3.426,623,2.346,624,2.2,627,3.007,628,1.857,631,1.959,633,3.653,634,2.539,635,1.857,637,2.346,639,2.089,641,2.2,644,2.72,695,1.959,728,2.681,777,2.634,802,2.346,810,2.976,811,4.068,812,5.818,813,3.328,814,3.683,815,4.346,816,2.892,817,4.068,818,3.439,819,4.537,820,4.537,821,3.007,822,3.718,823,3.007,824,2.412,825,2.189,826,4.537,827,3.319,828,3.319,829,3.01,830,2.2,831,2.72,832,2.976,833,3.319,834,2.833,835,2.72,836,2.516,837,2.72,838,1.601,839,3.653,840,3.319,841,2.072,842,2.976,843,3.319,844,3.319,845,3.319,846,3.319,847,3.319,848,2.516,849,3.439,850,3.319,851,3.319,852,4.537,853,2.72,854,1.601,855,3.319,856,3.319,857,2.72,858,2.346,859,3.319,860,3.319,861,3.319,862,3.319,863,2.516,864,5.169,865,3.319,866,3.319,867,3.319,868,2.516,869,3.319,870,3.319,871,3.319,872,2.072,873,3.319,874,3.319,875,4.537,876,3.319,877,3.718,878,3.319,879,3.319,880,3.319,881,3.319,882,3.319,883,3.319]],["title/components/CategoryDropdownComponent.html",[0,0.141,35,0.906]],["body/components/CategoryDropdownComponent.html",[0,0.254,1,0.787,2,1.034,3,0.123,4,0.123,5,0.87,6,1.151,7,1.26,8,0.755,9,0.092,13,0.427,15,0.531,19,0.787,25,0.693,26,1.657,27,1.329,28,0.582,29,1.022,30,1.882,31,0.724,32,1.174,34,1.763,35,1.434,36,2.287,38,1.174,40,0.155,41,0.475,48,4.939,51,0.563,54,2.397,61,0.805,66,0.94,68,2.888,70,0.922,71,0.017,72,0.292,73,0.35,74,0.97,79,0.876,80,0.787,85,0.679,89,4.267,92,0.812,96,2.287,99,2.287,100,1.271,101,3.098,102,5.338,103,2.909,106,2.097,118,0.551,125,3.162,126,2.709,128,2.709,130,1.559,133,1.174,134,1.106,135,1.022,138,0.831,144,2.552,146,2.287,147,1.626,148,1.108,151,3.25,153,0.311,154,2.167,155,1.895,156,0.171,161,5.338,163,1.012,165,0.108,166,0.313,167,0.756,168,0.483,190,2.563,191,2.858,192,0.556,198,0.909,257,0.787,258,1.079,259,0.856,260,1.559,261,0.856,262,0.856,263,0.787,264,0.856,265,0.787,266,1.224,267,0.821,268,0.856,269,0.787,270,0.856,271,0.856,272,0.755,273,0.556,274,1.224,275,0.787,276,0.723,277,0.856,278,0.787,279,0.856,280,0.787,281,0.856,282,0.787,283,0.856,284,0.755,285,0.856,286,0.755,287,0.723,288,0.856,289,0.787,290,0.856,291,0.787,292,0.856,293,0.856,294,0.787,295,0.856,296,0.787,297,0.856,298,0.787,299,0.821,300,1.071,301,0.856,302,0.821,303,1.429,304,0.787,305,0.856,306,0.787,307,0.821,308,0.856,309,0.787,310,0.856,311,0.787,312,0.949,313,0.856,314,0.787,315,0.787,316,0.821,317,0.856,318,0.821,319,0.856,320,0.787,321,0.856,322,0.664,323,0.693,324,0.755,325,0.856,326,0.856,327,0.01,328,0.01,357,2.888,400,2.287,420,2.777,425,3.35,449,2.343,450,3.264,452,4.267,458,3.162,476,1.174,508,1.895,532,3.665,533,2.167,829,3.058,834,3.682,839,2.888,884,6.513,885,2.858,886,3.35,887,3.679,888,3.679,889,5.518,890,4.728,891,5.518,892,5.518,893,6.022,894,4.728,895,4.728,896,6.022,897,2.287,898,6.371,899,5.518,900,2.709,901,5.518,902,4.087,903,2.858,904,4.728,905,4.267,906,4.262,907,3.307,908,2.888,909,4.342,910,6.022,911,4.668,912,3.307,913,3.098,914,4.087,915,4.087,916,4.728,917,3.307,918,3.679,919,3.307,920,2.858,921,4.728,922,4.771,923,3.371,924,4.278,925,3.616,926,3.307,927,3.307,928,4.728,929,4.087,930,4.728,931,3.307,932,3.307,933,3.35,934,3.307,935,4.728,936,3.307,937,2.888,938,2.343,939,1.258,940,3.307,941,4.771,942,3.307,943,4.728,944,4.728,945,4.728,946,6.371,947,3.307,948,3.307,949,2.858,950,2.563,951,3.307,952,3.307,953,4.087,954,4.728]],["title/injectables/CategoryService.html",[590,0.453,834,2.054]],["body/injectables/CategoryService.html",[3,0.13,4,0.13,9,0.098,13,0.452,15,0.991,16,2.415,28,0.866,29,1.045,31,0.754,40,0.164,51,0.735,61,0.718,66,0.889,70,0.997,71,0.017,72,0.302,73,0.304,74,0.905,76,0.827,77,1.872,79,0.892,83,1.032,85,0.777,92,0.798,100,1.287,111,2.657,114,1.077,118,0.624,132,1.167,133,1.722,138,1.22,141,1.608,147,0.945,148,0.905,153,0.319,156,0.181,165,0.16,166,0.198,167,0.871,168,0.95,177,1.341,182,3.324,192,1.21,198,1.094,222,1.531,300,1.19,327,0.01,328,0.01,376,2.157,397,0.766,410,2.465,420,2.818,436,1.872,438,1.791,446,2.432,447,2.293,448,2.459,462,3.007,463,2.374,472,2.262,474,2.262,475,1.693,476,1.414,477,2.657,490,1.273,513,2.523,514,2.63,515,3.15,531,2.293,533,2.293,571,1.072,572,0.684,576,1.641,581,2.266,585,1.219,590,0.586,591,1.693,592,2.512,594,1.791,595,3.266,597,3.225,599,1.714,600,0.945,604,2.053,605,2.988,606,2.262,607,1.393,608,1.959,609,1.693,610,2.576,611,2.381,612,1.641,613,3.539,614,3.149,620,2.82,621,3.478,622,3.262,623,2.138,624,2.005,627,2.82,628,2.381,631,2.512,633,3.977,634,3.149,635,2.381,637,2.138,639,1.959,641,2.82,644,3.487,648,1.167,650,2.138,695,2.512,728,2.053,777,2.071,802,2.138,810,2.713,811,2.713,812,4.255,813,2.616,814,2.005,815,3.977,816,2.754,817,2.713,818,2.293,819,3.026,820,3.026,821,2.005,822,2.48,823,2.005,824,1.608,825,1.46,826,3.026,827,3.026,828,3.026,829,3.107,830,2.82,831,3.487,832,3.816,833,4.255,834,3.334,835,3.487,836,3.225,837,3.487,838,2.053,839,4.125,840,4.255,841,2.657,842,3.816,843,4.255,844,4.255,845,4.255,846,4.255,847,5.34,848,2.293,849,3.225,850,3.026,851,3.026,852,4.255,853,2.48,854,1.46,855,3.026,856,3.026,857,2.48,858,2.138,859,3.026,860,3.026,861,3.026,862,4.255,863,3.225,864,4.922,865,4.255,866,3.026,867,4.255,868,3.225,869,4.255,870,4.255,871,3.026,872,1.889,873,3.026,874,3.026,875,4.255,876,3.026,877,3.487,878,3.026,879,3.026,880,3.026,881,4.255,882,4.255,883,3.026,955,4.922,956,3.5,957,3.5,958,3.5,959,3.5,960,3.5,961,3.5,962,3.5,963,3.5]],["title/interfaces/ChatMessage.html",[572,0.529,964,2.493]],["body/interfaces/ChatMessage.html",[3,0.139,4,0.139,9,0.105,13,0.251,15,0.601,20,2.902,25,1.398,40,0.175,41,0.519,61,0.546,71,0.017,72,0.302,73,0.312,76,0.629,78,2.349,79,0.682,83,0.785,85,0.735,114,1.459,118,0.608,135,1.134,138,1.355,146,1.811,153,0.356,156,0.193,165,0.168,166,0.212,167,0.866,168,0.974,177,1.299,192,1.228,198,0.72,208,1.638,214,1.561,215,1.424,255,1.811,276,1.128,287,0.819,300,0.629,312,1.277,327,0.011,328,0.012,330,2.956,332,2.145,333,4.167,334,3.673,341,3.186,350,2.145,360,1.49,369,1.099,372,2.687,374,1.91,385,4.517,388,2.145,394,2.453,397,0.819,399,2.453,428,2.287,429,3.245,433,1.335,439,2.145,471,4.181,490,1.362,494,1.811,502,2.021,509,2.453,510,2.287,572,0.82,574,1.424,590,0.614,599,1.796,600,1.011,608,1.49,611,1.811,612,1.248,631,1.91,635,1.811,699,2.784,710,2.902,720,1.561,724,2.145,795,3.38,796,2.021,797,1.811,821,2.956,854,1.561,964,4.63,965,2.902,966,2.902,967,3.999,968,2.784,969,3.335,970,4.459,971,3.076,972,5.477,973,5.58,974,3.655,975,2.582,976,4.459,977,3.382,978,3.999,979,4.459,980,2.902,981,2.652,982,2.902,983,2.453,984,4.181,985,3.236,986,5.102,987,3.581,988,2.902,989,4.717,990,4.459,991,5.102,992,4.93,993,2.453,994,1.796,995,3.236,996,3.236,997,3.236,998,2.902,999,2.902,1000,2.902,1001,2.902,1002,2.956,1003,3.236,1004,2.652,1005,1.811,1006,2.652,1007,3.606,1008,2.652,1009,3.236,1010,2.902,1011,2.145,1012,3.236,1013,3.236,1014,3.236,1015,3.999,1016,3.236,1017,2.287,1018,4.459,1019,5.961,1020,3.433,1021,3.236,1022,2.021,1023,3.236,1024,2.902,1025,3.606,1026,2.956,1027,3.38,1028,3.151,1029,4.459,1030,3.151,1031,3.236,1032,2.287,1033,3.236,1034,2.287,1035,2.145,1036,2.632,1037,4.459,1038,5.767,1039,1.811,1040,2.652,1041,3.236,1042,1.72,1043,3.236,1044,3.236,1045,3.999,1046,2.021,1047,3.236,1048,2.287,1049,2.287,1050,4.459,1051,3.236,1052,3.236,1053,3.236,1054,3.236,1055,3.236,1056,3.236,1057,3.999,1058,4.459,1059,5.498,1060,4.459,1061,3.236,1062,2.902,1063,2.956,1064,3.999,1065,3.236,1066,3.236,1067,3.236,1068,3.236,1069,3.236,1070,3.236,1071,3.236,1072,3.236,1073,3.236,1074,3.236,1075,2.855,1076,3.236,1077,2.902,1078,1.91,1079,3.236,1080,2.652,1081,3.236,1082,2.902,1083,3.236,1084,3.236,1085,2.652,1086,2.453,1087,3.236,1088,3.236,1089,4.459,1090,2.902,1091,2.453,1092,3.236,1093,3.236,1094,2.652,1095,2.902,1096,3.236,1097,4.459,1098,3.236,1099,2.902,1100,3.236,1101,3.999,1102,2.784,1103,2.453,1104,2.632,1105,2.652,1106,3.999,1107,2.652,1108,2.902,1109,2.902,1110,4.575,1111,2.902,1112,2.902,1113,2.902,1114,2.287,1115,2.902]],["title/interfaces/CompoDocConfig.html",[572,0.529,1116,2.493]],["body/interfaces/CompoDocConfig.html",[0,0.137,3,0.137,4,0.137,5,1.417,6,0.823,7,0.54,8,0.54,9,0.192,15,0.886,17,2.92,23,1.206,24,1.877,26,0.496,31,0.692,40,0.111,41,0.454,54,0.941,61,0.345,69,1.206,71,0.017,72,0.099,73,0.355,74,1.095,92,0.575,94,0.941,115,1.036,118,0.61,125,2.588,134,0.744,144,1.276,147,1.876,148,0.937,153,0.285,155,1.355,156,0.122,165,0.077,166,0.134,168,1.001,173,1.78,177,1.193,192,1.153,198,1.318,208,2.558,212,1.355,213,1.986,214,2.303,215,2.522,222,1.609,248,1.281,273,0.759,300,1.026,312,0.475,322,0.475,323,1.438,327,0.008,328,0.008,341,3.869,350,3.617,369,1.496,372,2.1,374,1.206,388,3.869,397,0.517,457,2.305,475,1.144,476,1.983,492,1.444,521,1.276,524,2.248,527,1.034,540,1.355,559,1.549,562,1.675,563,3.2,567,3.2,569,2.411,571,1.561,572,0.628,574,0.899,581,1.281,604,0.986,616,1.276,628,1.144,634,1.144,639,0.941,645,2.185,666,4.494,709,1.206,726,3.913,775,0.986,777,2.629,796,2.981,797,2.185,813,1.086,825,0.986,830,2.588,838,0.986,909,2.411,913,2.96,969,1.144,971,2.185,975,2.416,977,2.108,994,1.281,1002,1.355,1005,1.144,1020,2.438,1032,3.573,1086,1.549,1102,1.276,1104,1.206,1116,2.96,1117,1.206,1118,1.355,1119,1.675,1120,3.951,1121,3.951,1122,3.951,1123,3.951,1124,3.951,1125,3.951,1126,3.951,1127,3.951,1128,3.951,1129,3.951,1130,3.951,1131,3.951,1132,3.951,1133,3.951,1134,3.951,1135,3.951,1136,3.951,1137,3.951,1138,3.951,1139,3.951,1140,3.951,1141,3.951,1142,4.281,1143,2.852,1144,1.986,1145,1.675,1146,1.986,1147,2.96,1148,1.675,1149,1.986,1150,1.444,1151,1.675,1152,2.411,1153,3.619,1154,2.852,1155,1.833,1156,1.355,1157,4.281,1158,2.108,1159,2.852,1160,1.833,1161,3.962,1162,2.96,1163,4.425,1164,2.411,1165,1.206,1166,2.108,1167,1.833,1168,1.549,1169,5.642,1170,1.355,1171,3.2,1172,2.248,1173,1.355,1174,1.549,1175,1.833,1176,1.675,1177,1.833,1178,1.833,1179,2.411,1180,1.833,1181,2.852,1182,1.833,1183,1.833,1184,1.444,1185,3.913,1186,2.852,1187,5.19,1188,3.501,1189,3.501,1190,1.833,1191,5.156,1192,2.411,1193,1.833,1194,1.675,1195,1.833,1196,1.833,1197,1.833,1198,1.675,1199,1.675,1200,3.2,1201,3.501,1202,3.73,1203,3.573,1204,3.295,1205,4.533,1206,3.951,1207,4.107,1208,3.951,1209,4.735,1210,3.34,1211,4.325,1212,4.325,1213,4.533,1214,1.833,1215,3.951,1216,5.139,1217,4.732,1218,4.281,1219,1.833,1220,2.108,1221,1.675,1222,4.281,1223,1.549,1224,3.501,1225,1.675,1226,5.027,1227,1.833,1228,2.852,1229,3.2,1230,1.833,1231,3.34,1232,3.2,1233,1.833,1234,2.248,1235,2.607,1236,1.833,1237,1.833,1238,1.833,1239,1.833,1240,3.73,1241,1.549,1242,1.675,1243,2.96,1244,1.833,1245,1.549,1246,2.96,1247,1.833,1248,3.501,1249,1.833,1250,3.501,1251,1.833,1252,1.833,1253,1.833,1254,2.759,1255,1.833,1256,1.833,1257,2.607,1258,2.607,1259,3.501,1260,1.675,1261,2.852,1262,1.833,1263,1.833,1264,3.2,1265,3.832,1266,2.852,1267,1.355,1268,4.533,1269,1.833,1270,3.611,1271,2.852,1272,1.833,1273,1.833,1274,1.833,1275,1.444,1276,1.675,1277,1.833,1278,1.833,1279,4.894,1280,1.833,1281,1.549,1282,2.852,1283,1.833,1284,1.833,1285,1.833,1286,1.833,1287,1.833,1288,1.833,1289,1.833,1290,1.833,1291,1.833,1292,1.833,1293,1.833,1294,1.833,1295,1.833,1296,1.833,1297,2.411,1298,1.833,1299,1.833,1300,1.833,1301,1.833,1302,1.833,1303,1.833,1304,1.444,1305,1.833,1306,1.833,1307,1.833,1308,1.833,1309,1.833,1310,5.139,1311,1.833,1312,1.833,1313,1.833,1314,1.833,1315,1.833,1316,1.833,1317,1.833,1318,1.833,1319,1.833,1320,1.833,1321,3.501,1322,2.852,1323,1.833,1324,1.833,1325,3.951,1326,4.533,1327,1.833,1328,1.833,1329,1.833,1330,3.501,1331,3.501,1332,1.833,1333,1.833,1334,1.833,1335,1.833,1336,1.355,1337,1.833,1338,3.951,1339,1.833,1340,1.833,1341,1.833,1342,2.852,1343,1.833,1344,1.675,1345,1.833,1346,1.833,1347,1.833,1348,1.833,1349,1.833,1350,1.833,1351,1.833,1352,1.986,1353,1.833,1354,1.675,1355,1.833,1356,3.501,1357,1.833,1358,1.833,1359,1.833,1360,1.833,1361,1.833,1362,1.833,1363,1.833,1364,1.833,1365,1.833,1366,1.355,1367,1.833,1368,1.444,1369,1.833,1370,2.852,1371,1.833,1372,1.833,1373,2.852,1374,1.833,1375,1.549,1376,1.675,1377,1.833,1378,1.833,1379,1.833,1380,1.675,1381,1.833,1382,1.833,1383,1.833,1384,1.549,1385,1.833,1386,1.833,1387,1.833,1388,1.675,1389,1.833,1390,3.34,1391,1.833,1392,1.355,1393,1.675,1394,1.833,1395,1.444,1396,1.833,1397,1.833,1398,2.248,1399,1.833,1400,2.852,1401,1.833,1402,3.114,1403,1.833,1404,2.852,1405,1.833,1406,1.833,1407,1.833,1408,2.852,1409,1.833,1410,1.833,1411,0.755,1412,1.675,1413,1.833,1414,1.444,1415,1.675,1416,1.675,1417,1.675,1418,1.675,1419,1.675,1420,1.833,1421,1.833,1422,1.549,1423,1.833,1424,1.833,1425,1.833]],["title/injectables/ConfigService.html",[590,0.453,1426,2.18]],["body/injectables/ConfigService.html",[3,0.154,4,0.154,9,0.174,13,0.278,21,2.308,27,0.93,40,0.194,41,0.557,51,0.659,61,0.909,66,0.954,71,0.017,72,0.298,73,0.323,76,0.93,78,2.204,79,0.732,83,1.16,85,0.832,114,1.613,118,0.657,134,1.009,135,1.165,153,0.286,156,0.215,165,0.135,166,0.235,168,1.135,177,1.335,316,1.374,327,0.011,328,0.011,334,3.907,397,0.909,398,3.193,514,2.527,541,2.525,576,1.846,590,0.659,592,2.825,599,2.707,600,1.122,607,2.204,648,1.385,838,2.769,981,2.944,993,4.832,994,2.666,1017,4.056,1165,3.388,1184,4.435,1254,3.382,1304,4.75,1395,4.056,1426,3.804,1427,3.592,1428,4.785,1429,4.826,1430,5.382,1431,5.382,1432,5.382,1433,4.278,1434,6.639,1435,6.639,1436,6.639,1437,5.536,1438,4.155,1439,3.922,1440,3.627,1441,6.374,1442,6.148,1443,4.291,1444,5.739,1445,5.739,1446,4.785,1447,3.382,1448,5.536,1449,5.536,1450,5.536,1451,4.155,1452,4.155,1453,5.536,1454,4.155,1455,4.785,1456,5.536,1457,4.155,1458,5.536,1459,5.536,1460,5.739,1461,5.536,1462,4.155,1463,4.35,1464,5.536,1465,4.785,1466,5.536,1467,4.155,1468,4.291,1469,5.536,1470,6.225,1471,5.536,1472,4.155,1473,4.155,1474,3.592,1475,4.155]],["title/components/DownloadComponentComponent.html",[0,0.141,272,0.868]],["body/components/DownloadComponentComponent.html",[0,0.242,1,0.566,2,0.809,3,0.088,4,0.088,5,0.68,6,0.828,7,0.543,8,0.543,9,0.206,13,0.371,15,0.982,16,2.202,18,3.623,19,1.708,21,2.132,25,0.775,26,1.609,27,1.29,28,0.418,29,1.141,31,0.364,32,0.918,33,3.213,34,1.448,35,0.566,38,0.918,40,0.239,41,0.372,51,0.44,54,2.035,61,0.539,63,4.154,64,2.812,65,3.228,66,0.862,70,0.783,71,0.017,72,0.257,73,0.333,74,0.711,75,3.623,76,0.859,78,1.471,79,0.878,80,1.079,83,1.072,85,0.674,86,3.213,91,2.35,92,0.809,94,1.471,95,1.699,96,1.788,100,1.043,101,2.422,106,1.287,113,2.619,114,0.809,115,2.13,116,2.132,118,0.602,129,2.035,130,0.957,132,1.955,133,1.879,134,0.662,135,0.382,137,4.545,138,1.168,144,1.995,148,0.834,150,3.841,151,1.995,153,0.355,156,0.123,157,3.213,158,1.214,159,1.453,163,0.728,164,1.559,165,0.166,166,0.135,167,0.874,168,1.038,173,1.788,177,0.94,178,1.685,179,3.213,182,1.04,183,1.214,187,1.214,192,1.252,198,0.711,208,1.04,212,2.598,213,2.447,214,0.992,215,1.725,217,1.844,246,3.623,247,2.447,248,1.579,255,2.193,256,2.447,257,0.566,258,0.844,259,0.616,260,1.324,261,0.616,262,0.616,263,0.566,264,0.616,265,0.566,266,0.957,267,0.591,268,0.616,269,0.566,270,0.616,271,0.616,272,1.338,273,1.263,274,0.957,275,0.566,276,0.52,277,0.616,278,0.566,279,0.616,280,0.566,281,0.616,282,0.566,283,0.616,284,1.167,285,0.616,286,0.543,287,0.52,288,0.616,289,0.566,290,0.616,291,0.566,292,0.616,293,0.616,294,0.566,295,0.616,296,0.566,297,0.616,298,0.566,299,0.591,300,0.4,301,0.616,302,0.591,303,1.174,304,0.566,305,0.616,306,0.566,307,0.591,308,0.616,309,0.566,310,0.616,311,0.566,312,0.742,313,0.616,314,0.566,315,0.566,316,0.591,317,0.616,318,0.591,319,0.616,320,0.566,321,0.616,322,0.478,323,0.499,324,0.543,325,0.616,326,0.616,327,0.008,328,0.008,343,2.77,346,1.542,360,1.471,366,2.237,369,0.698,376,1.181,400,1.788,420,2.518,433,0.616,444,1.788,457,1.214,465,2.971,469,4.154,508,1.363,537,1.788,571,1.388,572,0.514,573,2.545,576,0.793,579,3.143,580,3.143,586,1.995,589,1.995,592,1.886,594,1.345,596,3.625,601,3.865,629,1.685,673,2.866,674,3.625,693,2.056,699,1.995,700,3.625,701,2.118,702,2.118,703,2.258,712,2.422,727,2.258,759,3.515,803,2.422,804,2.422,806,2.619,807,2.619,808,2.619,809,2.619,823,1.363,834,3.414,872,1.995,886,2.619,908,2.258,911,1.844,938,1.685,975,2.237,994,1.287,1028,4.196,1035,2.118,1036,1.886,1039,1.788,1040,2.619,1102,2.447,1103,1.559,1104,1.214,1156,1.363,1202,2.258,1204,2.76,1223,1.559,1231,1.559,1240,1.453,1267,2.93,1398,2.77,1402,2.258,1411,0.76,1414,1.453,1422,2.971,1439,2.619,1476,4.932,1477,5.396,1478,5.396,1479,1.685,1480,3.196,1481,5.243,1482,5.036,1483,2.422,1484,2.422,1485,3.196,1486,5.068,1487,2.866,1488,2.866,1489,3.92,1490,3.92,1491,4.42,1492,4.42,1493,4.42,1494,3.697,1495,3.697,1496,4.42,1497,3.697,1498,3.697,1499,2.866,1500,2.379,1501,2.379,1502,2.379,1503,3.196,1504,3.196,1505,3.196,1506,3.196,1507,2.379,1508,3.623,1509,4.42,1510,3.196,1511,2.379,1512,4.787,1513,2.379,1514,2.379,1515,2.866,1516,3.196,1517,4.787,1518,5.068,1519,2.379,1520,3.196,1521,3.964,1522,2.379,1523,2.379,1524,3.196,1525,2.422,1526,2.866,1527,2.619,1528,1.685,1529,2.056,1530,3.515,1531,2.866,1532,2.056,1533,1.363,1534,3.629,1535,1.214,1536,3.196,1537,3.92,1538,3.92,1539,2.056,1540,2.056,1541,2.056,1542,4.545,1543,2.056,1544,2.056,1545,2.056,1546,2.056,1547,1.685,1548,2.056,1549,2.056,1550,2.056,1551,2.056,1552,2.056,1553,2.056,1554,1.559,1555,2.056,1556,2.056,1557,1.453,1558,2.056,1559,2.056,1560,2.056,1561,2.056,1562,2.056,1563,2.056,1564,2.056,1565,2.056,1566,2.056,1567,3.92,1568,2.056,1569,3.213,1570,2.056,1571,2.056,1572,2.056,1573,2.056,1574,2.056,1575,2.056,1576,2.056,1577,1.844,1578,2.056,1579,3.92,1580,2.056,1581,2.056,1582,2.056,1583,2.056,1584,2.056,1585,1.844,1586,2.056,1587,2.056,1588,2.056,1589,3.196,1590,2.056,1591,2.056,1592,2.056,1593,2.056,1594,3.92,1595,2.056,1596,2.056,1597,2.056,1598,2.056,1599,2.056,1600,2.056,1601,3.196,1602,2.056,1603,4.42,1604,2.056,1605,3.196,1606,2.422,1607,2.866,1608,2.866,1609,2.056,1610,2.056,1611,2.056,1612,2.056,1613,1.844,1614,1.844,1615,2.056,1616,2.056,1617,2.056,1618,2.056,1619,2.056,1620,2.056,1621,4.787,1622,2.056,1623,2.056,1624,2.056,1625,2.056,1626,2.056,1627,2.866,1628,2.056,1629,2.056,1630,5.616,1631,2.056,1632,2.056,1633,1.453,1634,2.056,1635,1.559,1636,1.685,1637,2.056,1638,1.685,1639,2.056,1640,2.056,1641,1.844,1642,2.056,1643,2.056,1644,2.056,1645,3.196,1646,2.056,1647,2.056,1648,2.056,1649,2.056,1650,2.056,1651,2.056,1652,2.056,1653,2.056,1654,2.056,1655,3.196,1656,2.056,1657,2.056,1658,2.056,1659,2.056,1660,3.697]],["title/interfaces/Expense.html",[29,0.611,572,0.529]],["body/interfaces/Expense.html",[3,0.13,4,0.13,9,0.098,13,0.234,15,1.113,16,2.414,21,2.814,25,1.031,28,0.615,29,1.284,31,0.535,40,0.163,41,0.494,64,2.26,71,0.017,72,0.206,73,0.348,74,1.013,76,0.588,77,2.567,79,0.65,83,0.733,85,0.719,91,3.101,92,0.641,100,1.194,111,1.887,114,0.765,115,2.126,116,2.952,118,0.665,129,2.864,132,1.64,133,1.533,141,3.186,153,0.294,156,0.181,165,0.16,166,0.198,167,0.888,168,0.51,177,1.389,182,2.701,183,3.15,187,3.15,192,1.269,193,2.291,195,2.477,198,1.333,247,2.655,248,1.712,253,3.867,255,2.379,256,2.655,327,0.01,328,0.01,335,1.33,369,1.812,376,1.117,397,0.765,410,1.981,433,0.905,436,1.33,438,1.272,446,2.36,448,1.392,463,2.051,474,1.607,476,1.533,513,2.246,514,1.712,571,1.07,572,0.791,574,1.33,576,1.64,577,3.223,579,1.691,580,2.379,581,2.15,585,1.712,586,1.887,588,3.223,589,1.887,590,0.586,591,1.691,595,2.379,599,1.217,600,0.944,602,2.136,605,1.691,606,2.26,607,1.392,608,1.958,609,1.691,610,2.051,612,1.64,613,2.003,614,3.264,616,1.887,620,2.003,621,2.136,622,3.538,623,2.136,624,2.003,625,2.477,627,3.26,628,1.691,633,3.476,634,2.379,637,3.005,639,2.458,640,3.485,641,2.003,643,3.223,695,2.51,700,3.26,701,3.728,702,3.728,703,3.772,706,2.003,777,1.789,784,2.71,802,2.136,813,2.26,816,2.379,822,4.781,823,3.867,824,2.26,829,1.392,839,2.136,841,1.887,848,2.291,849,2.291,857,2.477,858,2.136,863,2.291,877,2.477,939,1.33,968,1.887,1006,2.477,1036,3.538,1039,1.691,1336,2.003,1411,1.117,1484,3.223,1547,2.477,1554,4.263,1557,4.582,1661,2.71,1662,5.625,1663,5.625,1664,4.252,1665,3.022,1666,3.022,1667,3.223,1668,2.71,1669,2.71,1670,2.71,1671,2.71,1672,2.71,1673,2.71,1674,2.71,1675,2.71,1676,2.71,1677,3.022,1678,2.71,1679,4.252,1680,3.022,1681,3.022,1682,3.022,1683,3.022,1684,3.022,1685,3.022,1686,3.022,1687,3.022,1688,3.022,1689,3.022,1690,3.022,1691,3.022,1692,3.022,1693,3.022,1694,4.919,1695,3.022,1696,4.919,1697,3.022,1698,2.71,1699,3.022,1700,3.022,1701,3.022,1702,4.919,1703,3.022,1704,3.022,1705,3.022,1706,3.022,1707,4.252,1708,3.022]],["title/components/ExpenseDetailsModalComponent.html",[0,0.141,275,0.906]],["body/components/ExpenseDetailsModalComponent.html",[0,0.243,1,0.684,2,1.233,3,0.107,4,0.107,5,0.785,7,0.656,8,0.656,9,0.08,13,0.341,15,0.966,16,1.486,18,3.993,19,1.685,21,2.859,23,2.178,24,2.598,25,0.602,26,1.638,27,1.314,28,0.505,29,1.263,30,1.699,31,0.654,32,1.06,33,3.608,34,1.627,35,1.342,38,1.06,40,0.134,41,0.429,48,3.947,51,0.508,54,2.243,55,3.69,61,0.419,62,2.484,63,4.47,66,0.931,70,0.654,71,0.017,72,0.265,73,0.326,74,0.593,75,3.608,76,0.717,79,0.564,80,0.684,83,0.895,85,0.696,86,3.608,91,3.151,92,0.824,94,1.699,95,1.962,96,2.726,97,3.69,100,1.216,102,3.024,103,3.13,106,1.962,110,3.69,114,0.934,115,1.93,116,2.859,118,0.469,129,2.818,130,1.105,133,1.06,134,0.879,135,0.817,144,2.304,146,3.052,147,1.152,148,0.936,153,0.311,156,0.221,157,2.036,158,1.466,161,2.036,162,2.484,163,0.88,165,0.093,166,0.163,167,0.536,173,2.065,178,2.036,179,4.266,182,1.867,183,1.466,184,3.69,187,1.466,189,2.484,190,2.228,192,0.483,243,3.309,246,4.754,247,3.406,248,2.495,249,3.69,250,3.309,251,3.993,252,3.993,253,2.446,254,3.69,255,3.052,256,3.406,257,0.684,258,0.974,259,0.744,260,1.459,261,0.744,262,0.744,263,0.684,264,0.744,265,0.684,266,1.105,267,0.714,268,0.744,269,0.684,270,0.744,271,0.744,272,0.656,273,0.483,274,1.105,275,1.502,276,1.741,277,0.744,278,0.684,279,0.744,280,0.684,281,0.744,282,0.684,283,0.744,284,0.656,285,0.744,286,0.656,287,0.629,288,0.744,289,0.684,290,0.744,291,0.684,292,0.744,293,0.744,294,0.684,295,0.744,296,0.684,297,0.744,298,0.684,299,0.714,300,0.483,301,0.744,302,0.714,303,1.318,304,0.684,305,0.744,306,0.684,307,0.714,308,0.744,309,0.684,310,0.744,311,0.684,312,0.857,313,0.744,314,0.684,315,0.684,316,0.714,317,0.744,318,0.714,319,0.744,320,0.684,321,0.744,322,0.577,323,0.602,324,0.656,325,0.744,326,0.744,327,0.009,328,0.009,335,1.624,360,1.699,369,1.253,433,1.459,436,1.624,443,2.797,446,1.423,450,3.293,475,2.065,476,1.06,479,2.797,480,2.608,484,2.446,490,1.553,595,3.16,635,2.065,645,2.065,674,4.106,680,3.333,690,5.205,732,3.309,805,3.309,811,3.309,838,2.35,887,4.1,888,3.443,897,2.065,900,2.446,918,3.991,925,4.397,933,3.024,937,3.443,939,1.093,1608,3.309,1667,2.797,1709,5.786,1710,5.786,1711,6.452,1712,2.484,1713,6.976,1714,3.024,1715,3.309,1716,4.268,1717,4.268,1718,4.268,1719,5.092,1720,5.636,1721,5.636,1722,5.636,1723,5.636,1724,6.021,1725,5.092,1726,6.368,1727,4.268,1728,4.268,1729,3.69,1730,2.874,1731,2.874,1732,2.797,1733,2.874,1734,2.874,1735,4.47,1736,3.309,1737,2.874,1738,4.268,1739,2.874,1740,5.636,1741,2.874,1742,3.309,1743,2.874,1744,2.874,1745,2.874,1746,2.874,1747,2.874,1748,4.268,1749,2.874,1750,3.69,1751,2.874,1752,4.268,1753,2.874,1754,2.874,1755,2.874,1756,2.874,1757,2.874,1758,2.874,1759,2.874,1760,2.874,1761,2.874,1762,2.874,1763,5.092,1764,2.874,1765,2.874,1766,2.874,1767,2.874,1768,2.874,1769,2.874,1770,2.874,1771,2.874,1772,2.874,1773,4.268,1774,4.268,1775,4.268,1776,4.268,1777,4.268,1778,4.268,1779,4.268]],["title/components/ExpenseListComponent.html",[0,0.141,278,0.906]],["body/components/ExpenseListComponent.html",[0,0.215,1,0.856,2,1.097,3,0.134,4,0.134,5,0.922,7,0.82,8,0.82,9,0.1,13,0.419,15,0.805,16,2.289,19,0.856,25,0.753,26,1.668,27,1.337,28,0.632,29,1.277,30,1.996,31,0.768,32,1.245,34,1.845,35,0.856,38,1.245,40,0.168,51,0.597,61,0.843,66,0.877,70,0.884,71,0.017,72,0.276,73,0.318,74,0.803,76,0.843,80,0.856,83,1.051,85,0.666,92,0.565,96,2.426,99,2.426,100,0.577,101,3.286,103,2.972,106,2.011,115,2.038,118,0.638,130,1.298,134,0.525,135,0.577,147,1.687,153,0.259,156,0.186,163,1.101,165,0.117,166,0.204,167,0.629,177,0.922,192,1.232,198,1.11,214,1.499,215,1.367,257,0.856,258,1.145,259,0.931,260,1.618,261,0.931,262,0.931,263,0.856,264,0.931,265,0.856,266,1.298,267,0.892,268,0.931,269,0.856,270,0.931,271,0.931,272,0.82,273,0.604,274,1.298,275,0.856,276,0.786,277,0.931,278,1.697,279,0.931,280,0.856,281,0.931,282,0.856,283,0.931,284,0.82,285,0.931,286,0.82,287,0.786,288,0.931,289,0.856,290,0.931,291,0.856,292,0.931,293,0.931,294,0.856,295,0.931,296,0.856,297,0.931,298,0.856,299,0.892,300,1.174,301,0.931,302,0.892,303,1.495,304,0.856,305,0.931,306,0.856,307,0.892,308,0.931,309,0.856,310,0.931,311,0.856,312,1.007,313,0.931,314,0.856,315,0.856,316,0.892,317,0.931,318,0.892,319,0.931,320,0.856,321,0.931,322,0.722,323,0.753,324,0.82,325,0.931,326,0.931,327,0.01,328,0.01,339,3.107,346,2.091,369,1.472,433,1.618,450,2.305,581,2.011,594,1.824,604,2.091,611,2.426,662,1.907,663,2.355,664,3.785,672,3.529,680,3.694,699,1.94,708,2.547,720,2.409,724,2.873,728,1.499,730,3.888,732,3.888,744,3.107,745,4.993,746,3.107,747,3.107,748,3.107,749,3.107,750,3.107,753,2.786,777,2.593,790,4.335,803,3.286,804,3.286,805,3.888,817,3.888,821,3.581,841,2.707,858,2.196,887,3.818,897,2.426,900,2.873,918,3.529,937,3.818,1011,2.873,1039,3.023,1156,2.06,1463,3.286,1483,3.286,1527,3.553,1633,2.196,1709,5.525,1710,5.525,1715,3.888,1735,3.553,1780,6.161,1781,3.107,1782,4.335,1783,5.776,1784,3.888,1785,3.553,1786,5.015,1787,5.015,1788,5.015,1789,5.015,1790,5.015,1791,5.015,1792,6.574,1793,5.015,1794,3.594,1795,4.335,1796,3.594,1797,5.015,1798,3.594,1799,5.015,1800,3.594,1801,3.594,1802,5.015,1803,5.015,1804,3.594,1805,3.594,1806,3.594,1807,3.594,1808,3.594,1809,3.107,1810,6.25,1811,3.594,1812,4.335,1813,5.015,1814,5.015,1815,4.477,1816,5.776,1817,5.015,1818,3.594,1819,3.888,1820,3.594,1821,3.594,1822,2.786,1823,2.786,1824,2.786,1825,2.786,1826,2.786,1827,2.786,1828,2.786,1829,2.786,1830,2.786,1831,2.786,1832,3.594,1833,3.594,1834,3.594,1835,3.594,1836,3.107,1837,5.776,1838,3.107,1839,5.776,1840,3.594,1841,5.015,1842,3.594,1843,3.594,1844,3.594,1845,3.594,1846,3.594,1847,5.015]],["title/injectables/ExpenseService.html",[64,1.748,590,0.453]],["body/injectables/ExpenseService.html",[3,0.121,4,0.121,9,0.091,13,0.455,15,1.116,16,2.581,21,1.954,25,1.255,28,1.053,29,1.286,31,0.718,40,0.153,51,0.558,61,0.477,64,2.752,66,0.889,70,1.01,71,0.017,72,0.285,73,0.308,74,0.966,76,0.788,77,2.795,79,0.791,83,0.982,85,0.801,91,2.154,92,0.744,100,1.153,111,2.529,114,1.025,115,2.14,116,2.752,118,0.655,129,2.524,132,1.089,133,1.688,141,2.914,153,0.283,156,0.169,165,0.152,166,0.185,167,0.873,168,0.8,177,1.374,182,1.429,183,1.667,187,1.667,192,1.256,193,2.14,195,2.314,198,1.306,247,1.763,248,1.137,253,3.781,255,1.58,256,1.763,327,0.01,328,0.01,335,1.782,369,1.937,376,1.497,397,0.714,410,2.421,433,1.213,436,1.782,438,1.705,446,2.472,448,1.865,463,1.362,474,2.154,476,1.361,513,2.473,514,2.085,571,1,572,0.651,576,1.089,577,2.14,579,2.267,580,2.896,581,1.632,585,1.137,586,2.529,588,3.924,589,2.529,590,0.558,591,1.58,595,3.192,599,1.632,600,0.882,602,2.863,605,2.896,606,2.154,607,1.3,608,1.865,609,1.58,610,2.497,612,1.997,613,3.431,614,3.192,616,2.529,620,2.685,621,3.348,622,3.431,623,1.995,624,1.871,625,2.314,627,3.14,628,2.267,633,3.874,634,3.067,637,2.863,639,2.384,640,3.32,641,2.685,643,3.071,648,1.089,650,1.995,695,3.055,700,3.781,701,3.895,702,3.895,703,3.874,706,2.685,777,1.188,784,2.532,802,2.863,813,1.501,816,1.58,822,3.883,823,3.14,824,1.501,829,1.3,839,2.863,841,2.529,848,2.14,849,2.14,857,2.314,858,1.995,863,3.071,877,2.314,939,1.242,968,2.529,1006,3.32,1036,3.548,1039,2.267,1336,2.685,1411,1.497,1484,3.924,1547,2.314,1554,3.071,1557,4.564,1661,2.532,1662,4.051,1663,4.051,1664,2.823,1665,2.823,1666,4.051,1667,3.924,1668,3.633,1669,3.633,1670,3.633,1671,4.642,1672,2.532,1673,2.532,1674,2.532,1675,2.532,1676,2.532,1677,4.051,1678,3.633,1679,4.051,1680,2.823,1681,2.823,1682,2.823,1683,2.823,1684,2.823,1685,2.823,1686,2.823,1687,2.823,1688,2.823,1689,2.823,1690,2.823,1691,2.823,1692,2.823,1693,2.823,1694,4.738,1695,4.051,1696,4.738,1697,4.051,1698,2.532,1699,4.051,1700,4.051,1701,2.823,1702,4.738,1703,2.823,1704,2.823,1705,2.823,1706,2.823,1707,4.051,1708,2.823,1848,4.686,1849,4.686,1850,3.266,1851,3.266,1852,3.266,1853,3.266,1854,3.266,1855,3.266,1856,3.266,1857,3.266,1858,3.266]],["title/components/ExpenseWiseComponent.html",[0,0.141,280,0.906]],["body/components/ExpenseWiseComponent.html",[0,0.249,1,1.521,2,1.137,3,0.141,4,0.141,5,0.956,7,0.864,8,0.864,9,0.106,11,2.934,13,0.428,19,0.901,24,2.652,25,0.793,26,1.674,27,1.348,28,0.666,29,1.175,30,2.069,31,0.796,32,1.29,34,1.896,35,0.901,38,1.29,40,0.177,41,0.522,51,0.619,54,2.543,61,0.932,66,0.868,68,2.312,70,0.909,71,0.017,72,0.29,73,0.299,74,0.825,79,0.687,80,0.901,85,0.554,92,0.586,94,2.069,95,2.388,96,2.514,100,0.607,107,2.805,114,1.298,118,0.433,126,2.169,130,1.345,134,0.758,135,0.834,146,2.514,148,0.956,153,0.397,154,2.48,156,0.268,163,1.159,165,0.123,166,0.214,167,0.652,168,0.758,222,2.273,257,0.901,258,1.186,259,0.98,260,1.654,261,0.98,262,0.98,263,1.521,264,0.98,265,1.413,266,1.345,267,1.586,268,0.98,269,1.521,270,0.98,271,0.98,272,0.864,273,0.636,274,1.345,275,0.901,276,0.828,277,0.98,278,0.901,279,0.98,280,1.521,281,0.98,282,1.521,283,0.98,284,0.864,285,0.98,286,0.864,287,1.298,288,0.98,289,0.901,290,0.98,291,0.901,292,0.98,293,0.98,294,1.521,295,0.98,296,0.901,297,0.98,298,0.901,299,1.586,300,0.636,301,0.98,302,0.94,303,1.537,304,1.521,305,0.98,306,0.901,307,0.94,308,0.98,309,0.901,310,0.98,311,0.901,312,1.043,313,0.98,314,0.901,315,0.901,316,0.94,317,0.98,318,1.586,319,0.98,320,1.521,321,0.98,322,0.76,323,0.793,324,1.458,325,0.98,326,0.98,327,0.011,328,0.011,346,2.167,357,3.175,360,2.069,376,1.66,397,1.137,398,2.664,399,3.406,400,2.514,401,4.729,402,3.346,403,5.363,404,4.245,405,4.953,406,2.805,407,2.978,408,3.682,409,4.527,410,2.409,411,4.493,425,3.682,432,5.523,433,1.734,435,4.493,436,1.977,437,4.953,445,4.493,446,1.733,447,3.406,448,2.069,449,2.681,450,3.317,476,1.586,489,4.029,490,1.891,498,3.272,499,3.272,517,3.272,518,3.272,541,1.977,607,2.069,728,2.167,825,2.167,1022,3.204,1515,4.029,1859,6.126,1860,5.493,1861,3.272,1862,4.493,1863,5.197,1864,5.197,1865,5.131,1866,5.936,1867,5.197,1868,5.197,1869,2.681,1870,4.06,1871,5.197,1872,3.785,1873,5.197,1874,6.389,1875,3.785,1876,3.785,1877,3.785,1878,3.904,1879,3.785,1880,5.197,1881,5.197,1882,4.493,1883,3.785,1884,3.785,1885,3.785,1886,3.272,1887,3.785,1888,3.785,1889,3.785,1890,3.785,1891,3.272,1892,3.785,1893,3.785,1894,3.785,1895,3.785,1896,3.785,1897,2.681,1898,2.681,1899,3.785,1900,3.785,1901,3.785]],["title/components/FooterComponent.html",[0,0.141,282,0.906]],["body/components/FooterComponent.html",[0,0.265,1,1.082,2,1.284,3,0.265,4,0.169,5,1.264,7,1.037,8,1.037,9,0.127,13,0.393,19,1.082,25,0.953,26,1.693,27,1.361,28,0.799,29,1.044,32,1.128,35,1.082,38,1.458,40,0.212,41,0.59,61,0.663,66,0.737,70,0.696,71,0.017,72,0.273,73,0.274,74,0.631,76,0.987,79,0.776,80,1.082,83,1.231,100,0.729,114,1.504,118,0.489,130,1.52,134,0.663,135,0.729,147,1.585,153,0.303,156,0.235,165,0.148,166,0.258,167,0.57,257,1.082,258,1.34,259,1.176,260,1.78,261,1.176,262,1.176,263,1.082,264,1.176,265,1.082,266,1.52,267,1.128,268,1.176,269,1.082,270,1.176,271,1.176,272,1.037,273,0.764,274,1.52,275,1.082,276,0.994,277,1.176,278,1.082,279,1.176,280,1.082,281,1.176,282,1.735,283,1.176,284,1.037,285,1.176,286,1.037,287,0.994,288,1.176,289,1.082,290,1.176,291,1.082,292,1.176,293,1.176,294,1.082,295,1.176,296,1.082,297,1.176,298,1.082,299,1.128,300,0.764,301,1.176,302,1.128,303,1.684,304,1.082,305,1.176,306,1.082,307,1.128,308,1.176,309,1.082,310,1.176,311,1.082,312,1.179,313,1.176,314,1.082,315,1.082,316,1.128,317,1.176,318,1.128,319,1.176,320,1.082,321,1.176,322,0.912,323,0.953,324,1.037,325,1.176,326,1.176,327,0.012,328,0.012,335,2.233,346,2.448,398,2.867,610,2.867,662,2.615,696,3.847,730,4.551,939,1.728,975,2.568,1165,2.996,1297,3.847,1411,2.196,1426,4.467,1428,5.075,1433,4.445,1446,5.075,1455,5.075,1468,5.329,1535,2.996,1902,3.928,1903,7.29,1904,5.871,1905,5.075,1906,5.871,1907,5.871,1908,7.118,1909,3.928,1910,5.871,1911,3.928,1912,4.544,1913,3.928,1914,5.871,1915,5.871,1916,5.871]],["title/components/FormModelComponent.html",[0,0.141,284,0.868]],["body/components/FormModelComponent.html",[0,0.284,1,1.014,2,1.231,3,0.158,4,0.158,5,1.035,7,0.972,8,0.972,9,0.119,13,0.285,15,0.684,19,1.786,25,0.893,26,1.687,27,1.352,28,0.749,29,1.012,32,1.397,34,2.014,35,1.014,38,1.397,40,0.199,51,0.67,66,0.842,71,0.017,72,0.236,73,0.295,80,1.014,85,0.454,92,0.635,100,0.684,106,2.195,118,0.468,130,1.457,134,0.979,135,0.903,138,0.99,153,0.291,156,0.22,163,1.304,165,0.139,166,0.241,257,1.014,258,1.285,259,1.103,260,1.736,261,1.103,262,1.103,263,1.014,264,1.103,265,1.014,266,1.457,267,1.058,268,1.103,269,1.014,270,1.103,271,1.103,272,0.972,273,0.716,274,1.457,275,1.014,276,0.932,277,1.103,278,1.014,279,1.103,280,1.014,281,1.103,282,1.014,283,1.103,284,1.53,285,1.103,286,0.972,287,0.932,288,1.103,289,1.014,290,1.103,291,1.014,292,1.103,293,1.103,294,1.014,295,1.103,296,1.014,297,1.103,298,1.014,299,1.058,300,0.716,301,1.103,302,1.058,303,1.632,304,1.014,305,1.103,306,1.014,307,1.058,308,1.103,309,1.014,310,1.103,311,1.014,312,1.13,313,1.103,314,1.014,315,1.014,316,1.058,317,1.103,318,1.058,319,1.103,320,1.014,321,1.103,322,0.855,323,0.893,324,0.972,325,1.103,326,1.103,327,0.012,328,0.012,346,2.347,372,2.55,385,3.439,450,3.407,457,3.421,479,3.688,543,3.988,594,2.048,631,2.872,662,2.141,674,4.486,696,3.688,712,3.688,775,3.184,801,3.019,887,3.439,888,4.097,897,2.723,900,3.225,918,3.851,923,3.439,925,4.786,937,4.097,1204,3.619,1225,3.988,1267,4.248,1528,4.94,1729,4.866,1735,3.988,1736,5.198,1742,4.363,1917,6.027,1918,3.683,1919,4.363,1920,5.629,1921,5.629,1922,5.629,1923,6.705,1924,6.303,1925,4.26,1926,3.688,1927,3.988,1928,4.26,1929,5.629,1930,4.26,1931,4.866,1932,4.363,1933,4.26,1934,5.629,1935,4.866,1936,3.439,1937,4.866,1938,4.26]],["title/injectables/GeminiApiService.html",[353,2.696,590,0.453]],["body/injectables/GeminiApiService.html",[3,0.118,4,0.118,9,0.089,13,0.395,15,0.947,16,2.588,17,2.626,21,2.462,28,0.557,29,1.215,40,0.148,41,0.461,51,0.546,61,0.669,64,3.17,66,0.786,70,0.825,71,0.017,72,0.226,73,0.293,74,0.749,76,0.77,79,0.863,83,0.961,85,0.735,91,2.713,103,1.911,106,1.596,115,1.838,118,0.619,129,2.35,133,1.772,134,0.462,135,0.508,138,1.236,153,0.369,156,0.237,165,0.175,166,0.26,167,0.82,168,1.007,177,1.268,183,3.012,187,3.012,192,1.272,208,2.005,214,1.911,215,2.049,255,1.532,256,1.71,287,1.178,327,0.011,328,0.009,330,3.589,332,1.815,333,4.677,334,3.763,337,3.962,341,3.852,350,3.383,353,4.772,359,3.553,360,1.825,366,1.385,369,0.93,372,2.246,374,2.339,379,5.063,385,3.99,386,2.738,388,2.626,394,2.075,397,1.003,429,3.519,462,3.607,467,4.577,471,5.121,502,1.71,510,1.935,514,1.596,515,1.911,540,1.815,572,0.44,579,1.532,580,1.532,590,0.703,592,2.339,596,2.626,599,2.055,600,1.237,604,1.321,610,1.911,612,1.968,631,1.616,635,2.217,648,1.056,663,4.832,724,3.383,728,1.321,795,4.105,796,1.71,797,2.217,803,2.075,804,2.075,806,2.244,807,2.244,808,2.244,809,2.244,837,2.244,854,1.911,868,2.075,924,2.455,939,1.205,964,3.53,969,3.03,972,5.063,973,4.176,975,2.005,977,3.952,978,4.577,981,3.248,982,3.553,983,3.004,988,3.553,992,2.455,994,1.596,998,4.577,999,4.176,1000,4.176,1001,4.176,1002,3.383,1004,3.248,1008,3.816,1015,3.553,1020,1.71,1028,1.935,1032,3.291,1036,1.616,1039,2.217,1057,4.176,1062,3.553,1063,3.859,1077,2.455,1082,3.553,1085,2.244,1091,3.004,1094,2.244,1101,3.553,1102,3.187,1103,3.004,1104,3.012,1105,3.248,1106,3.553,1107,3.248,1108,3.553,1109,3.553,1110,4.176,1111,3.553,1112,3.553,1113,3.553,1115,2.455,1158,4.225,1439,2.244,1533,1.815,1554,3.869,1606,2.075,1607,2.455,1627,5.716,1714,3.248,1812,2.738,1939,5.646,1940,2.455,1941,4.584,1942,5.904,1943,4.584,1944,5.904,1945,5.387,1946,5.904,1947,4.584,1948,2.455,1949,4.584,1950,4.584,1951,3.167,1952,5.904,1953,6.265,1954,3.167,1955,3.553,1956,6.265,1957,3.962,1958,5.904,1959,4.856,1960,5.387,1961,4.584,1962,3.167,1963,4.584,1964,3.167,1965,3.167,1966,3.167,1967,3.167,1968,3.167,1969,4.584,1970,3.167,1971,3.167,1972,3.167,1973,2.738,1974,3.167,1975,3.167,1976,3.167,1977,2.455,1978,4.584,1979,3.167,1980,4.584,1981,2.738,1982,3.167,1983,2.738,1984,3.962,1985,4.584,1986,3.167,1987,3.167,1988,3.167,1989,3.167,1990,3.167,1991,3.167,1992,3.167,1993,4.584,1994,3.167,1995,3.167,1996,3.167,1997,3.962,1998,3.962,1999,4.584,2000,5.387,2001,3.167,2002,3.167,2003,3.167,2004,3.167,2005,3.167,2006,3.167,2007,3.167,2008,3.167,2009,3.167,2010,3.167,2011,2.738,2012,2.738,2013,3.167,2014,3.167,2015,3.167,2016,3.167,2017,3.962,2018,3.167,2019,3.167,2020,2.738,2021,4.584,2022,3.167,2023,2.455,2024,3.167,2025,3.167,2026,2.455,2027,3.167,2028,3.167,2029,4.584,2030,3.167,2031,3.167,2032,3.167,2033,3.167]],["title/components/GlobalLoaderComponent.html",[0,0.141,286,0.868]],["body/components/GlobalLoaderComponent.html",[0,0.27,1,0.994,2,1.215,3,0.155,4,0.155,5,1.021,7,0.953,8,0.953,9,0.117,13,0.418,19,0.994,25,0.875,26,1.684,27,1.351,28,0.734,29,1.002,31,0.639,32,1.379,34,1.994,35,0.994,38,1.379,40,0.195,41,0.558,51,0.661,61,0.609,66,0.869,70,0.85,71,0.017,72,0.279,73,0.292,74,1.026,76,0.933,79,0.734,80,0.994,83,1.164,85,0.592,92,0.75,100,0.67,118,0.554,130,1.438,134,0.911,135,1.002,146,2.686,147,1.796,148,1.148,153,0.322,156,0.216,163,1.278,165,0.136,166,0.237,167,0.697,257,0.994,258,1.268,259,1.081,260,1.722,261,1.081,262,1.081,263,0.994,264,1.081,265,0.994,266,1.438,267,1.037,268,1.081,269,0.994,270,1.081,271,1.081,272,0.953,273,0.702,274,1.438,275,0.994,276,0.913,277,1.081,278,0.994,279,1.081,280,0.994,281,1.081,282,0.994,283,1.081,284,0.953,285,1.081,286,1.625,287,1.714,288,1.081,289,0.994,290,1.081,291,0.994,292,1.081,293,1.081,294,0.994,295,1.081,296,0.994,297,1.081,298,0.994,299,1.037,300,0.702,301,1.081,302,1.037,303,1.616,304,0.994,305,1.081,306,0.994,307,1.037,308,1.081,309,0.994,310,1.081,311,0.994,312,1.115,313,1.081,314,0.994,315,0.994,316,1.037,317,1.081,318,1.037,319,1.081,320,0.994,321,1.081,322,0.838,323,0.875,324,0.953,325,1.081,326,1.081,327,0.011,328,0.011,335,2.113,346,2.316,372,2.764,400,2.686,428,4.732,429,3.883,438,2.02,484,3.812,490,2.02,496,3.639,502,3.923,509,2.736,510,2.551,537,2.686,741,3.639,797,3.571,824,2.552,906,4.064,939,1.588,969,3.728,1004,3.935,1114,3.393,1166,3.812,1220,3.182,1411,1.774,1447,3.393,1819,4.305,1926,3.639,2034,6.156,2035,3.61,2036,5.554,2037,4.801,2038,4.801,2039,5.554,2040,5.554,2041,5.395,2042,4.175,2043,5.554,2044,3.935,2045,5.554,2046,4.175,2047,4.801,2048,4.801,2049,4.175,2050,4.175,2051,4.175,2052,4.175,2053,5.554]],["title/injectables/GlobalLoaderService.html",[429,1.941,590,0.453]],["body/injectables/GlobalLoaderService.html",[0,0.288,3,0.187,4,0.187,9,0.141,13,0.457,40,0.235,41,0.629,51,0.745,66,0.895,70,0.958,71,0.017,72,0.262,73,0.319,74,1.066,76,1.199,79,0.827,85,0.726,92,0.843,118,0.567,128,3.587,134,0.734,135,0.807,147,1.69,153,0.323,156,0.26,165,0.164,166,0.285,167,0.786,168,0.995,286,1.802,287,1.721,327,0.013,328,0.013,335,2.381,372,2.381,397,1.1,428,4.806,429,3.194,484,3.587,496,4.674,501,4.346,502,4.038,503,4.346,537,3.028,590,0.745,600,1.357,648,1.676,739,4.852,797,3.71,906,3.824,969,3.619,1005,3.028,1166,4.087,1220,3.587,1411,2,1447,3.824,1932,4.852,2044,4.435,2047,5.411,2048,5.411,2054,6.344,2055,4.346,2056,4.435,2057,6.26,2058,4.102,2059,5.027,2060,6.26,2061,5.027,2062,5.027,2063,5.027,2064,4.852,2065,5.027,2066,5.027,2067,5.027]],["title/components/GraphsComponent.html",[0,0.141,289,0.906]],["body/components/GraphsComponent.html",[0,0.2,1,0.532,2,0.77,3,0.083,4,0.083,5,0.647,6,0.777,7,0.51,8,0.51,9,0.062,13,0.4,15,0.699,16,2.582,19,0.532,23,1.795,24,2.221,25,0.468,26,1.598,27,1.281,28,0.393,29,1.196,30,1.4,31,1.018,32,0.873,35,0.532,36,1.702,38,0.873,40,0.104,41,0.497,51,0.419,54,1.966,61,0.513,64,2.845,66,0.922,70,0.874,71,0.017,72,0.288,73,0.359,74,0.793,78,1.966,79,0.71,80,0.532,85,0.637,89,4.387,92,0.783,94,1.966,95,2.27,100,0.916,103,2.06,106,2.08,107,1.899,114,1.427,115,1.513,116,2.582,129,1.966,130,0.911,132,1.647,133,1.823,134,0.971,135,1.164,138,0.766,141,1.617,148,1.325,153,0.278,156,0.115,159,1.364,165,0.073,166,0.127,167,0.75,168,0.326,177,1.199,192,1.293,197,1.731,198,1.148,220,1.731,248,1.72,257,0.532,258,0.803,259,0.578,260,1.649,261,0.578,262,0.578,263,0.532,264,0.578,265,0.532,266,0.911,267,0.554,268,0.578,269,0.532,270,0.578,271,0.578,272,0.51,273,0.375,274,0.911,275,0.532,276,0.488,277,0.578,278,0.532,279,0.578,280,0.532,281,0.578,282,0.532,283,0.578,284,0.51,285,0.578,286,0.51,287,0.488,288,0.578,289,1.474,290,0.578,291,0.532,292,0.578,293,0.578,294,0.532,295,0.578,296,0.532,297,0.578,298,0.532,299,0.554,300,1.004,301,0.578,302,0.554,303,1.127,304,0.532,305,0.578,306,0.532,307,0.554,308,0.578,309,0.532,310,0.578,311,0.532,312,0.706,313,0.578,314,0.532,315,0.532,316,0.554,317,0.578,318,0.554,319,0.578,320,0.532,321,0.578,322,0.448,323,0.468,324,0.51,325,0.578,326,0.578,327,0.007,328,0.007,357,2.149,366,0.977,372,2.355,402,2.995,406,3.342,419,3.375,420,2.596,427,1.93,433,0.911,479,3.237,480,2.149,490,1.28,508,1.279,526,1.731,527,2.161,537,2.995,541,1.656,571,1.748,581,1.516,660,2.493,662,1.338,663,1.463,664,4.754,670,4.646,672,4.331,675,2.149,680,2.221,681,2.727,682,3.83,696,2.305,700,2.016,708,2.493,709,1.795,720,2.956,727,3.284,729,1.93,754,3.375,775,1.467,777,2.252,801,2.493,829,2.378,838,1.467,853,3.085,858,2.66,897,1.702,913,2.305,971,1.702,1011,2.016,1020,2.35,1090,2.727,1165,3.544,1172,2.149,1202,2.66,1204,2.35,1207,2.016,1235,3.808,1245,3.915,1281,2.305,1443,2.727,1606,1.463,1714,3.5,1785,2.493,1795,4.936,1815,2.727,1822,2.727,1823,2.727,1824,2.727,1825,2.727,1826,2.727,1827,2.727,1828,2.727,1829,2.727,1830,2.727,1831,2.727,2068,1.93,2069,4.94,2070,2.493,2071,3.518,2072,3.763,2073,2.727,2074,4.354,2075,4.354,2076,3.518,2077,4.354,2078,4.354,2079,4.354,2080,4.354,2081,4.354,2082,5.375,2083,5.846,2084,4.271,2085,3.041,2086,3.041,2087,3.041,2088,3.041,2089,3.518,2090,3.375,2091,4.426,2092,2.233,2093,3.518,2094,3.518,2095,3.763,2096,3.518,2097,2.233,2098,3.518,2099,2.233,2100,2.727,2101,2.233,2102,4.721,2103,3.518,2104,2.233,2105,5.709,2106,5.709,2107,3.518,2108,2.233,2109,3.518,2110,2.233,2111,3.041,2112,4.271,2113,2.233,2114,3.041,2115,2.233,2116,3.518,2117,2.233,2118,3.518,2119,3.041,2120,2.305,2121,4.354,2122,3.518,2123,4.94,2124,3.83,2125,4.358,2126,3.518,2127,3.518,2128,2.233,2129,4.354,2130,2.233,2131,3.518,2132,4.271,2133,4.354,2134,2.233,2135,5.165,2136,4.94,2137,4.354,2138,2.233,2139,4.354,2140,2.233,2141,4.354,2142,2.233,2143,4.354,2144,3.518,2145,2.233,2146,2.727,2147,3.518,2148,4.354,2149,3.522,2150,2.233,2151,4.354,2152,2.233,2153,4.354,2154,5.375,2155,5.375,2156,2.233,2157,2.233,2158,3.041,2159,3.041,2160,2.233,2161,3.763,2162,1.93,2163,1.93,2164,3.375,2165,2.233,2166,2.233,2167,2.233,2168,2.233,2169,3.83,2170,3.041,2171,1.93,2172,3.518,2173,3.041,2174,2.727,2175,6.371,2176,1.93,2177,3.518,2178,4.646,2179,2.233,2180,3.518,2181,3.518,2182,2.233,2183,3.518,2184,4.354,2185,5.709,2186,2.233,2187,3.041,2188,4.354,2189,1.93,2190,4.354,2191,4.354,2192,2.233,2193,4.354,2194,2.233,2195,3.041,2196,1.93,2197,1.93,2198,2.233,2199,2.233,2200,4.354,2201,4.354,2202,3.518,2203,2.233,2204,4.354,2205,4.354,2206,3.518,2207,2.233,2208,2.233,2209,1.93,2210,2.233,2211,2.233,2212,2.233,2213,2.233,2214,2.233,2215,2.233,2216,2.233,2217,2.233,2218,2.233,2219,2.233,2220,2.233,2221,1.93,2222,1.93,2223,2.233,2224,2.233,2225,2.233,2226,2.233,2227,2.233,2228,2.233,2229,2.233,2230,2.233,2231,2.233,2232,2.233,2233,2.233,2234,2.233,2235,2.233,2236,2.233,2237,2.233,2238,2.233,2239,2.233,2240,2.233,2241,2.233]],["title/components/HamburgerMenuComponent.html",[0,0.141,291,0.906]],["body/components/HamburgerMenuComponent.html",[0,0.247,1,0.882,2,1.12,3,0.138,4,0.138,5,0.942,6,1.289,7,0.845,8,0.845,9,0.104,13,0.445,19,0.882,25,0.776,26,1.671,27,1.34,28,0.651,29,0.942,32,1.271,34,1.875,35,0.882,36,2.477,38,1.271,40,0.173,41,0.515,51,0.61,61,0.54,66,0.884,70,0.969,71,0.017,72,0.288,73,0.274,74,0.88,76,0.861,78,2.038,79,0.677,80,0.882,83,1.073,85,0.625,92,0.775,100,0.594,103,2.135,105,3.628,114,1.503,118,0.488,126,2.122,130,1.325,132,1.707,134,0.924,135,0.822,146,2.477,148,1.222,151,3.417,153,0.303,154,2.427,156,0.191,163,1.134,165,0.12,166,0.21,167,0.795,192,0.622,257,0.882,258,1.169,259,0.959,260,1.639,261,0.959,262,0.959,263,0.882,264,0.959,265,0.882,266,1.325,267,0.919,268,0.959,269,0.882,270,0.959,271,0.959,272,0.845,273,0.622,274,1.325,275,0.882,276,0.81,277,0.959,278,0.882,279,0.959,280,0.882,281,0.959,282,0.882,283,0.959,284,0.845,285,0.959,286,0.845,287,0.81,288,0.959,289,0.882,290,0.959,291,1.636,292,2.001,293,0.959,294,0.882,295,0.959,296,0.882,297,0.959,298,0.882,299,0.919,300,0.622,301,0.959,302,0.919,303,1.519,304,0.882,305,0.959,306,0.882,307,0.919,308,0.959,309,0.882,310,0.959,311,0.882,312,1.271,313,0.959,314,0.882,315,0.882,316,0.919,317,0.959,318,0.919,319,0.959,320,0.882,321,0.959,322,0.744,323,0.776,324,0.845,325,0.959,326,0.959,327,0.01,328,0.01,330,4.176,335,1.947,400,2.477,401,3.355,404,4.388,425,3.628,433,1.325,438,1.863,449,2.624,450,3.565,452,4.485,456,6.769,458,4.114,460,5.073,490,2.303,541,1.947,545,2.427,585,1.783,712,4.148,825,2.135,902,4.426,905,3.628,920,3.201,922,5.073,923,3.585,924,5.151,925,3.845,929,4.426,933,4.485,939,1.409,949,3.201,950,2.871,971,2.477,1232,3.628,1275,3.868,1411,1.636,1440,3.355,1443,3.969,1525,3.355,1732,3.355,1869,2.624,1870,4.176,1897,2.624,1898,2.624,1926,3.355,1936,4.199,2242,6.207,2243,5.566,2244,3.201,2245,4.426,2246,3.969,2247,5.12,2248,5.12,2249,3.969,2250,4.485,2251,4.426,2252,5.868,2253,5.12,2254,5.868,2255,5.868,2256,3.969,2257,4.426,2258,6.331,2259,5.12,2260,3.969,2261,4.426,2262,5.12,2263,5.073,2264,5.868,2265,3.969,2266,3.703,2267,4.426,2268,3.969,2269,3.969,2270,4.426,2271,3.703,2272,5.12,2273,3.628,2274,3.703,2275,3.703,2276,6.645,2277,5.12,2278,3.703,2279,3.703,2280,2.871]],["title/injectables/HbsRenderService.html",[590,0.453,1149,2.054]],["body/injectables/HbsRenderService.html",[0,0.257,2,1.3,3,0.249,4,0.257,5,1.363,6,1.812,9,0.179,13,0.475,15,0.609,26,1.245,27,0.637,40,0.243,41,0.674,51,0.798,54,2.072,61,0.867,66,0.869,70,0.581,71,0.017,72,0.29,73,0.299,74,0.527,76,0.637,85,0.681,92,0.721,94,1.509,95,1.743,118,0.628,132,1.264,133,1.664,134,0.553,135,0.835,148,0.697,153,0.196,156,0.196,165,0.123,166,0.215,168,1.069,177,1.376,192,1.231,198,1.288,208,2.276,214,1.581,215,2.549,258,1.188,323,0.795,327,0.011,328,0.011,370,4.499,397,0.83,446,1.981,447,2.485,452,2.687,455,4.034,457,3.419,458,2.173,476,0.941,490,1.379,492,2.317,540,2.173,571,1.593,581,1.32,590,0.62,600,1.024,648,1.264,666,3.893,727,3.179,741,2.485,775,2.478,777,1.379,830,2.982,835,2.687,838,2.17,841,2.047,854,2.17,897,2.517,900,2.982,994,1.32,1034,4.331,1104,2.655,1117,3.618,1149,2.809,1163,2.485,1164,2.485,1170,2.982,1179,3.41,1184,2.317,1185,5.19,1191,3.687,1192,3.41,1198,3.687,1199,3.687,1207,2.982,1209,3.893,1210,2.485,1211,3.687,1212,4.21,1234,4.229,1240,3.63,1260,2.687,1264,2.687,1267,3.966,1352,2.809,1366,2.173,1388,2.687,1463,4.391,1533,2.173,1535,1.935,1715,2.94,2041,3.278,2058,4.731,2120,2.485,2257,3.278,2263,3.278,2270,3.278,2281,5.496,2282,2.94,2283,5.942,2284,6.395,2285,6.395,2286,6.395,2287,5.204,2288,5.204,2289,3.792,2290,3.792,2291,3.792,2292,5.204,2293,3.792,2294,3.792,2295,2.687,2296,3.792,2297,3.792,2298,3.792,2299,3.792,2300,3.792,2301,3.792,2302,3.792,2303,3.792,2304,5.204,2305,7.09,2306,5.528,2307,6.395,2308,6.923,2309,6.923,2310,3.792,2311,3.792,2312,5.942,2313,3.792,2314,3.792,2315,3.792,2316,3.792,2317,5.204,2318,3.792,2319,3.792,2320,3.278,2321,3.792,2322,3.687,2323,3.41,2324,3.792,2325,3.792,2326,3.792,2327,3.792,2328,3.792,2329,3.792,2330,5.204,2331,3.792,2332,3.792,2333,6.701,2334,6.395,2335,3.792,2336,3.792,2337,3.792,2338,3.792,2339,5.204,2340,3.792,2341,3.792,2342,3.278,2343,3.792,2344,3.792,2345,3.792,2346,5.204,2347,6.701,2348,3.792,2349,3.278,2350,3.792,2351,3.792,2352,3.792,2353,3.792,2354,4.034,2355,3.792,2356,3.792,2357,3.278,2358,3.792,2359,5.942,2360,3.792,2361,3.792,2362,3.792,2363,5.204,2364,5.942]],["title/components/HomeComponent.html",[0,0.141,294,0.906]],["body/components/HomeComponent.html",[0,0.221,1,0.661,2,0.91,3,0.103,4,0.103,5,0.765,6,0.966,7,0.634,8,0.634,9,0.078,13,0.433,15,1.036,19,0.661,25,0.582,26,1.633,27,1.31,28,0.488,29,0.801,30,1.656,31,0.848,32,1.033,34,1.593,35,0.661,36,2.012,38,1.033,40,0.194,41,0.418,51,0.495,66,0.919,70,0.954,71,0.017,72,0.278,73,0.36,74,0.866,78,2.205,80,0.661,85,0.774,92,0.702,99,2.68,100,0.446,103,2.598,106,2.626,113,2.947,114,1.453,115,2.184,116,1.735,118,0.604,128,3.174,130,1.613,133,1.033,134,0.969,135,1.11,138,0.732,142,3.224,147,1.495,148,1.222,151,2.99,153,0.307,156,0.143,158,1.416,163,0.85,165,0.09,166,0.157,167,0.834,173,1.343,177,1.188,192,0.997,198,0.534,257,0.661,258,0.949,259,0.719,260,1.536,261,0.719,262,0.719,263,0.661,264,0.719,265,0.661,266,1.077,267,0.689,268,0.719,269,0.661,270,0.719,271,0.719,272,0.634,273,0.467,274,1.077,275,0.661,276,0.607,277,0.719,278,0.661,279,0.719,280,0.661,281,0.719,282,0.661,283,0.719,284,0.634,285,0.719,286,0.634,287,0.607,288,0.719,289,1.319,290,0.719,291,0.661,292,0.719,293,0.719,294,1.483,295,0.719,296,0.661,297,0.719,298,0.661,299,0.689,300,0.467,301,0.719,302,0.689,303,1.291,304,0.661,305,0.719,306,1.319,307,0.689,308,0.719,309,0.661,310,0.719,311,0.661,312,0.835,313,0.719,314,0.661,315,0.661,316,0.689,317,0.719,318,0.689,319,0.719,320,0.661,321,0.719,322,0.557,323,0.582,324,0.634,325,0.719,326,0.719,327,0.009,328,0.009,332,2.383,343,3.047,400,2.012,402,3.664,404,3.174,433,1.72,450,3.269,457,1.416,476,1.649,483,3.224,495,3.385,537,2.012,545,1.819,571,1.977,603,2.947,635,2.012,661,2.947,662,1.582,664,5.047,672,4.693,701,3.174,702,3.174,703,2.541,709,2.827,717,3.174,720,3.183,761,2.4,768,2.4,777,1.01,813,1.276,825,2.31,897,2.012,908,1.696,989,2.726,1036,2.827,1039,3.213,1063,2.383,1080,2.947,1168,3.63,1172,2.541,1207,1.591,1209,1.819,1220,2.383,1243,1.819,1254,3.047,1257,2.947,1258,2.947,1281,1.819,1376,2.947,1440,3.63,1483,3.63,1815,2.152,1822,2.152,1823,2.152,1824,2.152,1825,2.152,1826,2.152,1827,2.152,1828,2.152,1829,2.152,1830,2.152,1831,2.152,1836,2.4,1878,2.541,2070,2.947,2073,3.224,2090,3.867,2091,3.867,2120,2.726,2164,5.514,2169,3.224,2174,2.152,2187,2.4,2189,2.4,2267,4.789,2365,2.4,2366,3.596,2367,4.988,2368,4.159,2369,4.988,2370,4.988,2371,4.988,2372,4.988,2373,4.159,2374,4.159,2375,4.159,2376,6.229,2377,5.54,2378,5.54,2379,3.596,2380,4.159,2381,4.159,2382,4.159,2383,4.988,2384,2.776,2385,4.159,2386,4.159,2387,4.159,2388,4.159,2389,4.159,2390,2.776,2391,4.159,2392,4.159,2393,2.776,2394,4.159,2395,2.776,2396,2.776,2397,2.776,2398,4.159,2399,6.642,2400,6.229,2401,2.776,2402,5.54,2403,4.159,2404,2.776,2405,4.159,2406,2.776,2407,4.159,2408,2.776,2409,2.776,2410,3.224,2411,3.596,2412,2.776,2413,4.159,2414,4.988,2415,2.776,2416,2.776,2417,2.776,2418,2.776,2419,2.776,2420,1.967,2421,2.776,2422,5.934,2423,4.159,2424,4.159,2425,4.159,2426,4.159,2427,4.159,2428,4.159,2429,2.776,2430,4.159,2431,4.159,2432,5.54,2433,4.159,2434,4.159,2435,2.776,2436,2.776,2437,4.159,2438,2.776,2439,2.776,2440,2.776,2441,2.776,2442,2.776,2443,2.776,2444,2.776,2445,6.229,2446,4.988,2447,4.159,2448,4.988,2449,2.776,2450,2.776,2451,2.776,2452,2.776,2453,2.776,2454,2.776,2455,2.776]],["title/components/InstallAppPopupComponentComponent.html",[0,0.141,296,0.906]],["body/components/InstallAppPopupComponentComponent.html",[0,0.286,1,0.9,2,1.136,3,0.141,4,0.141,5,0.955,7,0.863,8,0.863,9,0.106,13,0.348,15,0.607,19,0.9,25,0.792,26,1.674,27,1.366,28,0.665,29,0.952,30,2.067,31,1.059,32,1.289,34,1.895,35,0.9,38,1.289,40,0.177,41,0.522,51,0.618,61,0.552,66,0.868,70,0.579,71,0.017,72,0.314,73,0.299,74,0.525,76,0.873,79,0.686,80,0.9,83,1.088,85,0.553,92,0.585,99,2.512,100,0.607,106,1.808,118,0.432,130,1.344,134,0.552,135,0.607,138,1.216,148,1.231,150,3.402,151,2.803,153,0.306,156,0.195,163,1.157,165,0.123,166,0.214,167,0.474,222,2.793,257,0.9,258,1.185,259,0.979,260,1.653,261,0.979,262,0.979,263,0.9,264,0.979,265,0.9,266,1.344,267,0.938,268,0.979,269,0.9,270,0.979,271,0.979,272,0.863,273,0.635,274,1.344,275,0.9,276,0.827,277,0.979,278,0.9,279,0.979,280,0.9,281,0.979,282,0.9,283,0.979,284,0.863,285,0.979,286,0.863,287,0.827,288,0.979,289,0.9,290,0.979,291,0.9,292,0.979,293,0.979,294,0.9,295,0.979,296,1.52,297,2.056,298,1.909,299,0.938,300,0.635,301,0.979,302,0.938,303,1.536,304,0.9,305,0.979,306,0.9,307,0.938,308,0.979,309,0.9,310,0.979,311,0.9,312,1.042,313,0.979,314,0.9,315,0.9,316,0.938,317,0.979,318,0.938,319,0.979,320,0.9,321,0.979,322,0.759,323,0.792,324,0.863,325,0.979,326,0.979,327,0.011,328,0.011,346,2.165,398,2.663,402,2.512,409,4.525,418,6.124,422,5.786,450,3.404,458,2.975,470,5.52,476,1.289,483,4.025,484,2.975,504,5.491,543,3.679,547,3.268,596,2.975,662,1.975,674,2.975,695,2.65,696,3.402,838,2.165,887,3.901,888,3.901,897,2.512,900,2.975,918,3.624,923,3.901,937,3.172,939,1.438,1005,2.512,1017,3.172,1064,4.025,1165,2.65,1412,3.679,1426,4.286,1429,5.189,1474,3.268,1479,2.678,1487,4.025,1488,4.025,1735,3.679,1742,4.025,1909,3.268,1911,3.268,1926,4.184,1932,4.025,1936,4.225,1937,4.489,2020,4.489,2456,6.124,2457,5.193,2458,6.386,2459,6.386,2460,5.193,2461,3.78,2462,5.193,2463,4.489,2464,3.78,2465,3.78,2466,5.193,2467,3.78,2468,5.193,2469,4.489,2470,3.78,2471,3.78,2472,4.489,2473,5.193,2474,4.025,2475,5.193,2476,4.489]],["title/components/NavbarComponent.html",[0,0.141,304,0.906]],["body/components/NavbarComponent.html",[0,0.257,1,0.988,2,1.21,3,0.154,4,0.154,5,1.017,6,1.444,7,0.947,8,0.947,9,0.116,13,0.417,17,3.169,19,0.988,25,0.87,26,1.684,27,1.35,28,0.73,29,1.109,31,0.847,32,1.373,34,1.987,35,0.988,36,2.675,38,1.373,40,0.194,41,0.556,51,0.658,61,0.605,66,0.781,70,0.847,71,0.017,72,0.278,73,0.259,74,0.769,76,0.929,78,2.201,79,0.731,80,0.988,83,1.159,85,0.442,92,0.623,99,2.675,100,0.666,105,3.918,114,1.649,118,0.518,130,1.432,132,2.212,134,1.009,135,0.666,148,1.017,153,0.343,156,0.214,163,1.27,165,0.135,166,0.235,167,0.781,257,0.988,258,1.262,259,1.074,260,1.718,261,1.074,262,1.074,263,0.988,264,1.074,265,0.988,266,1.432,267,1.03,268,1.074,269,0.988,270,1.074,271,1.074,272,0.947,273,0.697,274,1.432,275,0.988,276,0.908,277,1.074,278,0.988,279,1.074,280,0.988,281,1.074,282,0.988,283,1.074,284,0.947,285,1.074,286,0.947,287,0.908,288,1.074,289,0.988,290,1.074,291,1.692,292,1.432,293,1.074,294,0.988,295,1.074,296,0.988,297,1.074,298,0.988,299,1.03,300,0.697,301,1.074,302,1.03,303,1.611,304,1.692,305,1.074,306,0.988,307,1.03,308,1.074,309,0.988,310,1.074,311,0.988,312,1.11,313,1.074,314,0.988,315,0.988,316,1.03,317,1.074,318,1.03,319,1.074,320,0.988,321,1.074,322,0.833,323,0.87,324,0.947,325,1.074,326,1.074,327,0.011,328,0.011,335,2.104,400,2.675,401,3.624,404,4.487,410,1.925,433,1.432,450,3.43,458,3.169,484,3.169,489,4.287,490,2.414,495,3.379,545,2.719,585,1.925,662,2.104,741,3.624,825,2.306,905,3.918,923,3.379,939,1.578,1022,2.985,1241,3.624,1368,3.379,1411,2.208,1525,3.624,1869,2.94,1870,4.276,1878,4.222,1897,2.94,1898,2.94,1926,3.624,1936,4.343,2243,3.216,2245,4.781,2246,5.714,2249,4.287,2250,3.918,2256,4.287,2260,4.287,2265,4.287,2268,4.287,2269,5.144,2280,3.216,2477,3.587,2478,6.635,2479,4.287,2480,7.109,2481,6.221,2482,5.53,2483,6.221,2484,5.53,2485,5.53,2486,4.781,2487,4.149,2488,4.781,2489,4.149,2490,4.149,2491,4.781]],["title/components/PieChartComponent.html",[0,0.141,306,0.906]],["body/components/PieChartComponent.html",[0,0.232,1,0.598,2,0.843,3,0.093,4,0.093,5,0.709,6,0.875,7,0.573,8,0.573,9,0.07,13,0.353,15,0.403,16,2.387,19,0.598,23,1.967,24,2.394,25,0.527,26,1.618,27,1.297,28,0.442,29,1.143,30,1.535,31,0.806,35,0.598,36,1.865,38,0.957,40,0.117,41,0.388,51,0.459,54,2.095,61,0.768,64,2.959,66,0.928,68,2.356,70,0.719,71,0.017,72,0.277,73,0.362,74,0.652,76,0.422,78,1.535,79,0.792,80,0.598,85,0.686,89,3.729,92,0.81,94,2.386,95,2.754,96,1.865,100,1.143,103,2.195,106,1.977,107,3.235,114,0.843,115,1.482,118,0.593,125,2.689,126,1.439,128,2.209,129,1.868,130,1.552,133,1.864,134,0.911,135,1.033,138,1.054,147,0.678,148,1.102,153,0.272,155,1.439,156,0.13,159,1.535,165,0.082,166,0.142,167,0.783,168,0.685,177,0.968,182,1.687,192,1.243,197,1.947,198,1.091,208,1.099,214,1.048,215,1.467,220,1.947,246,2.732,248,1.342,257,0.918,258,0.88,259,0.65,260,1.363,261,0.65,262,0.65,263,0.598,264,0.65,265,0.598,266,0.998,267,0.624,268,0.65,269,0.598,270,0.65,271,0.65,272,0.573,273,0.422,274,0.998,275,0.598,276,0.55,277,0.65,278,0.598,279,0.65,280,0.598,281,0.65,282,0.598,283,0.65,284,0.573,285,0.65,286,0.573,287,0.55,288,0.65,289,0.598,290,0.65,291,0.598,292,0.65,293,0.65,294,0.598,295,0.65,296,0.598,297,0.65,298,0.598,299,0.624,300,0.954,301,0.65,302,0.624,303,1.215,304,0.598,305,0.65,306,1.253,307,1.599,308,0.65,309,0.598,310,0.65,311,0.598,312,0.774,313,0.65,314,0.598,315,0.598,316,0.624,317,0.65,318,0.624,319,0.65,320,0.598,321,0.65,322,0.504,323,0.527,324,0.573,325,0.65,326,0.65,327,0.008,328,0.008,357,2.356,362,1.646,366,1.687,369,1.132,402,2.899,406,2.081,420,2.563,433,0.998,439,2.209,446,1.998,455,1.947,472,1.772,476,0.957,480,2.356,495,2.356,508,1.439,526,1.947,527,2.053,541,1.467,571,1.181,581,1.634,595,1.215,606,1.154,607,2.26,608,1.868,659,5.567,660,3.729,664,4.327,672,3.469,675,3.216,680,2.897,681,2.989,682,4.08,720,2.754,721,2.989,727,1.535,752,5.567,753,4.08,754,1.947,775,2.602,777,2.066,829,2.484,834,3.368,853,3.729,854,2.368,897,2.546,903,2.172,908,2.356,938,1.78,941,2.172,953,2.172,974,2.732,1011,2.689,1027,3.075,1035,1.439,1161,1.535,1165,1.282,1210,1.646,1234,1.535,1241,1.646,1245,1.646,1276,1.78,1297,2.527,1606,1.646,1667,2.527,1784,1.947,2070,3.325,2072,4.057,2083,2.172,2084,4.55,2085,4.55,2086,4.55,2087,4.55,2088,3.333,2090,4.402,2091,4.402,2100,4.08,2102,4.958,2111,3.333,2112,4.55,2114,3.333,2119,3.333,2135,2.172,2146,4.402,2159,3.333,2161,3.333,2162,2.172,2163,2.172,2164,3.638,2169,3.638,2170,3.333,2171,2.172,2173,3.333,2174,2.989,2176,2.172,2178,4.057,2195,3.333,2196,2.172,2197,2.172,2209,2.172,2221,2.172,2222,2.172,2295,1.78,2320,3.333,2349,3.333,2410,1.947,2411,3.333,2420,5.269,2479,4.08,2492,5.764,2493,1.947,2494,3.856,2495,3.333,2496,4.057,2497,4.693,2498,3.856,2499,4.693,2500,4.693,2501,4.693,2502,4.693,2503,4.55,2504,3.856,2505,3.856,2506,2.512,2507,2.512,2508,2.512,2509,5.993,2510,2.512,2511,2.512,2512,2.512,2513,5.264,2514,2.512,2515,2.512,2516,3.333,2517,3.856,2518,2.512,2519,4.402,2520,5.679,2521,3.856,2522,2.512,2523,2.512,2524,2.512,2525,2.512,2526,2.512,2527,3.856,2528,3.856,2529,2.512,2530,2.512,2531,2.512,2532,5.264,2533,2.512,2534,2.512,2535,2.512,2536,2.512,2537,2.512,2538,2.512,2539,4.693,2540,2.512,2541,2.512,2542,2.512,2543,2.512,2544,2.512,2545,4.693,2546,3.856,2547,4.693,2548,4.693,2549,5.993,2550,4.693,2551,4.693,2552,4.693,2553,5.993,2554,4.693,2555,4.693,2556,4.693,2557,2.512,2558,4.693,2559,3.856,2560,2.512,2561,4.693,2562,2.512,2563,3.856,2564,2.512,2565,2.512,2566,2.512,2567,2.512,2568,2.512,2569,2.512,2570,2.512,2571,2.172,2572,2.512,2573,2.512,2574,4.693,2575,2.512,2576,3.856,2577,2.512,2578,2.512,2579,2.512,2580,2.512,2581,2.512,2582,3.856,2583,2.512,2584,2.512]],["title/components/PlaylistMusicComponent.html",[0,0.141,309,0.906]],["body/components/PlaylistMusicComponent.html",[0,0.282,1,1.185,2,1.361,3,0.185,4,0.185,5,1.144,7,1.136,8,1.136,9,0.139,13,0.333,19,1.185,25,1.043,26,1.701,27,1.364,28,1.193,29,1.089,32,1.235,35,1.185,38,1.544,71,0.016,72,0.261,80,1.185,100,0.799,103,2.594,130,1.61,153,0.257,156,0.257,165,0.162,166,0.282,257,1.185,258,1.42,259,1.288,260,1.84,261,1.288,262,1.288,263,1.185,264,1.288,265,1.185,266,1.61,267,1.235,268,1.288,269,1.185,270,1.288,271,1.288,272,1.136,273,0.836,274,1.61,275,1.185,276,1.089,277,1.288,278,1.185,279,1.288,280,1.185,281,1.288,282,1.185,283,1.288,284,1.136,285,1.288,286,1.136,287,1.089,288,1.288,289,1.185,290,1.288,291,1.185,292,1.288,293,1.288,294,1.185,295,1.288,296,1.185,297,1.288,298,1.185,299,1.235,300,0.836,301,1.288,302,1.235,303,1.756,304,1.185,305,1.288,306,1.185,307,1.235,308,1.288,309,1.692,310,2.024,311,1.185,312,1.249,313,1.288,314,1.185,315,1.185,316,1.235,317,1.288,318,1.235,319,1.288,320,1.185,321,1.288,322,0.999,323,1.043,324,1.136,325,1.288,326,1.288,327,0.013,328,0.013,346,2.594,402,3.008,438,2.263,443,4.076,494,3.702,1007,3.8,2056,4.407,2273,4.407,2585,3.858,2586,3.858,2587,3.858,2588,3.858,2589,5.377,2590,6.22,2591,4.821,2592,6.22,2593,5.377,2594,5.377,2595,4.821]],["title/injectables/PostApiService.html",[430,2.696,590,0.453]],["body/injectables/PostApiService.html",[3,0.205,4,0.154,9,0.116,13,0.37,15,0.886,16,2.525,40,0.194,51,0.657,61,0.806,65,3.76,66,0.78,70,0.634,71,0.017,72,0.174,73,0.194,74,0.575,76,0.928,77,2.522,78,2.198,79,0.73,83,1.158,85,0.662,92,0.623,100,0.997,115,1.165,133,1.887,138,1.361,148,0.761,153,0.375,156,0.214,165,0.135,166,0.235,167,0.867,168,1.008,171,2.713,177,1.016,192,1.294,193,2.713,212,2.372,215,1.575,251,3.913,327,0.011,328,0.011,334,3.383,341,2.235,359,5.139,360,2.198,369,1.215,374,2.112,397,0.906,399,3.619,410,1.923,420,2.933,430,4.697,433,1.43,441,5.139,442,4.774,444,2.671,446,2.072,472,3.047,512,5.139,513,2.68,516,4.281,521,2.235,532,4.817,533,2.713,539,3.579,540,2.372,541,1.575,542,3.579,556,3.579,573,3.333,590,0.657,594,2.009,599,1.923,600,1.118,608,2.474,615,3.209,648,1.38,662,2.101,717,3.164,795,3.619,796,2.235,815,4.34,829,2.639,835,3.913,838,2.303,848,2.713,849,2.713,977,4.071,980,3.209,989,2.713,993,3.619,994,2.164,1002,3.957,1011,3.164,1017,3.374,1027,3.619,1107,3.913,1158,3.561,1207,3.957,1392,3.164,1395,3.374,1426,4.222,1484,2.713,1534,4.072,1931,4.774,1940,3.209,1948,3.209,2596,5.731,2597,4.774,2598,5.523,2599,5.523,2600,4.281,2601,7.104,2602,6.907,2603,6.63,2604,6.63,2605,4.14,2606,5.523,2607,3.619,2608,4.14,2609,5.523,2610,5.523,2611,5.523,2612,6.214,2613,4.14,2614,5.523,2615,5.523,2616,5.523,2617,4.697,2618,6.214,2619,4.14,2620,3.579,2621,4.14,2622,4.14,2623,4.14,2624,5.523,2625,4.14,2626,5.523,2627,4.14,2628,5.523,2629,4.14,2630,4.14,2631,5.523,2632,4.14,2633,4.14,2634,4.14,2635,4.14,2636,4.14,2637,4.14,2638,4.14,2639,5.523,2640,4.14,2641,5.523,2642,4.14,2643,4.14,2644,4.14,2645,4.14,2646,4.14,2647,4.14,2648,4.14,2649,4.14,2650,3.579,2651,4.14,2652,3.209]],["title/injectables/SaavnService.html",[590,0.453,984,2.696]],["body/injectables/SaavnService.html",[3,0.125,4,0.125,9,0.094,13,0.407,15,0.54,20,3.713,25,1.438,40,0.157,41,0.482,51,0.57,61,0.699,66,0.861,70,0.854,71,0.017,72,0.312,73,0.312,74,0.775,76,0.805,78,2.554,79,0.802,83,1.004,85,0.78,114,1.458,118,0.62,134,0.814,135,1.161,138,1.329,146,2.317,153,0.344,156,0.174,165,0.156,166,0.191,167,0.837,168,1.068,177,1.261,192,1.199,198,0.647,208,1.473,214,1.404,215,1.281,255,1.629,276,1.048,287,1.048,300,0.805,312,1.407,327,0.01,328,0.012,330,3.479,332,2.744,333,4.494,334,3.855,341,3.009,350,3.194,360,1.907,369,0.988,372,2.536,374,1.718,385,4.283,388,1.929,394,2.207,397,0.737,399,3.138,428,2.926,429,3.577,433,1.443,439,1.929,471,3.95,490,1.225,494,1.629,502,1.818,509,2.207,510,2.057,572,0.666,590,0.57,599,1.941,600,0.909,608,1.34,611,1.629,612,1.597,631,2.444,635,1.629,648,1.123,699,2.585,710,2.61,720,1.404,724,2.744,795,3.138,796,1.818,797,2.317,821,2.744,854,1.997,964,4.594,965,5.434,966,2.61,967,2.61,968,1.818,969,2.696,970,2.911,971,3.103,972,4.707,973,4.707,975,2.095,976,2.911,977,3.82,978,3.713,979,4.14,980,2.61,981,2.386,982,2.61,983,2.207,984,4.723,985,4.14,986,5.763,987,3.608,988,3.713,989,4.796,990,4.819,991,5.763,992,5.529,993,3.138,994,2.114,995,4.819,996,4.14,997,4.14,998,4.321,999,3.713,1000,3.713,1001,3.713,1002,3.194,1003,4.14,1004,3.393,1005,2.317,1006,3.393,1007,3.919,1008,3.393,1009,4.14,1010,3.713,1011,2.744,1012,4.14,1013,2.911,1014,2.911,1015,3.713,1016,4.14,1017,2.926,1018,4.819,1019,5.929,1020,3.463,1021,4.14,1022,2.585,1023,4.14,1024,3.713,1025,3.71,1026,3.194,1027,3.653,1028,3.406,1029,4.819,1030,3.406,1031,4.14,1032,2.926,1033,2.911,1034,2.057,1035,1.929,1036,2.444,1037,4.14,1038,5.546,1039,1.629,1040,2.386,1041,2.911,1042,1.548,1043,2.911,1044,2.911,1045,3.713,1046,1.818,1047,2.911,1048,2.057,1049,2.057,1050,4.14,1051,2.911,1052,2.911,1053,2.911,1054,2.911,1055,2.911,1056,2.911,1057,3.713,1058,4.14,1059,5.249,1060,4.14,1061,2.911,1062,2.61,1063,2.744,1064,3.713,1065,2.911,1066,2.911,1067,2.911,1068,2.911,1069,2.911,1070,2.911,1071,2.911,1072,2.911,1073,2.911,1074,2.911,1075,2.696,1076,2.911,1077,2.61,1078,1.718,1079,2.911,1080,2.386,1081,2.911,1082,2.61,1083,2.911,1084,2.911,1085,2.386,1086,2.207,1087,2.911,1088,2.911,1089,4.14,1090,2.61,1091,2.207,1092,2.911,1093,2.911,1094,2.386,1095,2.61,1096,2.911,1097,4.14,1098,2.911,1099,2.61,1100,2.911,1101,3.713,1102,2.585,1103,2.207,1104,2.444,1105,2.386,1106,3.713,1107,2.386,1108,2.61,1109,2.61,1110,4.321,1111,2.61,1112,2.61,1113,2.61,1114,2.926,1115,4.707,1948,2.61,2653,4.79,2654,4.79,2655,4.79,2656,3.367,2657,3.367,2658,3.367,2659,3.367,2660,3.367]],["title/interfaces/Schema.html",[407,2.18,572,0.529]],["body/interfaces/Schema.html",[3,0.143,4,0.143,9,0.107,13,0.257,16,2.477,21,1.602,29,0.617,31,0.588,41,0.528,51,0.457,66,0.482,71,0.017,72,0.22,77,2.973,79,0.508,85,0.835,91,1.765,92,0.674,100,0.617,115,1.081,116,1.602,118,0.592,129,2.09,132,2.245,133,1.671,134,0.766,135,0.843,138,1.339,148,0.966,153,0.198,156,0.198,165,0.171,166,0.218,167,0.751,168,1.084,177,1.416,182,2.297,183,1.96,187,1.96,198,1.15,327,0.011,328,0.011,335,1.461,397,0.84,407,4.574,408,3.72,410,1.338,433,1.842,436,2.275,438,1.398,444,1.858,446,1.281,513,1.398,514,2.083,515,2.495,527,1.681,541,1.461,572,0.831,573,2.749,574,1.461,576,1.751,578,2.722,579,1.858,580,1.858,590,0.625,593,5.132,594,1.398,600,1.037,610,2.807,612,2.317,639,2.09,645,2.893,680,1.96,720,1.602,724,3.684,777,1.398,813,1.765,814,3.008,815,2.347,829,2.958,838,2.19,854,3.194,987,2.413,1007,4.113,1034,2.347,1042,1.765,1046,2.074,1075,3.441,1078,1.96,1203,3.655,1304,4.54,1533,3.008,1557,2.347,1955,2.978,2607,2.517,2661,2.978,2662,4.07,2663,4.539,2664,3.842,2665,3.842,2666,4.539,2667,3.321,2668,3.321,2669,3.321,2670,3.321,2671,3.321,2672,3.321,2673,3.321,2674,3.321,2675,3.321,2676,3.321,2677,3.321,2678,2.722,2679,2.722,2680,2.722,2681,2.722,2682,2.722,2683,2.722,2684,2.722,2685,3.321,2686,3.321,2687,2.201,2688,2.347,2689,2.347,2690,2.347,2691,2.347,2692,2.347,2693,2.347,2694,3.321,2695,3.321,2696,3.321,2697,3.321,2698,3.321,2699,3.321,2700,3.321,2701,3.321,2702,3.321,2703,3.321,2704,3.321,2705,3.321,2706,3.321,2707,3.321,2708,3.321,2709,3.321,2710,3.321,2711,3.321,2712,3.321,2713,3.321,2714,3.321,2715,3.321,2716,3.321,2717,3.321,2718,3.321,2719,3.321,2720,3.321,2721,3.321,2722,3.321,2723,3.321,2724,3.321,2725,3.321,2726,3.321,2727,3.321,2728,3.321,2729,3.321,2730,3.321,2731,3.321,2732,3.321]],["title/components/SearchButtonComponent.html",[0,0.141,311,0.906]],["body/components/SearchButtonComponent.html",[0,0.263,1,0.894,2,1.13,3,0.14,4,0.14,5,1.171,6,1.307,7,0.857,8,0.857,9,0.105,13,0.346,15,0.602,19,0.894,25,0.787,26,1.673,27,1.341,28,0.66,29,0.948,30,2.057,31,0.791,32,1.283,34,1.888,35,0.894,36,2.499,38,1.283,40,0.175,41,0.519,51,0.615,61,0.754,66,0.904,70,0.575,71,0.017,72,0.248,73,0.298,74,0.718,76,0.868,79,0.683,80,0.894,83,1.083,85,0.63,92,0.778,99,2.499,100,0.602,106,2.657,107,2.789,114,1.393,118,0.312,125,3.386,126,2.15,128,2.961,130,1.338,134,0.754,135,1.022,138,1.12,147,1.013,148,1.171,151,2.789,153,0.329,155,2.15,156,0.194,158,1.915,163,1.149,165,0.122,166,0.213,167,0.471,168,0.548,171,3.386,173,1.815,252,3.661,257,0.894,258,1.179,259,0.972,260,1.648,261,0.972,262,0.972,263,0.894,264,0.972,265,0.894,266,1.338,267,0.932,268,0.972,269,0.894,270,0.972,271,0.972,272,0.857,273,0.631,274,1.338,275,0.894,276,0.821,277,0.972,278,0.894,279,0.972,280,0.894,281,0.972,282,0.894,283,0.972,284,0.857,285,0.972,286,0.857,287,1.547,288,0.972,289,0.894,290,0.972,291,0.894,292,0.972,293,0.972,294,0.894,295,0.972,296,0.894,297,0.972,298,0.894,299,0.932,300,0.631,301,0.972,302,0.932,303,1.53,304,0.894,305,0.972,306,0.894,307,0.932,308,0.972,309,0.894,310,0.972,311,1.715,312,1.602,313,0.972,314,0.894,315,0.894,316,0.932,317,0.972,318,0.932,319,0.972,320,0.894,321,0.972,322,0.754,323,0.787,324,0.857,325,0.972,326,0.972,327,0.011,328,0.011,338,4.467,343,3.61,428,3.89,429,3.249,469,3.661,484,2.961,490,1.88,496,3.386,502,2.026,509,2.459,510,2.293,521,2.026,550,4.936,560,3.245,616,2.789,662,1.965,797,2.499,821,4.127,887,4.216,888,4.216,900,2.961,918,3.61,933,3.661,937,3.157,1008,5.408,1042,2.375,1220,2.961,1229,2.659,1243,2.459,1380,4.511,1447,3.157,1468,4.006,1732,3.386,1736,4.006,1750,4.467,1936,3.89,1997,5.504,2273,3.661,2379,5.504,2733,6.319,2734,6.319,2735,3.245,2736,5.167,2737,5.167,2738,5.91,2739,5.167,2740,5.91,2741,5.91,2742,6.367,2743,6.367,2744,3.753,2745,5.167,2746,5.91,2747,3.753,2748,5.167,2749,5.167,2750,5.167,2751,5.167,2752,3.753,2753,5.167,2754,5.167,2755,5.167,2756,5.167,2757,3.753,2758,5.167,2759,5.167,2760,3.753,2761,3.753,2762,5.167,2763,5.167,2764,3.753,2765,5.91,2766,3.753,2767,3.753,2768,3.753,2769,5.167,2770,3.753,2771,3.753,2772,3.753,2773,3.753,2774,3.753,2775,3.753,2776,3.753,2777,3.753,2778,3.753]],["title/components/SearchMusicComponent.html",[0,0.141,314,0.906]],["body/components/SearchMusicComponent.html",[0,0.281,1,1.18,2,1.357,3,0.184,4,0.184,5,1.141,7,1.131,8,1.131,9,0.139,13,0.332,17,3.554,19,1.18,25,1.039,26,1.701,27,1.364,28,0.871,29,1.087,32,1.23,35,1.18,38,1.54,71,0.016,72,0.26,80,1.18,100,0.795,106,2.16,130,1.606,138,1.091,153,0.256,156,0.256,165,0.161,166,0.281,257,1.18,258,1.416,259,1.283,260,1.837,261,1.283,262,1.283,263,1.18,264,1.283,265,1.18,266,1.606,267,1.23,268,1.283,269,1.18,270,1.283,271,1.283,272,1.131,273,0.833,274,1.606,275,1.18,276,1.084,277,1.283,278,1.18,279,1.283,280,1.18,281,1.283,282,1.18,283,1.283,284,1.131,285,1.283,286,1.131,287,1.084,288,1.283,289,1.18,290,1.283,291,1.18,292,1.283,293,1.283,294,1.18,295,1.283,296,1.18,297,1.283,298,1.18,299,1.23,300,0.833,301,1.283,302,1.23,303,1.753,304,1.18,305,1.283,306,1.18,307,1.23,308,1.283,309,1.18,310,1.283,311,1.18,312,1.588,313,1.283,314,1.69,315,1.18,316,1.23,317,1.283,318,1.23,319,1.283,320,1.18,321,1.283,322,0.995,323,1.039,324,1.131,325,1.283,326,1.283,327,0.015,328,0.013,346,2.587,494,3.699,572,0.862,594,2.257,662,2.359,821,3.554,1026,3.554,1668,5.502,2273,4.395,2585,3.841,2588,3.841,2593,5.363,2594,5.363,2595,4.809,2779,3.841,2780,3.841,2781,6.203]],["title/injectables/SectionService.html",[590,0.453,1870,2.18]],["body/injectables/SectionService.html",[2,1.395,3,0.193,4,0.193,9,0.145,13,0.427,15,1.157,40,0.242,41,0.641,51,0.759,66,0.867,70,0.793,71,0.017,72,0.217,73,0.242,74,0.72,79,0.843,85,0.552,92,0.719,103,2.659,107,3.891,114,1.711,118,0.575,134,0.93,135,1.023,146,3.084,153,0.329,156,0.268,165,0.168,166,0.293,167,0.65,168,1.008,222,2.789,327,0.013,328,0.013,332,3.653,335,2.425,397,1.133,398,2.659,404,4.612,436,2.425,585,2.22,590,0.759,594,2.319,600,1.398,648,1.727,825,3.006,905,4.517,983,3.393,1010,5.588,1022,3.441,1176,4.517,1368,3.895,1411,2.207,1865,6.398,1870,3.653,1878,3.895,2056,4.517,2486,5.511,2782,4.477,2783,6.375,2784,7.402,2785,7.208,2786,7.208,2787,6.907,2788,6.375,2789,5.178,2790,6.375,2791,5.178,2792,6.375,2793,6.375,2794,6.375,2795,5.178,2796,6.375,2797,5.511,2798,5.178]],["title/interfaces/Session.html",[572,0.529,1153,2.493]],["body/interfaces/Session.html",[0,0.146,3,0.146,4,0.146,5,1.428,6,0.893,7,0.586,8,0.586,9,0.195,15,0.92,17,1.47,23,1.309,24,2,26,0.538,31,0.728,40,0.12,41,0.478,54,1.021,61,0.374,69,1.309,71,0.017,72,0.108,73,0.283,92,0.6,94,1.021,115,1.103,118,0.61,125,2.724,134,0.777,144,1.385,147,1.91,148,0.979,153,0.296,155,1.47,156,0.133,165,0.083,166,0.145,168,1.02,173,1.896,177,1.222,192,1.175,198,1.344,208,2.644,212,1.47,213,3.094,214,2.391,215,2.578,222,1.714,248,1.364,273,0.799,300,1.057,312,0.515,322,0.515,323,1.465,327,0.008,328,0.008,341,3.928,350,3.715,369,1.562,372,2.181,374,1.309,388,3.95,397,0.561,457,2.426,475,1.241,476,1.896,492,1.568,521,1.385,524,2.394,527,1.122,540,1.47,559,1.681,562,1.818,563,3.369,567,3.369,569,2.568,571,1.63,572,0.661,574,0.976,581,1.364,604,1.07,616,1.385,628,1.241,634,1.241,639,1.021,645,2.3,666,4.581,709,1.309,726,4.062,775,1.07,777,2.666,796,3.094,797,2.3,813,1.179,825,1.07,830,2.724,838,1.07,909,2.568,913,3.116,969,2.574,971,2.3,975,2.508,977,2.245,994,1.364,1002,1.47,1005,1.241,1020,2.566,1032,3.692,1086,1.681,1102,1.385,1104,1.309,1116,2.568,1117,1.309,1118,1.47,1119,1.818,1120,1.989,1121,1.989,1122,1.989,1123,1.989,1124,1.989,1125,1.989,1126,1.989,1127,1.989,1128,1.989,1129,1.989,1130,1.989,1131,1.989,1132,1.989,1133,1.989,1134,1.989,1135,1.989,1136,1.989,1137,1.989,1138,1.989,1139,1.989,1140,1.989,1141,1.989,1142,3.038,1143,3.038,1144,2.115,1145,1.818,1146,2.115,1147,3.116,1148,1.818,1149,2.115,1150,1.568,1151,1.818,1152,2.568,1153,3.96,1154,4.444,1155,1.989,1156,1.47,1157,4.444,1158,2.245,1159,3.038,1160,1.989,1161,4.059,1162,3.116,1163,4.517,1164,2.568,1165,1.309,1166,2.245,1167,1.989,1168,1.681,1169,5.719,1170,1.47,1171,3.369,1172,2.394,1173,1.47,1174,1.681,1175,1.989,1176,1.818,1177,1.989,1178,1.989,1179,2.568,1180,1.989,1181,3.038,1182,1.989,1183,1.989,1184,1.568,1185,4.062,1186,3.038,1187,5.257,1188,3.686,1189,3.686,1190,1.989,1191,5.227,1192,2.568,1193,1.989,1194,1.818,1195,1.989,1196,1.989,1197,1.989,1198,1.818,1199,1.818,1200,3.369,1201,3.686,1202,3.841,1203,3.692,1204,3.394,1205,4.685,1206,4.126,1207,4.169,1208,4.126,1209,4.803,1210,3.488,1211,4.455,1212,4.455,1213,4.685,1214,1.989,1215,4.126,1216,5.255,1217,4.874,1218,4.444,1219,1.989,1220,2.245,1221,1.818,1222,4.444,1223,1.681,1224,3.686,1225,1.818,1226,5.151,1227,1.989,1228,3.038,1229,3.369,1230,1.989,1231,3.488,1232,3.369,1233,1.989,1234,2.394,1235,2.777,1236,1.989,1237,1.989,1238,1.989,1239,1.989,1240,3.841,1241,1.681,1242,1.818,1243,3.116,1244,1.989,1245,1.681,1246,3.116,1247,1.989,1248,3.686,1249,1.989,1250,3.686,1251,1.989,1252,1.989,1253,1.989,1254,2.905,1255,1.989,1256,1.989,1257,2.777,1258,2.777,1259,3.686,1260,1.818,1261,3.038,1262,1.989,1263,1.989,1264,3.369,1265,3.96,1266,3.038,1267,1.47,1268,4.685,1269,1.989,1270,3.771,1271,3.038,1272,1.989,1273,1.989,1274,1.989,1275,1.568,1276,1.818,1277,1.989,1278,1.989,1279,5.026,1280,1.989,1281,1.681,1282,3.038,1283,1.989,1284,1.989,1285,1.989,1286,1.989,1287,1.989,1288,1.989,1289,1.989,1290,1.989,1291,1.989,1292,1.989,1293,1.989,1294,1.989,1295,1.989,1296,1.989,1297,2.568,1298,1.989,1299,1.989,1300,1.989,1301,1.989,1302,1.989,1303,1.989,1304,1.568,1305,1.989,1306,1.989,1307,1.989,1308,1.989,1309,1.989,1310,5.255,1311,1.989,1312,1.989,1313,1.989,1314,1.989,1315,1.989,1316,1.989,1317,1.989,1318,1.989,1319,1.989,1320,1.989,1321,3.686,1322,3.038,1323,1.989,1324,1.989,1325,4.126,1326,4.685,1327,1.989,1328,1.989,1329,1.989,1330,3.686,1331,3.686,1332,1.989,1333,1.989,1334,1.989,1335,1.989,1336,1.47,1337,1.989,1338,4.126,1339,1.989,1340,1.989,1341,1.989,1342,3.038,1343,1.989,1344,1.818,1345,1.989,1346,1.989,1347,1.989,1348,1.989,1349,1.989,1350,1.989,1351,1.989,1352,2.115,1353,1.989,1354,1.818,1355,1.989,1356,3.686,1357,1.989,1358,1.989,1359,1.989,1360,1.989,1361,1.989,1362,1.989,1363,1.989,1364,1.989,1365,1.989,1366,1.47,1367,1.989,1368,1.568,1369,1.989,1370,3.038,1371,1.989,1372,1.989,1373,3.038,1374,1.989,1375,1.681,1376,1.818,1377,1.989,1378,1.989,1379,1.989,1380,1.818,1381,1.989,1382,1.989,1383,1.989,1384,1.681,1385,1.989,1386,1.989,1387,1.989,1388,1.818,1389,1.989,1390,3.488,1391,1.989,1392,1.47,1393,1.818,1394,1.989,1395,1.568,1396,1.989,1397,1.989,1398,2.394,1399,1.989,1400,3.038,1401,1.989,1402,3.252,1403,1.989,1404,3.038,1405,1.989,1406,1.989,1407,1.989,1408,3.038,1409,1.989,1410,1.989,1411,0.82,1412,1.818,1413,1.989,1414,1.568,1415,1.818,1416,1.818,1417,1.818,1418,1.818,1419,1.818,1420,1.989,1421,1.989,1422,1.681,1423,1.989,1424,1.989,1425,1.989]],["title/components/SettingItemComponent.html",[0,0.141,315,0.906]],["body/components/SettingItemComponent.html",[0,0.285,1,1.148,2,1.334,3,0.179,4,0.179,5,1.121,7,1.1,8,1.1,9,0.135,13,0.323,19,1.148,25,1.01,26,1.699,27,1.362,28,0.848,29,1.073,30,2.427,31,0.934,32,1.197,35,1.148,38,1.514,40,0.225,66,0.605,71,0.017,72,0.256,73,0.225,80,1.148,100,0.774,106,2.123,118,0.507,130,1.578,132,2.033,147,1.646,153,0.249,156,0.249,165,0.157,166,0.273,257,1.148,258,1.392,259,1.248,260,1.819,261,1.248,262,1.248,263,1.148,264,1.248,265,1.148,266,1.578,267,1.197,268,1.248,269,1.148,270,1.248,271,1.248,272,1.1,273,0.81,274,1.578,275,1.148,276,1.055,277,1.248,278,1.148,279,1.248,280,1.148,281,1.248,282,1.148,283,1.248,284,1.1,285,1.248,286,1.1,287,1.055,288,1.248,289,1.148,290,1.248,291,1.148,292,1.248,293,1.248,294,1.148,295,1.248,296,1.148,297,1.248,298,1.148,299,1.197,300,0.81,301,1.248,302,1.197,303,1.731,304,1.148,305,1.248,306,1.148,307,1.197,308,1.248,309,1.148,310,1.248,311,1.148,312,1.224,313,1.248,314,1.148,315,1.673,316,1.906,317,1.248,318,1.197,319,1.248,320,1.148,321,1.248,322,0.968,323,1.01,324,1.1,325,1.248,326,1.248,327,0.012,328,0.012,372,2.319,439,3.493,537,2.949,541,2.319,631,3.111,639,2.947,775,3.202,837,4.32,888,3.725,897,2.949,968,3.291,975,2.667,1476,4.32,1919,4.726,1927,4.32,2469,5.271,2799,5.271,2800,5.271,2801,4.167,2802,5.271,2803,5.271,2804,6.097,2805,4.821]],["title/components/SidebarComponent.html",[0,0.141,320,0.906]],["body/components/SidebarComponent.html",[0,0.269,1,0.971,2,1.196,3,0.152,4,0.152,5,1.006,6,1.42,7,0.931,8,0.931,9,0.114,13,0.413,19,0.971,25,0.855,26,1.682,27,1.349,28,1.085,29,1.103,30,2.177,31,0.837,32,1.358,34,1.971,35,0.971,36,2.645,38,1.358,40,0.191,41,0.55,51,0.651,61,0.595,66,0.774,70,0.837,71,0.017,72,0.297,73,0.288,74,0.76,76,0.919,79,0.723,80,0.971,83,1.146,85,0.435,92,0.616,99,2.645,100,0.655,103,2.28,105,3.875,114,1.442,118,0.572,130,1.416,132,2.197,134,1.003,135,0.655,146,3.422,153,0.319,156,0.211,163,1.249,165,0.133,166,0.231,167,0.774,257,0.971,258,1.248,259,1.056,260,1.706,261,1.056,262,1.056,263,0.971,264,1.056,265,0.971,266,1.416,267,1.013,268,1.056,269,0.971,270,1.056,271,1.056,272,0.931,273,0.686,274,1.416,275,0.971,276,0.892,277,1.056,278,0.971,279,1.056,280,0.971,281,1.056,282,0.971,283,1.056,284,0.931,285,1.056,286,0.931,287,0.892,288,1.056,289,0.971,290,1.056,291,0.971,292,1.056,293,1.056,294,0.971,295,1.056,296,0.971,297,1.056,298,0.971,299,1.013,300,1.037,301,1.056,302,1.013,303,1.597,304,0.971,305,1.056,306,0.971,307,1.013,308,1.056,309,0.971,310,1.056,311,0.971,312,1.098,313,1.056,314,0.971,315,0.971,316,1.013,317,1.056,318,1.013,319,1.056,320,1.684,321,1.056,322,0.819,323,0.855,324,0.931,325,1.056,326,1.056,327,0.011,328,0.011,330,3.133,394,3.583,398,2.28,400,2.645,404,4.445,410,2.295,433,1.416,438,1.989,450,3.418,458,3.133,523,4.239,541,2.08,543,3.875,545,2.673,573,2.513,585,1.904,639,2.177,661,3.875,662,2.08,667,4.727,825,3.134,923,3.341,939,1.552,971,2.645,1005,2.645,1022,2.952,1080,3.875,1242,5.325,1368,3.341,1411,2.105,1525,3.583,1785,3.875,1869,2.89,1870,4.262,1878,3.341,1897,2.89,1898,2.89,2023,4.239,2246,5.693,2250,3.875,2251,4.727,2256,4.239,2260,4.239,2261,4.727,2265,4.239,2268,4.239,2269,4.239,2280,3.162,2488,4.727,2806,3.527,2807,5.469,2808,5.469,2809,4.727,2810,5.469,2811,6.169,2812,5.469,2813,6.169,2814,5.469,2815,4.08,2816,5.469,2817,5.469,2818,4.08]],["title/interfaces/Song.html",[572,0.529,987,1.748]],["body/interfaces/Song.html",[3,0.171,4,0.171,9,0.129,13,0.309,40,0.215,41,0.596,71,0.017,72,0.3,73,0.342,138,1.042,165,0.225,198,0.886,273,1.251,327,0.012,328,0.012,433,1.193,463,2.471,476,1.626,494,2.866,572,1.048,574,1.753,576,2.304,585,2.063,612,2.304,706,2.641,720,3.051,728,3.051,775,3.051,816,3.458,824,2.723,987,3.728,994,2.651,1025,4.222,1026,4.096,1030,2.816,1042,3.363,1046,3.73,1048,4.222,1049,4.222,1075,2.866,1078,3.734,1411,1.472,1535,3.023,2687,3.96,2688,4.222,2689,4.47,2690,4.222,2691,4.547,2692,4.222,2693,4.222,2819,3.02,2820,4.609,2821,4.609,2822,4.896,2823,4.896,2824,5.341,2825,4.896,2826,4.197,2827,4.896,2828,4.222,2829,4.222,2830,4.222,2831,3.619,2832,4.197,2833,3.882,2834,4.197,2835,4.197,2836,4.197,2837,3.619,2838,5.184,2839,3.265,2840,3.265,2841,3.265,2842,3.265,2843,3.265]],["title/interfaces/SongArtists.html",[572,0.529,2828,2.324]],["body/interfaces/SongArtists.html",[3,0.189,4,0.189,9,0.142,13,0.341,40,0.238,41,0.634,71,0.017,72,0.3,73,0.238,138,0.896,165,0.233,198,0.979,273,1.238,327,0.013,328,0.013,463,2.124,476,1.264,494,2.463,572,1.068,574,1.937,576,2.389,585,1.773,612,2.104,706,2.918,720,2.631,728,2.989,775,2.631,816,3.316,824,2.341,987,3.694,994,2.649,1025,3.855,1026,4.106,1030,3.855,1042,2.9,1046,2.749,1048,3.855,1049,3.855,1075,2.463,1078,3.22,1411,1.627,1535,2.599,2687,2.918,2688,3.112,2689,3.855,2690,3.112,2691,4.378,2692,3.112,2693,3.112,2819,3.337,2822,3.608,2823,3.608,2824,4.858,2825,3.608,2826,3.608,2827,4.471,2828,4.189,2829,3.855,2830,3.855,2831,3.112,2832,3.608,2833,3.337,2834,3.608,2835,3.608,2836,3.608,2837,3.112,2838,5.318,2839,3.608,2840,3.608,2841,3.608,2842,3.608,2843,5.077]],["title/interfaces/SongDownloadUrl.html",[572,0.529,2829,2.324]],["body/interfaces/SongDownloadUrl.html",[3,0.187,4,0.187,9,0.141,13,0.337,40,0.235,41,0.63,71,0.017,72,0.286,73,0.235,138,0.886,165,0.232,198,0.968,273,1.289,327,0.013,328,0.013,463,2.1,476,1.25,494,2.436,572,1.066,574,1.916,576,2.38,585,1.753,612,2.089,706,3.59,720,2.613,728,3.062,775,2.613,816,3.3,824,2.314,987,3.691,994,2.739,1025,3.828,1026,3.909,1030,3.077,1042,2.88,1046,2.718,1048,3.828,1049,3.828,1075,2.436,1078,3.197,1411,2.002,1535,2.57,2687,2.886,2688,3.077,2689,3.828,2690,3.077,2691,4.361,2692,3.077,2693,3.077,2819,3.3,2822,3.568,2823,3.568,2824,4.833,2825,3.568,2826,3.568,2827,4.44,2828,3.828,2829,4.168,2830,3.828,2831,3.077,2832,3.568,2833,3.3,2834,3.568,2835,3.568,2836,3.568,2837,3.077,2838,5.574,2839,4.44,2840,4.44,2841,3.568,2842,3.568,2843,3.568]],["title/interfaces/SongImage.html",[572,0.529,2830,2.324]],["body/interfaces/SongImage.html",[3,0.188,4,0.188,9,0.141,13,0.338,40,0.236,41,0.631,71,0.017,72,0.286,73,0.236,138,0.889,165,0.232,198,0.971,273,1.235,327,0.013,328,0.013,463,2.107,476,1.255,494,2.444,572,1.067,574,1.922,576,2.383,585,1.759,612,2.094,706,2.895,720,2.619,728,3.065,775,2.619,816,3.457,824,2.322,987,3.692,994,2.728,1025,3.837,1026,3.915,1030,3.087,1042,2.886,1046,2.728,1048,3.837,1049,3.837,1075,2.444,1078,3.204,1411,1.614,1535,2.579,2687,2.895,2688,3.087,2689,3.837,2690,3.087,2691,4.641,2692,3.087,2693,3.087,2819,3.311,2822,3.58,2823,3.58,2824,4.841,2825,3.58,2826,3.58,2827,4.449,2828,3.837,2829,3.837,2830,4.174,2831,3.087,2832,3.58,2833,3.311,2834,3.58,2835,3.58,2836,3.58,2837,3.087,2838,5.521,2839,3.58,2840,3.58,2841,4.449,2842,4.449,2843,3.58]],["title/injectables/StorageService.html",[513,1.384,590,0.453]],["body/injectables/StorageService.html",[3,0.106,4,0.106,9,0.079,13,0.375,16,2.539,21,1.765,29,0.679,31,0.648,40,0.133,41,0.508,51,0.667,66,0.974,70,0.774,71,0.017,72,0.273,73,0.338,74,0.703,77,3.002,79,0.559,85,0.85,91,1.945,92,0.708,100,0.679,115,1.191,116,1.765,118,0.616,129,2.23,132,2.319,133,1.616,134,1.03,135,1.133,138,1.358,148,1.031,153,0.147,156,0.147,165,0.138,166,0.161,167,0.635,168,1.137,177,1.352,182,2.451,183,2.159,187,2.159,198,1.207,327,0.009,328,0.009,335,1.609,397,0.621,407,4.588,408,2.013,410,1.473,433,1.888,436,2.39,438,1.539,444,2.047,446,1.411,513,1.539,514,1.761,515,2.109,527,1.851,541,1.609,572,0.588,573,2.887,576,0.947,578,2.998,579,2.047,580,2.047,590,0.504,593,5.246,594,1.539,600,0.767,610,2.901,612,2.383,639,1.131,645,3.039,648,0.947,680,2.159,720,1.765,724,3.832,777,1.539,813,1.945,814,3.211,815,2.585,829,3.012,838,1.185,854,3.18,987,2.575,1007,4.25,1034,2.585,1042,1.945,1046,2.284,1075,3.527,1078,2.159,1203,3.089,1304,4.761,1533,1.628,1557,2.585,1955,3.28,2607,2.773,2661,2.202,2662,2.202,2663,2.456,2666,2.456,2667,3.658,2668,3.658,2669,4.371,2670,4.371,2671,4.371,2672,4.371,2673,4.371,2674,3.658,2675,4.371,2676,4.371,2677,4.371,2678,2.998,2679,2.998,2680,2.998,2681,2.998,2682,2.998,2683,2.998,2684,2.998,2685,4.371,2686,4.371,2687,2.424,2688,2.585,2689,2.585,2690,2.585,2691,2.585,2692,2.585,2693,2.585,2694,4.844,2695,2.456,2696,4.844,2697,2.456,2698,4.844,2699,2.456,2700,4.844,2701,2.456,2702,4.844,2703,2.456,2704,4.844,2705,2.456,2706,4.844,2707,2.456,2708,4.844,2709,2.456,2710,4.844,2711,2.456,2712,4.844,2713,2.456,2714,3.658,2715,2.456,2716,2.456,2717,3.658,2718,2.456,2719,2.456,2720,3.658,2721,2.456,2722,2.456,2723,4.844,2724,2.456,2725,4.844,2726,2.456,2727,4.844,2728,2.456,2729,4.844,2730,2.456,2731,4.844,2732,2.456,2844,4.231,2845,4.231,2846,4.231,2847,2.841,2848,2.841,2849,2.841,2850,2.841,2851,2.841,2852,2.841,2853,2.841,2854,2.841,2855,2.841,2856,2.841,2857,2.841,2858,2.841,2859,2.841,2860,2.841,2861,2.841,2862,2.841,2863,2.841,2864,2.841,2865,2.841,2866,2.841,2867,2.841,2868,2.841,2869,2.841,2870,2.841,2871,2.841,2872,2.841,2873,2.841,2874,2.841]],["title/injectables/SyncSchemaService.html",[431,2.696,590,0.453]],["body/injectables/SyncSchemaService.html",[3,0.155,4,0.155,9,0.117,13,0.446,27,0.933,31,0.85,40,0.195,41,0.558,51,0.661,61,0.811,66,0.869,70,0.956,71,0.017,72,0.262,73,0.292,74,0.867,76,0.933,77,2.871,79,0.941,83,1.164,85,0.738,92,0.803,114,1.215,118,0.614,133,1.874,134,0.971,138,1.17,141,2.552,148,1.021,153,0.358,156,0.216,165,0.136,166,0.237,167,0.869,168,1.111,177,1.223,192,1.241,198,0.803,327,0.011,328,0.011,376,2.125,397,0.913,398,2.774,407,4.547,431,4.713,436,2.113,448,2.648,472,3.057,474,2.552,476,1.549,477,2.998,480,3.393,482,4.801,513,2.644,514,2.316,515,2.774,516,5.157,523,5.157,590,0.661,591,2.686,599,2.316,600,1.127,602,3.393,603,3.935,604,2.316,605,3.218,606,2.552,607,1.662,608,2.211,609,2.02,612,1.852,614,3.019,639,1.662,648,1.392,650,2.551,699,2.998,829,2.211,854,2.97,1034,3.393,1035,3.182,1426,4.164,1433,3.182,1913,3.61,2620,3.61,2650,4.801,2875,6.156,2876,3.61,2877,5.554,2878,5.554,2879,5.554,2880,3.935,2881,4.801,2882,5.554,2883,4.305,2884,6.652,2885,5.554,2886,5.554,2887,4.175,2888,4.175,2889,4.175,2890,5.554,2891,7.382,2892,4.175,2893,6.926,2894,5.554,2895,4.175,2896,4.175,2897,4.175,2898,4.175,2899,4.175,2900,4.175,2901,4.175,2902,4.175,2903,4.175,2904,4.175,2905,4.175,2906,4.175,2907,5.554,2908,5.554,2909,5.554,2910,4.175,2911,4.175,2912,4.175,2913,5.554,2914,4.175,2915,4.175,2916,5.554,2917,5.554,2918,4.175,2919,4.175,2920,5.554,2921,5.554,2922,4.175,2923,4.175,2924,5.554,2925,4.175,2926,4.175,2927,5.554,2928,4.175,2929,4.175,2930,4.175,2931,4.175,2932,3.237,2933,4.175]],["title/interfaces/Template.html",[5,0.7,572,0.529]],["body/interfaces/Template.html",[0,0.146,3,0.146,4,0.146,5,1.436,6,0.892,7,0.585,8,0.585,9,0.195,15,0.919,17,1.468,23,1.307,24,1.997,26,0.537,31,0.727,40,0.12,41,0.477,54,1.02,61,0.374,69,1.307,71,0.017,72,0.223,73,0.31,92,0.599,94,1.02,115,1.102,118,0.61,125,2.721,134,0.776,144,1.383,147,1.91,148,0.978,153,0.296,155,1.468,156,0.132,165,0.083,166,0.145,168,1.02,173,1.893,177,1.221,192,1.175,198,1.343,208,2.642,212,1.468,213,2.112,214,2.389,215,2.577,222,1.712,248,1.363,273,0.798,300,1.056,312,0.514,322,0.514,323,1.465,327,0.008,328,0.008,341,3.926,350,3.713,369,1.561,372,2.179,374,1.307,388,3.948,397,0.56,457,2.424,475,1.239,476,1.883,492,1.565,521,1.383,524,2.391,527,1.12,540,1.468,559,1.678,562,1.815,563,3.365,567,3.365,569,2.565,571,1.628,572,0.66,574,0.974,581,1.363,604,1.068,616,1.383,628,1.239,634,2.297,639,1.02,645,2.297,666,4.579,709,1.307,726,4.059,775,1.068,777,2.665,796,3.092,797,2.297,813,1.177,825,1.068,830,2.721,838,1.068,909,2.565,913,3.112,969,1.239,971,2.297,975,2.506,977,2.242,994,1.363,1002,1.468,1005,1.239,1020,2.564,1032,3.69,1086,1.678,1102,1.383,1104,1.307,1116,2.565,1117,1.307,1118,1.468,1119,1.815,1120,1.986,1121,1.986,1122,1.986,1123,1.986,1124,1.986,1125,1.986,1126,1.986,1127,1.986,1128,1.986,1129,1.986,1130,1.986,1131,1.986,1132,1.986,1133,1.986,1134,1.986,1135,1.986,1136,1.986,1137,1.986,1138,1.986,1139,1.986,1140,1.986,1141,1.986,1142,3.034,1143,3.034,1144,2.112,1145,1.815,1146,2.112,1147,3.112,1148,1.815,1149,2.112,1150,1.565,1151,1.815,1152,3.754,1153,3.754,1154,3.034,1155,1.986,1156,1.468,1157,4.441,1158,2.242,1159,3.034,1160,1.986,1161,4.057,1162,3.112,1163,4.515,1164,2.565,1165,1.307,1166,2.242,1167,1.986,1168,1.678,1169,5.717,1170,1.468,1171,3.365,1172,2.391,1173,1.468,1174,1.678,1175,1.986,1176,1.815,1177,1.986,1178,1.986,1179,2.565,1180,1.986,1181,3.034,1182,1.986,1183,1.986,1184,1.565,1185,4.059,1186,3.034,1187,5.256,1188,3.682,1189,3.682,1190,1.986,1191,5.225,1192,2.565,1193,1.986,1194,1.815,1195,1.986,1196,1.986,1197,1.986,1198,1.815,1199,1.815,1200,3.365,1201,3.682,1202,3.839,1203,3.69,1204,3.392,1205,4.682,1206,4.122,1207,4.168,1208,4.122,1209,4.801,1210,3.484,1211,4.452,1212,4.452,1213,4.682,1214,1.986,1215,4.122,1216,5.252,1217,4.871,1218,4.441,1219,1.986,1220,2.242,1221,1.815,1222,4.441,1223,1.678,1224,3.682,1225,1.815,1226,5.148,1227,1.986,1228,3.034,1229,3.365,1230,1.986,1231,3.484,1232,3.365,1233,1.986,1234,2.391,1235,2.773,1236,1.986,1237,1.986,1238,1.986,1239,1.986,1240,3.839,1241,1.678,1242,1.815,1243,3.112,1244,1.986,1245,1.678,1246,3.112,1247,1.986,1248,3.682,1249,1.986,1250,3.682,1251,1.986,1252,1.986,1253,1.986,1254,2.902,1255,1.986,1256,1.986,1257,2.773,1258,2.773,1259,3.682,1260,1.815,1261,3.034,1262,1.986,1263,1.986,1264,3.365,1265,3.958,1266,3.034,1267,1.468,1268,4.682,1269,1.986,1270,3.768,1271,3.034,1272,1.986,1273,1.986,1274,1.986,1275,1.565,1276,1.815,1277,1.986,1278,1.986,1279,5.023,1280,1.986,1281,1.678,1282,3.034,1283,1.986,1284,1.986,1285,1.986,1286,1.986,1287,1.986,1288,1.986,1289,1.986,1290,1.986,1291,1.986,1292,1.986,1293,1.986,1294,1.986,1295,1.986,1296,1.986,1297,2.565,1298,1.986,1299,1.986,1300,1.986,1301,1.986,1302,1.986,1303,1.986,1304,1.565,1305,1.986,1306,1.986,1307,1.986,1308,1.986,1309,1.986,1310,5.252,1311,1.986,1312,1.986,1313,1.986,1314,1.986,1315,1.986,1316,1.986,1317,1.986,1318,1.986,1319,1.986,1320,1.986,1321,3.682,1322,3.034,1323,1.986,1324,1.986,1325,4.122,1326,4.682,1327,1.986,1328,1.986,1329,1.986,1330,3.682,1331,3.682,1332,1.986,1333,1.986,1334,1.986,1335,1.986,1336,1.468,1337,1.986,1338,4.122,1339,1.986,1340,1.986,1341,1.986,1342,3.034,1343,1.986,1344,1.815,1345,1.986,1346,1.986,1347,1.986,1348,1.986,1349,1.986,1350,1.986,1351,1.986,1352,2.112,1353,1.986,1354,1.815,1355,1.986,1356,3.682,1357,1.986,1358,1.986,1359,1.986,1360,1.986,1361,1.986,1362,1.986,1363,1.986,1364,1.986,1365,1.986,1366,1.468,1367,1.986,1368,1.565,1369,1.986,1370,3.034,1371,1.986,1372,1.986,1373,3.034,1374,1.986,1375,1.678,1376,1.815,1377,1.986,1378,1.986,1379,1.986,1380,1.815,1381,1.986,1382,1.986,1383,1.986,1384,1.678,1385,1.986,1386,1.986,1387,1.986,1388,1.815,1389,1.986,1390,3.484,1391,1.986,1392,1.468,1393,1.815,1394,1.986,1395,1.565,1396,1.986,1397,1.986,1398,2.391,1399,1.986,1400,3.034,1401,1.986,1402,3.249,1403,1.986,1404,3.034,1405,1.986,1406,1.986,1407,1.986,1408,3.034,1409,1.986,1410,1.986,1411,0.818,1412,1.815,1413,1.986,1414,1.565,1415,1.815,1416,1.815,1417,1.815,1418,1.815,1419,1.815,1420,1.986,1421,1.986,1422,1.678,1423,1.986,1424,1.986,1425,1.986]],["title/injectables/TemplateEditorService.html",[590,0.453,1144,2.054]],["body/injectables/TemplateEditorService.html",[3,0.154,4,0.154,9,0.116,31,1.111,40,0.194,41,0.555,51,0.658,66,0.925,70,1.015,71,0.017,72,0.278,73,0.332,74,0.922,85,0.757,92,0.831,118,0.644,134,0.806,135,1.109,148,1.143,153,0.214,156,0.214,165,0.135,166,0.235,168,1.117,177,1.307,192,1.045,222,1.812,258,1.261,327,0.011,328,0.011,366,1.812,369,2.028,385,2.531,397,1.209,406,2.236,437,3.212,446,1.381,527,1.812,559,2.715,590,0.658,600,1.118,632,3.915,648,1.381,709,2.114,741,3.621,818,3.621,906,2.531,925,4.829,950,4.819,975,1.812,989,3.621,1035,2.374,1078,3.525,1099,3.212,1117,3.807,1118,4.275,1144,2.982,1150,2.531,1265,2.715,1270,4.894,1275,2.531,1344,3.915,1352,3.729,1542,5.355,1613,3.212,1732,4.939,2058,3.621,2064,3.212,2120,2.715,2125,3.621,2295,2.935,2306,5.972,2881,3.581,2934,3.212,2935,6.217,2936,6.632,2937,5.525,2938,6.632,2939,5.525,2940,5.525,2941,4.143,2942,5.525,2943,4.143,2944,5.525,2945,4.143,2946,4.143,2947,5.525,2948,4.143,2949,5.525,2950,4.143,2951,5.525,2952,4.143,2953,4.143,2954,4.819,2955,4.143,2956,6.632,2957,4.143,2958,4.143,2959,4.143,2960,4.143,2961,4.143,2962,3.212,2963,4.143,2964,4.143,2965,4.143,2966,4.143,2967,4.143,2968,4.143,2969,4.143,2970,4.143,2971,5.525,2972,4.143,2973,4.143,2974,4.143,2975,4.143,2976,4.143,2977,4.143,2978,4.143,2979,4.143,2980,4.143,2981,5.525,2982,4.143,2983,4.143,2984,4.143,2985,4.143,2986,4.143,2987,4.143,2988,3.581,2989,3.581,2990,4.143,2991,4.143,2992,4.143,2993,4.143,2994,4.143,2995,4.143,2996,4.143,2997,5.525,2998,5.525,2999,4.143,3000,6.217,3001,6.217,3002,4.143,3003,4.143,3004,4.143,3005,4.143,3006,4.143,3007,5.525,3008,6.217,3009,6.217,3010,6.632,3011,3.581,3012,4.143,3013,4.143,3014,4.143,3015,4.143,3016,4.143,3017,4.143]],["title/modules/TemplatePlaygroundModule.html",[2322,2.696,3018,2.696]],["body/modules/TemplatePlaygroundModule.html",[3,0.205,4,0.205,5,1.217,9,0.154,32,1.368,34,2.115,69,2.811,71,0.017,153,0.406,156,0.285,158,2.811,163,1.687,165,0.179,166,0.312,257,1.312,322,1.597,327,0.014,328,0.014,343,4.044,344,5.723,374,2.811,375,4.271,376,1.76,564,4.271,1117,2.811,1118,3.157,1144,4.128,1145,3.903,1146,4.128,1147,3.61,1148,3.903,1149,4.128,1150,3.366,1151,3.903,1162,3.61,1508,3.903,2124,5.132,2322,3.903,2323,3.61,3018,5.655,3019,6.135,3020,5.028,3021,5.501,3022,4.763,3023,4.763,3024,4.763,3025,4.763,3026,5.509,3027,6.62,3028,6.62,3029,5.509]],["title/components/ToastComponent.html",[0,0.141,324,0.868]],["body/components/ToastComponent.html",[0,0.274,1,0.93,2,1.162,3,0.266,4,0.145,5,0.977,7,0.892,8,0.892,9,0.109,13,0.404,19,0.93,23,2.711,25,0.819,26,1.677,27,1.345,28,0.934,29,0.969,32,0.97,35,0.93,38,1.319,40,0.183,51,0.632,61,0.57,65,3.839,66,0.758,70,0.813,71,0.017,72,0.271,73,0.345,74,0.738,76,1.088,79,0.702,80,1.852,81,3.764,83,1.114,85,0.566,92,0.73,94,2.115,95,2.441,99,2.57,100,0.627,118,0.502,130,1.562,132,1.771,134,0.57,135,0.627,147,1.434,153,0.274,156,0.202,164,2.561,165,0.127,166,0.221,167,0.813,171,2.561,192,1.014,213,4.024,215,2.657,257,0.93,258,1.213,259,1.012,260,1.677,261,1.012,262,1.012,263,0.93,264,1.012,265,0.93,266,1.375,267,0.97,268,1.012,269,0.93,270,1.012,271,1.012,272,0.892,273,0.657,274,1.375,275,0.93,276,0.855,277,1.012,278,0.93,279,1.012,280,0.93,281,1.012,282,0.93,283,1.012,284,0.892,285,1.012,286,0.892,287,0.855,288,1.012,289,0.93,290,1.012,291,0.93,292,1.012,293,1.012,294,0.93,295,1.012,296,0.93,297,1.012,298,0.93,299,0.97,300,0.657,301,1.012,302,0.97,303,1.562,304,0.93,305,1.012,306,0.93,307,0.97,308,1.012,309,0.93,310,1.012,311,0.93,312,1.067,313,1.012,314,0.93,315,0.93,316,0.97,317,1.012,318,0.97,319,1.012,320,0.93,321,1.012,322,0.785,323,0.819,324,1.66,325,1.012,326,1.012,327,0.011,328,0.011,346,2.215,362,3.481,372,2.463,402,2.57,444,2.57,521,3.495,581,2.101,582,3.03,592,2.711,598,4.679,628,1.89,662,2.021,699,2.11,776,3.379,779,5.598,801,2.769,830,2.239,841,2.11,868,4.578,872,2.867,909,2.561,939,1.487,969,3.457,971,1.89,975,2.324,1020,3.258,1042,3.485,1114,2.388,1187,2.769,1200,2.769,1203,2.388,1204,2.11,1246,3.955,1265,3.481,1275,2.388,1354,2.769,1447,3.956,1569,4.588,1635,2.561,1919,4.118,1936,2.388,2026,4.118,2037,4.592,2038,5.217,2044,3.764,2058,3.481,2249,4.118,2354,3.03,2476,5.217,2496,5.217,2503,5.598,2516,4.592,2591,3.03,2797,4.592,3011,4.592,3030,3.379,3031,5.313,3032,5.313,3033,5.313,3034,5.313,3035,6.035,3036,3.908,3037,3.908,3038,3.908,3039,5.313,3040,5.313,3041,5.313,3042,3.908,3043,3.908,3044,4.592,3045,5.313,3046,3.908,3047,5.313,3048,3.908,3049,3.908,3050,3.908,3051,3.379,3052,3.908,3053,3.379,3054,3.379,3055,3.379,3056,3.908,3057,3.908,3058,3.908,3059,3.908,3060,3.379,3061,3.908,3062,3.908,3063,3.908,3064,3.908,3065,3.908,3066,3.908,3067,3.908,3068,3.908,3069,3.908,3070,3.908]],["title/injectables/ToastService.html",[65,1.941,590,0.453]],["body/injectables/ToastService.html",[0,0.283,3,0.275,4,0.179,9,0.135,13,0.447,27,1.024,40,0.225,41,0.612,51,0.725,65,3.583,66,0.839,70,0.933,71,0.017,72,0.255,73,0.361,74,0.846,76,1.278,79,0.805,80,1.87,85,0.649,92,0.792,118,0.556,128,3.49,132,2.031,134,0.975,135,0.772,147,1.644,153,0.315,156,0.249,165,0.157,166,0.273,167,0.882,168,0.975,213,4.174,215,2.755,324,1.793,327,0.012,328,0.012,372,2.317,397,1.462,398,2.54,443,3.991,444,3.397,479,3.991,480,3.721,537,3.232,581,2.326,590,0.725,600,1.299,648,1.605,662,2.317,721,4.721,739,4.721,868,4.602,872,3.287,969,3.635,1005,2.946,1042,3.454,1166,3.49,1246,3.991,1447,3.721,1463,3.154,1569,4.976,1886,4.161,1935,5.265,2026,4.721,2044,4.315,2058,3.991,2064,4.721,2600,5.444,2883,4.721,3044,5.265,3071,4.161,3072,6.091,3073,6.091,3074,6.091,3075,6.091,3076,4.813,3077,4.813,3078,4.813,3079,4.813,3080,4.813,3081,4.813,3082,4.813]],["title/interfaces/User.html",[138,0.669,572,0.529]],["body/interfaces/User.html",[3,0.147,4,0.147,9,0.111,13,0.266,15,0.861,27,0.902,31,0.607,40,0.185,41,0.539,51,0.472,71,0.017,72,0.294,73,0.36,76,0.667,77,1.509,79,0.804,81,3.802,83,0.831,85,0.694,92,0.605,114,0.868,118,0.671,133,1.51,135,1.126,138,1.4,147,1.449,148,0.729,153,0.277,156,0.205,165,0.175,166,0.225,167,0.854,168,0.579,177,1.36,192,0.902,248,1.868,327,0.011,328,0.011,369,1.913,376,1.714,397,0.868,398,2.717,406,2.896,410,1.868,420,2.136,433,1.857,436,2.041,438,1.443,439,3.484,444,3.151,446,2.172,448,2.136,463,2.238,465,3.516,472,2.466,474,1.823,475,2.596,476,1.69,477,2.896,490,2.37,513,2.37,514,2.268,515,2.992,527,2.347,531,2.599,541,2.313,572,0.845,574,1.509,576,1.789,585,1.868,590,0.639,591,1.919,594,1.443,599,1.381,600,1.071,604,2.238,605,1.919,606,2.466,607,1.579,608,2.136,609,1.919,610,2.536,611,2.596,614,3.151,645,1.919,675,3.278,680,3.58,695,2.024,717,2.273,728,3.043,814,3.733,816,2.596,824,2.466,825,2.238,831,2.81,836,2.599,854,2.926,939,1.509,968,2.141,1063,4.02,1114,2.423,1158,3.075,1375,3.516,1433,3.733,1440,3.516,1927,4.616,1959,4.16,1977,4.714,2125,3.516,2149,3.516,2474,3.075,2607,4.269,2617,4.616,2652,4.16,2678,4.616,2679,4.971,2680,4.616,2681,4.616,2682,4.616,2683,4.616,2684,4.616,2831,3.278,2880,3.802,2932,3.075,3083,3.075,3084,4.639,3085,4.639,3086,4.639,3087,4.639,3088,5.632,3089,4.639,3090,4.639,3091,4.639,3092,4.639,3093,4.639,3094,4.639,3095,4.639,3096,4.639,3097,4.639,3098,3.429,3099,3.429,3100,3.429,3101,3.429,3102,5.257,3103,4.639,3104,4.639,3105,3.429,3106,3.429,3107,3.429,3108,3.429,3109,3.429,3110,3.429,3111,3.429,3112,3.429]],["title/interfaces/UserData.html",[572,0.529,1534,2.493]],["body/interfaces/UserData.html",[0,0.229,3,0.112,4,0.112,6,1.052,9,0.197,13,0.202,15,1.065,16,2.236,18,3.137,19,1.62,21,2.407,25,0.633,26,0.633,27,0.508,29,1.092,31,0.462,32,0.75,33,3.137,34,1.414,38,0.75,40,0.27,41,0.445,54,1.202,61,0.441,63,3.714,64,2.653,65,2.946,71,0.017,72,0.127,73,0.33,75,3.137,76,0.744,78,1.202,79,0.812,80,0.719,83,0.928,86,3.137,91,2.653,92,0.767,94,1.202,95,1.388,96,1.461,100,1.133,101,1.979,106,1.052,113,2.14,114,0.661,115,2.014,116,2.407,118,0.535,129,2.298,132,1.748,133,1.893,134,0.441,137,4.064,138,1.259,144,1.63,148,0.814,150,3.435,151,1.63,153,0.374,156,0.156,157,3.137,158,1.541,159,1.845,163,0.925,164,1.979,165,0.171,166,0.171,167,0.918,168,1.014,173,2.142,177,1.062,178,2.14,179,3.714,182,1.321,183,1.541,187,1.541,192,1.291,198,0.851,208,1.321,212,3.004,213,2.83,214,1.26,215,1.994,217,2.341,247,2.83,248,1.825,255,2.536,256,2.83,272,1.011,273,1.203,284,1.011,327,0.009,328,0.009,343,2.705,346,1.26,360,1.202,366,2.525,369,0.887,376,0.965,400,1.461,420,2.298,433,0.782,444,1.461,457,1.541,465,3.435,469,3.714,508,1.731,537,1.461,571,1.605,572,0.728,573,3.05,574,1.149,576,1.476,579,3.21,580,3.21,586,1.63,589,1.63,592,1.541,594,1.099,596,3.308,601,3.527,629,2.14,673,2.341,674,3.308,699,1.63,700,3.308,701,1.731,702,1.731,703,1.845,712,1.979,727,2.705,759,2.341,803,2.901,804,2.901,806,3.137,807,3.137,808,3.137,809,3.137,823,1.731,834,3.116,872,1.63,886,2.14,908,1.845,911,2.341,938,2.14,974,3.137,975,1.937,994,1.542,1028,4.055,1035,1.731,1036,1.541,1039,1.461,1040,2.14,1102,2.83,1103,1.979,1104,1.541,1156,1.731,1202,2.705,1204,3.116,1223,1.979,1231,1.979,1240,1.845,1267,3.308,1398,2.705,1402,2.705,1411,0.965,1414,1.845,1422,3.435,1439,2.14,1476,2.14,1477,2.341,1478,2.341,1479,2.14,1480,2.611,1481,4.765,1482,4.475,1483,1.979,1484,1.979,1485,2.611,1486,4.532,1487,2.341,1488,2.341,1489,2.611,1490,2.611,1491,2.611,1492,2.611,1493,2.611,1496,2.611,1499,2.341,1503,2.611,1504,2.611,1505,2.611,1506,2.611,1508,3.137,1509,3.828,1510,2.611,1512,4.532,1515,2.341,1516,2.611,1517,4.532,1518,4.532,1520,2.611,1521,4.064,1524,2.611,1525,1.979,1526,2.341,1527,2.14,1528,2.14,1529,2.611,1530,4.064,1531,3.433,1532,2.611,1533,2.537,1534,4.551,1535,2.259,1536,5.313,1537,5.553,1538,5.553,1539,2.611,1540,2.611,1541,2.611,1542,4.979,1543,2.611,1544,2.611,1545,2.611,1546,2.611,1547,2.14,1548,2.611,1549,2.611,1550,2.611,1551,2.611,1552,2.611,1553,2.611,1554,1.979,1555,2.611,1556,2.611,1557,1.845,1558,2.611,1559,2.611,1560,2.611,1561,2.611,1562,2.611,1563,2.611,1564,2.611,1565,2.611,1566,2.611,1567,4.532,1568,2.611,1569,3.714,1570,2.611,1571,2.611,1572,2.611,1573,2.611,1574,2.611,1575,2.611,1576,2.611,1577,2.341,1578,2.611,1579,4.532,1580,2.611,1581,2.611,1582,2.611,1583,2.611,1584,2.611,1585,2.341,1586,2.611,1587,2.611,1588,2.611,1589,3.828,1590,2.611,1591,2.611,1592,2.611,1593,2.611,1594,4.532,1595,2.611,1596,2.611,1597,2.611,1598,2.611,1599,2.611,1600,2.611,1601,3.828,1602,2.611,1603,4.991,1604,2.611,1605,3.828,1606,2.901,1607,3.433,1608,3.433,1609,2.611,1610,2.611,1611,2.611,1612,2.611,1613,2.341,1614,2.341,1615,2.611,1616,2.611,1617,2.611,1618,2.611,1619,2.611,1620,2.611,1621,5.313,1622,2.611,1623,2.611,1624,2.611,1625,2.611,1626,2.611,1627,3.433,1628,2.611,1629,2.611,1630,6.004,1631,2.611,1632,2.611,1633,1.845,1634,2.611,1635,1.979,1636,2.14,1637,2.611,1638,2.14,1639,2.611,1640,2.611,1641,2.341,1642,2.611,1643,2.611,1644,2.611,1645,3.828,1646,2.611,1647,2.611,1648,2.611,1649,2.611,1650,2.611,1651,2.611,1652,2.611,1653,2.611,1654,2.611,1655,3.828,1656,2.611,1657,2.611,1658,2.611,1659,2.611]],["title/injectables/UserLikedSongsService.html",[590,0.453,3113,2.949]],["body/injectables/UserLikedSongsService.html",[3,0.155,4,0.155,9,0.117,13,0.464,15,1.001,28,1.17,31,0.85,40,0.195,51,0.661,61,0.609,66,0.912,70,1.018,71,0.017,72,0.279,73,0.311,74,0.924,76,0.933,77,2.914,79,0.879,83,1.164,85,0.816,92,0.75,111,2.996,114,1.214,115,1.949,116,2.773,118,0.628,133,1.719,138,1.327,141,2.551,153,0.322,156,0.216,165,0.136,166,0.236,167,0.835,168,0.91,177,1.357,192,1.049,193,2.734,195,2.956,198,0.802,327,0.011,328,0.011,335,2.112,369,2.09,376,1.773,397,0.913,410,1.933,433,1.437,438,2.019,446,2.461,448,2.21,474,2.551,476,1.378,513,2.643,514,2.315,571,1.278,581,1.453,588,4.358,590,0.661,591,2.018,595,3.444,599,1.933,600,1.126,602,3.392,605,3.217,606,2.551,607,1.661,608,2.21,609,2.018,610,2.773,612,1.851,613,3.81,614,3.217,620,3.181,622,3.181,624,2.391,627,3.181,641,3.181,643,2.734,648,1.391,650,2.549,695,3.393,701,3.181,702,3.181,802,3.392,839,3.392,863,3.638,939,1.587,968,2.996,987,3.612,1007,4.732,1036,2.833,1039,2.685,1075,3.864,1336,3.181,1411,1.773,1667,3.638,1669,4.303,1670,4.303,1671,5.155,1672,3.234,1673,3.234,1674,3.234,1675,3.234,1676,3.234,1678,4.303,1698,3.234,2687,4.229,3113,5.155,3114,6.38,3115,3.607,3116,5.551,3117,4.172,3118,4.172,3119,5.551,3120,4.172,3121,4.172,3122,5.551,3123,4.172,3124,4.172,3125,4.172,3126,4.172,3127,4.172,3128,5.551,3129,5.551]],["title/injectables/UserService.html",[420,1.514,590,0.453]],["body/injectables/UserService.html",[3,0.144,4,0.144,9,0.108,13,0.452,15,1.035,27,0.651,31,0.808,40,0.181,51,0.768,61,0.565,66,0.895,70,1.034,71,0.017,72,0.292,73,0.344,74,0.896,76,0.887,77,2.008,79,0.921,81,2.743,83,1.107,85,0.793,92,0.727,114,1.155,118,0.649,133,1.73,135,1.194,138,1.411,147,1.045,148,0.971,153,0.273,156,0.2,165,0.172,166,0.219,167,0.847,168,0.877,177,1.353,192,0.887,248,1.348,327,0.011,328,0.011,369,2.045,376,2.061,397,0.847,398,2.201,406,2.09,410,2.425,420,2.568,433,1.985,436,2.454,438,1.92,439,3.442,444,1.873,446,1.291,448,2.568,463,1.615,465,2.537,472,2.965,474,2.426,475,1.873,476,1.602,477,3.482,490,1.92,513,2.593,514,2.526,515,3.133,527,1.694,531,3.459,541,2.285,572,0.734,576,1.291,585,1.348,590,0.628,591,1.873,594,1.92,599,1.838,600,1.045,604,1.615,605,3.12,606,2.426,607,1.541,608,2.101,609,1.873,610,2.905,611,3.12,614,3.12,645,2.553,648,1.291,650,2.366,675,2.366,680,2.694,695,2.694,717,3.025,728,2.69,814,2.219,816,1.873,824,1.779,825,1.615,831,3.74,836,3.459,854,3.133,939,1.473,968,2.849,974,4.256,1063,3.442,1114,3.225,1158,2.219,1375,2.537,1433,3.025,1440,2.537,1927,5.141,1959,3.002,1977,5.233,2125,2.537,2149,2.537,2474,4.092,2607,2.537,2617,3.74,2652,4.092,2678,2.743,2679,3.74,2680,2.743,2681,2.743,2682,2.743,2683,2.743,2684,2.743,2831,3.67,2880,2.743,2932,3.002,3083,3.002,3084,3.347,3085,3.347,3086,3.347,3087,3.347,3088,4.564,3089,3.347,3090,3.347,3091,3.347,3092,3.347,3093,3.347,3094,3.347,3095,3.347,3096,3.347,3097,3.347,3098,4.564,3099,4.564,3100,4.564,3101,4.564,3102,5.192,3103,4.564,3104,4.564,3105,3.347,3106,3.347,3107,3.347,3108,4.564,3109,5.577,3110,4.564,3111,4.564,3112,3.347,3130,5.279,3131,5.279,3132,3.872,3133,3.872,3134,3.872,3135,3.872,3136,3.872,3137,3.872,3138,3.872]],["title/injectables/ZipExportService.html",[590,0.453,1146,2.054]],["body/injectables/ZipExportService.html",[3,0.179,4,0.179,5,1.292,6,2.326,9,0.196,15,0.772,28,1.175,40,0.225,51,0.725,66,0.839,70,0.933,71,0.017,72,0.255,73,0.312,74,0.846,85,0.712,92,0.687,107,2.598,118,0.603,153,0.249,156,0.249,165,0.157,166,0.273,168,1.08,177,0.885,192,1.218,251,3.41,258,1.098,273,0.809,323,1.009,327,0.012,328,0.012,366,2.664,397,1.053,448,1.916,467,3.731,492,2.94,495,2.94,571,1.865,590,0.725,600,1.299,632,3.41,634,2.328,648,1.605,709,2.456,818,4.378,872,2.598,906,4.082,994,2.12,1011,3.828,1027,3.154,1045,3.731,1091,3.991,1095,3.731,1105,3.41,1117,3.583,1146,3.287,1147,4.747,1150,2.94,1152,3.154,1163,5.098,1164,4.925,1172,2.94,1194,3.41,1254,2.94,1352,3.287,1366,3.828,1384,3.991,1398,4.521,1402,4.29,1414,2.94,1415,3.41,1416,3.41,1417,3.41,1418,3.41,1419,3.41,1444,4.161,1533,3.49,1535,2.456,1577,3.731,1585,3.731,1633,2.94,1784,3.731,1809,4.161,1957,4.161,2023,3.731,2295,3.41,2357,4.161,2617,4.315,2803,4.161,2988,5.265,2989,5.776,3060,4.161,3139,5.444,3140,3.731,3141,6.091,3142,6.091,3143,7.023,3144,6.091,3145,4.813,3146,6.091,3147,4.813,3148,7.605,3149,4.813,3150,4.721,3151,4.813,3152,4.813,3153,4.813,3154,5.776,3155,4.813,3156,4.813,3157,4.813,3158,4.813,3159,4.813,3160,4.813,3161,4.813,3162,4.813,3163,4.813,3164,4.813,3165,4.813,3166,6.091,3167,4.813,3168,6.091,3169,4.161,3170,7.023,3171,4.813,3172,4.813,3173,4.813,3174,4.813,3175,4.813,3176,4.813,3177,4.161,3178,4.813,3179,4.813,3180,4.813,3181,4.813,3182,4.813,3183,4.161,3184,4.813,3185,4.813,3186,4.813,3187,4.813]],["title/coverage.html",[1174,3.418]],["body/coverage.html",[0,0.297,1,0.946,5,0.73,9,0.111,10,3.434,11,3.079,12,3.434,15,0.637,27,1.023,29,0.637,35,0.946,64,1.825,65,2.027,71,0.017,73,0.186,100,0.637,138,0.699,161,2.814,198,1.437,253,4.673,263,0.946,265,0.946,267,0.986,269,0.946,272,0.907,275,0.946,276,1.175,278,0.946,280,0.946,282,0.946,284,0.907,286,0.907,289,0.946,291,0.946,294,0.946,296,0.946,298,1.279,299,0.986,302,0.986,304,0.946,306,0.946,309,0.946,311,0.946,314,0.946,315,0.946,318,0.986,320,0.946,322,0.797,324,0.907,327,0.011,328,0.011,329,3.434,353,2.814,379,3.079,396,3.434,407,2.276,420,1.581,429,2.027,430,2.814,431,2.814,502,2.899,504,3.079,512,3.079,513,1.445,572,1.069,573,1.825,575,4.163,585,1.383,590,0.928,599,1.383,601,2.427,658,3.434,810,4.163,823,2.276,829,1.581,834,2.144,884,3.434,885,3.434,964,2.603,965,4.163,966,4.163,984,2.814,987,1.825,1075,1.921,1116,2.603,1117,3.816,1118,4.022,1119,4.619,1144,2.144,1146,2.144,1149,2.144,1153,2.603,1161,2.427,1173,2.276,1174,2.603,1352,2.144,1366,2.276,1426,2.276,1427,3.434,1476,4.312,1477,4.163,1478,4.163,1479,4.312,1528,2.814,1534,2.603,1661,4.163,1709,4.163,1710,4.163,1711,3.434,1712,3.434,1780,3.434,1781,3.434,1859,3.434,1860,3.079,1861,3.434,1870,2.276,1891,3.434,1902,3.434,1917,3.434,1918,3.434,1939,3.434,1940,4.163,2034,3.434,2035,3.434,2054,3.434,2055,3.434,2068,3.434,2102,2.603,2242,3.434,2243,3.079,2244,3.434,2281,4.163,2282,4.163,2365,3.434,2420,3.805,2456,3.434,2477,3.434,2492,4.163,2493,4.163,2585,4.163,2586,3.079,2587,3.079,2588,4.163,2596,3.434,2661,4.163,2733,3.434,2734,3.434,2735,3.434,2779,3.079,2780,3.079,2782,3.434,2799,3.434,2800,3.434,2801,3.434,2806,3.434,2819,4.272,2828,2.427,2829,2.427,2830,2.427,2875,3.434,2876,3.434,2934,4.163,2954,3.079,3020,2.814,3030,3.434,3071,3.434,3083,4.163,3113,3.079,3114,3.434,3115,3.434,3139,4.163,3140,4.163,3150,3.079,3188,3.972,3189,3.972,3190,7.793,3191,6.085,3192,3.972,3193,3.972,3194,3.972,3195,6.085,3196,6.085,3197,4.643,3198,7.793,3199,3.434,3200,3.434,3201,3.434,3202,3.434,3203,3.434,3204,3.434,3205,3.972,3206,6.81,3207,3.972,3208,5.371,3209,5.371,3210,7.177,3211,5.371,3212,5.371,3213,5.371,3214,3.972,3215,3.972,3216,3.972,3217,3.972,3218,3.972,3219,3.972,3220,3.972,3221,3.972,3222,3.972,3223,3.972,3224,3.972,3225,3.972,3226,6.519,3227,7.019,3228,5.371,3229,5.371,3230,3.434,3231,3.972,3232,3.972,3233,3.972,3234,3.972,3235,3.434,3236,3.434,3237,5.887,3238,3.434,3239,3.434,3240,3.434,3241,3.434,3242,3.972]],["title/dependencies.html",[69,2.338,1390,2.074]],["body/dependencies.html",[69,2.97,71,0.017,156,0.301,158,2.97,163,1.782,327,0.014,328,0.014,360,2.317,375,5.631,376,2.185,377,5.032,500,5.032,983,3.814,1392,3.335,1521,4.512,1530,5.302,1531,4.512,1905,5.032,2070,4.124,2132,5.913,2158,5.032,2519,4.512,3243,7.918,3244,5.821,3245,5.821,3246,5.821,3247,5.821,3248,5.821,3249,5.821,3250,5.821,3251,5.821,3252,5.821,3253,5.032,3254,5.821,3255,5.821,3256,5.821,3257,5.821,3258,5.821,3259,5.821,3260,5.821,3261,5.821,3262,5.821,3263,5.821,3264,5.821,3265,5.821,3266,5.821,3267,5.821,3268,5.821]],["title/index.html",[40,0.178,3154,3.289]],["body/index.html",[2,0.936,15,0.687,16,2.693,19,1.019,21,1.784,27,1.062,28,1.181,29,1.205,69,2.183,71,0.017,77,2.555,78,1.703,90,3.699,91,2.594,100,1.173,102,3.032,106,1.49,115,2.018,116,2.354,129,2.247,133,1.864,138,1.261,141,2.903,147,1.155,150,2.804,153,0.221,165,0.139,222,1.872,247,3.41,248,2.339,255,2.73,256,3.41,273,0.719,276,0.936,298,1.019,300,1.129,307,1.062,312,1.133,327,0.012,328,0.012,332,2.452,334,2.183,335,2.147,360,2.247,366,1.872,398,2.99,401,4.139,402,3.667,406,2.31,409,3.032,410,1.965,441,4.376,443,2.804,472,1.966,496,3.699,515,2.354,527,1.872,541,2.147,571,1.31,573,3.36,576,1.427,577,2.804,586,2.31,589,2.31,594,1.557,595,3.056,597,2.804,604,2.354,635,2.07,660,4.759,661,4.476,662,2.147,663,2.804,671,3.699,672,2.614,674,3.234,675,3.859,700,2.452,708,3.032,717,2.452,728,1.784,818,3.699,829,2.515,832,4.376,836,2.804,842,3.317,886,3.032,906,2.614,908,3.449,914,4.88,915,3.699,967,3.317,971,2.73,1005,3.056,1022,2.31,1024,3.317,1028,2.614,1063,2.452,1085,4.476,1094,3.032,1166,2.452,1168,4.139,1170,2.452,1171,3.999,1179,2.804,1234,3.859,1336,3.234,1366,3.62,1384,2.804,1392,2.452,1481,3.317,1482,3.317,1483,2.804,1526,3.317,1527,3.032,1633,2.614,1635,2.804,1636,3.032,1638,3.032,1726,4.88,1732,3.699,1782,3.699,1785,3.999,1819,3.317,1862,3.699,1882,3.699,1981,3.699,1983,3.699,1984,3.699,1998,3.699,2011,4.88,2012,3.699,2017,3.699,2056,3.032,2073,4.897,2100,4.376,2102,2.804,2120,2.804,2146,3.317,2149,2.804,2250,3.999,2342,3.699,2366,3.699,2463,3.699,2472,3.699,2479,3.317,2491,4.88,2495,3.699,2571,5.461,2589,6.416,2591,3.317,2595,3.317,2597,3.699,2600,3.317,2802,3.699,2809,3.699,2837,2.614,2880,3.032,3051,3.699,3169,3.699,3177,4.88,3183,3.699,3269,4.279,3270,4.279,3271,4.279,3272,4.279,3273,5.645,3274,5.645,3275,4.279,3276,4.279,3277,4.279,3278,4.279,3279,5.645,3280,4.279,3281,4.279,3282,3.699,3283,4.279,3284,4.279,3285,4.279,3286,5.645,3287,4.279,3288,4.279,3289,4.279,3290,4.279,3291,4.279,3292,4.279,3293,4.279,3294,4.279,3295,4.279,3296,4.279,3297,5.645,3298,4.279,3299,4.279,3300,4.279,3301,4.279,3302,4.279,3303,3.699,3304,3.699,3305,3.699,3306,4.279,3307,4.279,3308,4.279,3309,4.279,3310,4.279,3311,4.279,3312,4.279,3313,4.279,3314,5.645,3315,4.279,3316,4.279,3317,4.279,3318,4.279,3319,4.279,3320,4.279,3321,4.279,3322,4.279,3323,4.279,3324,5.645,3325,4.279,3326,4.279,3327,4.279,3328,4.279,3329,4.279,3330,4.279,3331,4.279,3332,4.279,3333,4.279,3334,4.279,3335,4.279,3336,4.279,3337,4.279,3338,4.279,3339,4.279,3340,4.279,3341,4.279,3342,4.279,3343,4.279,3344,4.279,3345,4.279,3346,4.279,3347,4.279,3348,4.279,3349,4.279,3350,4.279,3351,4.279,3352,4.279,3353,4.279,3354,5.645,3355,4.279,3356,4.279,3357,4.279,3358,4.279,3359,4.279,3360,4.279]],["title/modules.html",[2323,3.418]],["body/modules.html",[71,0.015,327,0.015,328,0.015,376,2.011,2323,4.126,3018,4.461,3361,6.296,3362,6.296,3363,6.296]],["title/overview.html",[1170,2.989]],["body/overview.html",[2,1.306,69,3.046,71,0.016,198,1.147,257,1.421,322,1.577,327,0.014,328,0.014,564,4.627,571,1.828,574,2.27,648,1.99,1144,3.962,1146,3.962,1149,3.962,1162,3.911,1170,3.42,1508,4.229,1973,5.16,2124,5.381,2322,4.918,2962,4.627,3018,5.674,3019,5.16,3020,4.229,3021,4.627,3022,5.16,3023,5.16,3024,5.16,3025,5.16,3364,5.16]],["title/properties.html",[41,0.461,1390,2.074]],["body/properties.html",[41,0.634,71,0.015,327,0.015,328,0.015,1433,3.615,3365,6.31]],["title/routes.html",[1173,2.989]],["body/routes.html",[71,0.015,327,0.015,328,0.015,1173,3.627]],["title/miscellaneous/variables.html",[3366,2.737,3367,3.961]],["body/miscellaneous/variables.html",[9,0.097,15,0.556,21,1.444,27,1.033,31,1.187,40,0.162,71,0.017,72,0.324,73,0.344,76,0.582,78,1.378,114,1.238,132,1.155,134,1.093,135,1.202,148,0.637,182,3.366,198,1.479,222,1.515,248,1.701,250,2.684,327,0.01,328,0.01,330,1.984,333,2.269,334,3.433,360,2.253,362,3.201,366,1.515,376,1.561,398,3.123,403,2.684,433,0.896,448,1.378,475,1.675,494,2.738,495,2.116,514,2.257,550,2.684,571,1.06,599,2.257,607,1.378,611,1.675,709,1.767,717,2.799,722,2.994,777,2.799,813,3.537,814,4.409,815,4.701,829,2.253,841,1.869,854,2.037,872,1.869,993,3.201,994,1.701,1017,2.985,1022,1.869,1091,2.269,1117,2.888,1118,1.984,1152,4.531,1156,1.984,1161,3.458,1165,3.528,1173,3.855,1184,3.458,1192,2.269,1221,2.453,1352,2.637,1392,3.962,1393,3.461,1395,2.985,1429,2.684,1430,2.994,1431,2.994,1432,2.994,1433,2.799,1441,4.223,1442,4.223,1445,2.994,1460,6.104,1463,3.201,1465,5.605,1499,3.787,1614,2.684,1633,2.116,1635,2.269,1636,2.453,1638,2.453,1641,2.684,1714,2.453,1838,2.994,1860,2.684,1878,2.116,2095,2.994,2102,3.201,2125,2.269,2149,3.201,2281,2.684,2282,3.787,2323,2.269,2354,3.787,2410,2.684,2420,2.453,2492,2.684,2493,3.787,2519,2.684,2586,2.684,2587,3.787,2662,2.684,2779,2.684,2780,3.787,2833,2.269,2837,2.116,2883,4.388,2934,3.787,2954,3.787,2962,2.684,3020,4.011,3021,3.787,3053,4.893,3054,4.223,3055,2.994,3139,2.684,3140,3.787,3150,3.787,3197,2.994,3199,4.893,3200,2.994,3201,4.223,3202,2.994,3203,4.223,3204,2.994,3230,2.994,3235,2.994,3236,2.994,3237,2.994,3238,4.223,3239,4.223,3240,4.223,3241,4.223,3253,4.223,3282,2.994,3303,2.994,3304,2.994,3305,2.994,3364,2.994,3366,4.223,3367,2.994,3368,6.483,3369,3.463,3370,3.463,3371,3.463,3372,3.463,3373,4.885,3374,3.463,3375,3.463,3376,3.463,3377,3.463,3378,3.463,3379,3.463,3380,3.463,3381,3.463,3382,3.463,3383,3.463,3384,3.463,3385,4.885,3386,4.885,3387,3.463,3388,3.463,3389,3.463,3390,3.463,3391,3.463,3392,3.463,3393,3.463,3394,3.463,3395,3.463,3396,4.885,3397,3.463,3398,3.463,3399,3.463,3400,3.463,3401,3.463,3402,3.463,3403,3.463,3404,3.463,3405,3.463,3406,3.463,3407,3.463,3408,3.463,3409,3.463,3410,3.463,3411,3.463,3412,3.463,3413,3.463,3414,4.885,3415,3.463,3416,3.463,3417,3.463,3418,3.463,3419,3.463,3420,3.463,3421,3.463,3422,3.463,3423,3.463,3424,4.885,3425,3.463,3426,3.463,3427,4.885,3428,3.463,3429,3.463,3430,3.463,3431,3.463,3432,4.885,3433,3.463,3434,4.885,3435,3.463,3436,3.463,3437,3.463,3438,3.463,3439,3.463,3440,3.463,3441,3.463,3442,3.463,3443,3.463,3444,3.463,3445,3.463,3446,3.463,3447,3.463,3448,3.463,3449,3.463,3450,3.463,3451,3.463,3452,3.463,3453,3.463,3454,3.463,3455,3.463,3456,3.463,3457,3.463,3458,3.463,3459,3.463,3460,3.463,3461,3.463,3462,3.463,3463,3.463,3464,3.463,3465,3.463,3466,3.463,3467,3.463,3468,3.463,3469,3.463,3470,3.463,3471,3.463,3472,3.463,3473,6.148,3474,3.463,3475,3.463,3476,6.148,3477,3.463,3478,3.463,3479,3.463,3480,4.885,3481,4.885,3482,3.463,3483,3.463,3484,4.885,3485,3.463,3486,3.463,3487,3.463,3488,3.463,3489,3.463]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":764,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":3365,"title":{},"body":{"properties.html":{}}}],["0.125rem",{"_index":1273,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15.0",{"_index":3268,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":1261,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.18.5",{"_index":3266,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1282,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3",{"_index":2568,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.375rem",{"_index":1280,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.543.0",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":1253,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":1226,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":1266,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":1268,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":1217,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":3191,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":3194,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":3193,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3195,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3189,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3192,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":1287,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":1286,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":1264,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["009688",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":3420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":772,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":1843,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":1842,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0–1",{"_index":1807,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/ZipExportService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":762,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":768,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1255,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1/1",{"_index":3198,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":3228,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["100,000,000",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["1000",{"_index":2632,"title":{},"body":{"injectables/PostApiService.html":{}}}],["100px",{"_index":2453,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":1190,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":2352,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["10rem",{"_index":916,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":722,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["110",{"_index":1639,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["111",{"_index":2574,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":3435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1274,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["13",{"_index":3437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":3196,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2962,"title":{},"body":{"injectables/TemplateEditorService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["14/14",{"_index":3234,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":1618,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["145",{"_index":1619,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["15",{"_index":3443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":3259,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3205,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1838,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":3217,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3364,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["17/17",{"_index":3209,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":3243,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":3248,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":3216,"title":{},"body":{"coverage.html":{}}}],["1c7430",{"_index":1294,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":1293,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":1239,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":1211,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":1205,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1st",{"_index":1814,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["2",{"_index":366,"title":{},"body":{"components/AiComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1000,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":3265,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3213,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":3211,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1230,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2025",{"_index":730,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{}}}],["20px",{"_index":2347,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["2196f3",{"_index":3418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":3207,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":1620,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["23px",{"_index":2455,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":2601,"title":{},"body":{"injectables/PostApiService.html":{}}}],["25.9.21",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250px",{"_index":1244,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["255",{"_index":1626,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["28/28",{"_index":3225,"title":{},"body":{"coverage.html":{}}}],["28/29",{"_index":3223,"title":{},"body":{"coverage.html":{}}}],["28a745",{"_index":1224,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["29",{"_index":1973,"title":{},"body":{"injectables/GeminiApiService.html":{},"overview.html":{}}}],["29/29",{"_index":3231,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":1206,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1633,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3226,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1627,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["300",{"_index":1306,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3000",{"_index":1569,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["300ms",{"_index":1307,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["31/31",{"_index":3215,"title":{},"body":{"coverage.html":{}}}],["320kbps",{"_index":2840,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["33",{"_index":1631,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["350",{"_index":2122,"title":{},"body":{"components/GraphsComponent.html":{}}}],["38/38",{"_index":3220,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":3428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1635,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.0.3",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":3254,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3227,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":911,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["46",{"_index":1632,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["48",{"_index":1642,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["495057",{"_index":1249,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":3412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e555b",{"_index":1291,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":1260,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1636,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3206,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3233,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["500",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["5000",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["500x500",{"_index":2842,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["50x50",{"_index":2841,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["545b62",{"_index":1290,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["55",{"_index":1634,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["58",{"_index":1601,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["59",{"_index":1707,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":1638,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6/6",{"_index":3229,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2631,"title":{},"body":{"injectables/PostApiService.html":{}}}],["600",{"_index":1248,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["607d8b",{"_index":3431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c757d",{"_index":1218,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":1641,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":3263,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3208,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1611,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8",{"_index":1156,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3210,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3232,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1637,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8bc34a",{"_index":3434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1614,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["9/9",{"_index":3212,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":3222,"title":{},"body":{"coverage.html":{}}}],["96kbps",{"_index":2839,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["999",{"_index":1708,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":3423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":3436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":2229,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.click",{"_index":1418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":1416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.expense_count",{"_index":860,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.href",{"_index":1415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.name.localecompare(b.name",{"_index":861,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.style.display",{"_index":3187,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a.time.split(\":\").map(number",{"_index":2203,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a4",{"_index":1593,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["ability",{"_index":3331,"title":{},"body":{"index.html":{}}}],["above",{"_index":1448,"title":{},"body":{"injectables/ConfigService.html":{}}}],["acc",{"_index":791,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accepted",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["accepts",{"_index":336,"title":{},"body":{"components/AiComponent.html":{}}}],["acceptsuggestiononenter",{"_index":2977,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":2474,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accessed",{"_index":598,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["accesses",{"_index":2606,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":2095,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1080,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["account",{"_index":3092,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accurate",{"_index":1060,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":1380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":1225,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["activation",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["active",{"_index":825,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["activepath",{"_index":2813,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual",{"_index":2462,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["actual_component",{"_index":326,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":871,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/UserLikedSongsService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["add(data",{"_index":620,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["added",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["additional",{"_index":1095,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["address",{"_index":3091,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["adjusted",{"_index":1669,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["afterviewinit",{"_index":2496,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["again",{"_index":1388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["aggregates",{"_index":2509,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ahours",{"_index":2200,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":330,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":264,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":345,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":263,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasybkbmhcsvna6d8bpyjqqhbpdymn7_nvm2w",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1025,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["albumname",{"_index":1046,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1073,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albums",{"_index":2781,"title":{},"body":{"components/SearchMusicComponent.html":{}}}],["align",{"_index":1202,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["alignment",{"_index":1929,"title":{},"body":{"components/FormModelComponent.html":{}}}],["all.filter(c",{"_index":879,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":643,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["all.map(item",{"_index":637,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":624,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["all.some(c",{"_index":876,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allow",{"_index":2045,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["allowed/day",{"_index":3327,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":3281,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2056,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["alongside",{"_index":1904,"title":{},"body":{"components/FooterComponent.html":{}}}],["alphabetically",{"_index":845,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["already",{"_index":1099,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":632,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["amber",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":2201,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":1795,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{}}}],["amt",{"_index":1839,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":1956,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["analyze",{"_index":1057,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":1967,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["anchor",{"_index":2268,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":360,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":374,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":3244,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":375,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":3245,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":3247,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":3238,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":3380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":3066,"title":{},"body":{"components/ToastComponent.html":{}}}],["animation",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":2127,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":2001,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":1986,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":2539,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2569,"title":{},"body":{"components/PieChartComponent.html":{}}}],["aoa",{"_index":1648,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(headerrow",{"_index":1652,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(object.values(row",{"_index":1654,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["apexaxischartseries",{"_index":2129,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":2121,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":2132,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":2139,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":2141,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexstroke",{"_index":2143,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":2148,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":2151,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":2153,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":2133,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":2137,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":334,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":380,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":1940,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:103",{"_index":1954,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2605,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:23",{"_index":1949,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:37",{"_index":2613,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:45",{"_index":1964,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:74",{"_index":1962,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:76",{"_index":2608,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":379,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2618,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service.ts",{"_index":966,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:154",{"_index":2656,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:34",{"_index":2660,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:39",{"_index":2659,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:44",{"_index":2655,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:63",{"_index":2657,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:80",{"_index":2658,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":1311,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["api_response_app_version",{"_index":2639,"title":{},"body":{"injectables/PostApiService.html":{}}}],["apiurl",{"_index":998,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["app_current_version",{"_index":2641,"title":{},"body":{"injectables/PostApiService.html":{}}}],["app_version",{"_index":2683,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":265,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":3201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":2012,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["appearance",{"_index":3167,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":1193,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1103,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["applicationconfig",{"_index":3396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["appname",{"_index":1429,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1439,"title":{},"body":{"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["appversion",{"_index":1908,"title":{},"body":{"components/FooterComponent.html":{}}}],["apr",{"_index":1824,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":2234,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":2069,"title":{},"body":{"components/GraphsComponent.html":{}}}],["args",{"_index":2327,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":2329,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":2328,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arguments",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["arial",{"_index":2346,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":612,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":2182,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":2226,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":2216,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1030,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artist.name).join",{"_index":1054,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artist_name",{"_index":2843,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artistname",{"_index":2690,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["artistnames",{"_index":2822,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artists",{"_index":1026,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"components/SearchMusicComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artistsname",{"_index":1050,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artistsname)}${formatfield('is",{"_index":1074,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["aseconds",{"_index":2202,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":2018,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":2028,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":1999,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assign",{"_index":3100,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["assigned",{"_index":840,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["assist",{"_index":2025,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":394,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["associated",{"_index":816,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["associates",{"_index":862,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["async",{"_index":350,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["attached",{"_index":1677,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attaches",{"_index":1666,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attempting",{"_index":873,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["attribute.name",{"_index":3008,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":3010,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attributes",{"_index":2821,"title":{},"body":{"interfaces/Song.html":{}}}],["aug",{"_index":1827,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":2237,"title":{},"body":{"components/GraphsComponent.html":{}}}],["authentication",{"_index":997,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["auto",{"_index":1246,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["autoclosingbrackets",{"_index":2974,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":3015,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":2975,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatic",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":616,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":2959,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autotable",{"_index":1531,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["autotable(doc",{"_index":1609,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["available",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["averages",{"_index":1991,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":3326,"title":{},"body":{"index.html":{}}}],["await",{"_index":388,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["axis",{"_index":2136,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":858,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":859,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":2207,"title":{},"body":{"components/GraphsComponent.html":{}}}],["back",{"_index":2480,"title":{},"body":{"components/NavbarComponent.html":{}}}],["backend",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1207,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backgroundcolor",{"_index":2564,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2553,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":2443,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":2386,"title":{},"body":{"components/HomeComponent.html":{}}}],["backup",{"_index":2617,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["backup_frequency",{"_index":2678,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["backups",{"_index":3086,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":1272,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bar",{"_index":2479,"title":{},"body":{"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":993,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseinstructions",{"_index":1978,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":995,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["bash",{"_index":3172,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":2345,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["before",{"_index":872,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2583,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":2013,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["behavior",{"_index":2269,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["behaviorsubject",{"_index":2784,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":2794,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":1880,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["belongs",{"_index":2826,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["below",{"_index":1604,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["best",{"_index":1093,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1085,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["between",{"_index":971,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":779,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":2204,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":3415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":3056,"title":{},"body":{"components/ToastComponent.html":{}}}],["blinkmacsystemfont",{"_index":1195,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":1398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["blob([content",{"_index":1576,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["block",{"_index":2778,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockcomment",{"_index":3013,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["blockkey",{"_index":2373,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":2382,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":2005,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":3054,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":2205,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1104,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["bodystyles",{"_index":1628,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1223,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["boolean",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":3020,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":3407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1209,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bordercolor",{"_index":2558,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2565,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":1210,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["box",{"_index":373,"title":{},"body":{"components/AiComponent.html":{}}}],["boxes",{"_index":3325,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":3014,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":2307,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["brightness",{"_index":1805,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["broadcast",{"_index":2486,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["broadcasting",{"_index":2261,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["browse",{"_index":3363,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":376,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/SyncSchemaService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":3239,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":3028,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["browser’s",{"_index":3347,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":2206,"title":{},"body":{"components/GraphsComponent.html":{}}}],["btn",{"_index":1279,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["budget",{"_index":573,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["budget'},{'name",{"_index":268,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget_id",{"_index":578,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcomponent",{"_index":267,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetdata",{"_index":1538,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["budgetkey",{"_index":2671,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgets",{"_index":593,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetschema",{"_index":2685,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":601,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["build",{"_index":1499,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":1728,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["bullet",{"_index":2006,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":1936,"title":{},"body":{"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["button'},{'name",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":2738,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":2739,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":2735,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":2760,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2761,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":2764,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":2745,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2757,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":2752,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":2747,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":2734,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":877,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculates",{"_index":669,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses",{"_index":688,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":697,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":661,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":677,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":676,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":269,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":678,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":679,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":1391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":2951,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["callbacks",{"_index":2575,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/ToastService.html":{}}}],["calls",{"_index":1003,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["cancel",{"_index":1660,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["canvas",{"_index":2513,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvasref",{"_index":2499,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvg",{"_index":3250,"title":{},"body":{"dependencies.html":{}}}],["care",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2306,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["cash",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1682,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":2538,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":954,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":953,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1687,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1686,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1685,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["categories",{"_index":829,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1683,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1665,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":945,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1662,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1663,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1554,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["categorycolors",{"_index":2500,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydata",{"_index":1537,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":875,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2669,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":2501,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":891,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2675,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":901,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":834,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["categorytotals",{"_index":2545,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":2549,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":898,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":2547,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2556,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cellwidth",{"_index":1630,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["center",{"_index":1204,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["certain",{"_index":2387,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":709,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":2114,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changemonth",{"_index":689,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":704,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/ZipExportService.html":{}}}],["changes['currentdate",{"_index":2163,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":2162,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":2102,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":2421,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":2497,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":2498,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":2493,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:101",{"_index":2507,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:116",{"_index":2510,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:140",{"_index":2508,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:160",{"_index":2511,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:188",{"_index":2518,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:22",{"_index":2531,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":2525,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:28",{"_index":2523,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:31",{"_index":2530,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:34",{"_index":2526,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:37",{"_index":2524,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:40",{"_index":2529,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:43",{"_index":2522,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:46",{"_index":2506,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:49",{"_index":2505,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:69",{"_index":2515,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:85",{"_index":2512,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:94",{"_index":2514,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2519,"title":{},"body":{"components/PieChartComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart/pie",{"_index":2420,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":2077,"title":{},"body":{"components/GraphsComponent.html":{}}}],["charts",{"_index":2070,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":2078,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":2079,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":2080,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":2032,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":964,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/HbsRenderService.html":{}}}],["checks",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["choiceresult.outcome",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["chosen",{"_index":3308,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["classes",{"_index":776,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["clear",{"_index":1354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["clears",{"_index":713,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleartimeout(this.savetimeout",{"_index":1322,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":3390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["clickedinside",{"_index":2277,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicking",{"_index":2247,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":923,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close",{"_index":925,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["closed",{"_index":1736,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/SearchButtonComponent.html":{}}}],["closedownloaddatamodal",{"_index":1491,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["closemodal",{"_index":690,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["closemodel",{"_index":1923,"title":{},"body":{"components/FormModelComponent.html":{}}}],["closes",{"_index":712,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/UserData.html":{}}}],["closing",{"_index":1716,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":3393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":3022,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":3024,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":3023,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":3025,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":604,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Session.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["color",{"_index":777,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":2449,"title":{},"body":{"components/HomeComponent.html":{}}}],["colors",{"_index":1784,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{}}}],["column",{"_index":1189,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":1236,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columnstyles",{"_index":1629,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["combining",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1048,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["comment",{"_index":3000,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":2971,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":2299,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["communicates",{"_index":2810,"title":{},"body":{"components/SidebarComponent.html":{}}}],["communicating",{"_index":1941,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["compact",{"_index":2245,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{}}}],["compare",{"_index":2302,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":2342,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["compliant",{"_index":2667,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["compodoc",{"_index":1164,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":1116,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component's",{"_index":3039,"title":{},"body":{"components/ToastComponent.html":{}}}],["component'},{'name",{"_index":274,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["component.component",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["component.component.css",{"_index":1488,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.html",{"_index":1487,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.ts",{"_index":1479,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component.component.ts:107",{"_index":1502,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:119",{"_index":1501,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:191",{"_index":1519,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:210",{"_index":1514,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:224",{"_index":1500,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:235",{"_index":1511,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:26",{"_index":2461,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:302",{"_index":1507,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:32",{"_index":2467,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:40",{"_index":2460,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:56",{"_index":1522,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:57",{"_index":2465,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:61",{"_index":1523,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:66",{"_index":2464,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:67",{"_index":1498,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:94",{"_index":1513,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/download",{"_index":1478,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component/graphs/graphs.component",{"_index":2418,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/install",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["component/pie",{"_index":2419,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/playlist",{"_index":2586,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component/search",{"_index":2779,"title":{},"body":{"components/SearchMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["components/download",{"_index":1477,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["components/setting",{"_index":2799,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["computed",{"_index":820,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["conditional",{"_index":2312,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditions",{"_index":1449,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config",{"_index":1161,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":2620,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{}}}],["configservice",{"_index":1426,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["configurable",{"_index":3032,"title":{},"body":{"components/ToastComponent.html":{}}}],["configuration",{"_index":1165,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm('are",{"_index":1377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirmanddownload",{"_index":1492,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["conforms",{"_index":2879,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["connects",{"_index":2057,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["consider",{"_index":1079,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["consistency",{"_index":833,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["console.error(\"chart.js",{"_index":2543,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2584,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":785,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('download",{"_index":1574,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('error",{"_index":796,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('gemini",{"_index":1971,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2907,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["console.error('no",{"_index":1387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('submit",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["console.log('backup",{"_index":2647,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":2767,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('creating",{"_index":1389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('posting",{"_index":2633,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('reset",{"_index":1385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":1328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":1421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('user",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["console.warn('user",{"_index":2649,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":878,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":1403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["constructor(categoryservice",{"_index":903,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(configservice",{"_index":1909,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["constructor(expenseservice",{"_index":693,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":352,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":2744,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":2042,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":1948,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":939,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["constructor(sectionservice",{"_index":1869,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":650,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":3036,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructors",{"_index":1178,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructs",{"_index":2093,"title":{},"body":{"components/GraphsComponent.html":{}}}],["contain",{"_index":1797,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["container",{"_index":1275,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1011,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["contains",{"_index":1444,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ZipExportService.html":{}}}],["content",{"_index":975,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["contentdisposition",{"_index":1404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":1409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1105,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["context",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2578,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2577,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2576,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":2027,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":3358,"title":{},"body":{"index.html":{}}}],["control",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["controlled",{"_index":2037,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["conversation",{"_index":991,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["converts",{"_index":339,"title":{},"body":{"components/AiComponent.html":{},"components/ExpenseListComponent.html":{}}}],["copyright",{"_index":2689,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["count",{"_index":844,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["counts",{"_index":846,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["coverage",{"_index":1174,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":830,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["created",{"_index":1329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["createnoderequesthandler(app",{"_index":3387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["createsession",{"_index":1323,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["creation",{"_index":1394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crypto.randomuuid",{"_index":623,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":818,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["ctx",{"_index":2559,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":680,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":2090,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["currentmonth",{"_index":681,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":2171,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":2176,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":1865,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":3102,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":3104,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1023,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1047,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1052,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1053,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists?.all",{"_index":1051,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1072,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1069,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.isliked",{"_index":1076,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1070,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1071,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1066,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1067,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1068,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentyear",{"_index":682,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":2221,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":2222,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1257,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["curve",{"_index":2144,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":906,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["customfavicon",{"_index":1120,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customizable",{"_index":1920,"title":{},"body":{"components/FormModelComponent.html":{}}}],["customization",{"_index":3177,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["customization.html",{"_index":3186,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":3179,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":3162,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":3166,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["cyan",{"_index":3421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":1837,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["daily",{"_index":675,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark:text",{"_index":3063,"title":{},"body":{"components/ToastComponent.html":{}}}],["darken",{"_index":1783,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor",{"_index":1789,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":1798,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkened",{"_index":1808,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkens",{"_index":1801,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":2366,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.map((exp",{"_index":1605,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["data/categories",{"_index":2896,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["datablock",{"_index":2029,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":2081,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2563,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2566,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2567,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2570,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["date().getfullyear",{"_index":735,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":733,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().toisostring().replace(/[:.]/g",{"_index":1579,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date().toisostring().split('t')[0",{"_index":1540,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date(`${a.date}t${a.time",{"_index":1689,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1691,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":1821,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1701,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1703,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2627,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":2428,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(todate",{"_index":1547,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{}}}],["date(value",{"_index":2435,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":761,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getdate",{"_index":1834,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date.getfullyear",{"_index":1836,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{}}}],["date.now().tostring(36",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":2441,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:'short",{"_index":1160,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datea",{"_index":1688,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1693,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1690,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1692,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":1527,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["datestr",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":672,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":800,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":2192,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":2168,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":2181,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":2179,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":2180,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayname",{"_index":1832,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days",{"_index":663,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":2183,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[date.getday",{"_index":1833,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days[value",{"_index":2186,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":763,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":703,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ddd",{"_index":2349,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["ddthh:mm:ss",{"_index":1670,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["debounce",{"_index":1308,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":1346,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dec",{"_index":1831,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":2240,"title":{},"body":{"components/GraphsComponent.html":{}}}],["decimal",{"_index":583,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["decimals",{"_index":618,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["declarations",{"_index":3019,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":2295,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":1283,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["decreases",{"_index":1804,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dee2e6",{"_index":1213,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deep",{"_index":3427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1447,"title":{},"body":{"injectables/ConfigService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defaultschema",{"_index":2891,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["defaultschema[key",{"_index":2924,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["defaultviewtype",{"_index":2369,"title":{},"body":{"components/HomeComponent.html":{}}}],["deferredprompt",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["define",{"_index":3051,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["defines",{"_index":2662,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["definitions",{"_index":2881,"title":{},"body":{"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{}}}],["delay",{"_index":2759,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["delegate",{"_index":3074,"title":{},"body":{"injectables/ToastService.html":{}}}],["delete",{"_index":595,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":2444,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":642,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":870,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1699,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["delete(song_id",{"_index":3119,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["deleted",{"_index":1738,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["deletes",{"_index":641,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["deleting",{"_index":1717,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["deletion",{"_index":874,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delimiter",{"_index":3009,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":2362,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1440,"title":{},"body":{"injectables/ConfigService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["deploying",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depth",{"_index":2317,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["design",{"_index":3338,"title":{},"body":{"index.html":{}}}],["designed",{"_index":3274,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":3345,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":2936,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["detailed",{"_index":3354,"title":{},"body":{"index.html":{}}}],["details",{"_index":276,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["detection",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":2485,"title":{},"body":{"components/NavbarComponent.html":{}}}],["determines",{"_index":1443,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["dev",{"_index":3391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":3357,"title":{},"body":{"index.html":{}}}],["development",{"_index":1465,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1430,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":1882,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"index.html":{}}}],["device's",{"_index":3309,"title":{},"body":{"index.html":{}}}],["devices",{"_index":3339,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1485,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["different",{"_index":2809,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["differentiation",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1188,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":325,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directory",{"_index":3170,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":3395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1169,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":1121,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":1122,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":1123,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":1124,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":1125,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":1126,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":1127,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":1128,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":1129,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":1130,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":1131,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":1132,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":1133,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":1134,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disables",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["disablesearch",{"_index":1135,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":1136,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":1137,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":1138,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disappears",{"_index":3045,"title":{},"body":{"components/ToastComponent.html":{}}}],["dismiss",{"_index":2476,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{}}}],["dismissed",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["dismisses",{"_index":1937,"title":{},"body":{"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["dismissinstall",{"_index":2458,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["displayed",{"_index":1926,"title":{},"body":{"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{}}}],["displaying",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displays",{"_index":662,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["disposition",{"_index":1406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["distinct",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":3302,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":3385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":1590,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1595,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.save(`expenses",{"_index":1643,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(10",{"_index":1599,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(14",{"_index":1597,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(sub",{"_index":1600,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(title",{"_index":1598,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doctype",{"_index":3002,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":2263,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":1417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.appendchild(link",{"_index":1582,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["document.body.removechild(a",{"_index":1419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(link",{"_index":1584,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["document.createelement('a",{"_index":1414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('div",{"_index":3057,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":3048,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":902,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":920,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["documentation/.../hbs",{"_index":3375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":3377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":3376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":1117,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":2358,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":355,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2520,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["downloadblob",{"_index":3141,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":3144,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadcomponentcomponent",{"_index":272,"title":{"components/DownloadComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["downloaddata",{"_index":1493,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaddataform",{"_index":1489,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaded",{"_index":1422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["downloading",{"_index":1423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloadurl",{"_index":2692,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["downloadurls",{"_index":2823,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["drinks",{"_index":3408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":271,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":889,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":890,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":885,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":931,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":921,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":919,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":917,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":912,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":907,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":934,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":936,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":904,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":927,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":926,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":932,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":899,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":1042,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["during",{"_index":2883,"title":{},"body":{"injectables/SyncSchemaService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1905,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":3031,"title":{},"body":{"components/ToastComponent.html":{}}}],["e",{"_index":784,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1684,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":728,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["e9ecef",{"_index":1228,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":841,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["easily",{"_index":3275,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1726,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["edited",{"_index":1740,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editform",{"_index":1719,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editing",{"_index":1713,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editor",{"_index":1270,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":1145,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":2934,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":2953,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":2945,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":2941,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":2948,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":2950,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":2943,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":2946,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":2952,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":1298,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":1312,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["education",{"_index":3422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["email",{"_index":2679,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":887,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitted",{"_index":1735,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["emitting",{"_index":2768,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":2004,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":3276,"title":{},"body":{"index.html":{}}}],["empty",{"_index":611,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":2125,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3094,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":589,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["endpoint",{"_index":1395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":3383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhances",{"_index":1062,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["enhancing",{"_index":1084,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["ensures",{"_index":2878,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["ensuring",{"_index":597,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["enter",{"_index":2754,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":2762,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":2833,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"miscellaneous/variables.html":{}}}],["entire",{"_index":3110,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["entries",{"_index":3306,"title":{},"body":{"index.html":{}}}],["entry",{"_index":577,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"index.html":{}}}],["environment",{"_index":599,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":1466,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.appname",{"_index":1453,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.developmentenvironment",{"_index":1456,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.liveapiurl",{"_index":1461,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.localapiurl",{"_index":1464,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":981,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":795,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["error('failed",{"_index":1331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":2356,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["etc",{"_index":1027,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["event",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":949,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":2279,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.value",{"_index":2430,"title":{},"body":{"components/HomeComponent.html":{}}}],["eventcoalescing",{"_index":3398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":918,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["events",{"_index":1715,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{}}}],["example",{"_index":1463,"title":{},"body":{"injectables/ConfigService.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["excel",{"_index":1482,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["exceldata",{"_index":1645,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exceldata.length",{"_index":1649,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exchanged",{"_index":970,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["excluding",{"_index":863,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["exist",{"_index":867,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["existing",{"_index":628,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["exists",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["exp",{"_index":790,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":803,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.category_icon",{"_index":1847,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":804,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.date",{"_index":1606,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["exp.isextraspending",{"_index":1607,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.location",{"_index":808,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.note",{"_index":807,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.payment_mode",{"_index":809,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.time",{"_index":806,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["expands",{"_index":2737,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expected",{"_index":3107,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":262,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.amount",{"_index":1548,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_id",{"_index":1556,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_name",{"_index":1555,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.component",{"_index":1888,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.date",{"_index":1549,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.expense_id",{"_index":1558,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.isextraspending",{"_index":1559,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.location",{"_index":1551,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.note",{"_index":1552,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.payment_mode",{"_index":1553,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.service",{"_index":827,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense.time",{"_index":1550,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":812,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1557,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["expensecountmap",{"_index":850,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":856,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedata",{"_index":1536,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expensedetailsmodalcomponent",{"_index":275,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2670,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":278,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":1892,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["expenses.component.ts",{"_index":3219,"title":{},"body":{"coverage.html":{}}}],["expenses.filter(exp",{"_index":2198,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":2172,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1680,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":851,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1710,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":1891,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2676,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":1792,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["expensewise",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expensewisecomponent",{"_index":280,"title":{"components/ExpenseWiseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["experience",{"_index":1064,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1096,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":3313,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["export.service",{"_index":1148,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":3140,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":3147,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":3149,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":3145,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporting",{"_index":1480,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exports",{"_index":1508,"title":{},"body":{"components/DownloadComponentComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["exporttemplates",{"_index":3142,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":3146,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttoexcel",{"_index":1494,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttoexcel(data",{"_index":1506,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exporttopdf",{"_index":1495,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttopdf(data",{"_index":1510,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exportzip",{"_index":1386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":3253,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extension",{"_index":1518,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["externally",{"_index":3041,"title":{},"body":{"components/ToastComponent.html":{}}}],["extra",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["extract",{"_index":1045,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["exwise",{"_index":1446,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{}}}],["f0f8ff",{"_index":2351,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":3439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f8f9fa",{"_index":1208,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fade",{"_index":3067,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1192,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":3349,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["feature",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":335,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["features/add",{"_index":1887,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/ai/ai.component",{"_index":1896,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/budget/budget.component",{"_index":1895,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/calendar/calendar.component",{"_index":1894,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/home/home.component",{"_index":1893,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/list",{"_index":1890,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/settings/settings.component",{"_index":1889,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["feb",{"_index":1823,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":2232,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":596,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fetched",{"_index":2468,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["fetches",{"_index":1942,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["fetching",{"_index":1113,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff0000",{"_index":1806,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["ff4081",{"_index":3441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":3426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":3409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":3413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":1221,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":3417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2573,"title":{},"body":{"components/PieChartComponent.html":{}}}],["fff5f5",{"_index":2355,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":821,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{}}}],["fieldname",{"_index":1038,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":635,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.content",{"_index":3153,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":1402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":1408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":1410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":3148,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":3151,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1542,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fillcolor",{"_index":1617,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter",{"_index":908,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["filter(loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredexpensedata",{"_index":1563,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2913,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["filtering",{"_index":2098,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["final",{"_index":1561,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finaldata",{"_index":1562,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finalize",{"_index":979,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finance",{"_index":3283,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1981,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":3392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["firstday",{"_index":760,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstvaluefrom",{"_index":982,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1108,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fit",{"_index":1086,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fits",{"_index":1061,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["flag",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":2407,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1001,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":1187,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["flexibility",{"_index":3332,"title":{},"body":{"index.html":{}}}],["floating",{"_index":2736,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2463,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["focus",{"_index":2756,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":2024,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":2758,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["folder",{"_index":3386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":1191,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":3181,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1613,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fontstyle",{"_index":1624,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["food",{"_index":3303,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1903,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":283,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":1907,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1906,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":282,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":2413,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":2370,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":2126,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["format",{"_index":1036,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["formatdateforinput",{"_index":2374,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":2389,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1041,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1065,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":2375,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":2392,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1483,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["formatted",{"_index":1039,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["formattedexpense",{"_index":1679,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":2185,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formatting",{"_index":1097,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formmodelcomponent",{"_index":284,"title":{"components/FormModelComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["forms",{"_index":1729,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{}}}],["formsmodule",{"_index":343,"title":{},"body":{"components/AiComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["forwards",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":802,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["frame",{"_index":1278,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":3287,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":3085,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fri",{"_index":749,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["friendly",{"_index":1998,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":3433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1705,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":579,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":1972,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":3286,"title":{},"body":{"index.html":{}}}],["full",{"_index":1114,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fullnames",{"_index":2230,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":2241,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fully",{"_index":3040,"title":{},"body":{"components/ToastComponent.html":{}}}],["function",{"_index":1035,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["functionality",{"_index":1384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["functions",{"_index":3394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":1526,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["g",{"_index":1840,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gap",{"_index":1215,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gathers",{"_index":2609,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":333,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":353,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generate",{"_index":3157,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["generateexpenseanalysisprompt",{"_index":1945,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":1951,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generatereadme",{"_index":3143,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generates",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{}}}],["generateuserid",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["generating",{"_index":3164,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":3163,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":1167,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generic",{"_index":2663,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getall",{"_index":613,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["getallbudgets",{"_index":2696,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":2694,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":2700,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallsongs",{"_index":2702,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiurl",{"_index":1434,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappname",{"_index":1435,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":2708,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbudgetschema",{"_index":2729,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":1848,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1697,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getbysongid",{"_index":3116,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["getbysongid(song_id",{"_index":3122,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["getcategorykey",{"_index":2704,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getcategoryschema",{"_index":2723,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":2376,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":2706,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getexpenseschema",{"_index":2725,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":1790,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":1810,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1115,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlanguagefromfiletype",{"_index":2937,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":2942,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlast30daysexpenses",{"_index":1946,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlikedsongschema",{"_index":2731,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getlocalisostring",{"_index":1671,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["getmockdata",{"_index":2284,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getresponse",{"_index":1947,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":1963,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":847,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getuser",{"_index":2698,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdata",{"_index":3109,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2603,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":2710,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserlikedsongskey",{"_index":2712,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserschema",{"_index":2727,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":3130,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":3108,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":1436,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gifts",{"_index":3438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":699,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["global",{"_index":287,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":2746,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":286,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":429,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["globally",{"_index":2038,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["go",{"_index":3284,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":2377,"title":{},"body":{"components/HomeComponent.html":{}}}],["google",{"_index":988,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["goprevious",{"_index":2378,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1171,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["graphs",{"_index":2073,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":290,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":2075,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":2076,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":289,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":778,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":3053,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":3298,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":1994,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":3432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1235,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["groceries",{"_index":3411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":811,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["grouped",{"_index":2106,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":799,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":910,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["h3",{"_index":1247,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":1271,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["halign",{"_index":1621,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["hamburger",{"_index":292,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":291,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":835,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{}}}],["handlebars",{"_index":1352,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":2298,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":2999,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":2283,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handler",{"_index":3389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["handling",{"_index":3099,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hashed",{"_index":3096,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hbs",{"_index":1150,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":1149,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":1314,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["head",{"_index":1612,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["header",{"_index":726,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headerrow",{"_index":1650,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["headers",{"_index":1102,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["headstyles",{"_index":1616,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["health",{"_index":3419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":913,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hello",{"_index":1996,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":1984,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":1034,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{}}}],["helpers",{"_index":2300,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpful",{"_index":1980,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":2017,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hex",{"_index":817,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{}}}],["hh:mm:ss",{"_index":1664,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["hi",{"_index":1995,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hidden",{"_index":1232,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hiddeninput",{"_index":2451,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":2454,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1166,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["hidedarkmodetoggle",{"_index":1139,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":1140,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hides",{"_index":2047,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["hiding",{"_index":1932,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["highlights",{"_index":667,"title":{},"body":{"components/CalendarComponent.html":{},"components/SidebarComponent.html":{}}}],["history",{"_index":992,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["holding",{"_index":2796,"title":{},"body":{"injectables/SectionService.html":{}}}],["holds",{"_index":2816,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home",{"_index":1878,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":295,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":2367,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":2368,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":294,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["hooks",{"_index":1177,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":2967,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":2777,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":929,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":1877,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["hostlisteners",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":2210,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2602,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":2214,"title":{},"body":{"components/GraphsComponent.html":{}}}],["href",{"_index":2364,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":950,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["htmlinputelement",{"_index":2400,"title":{},"body":{"components/HomeComponent.html":{}}}],["http",{"_index":1002,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["http://localhost:8000",{"_index":1441,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":977,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":344,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["httpheaders",{"_index":978,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://compodoc.app/guides/template",{"_index":3185,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1442,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":999,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":996,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":1812,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":2016,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":813,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":585,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identifying",{"_index":1988,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ignores",{"_index":364,"title":{},"body":{"components/AiComponent.html":{}}}],["image",{"_index":2691,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["images",{"_index":2824,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["immediately",{"_index":3311,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":1375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["import('./features/expense",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./features/music/music",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./features/music/music.component')\\r\\n",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["include",{"_index":1094,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/NavbarComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":1141,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["including",{"_index":1714,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":3337,"title":{},"body":{"index.html":{}}}],["independent",{"_index":3290,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2664,"title":{},"body":{"interfaces/Schema.html":{}}}],["india",{"_index":2834,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["indicate",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicates",{"_index":824,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["indicating",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/NavbarComponent.html":{}}}],["indicator",{"_index":1220,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indicators",{"_index":1950,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["indigo",{"_index":3429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1018,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":1535,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["informative",{"_index":3323,"title":{},"body":{"index.html":{}}}],["init",{"_index":2411,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["initform",{"_index":1720,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initial",{"_index":1515,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/UserData.html":{}}}],["initialization",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/SyncSchemaService.html":{},"injectables/ToastService.html":{}}}],["initialize",{"_index":2955,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initialized",{"_index":2797,"title":{},"body":{"injectables/SectionService.html":{},"components/ToastComponent.html":{}}}],["initializeeditor",{"_index":1344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":2944,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":2285,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["initializing",{"_index":1319,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/PieChartComponent.html":{}}}],["inject(platform_id",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["injectable",{"_index":590,"title":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":648,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injected",{"_index":2094,"title":{},"body":{"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["input[type=\"date",{"_index":2446,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":2448,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":2391,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":2394,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":2399,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":2432,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":897,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["inr",{"_index":3090,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":2469,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":1944,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["install",{"_index":297,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["installapp",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installapppopupcomponentcomponent",{"_index":296,"title":{"components/InstallAppPopupComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["installation",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installing",{"_index":2475,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":2278,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["instances",{"_index":2527,"title":{},"body":{"components/PieChartComponent.html":{}}}],["instructions",{"_index":1957,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["integrates",{"_index":2249,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/ToastComponent.html":{}}}],["integrating",{"_index":985,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["intended",{"_index":2597,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interacting",{"_index":602,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{}}}],["interaction",{"_index":331,"title":{},"body":{"components/AiComponent.html":{}}}],["interactive",{"_index":3299,"title":{},"body":{"index.html":{}}}],["interface",{"_index":572,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":574,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["internal",{"_index":1176,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["intersect",{"_index":2155,"title":{},"body":{"components/GraphsComponent.html":{}}}],["intuitive",{"_index":3340,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1040,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["invoked",{"_index":2882,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["is_active",{"_index":814,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_app_updated",{"_index":2684,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_backup",{"_index":2680,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isappupdated",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["isbrowser",{"_index":605,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":892,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":781,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isdarkmode",{"_index":2502,"title":{},"body":{"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":3403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditopen",{"_index":1724,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["isinitial",{"_index":2339,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":2337,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isliked",{"_index":2693,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["ismenuopen",{"_index":2254,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":1866,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["ismusicroute",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":2440,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":2436,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":2439,"title":{},"body":{"components/HomeComponent.html":{}}}],["iso",{"_index":588,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["isopen",{"_index":2740,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["istabenabled",{"_index":2331,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":2041,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{}}}],["italic",{"_index":1269,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":639,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{}}}],["item'},{'name",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":2178,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":638,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":866,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":2804,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":2801,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":2805,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":2173,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1696,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.name",{"_index":1425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.note?.trim",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.song_id",{"_index":3129,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["item.time.split",{"_index":2213,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2915,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["item/setting",{"_index":2800,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":2923,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["itemdate",{"_index":1702,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1704,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":1203,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["jan",{"_index":1822,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":2231,"title":{},"body":{"components/GraphsComponent.html":{}}}],["javascript",{"_index":2989,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["job",{"_index":1056,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["js",{"_index":2988,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json",{"_index":1028,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2909,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":2697,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2695,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":2701,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.storageservice.getcategorykey",{"_index":2912,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":2699,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userlikedsongskey",{"_index":2703,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":627,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["json.stringify(budgets",{"_index":2719,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(categories",{"_index":2716,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(currentsettings",{"_index":3105,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(finaldata",{"_index":1565,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["json.stringify(last15daysexpenses",{"_index":2030,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":2933,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.stringify(updated",{"_index":880,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":2926,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.stringify(user",{"_index":2722,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsondata",{"_index":1564,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jspdf",{"_index":1530,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1591,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jszip",{"_index":3150,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jul",{"_index":1826,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":2236,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":1825,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":2235,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":1200,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["keep",{"_index":2023,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SidebarComponent.html":{},"injectables/ZipExportService.html":{}}}],["key",{"_index":854,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":2388,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":2383,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyed",{"_index":2528,"title":{},"body":{"components/PieChartComponent.html":{}}}],["keyframes",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":603,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/HomeComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["keyword",{"_index":2998,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":3319,"title":{},"body":{"index.html":{}}}],["label",{"_index":775,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{}}}],["labelalignment",{"_index":1924,"title":{},"body":{"components/FormModelComponent.html":{}}}],["labels",{"_index":752,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["lang.id",{"_index":2993,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1078,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{}}}],["laptop",{"_index":3344,"title":{},"body":{"index.html":{}}}],["last",{"_index":1158,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["last15daysexpenses",{"_index":1952,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2607,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2626,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2630,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2624,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastsaved",{"_index":1159,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["latest",{"_index":2880,"title":{},"body":{"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["launch",{"_index":3297,"title":{},"body":{"index.html":{}}}],["layout",{"_index":3182,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["lazy",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leave",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1267,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["legend",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["length",{"_index":2750,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["letter",{"_index":1251,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["let’s",{"_index":2022,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":3359,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":3285,"title":{},"body":{"index.html":{}}}],["lg",{"_index":3062,"title":{},"body":{"components/ToastComponent.html":{}}}],["li",{"_index":1256,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":1263,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":1262,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["light",{"_index":2149,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":3289,"title":{},"body":{"index.html":{}}}],["liked",{"_index":1075,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["likedsongschema",{"_index":2686,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["line",{"_index":2146,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["linebreak",{"_index":1615,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linenumbers",{"_index":2964,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":1411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["link.click",{"_index":1583,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["link.download",{"_index":1580,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["link.href",{"_index":1578,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linked",{"_index":819,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["links",{"_index":2807,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":300,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":1788,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":1787,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":1781,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":1796,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:28",{"_index":1794,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:33",{"_index":1793,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:49",{"_index":1818,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:60",{"_index":1811,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:95",{"_index":1800,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1780,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SidebarComponent.html":{}}}],["listener",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["listening",{"_index":1058,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":922,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["listexpensescomponent",{"_index":299,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":3312,"title":{},"body":{"index.html":{}}}],["literal",{"_index":974,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["live",{"_index":1184,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["liveapiurl",{"_index":1431,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["loadcategories",{"_index":893,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loadcomponent",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaddata",{"_index":2084,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":2085,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":2103,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":2410,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":288,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":2040,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":2039,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":2035,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:23",{"_index":2050,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:28",{"_index":2043,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":2049,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:55",{"_index":2046,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":2055,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:17",{"_index":2063,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2061,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:33",{"_index":2062,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:40",{"_index":2059,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loading",{"_index":797,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadmonthdata",{"_index":2086,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":2107,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadsessionconfig",{"_index":1340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":1332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":2087,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":2109,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["localapiurl",{"_index":1432,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1445,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":2925,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["localstorage.setitem(this.budgetkey",{"_index":2718,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.categorykey",{"_index":2715,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":626,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":864,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1694,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":2932,"title":{},"body":{"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.storageservice.getuserlikedsongskey",{"_index":3128,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":2721,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":1965,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2621,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2622,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":3355,"title":{},"body":{"index.html":{}}}],["logged",{"_index":869,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["logic",{"_index":3294,"title":{},"body":{"index.html":{}}}],["long",{"_index":771,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":798,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ltd",{"_index":2836,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["lucide",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["m.expensewisecomponent",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.musiccomponent",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.playlistmusiccomponent",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.searchmusiccomponent",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":1172,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["maintains",{"_index":2783,"title":{},"body":{"injectables/SectionService.html":{}}}],["making",{"_index":3183,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["manage",{"_index":905,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["management",{"_index":3273,"title":{},"body":{"index.html":{}}}],["manages",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseWiseComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["managing",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PlaylistMusicComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["map",{"_index":853,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["map((category",{"_index":855,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1681,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":2174,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":852,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":393,"title":{},"body":{"components/AiComponent.html":{}}}],["mapping",{"_index":2320,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["mar",{"_index":1815,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":2233,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":1240,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["mark",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":340,"title":{},"body":{"components/AiComponent.html":{}}}],["marked",{"_index":377,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":389,"title":{},"body":{"components/AiComponent.html":{}}}],["marks",{"_index":1504,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["match",{"_index":1087,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matches",{"_index":629,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["matching",{"_index":328,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.max(b",{"_index":1846,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":1845,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.random().tostring(36).substring(2",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["math.round(data.amount",{"_index":625,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":640,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":909,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":2751,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2580,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":2489,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":2252,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":2253,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":2244,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:26",{"_index":2274,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":2259,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":2271,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":2262,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:75",{"_index":2266,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":2243,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merged",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merges",{"_index":630,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["message",{"_index":969,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":2026,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["met",{"_index":1450,"title":{},"body":{"injectables/ConfigService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["metatag",{"_index":3004,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":3003,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":1934,"title":{},"body":{"components/FormModelComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["middle",{"_index":1623,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["milliseconds",{"_index":3044,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mime",{"_index":1520,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["mimetype",{"_index":1517,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["minimal",{"_index":1142,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":2960,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minimumfractiondigits",{"_index":2579,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minmax(200px",{"_index":1238,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minute",{"_index":2211,"title":{},"body":{"components/GraphsComponent.html":{}}}],["miscellaneous",{"_index":3366,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":2650,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{}}}],["mm",{"_index":702,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["mobile",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["mock",{"_index":2353,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["modal",{"_index":674,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["modal'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1718,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1712,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":1747,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:112",{"_index":1741,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:117",{"_index":1746,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1733,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1730,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1731,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1734,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:36",{"_index":1737,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1739,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:42",{"_index":1751,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:45",{"_index":1727,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:57",{"_index":1744,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:62",{"_index":1743,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:80",{"_index":1745,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:88",{"_index":1749,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/expense",{"_index":1711,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":683,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modaltitle",{"_index":684,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":385,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["model'},{'name",{"_index":285,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["model.component",{"_index":1529,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["model.component.css",{"_index":1922,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.html",{"_index":1921,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts",{"_index":1918,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["model.component.ts:23",{"_index":1925,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:29",{"_index":1928,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:37",{"_index":1930,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:45",{"_index":1933,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model/form",{"_index":1528,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["modelreply",{"_index":1110,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["models/song.model",{"_index":3126,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["modern",{"_index":3288,"title":{},"body":{"index.html":{}}}],["modify",{"_index":3180,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":2322,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["modules",{"_index":2323,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["mon",{"_index":745,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["monaco",{"_index":2954,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":2957,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":2985,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":2992,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":2994,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":3012,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":2995,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["money",{"_index":3270,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":3356,"title":{},"body":{"index.html":{}}}],["monospace",{"_index":1219,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["month",{"_index":664,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":770,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":3353,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":2071,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":2220,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":2228,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":2225,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":2224,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":660,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["monthname",{"_index":2188,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":2187,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":2223,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":2189,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":708,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":2227,"title":{},"body":{"components/GraphsComponent.html":{}}}],["months[date.getmonth",{"_index":1835,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["monthstr",{"_index":766,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1019,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{},"injectables/ZipExportService.html":{}}}],["mouse",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["mouseevent",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["msg",{"_index":390,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":387,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":384,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":3321,"title":{},"body":{"index.html":{}}}],["music",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchMusicComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"miscellaneous/variables.html":{}}}],["music'},{'name",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component')\\r\\n",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music.component.css",{"_index":2594,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{}}}],["music.component.html",{"_index":2593,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{}}}],["music.component.ts",{"_index":2588,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"coverage.html":{}}}],["music/playlist",{"_index":2587,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["music/search",{"_index":2780,"title":{},"body":{"components/SearchMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["musiccomponent",{"_index":302,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1673,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["n.tostring().padstart(2",{"_index":1674,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2827,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["navbar",{"_index":2478,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":305,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":2481,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":2482,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":304,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2250,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["navigateandclose",{"_index":2256,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":2265,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":2267,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{}}}],["navigating",{"_index":2808,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navigation",{"_index":2246,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navtabs",{"_index":2333,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":2335,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":2340,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":2341,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["need",{"_index":3348,"title":{},"body":{"index.html":{}}}],["negative",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":633,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newest",{"_index":1678,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["next",{"_index":989,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["ng",{"_index":2158,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":2503,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":2074,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngmodule",{"_index":3027,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngonchanges",{"_index":2088,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":2111,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1320,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["node.js",{"_index":3382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1254,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notice",{"_index":2350,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["notify",{"_index":1742,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["nov",{"_index":1830,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":2239,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"injectables/UserLikedSongsService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2629,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2645,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":369,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["num",{"_index":1841,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":581,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{}}}],["number(item.amount",{"_index":783,"title":{},"body":{"components/CalendarComponent.html":{}}}],["object",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2551,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2554,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2917,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["object.keys(exceldata[0",{"_index":1651,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["object.values(categorytotals",{"_index":2552,"title":{},"body":{"components/PieChartComponent.html":{}}}],["objects",{"_index":724,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["observable",{"_index":1010,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{}}}],["observe",{"_index":1399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["occurs",{"_index":2264,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["oct",{"_index":1829,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":2238,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offline",{"_index":2473,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["offset",{"_index":707,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":621,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2600,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["onchangecallback",{"_index":2935,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onchanges",{"_index":2072,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":2257,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":2270,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclickinstallapp",{"_index":2459,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["ondelete",{"_index":1721,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1143,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ondocumentclick",{"_index":894,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":928,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninputchange",{"_index":2379,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":2398,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":2380,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":2403,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":1867,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["onresize(event",{"_index":1876,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["onrightclick",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":2742,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onselect",{"_index":1791,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":1817,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["opacity",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1732,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["open/closed",{"_index":2272,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["opendownloaddatamodal",{"_index":1496,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["opened",{"_index":1750,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["openmodal",{"_index":691,"title":{},"body":{"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":715,"title":{},"body":{"components/CalendarComponent.html":{}}}],["opens",{"_index":673,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["operations",{"_index":836,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["operator",{"_index":2304,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimized",{"_index":3342,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":1234,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["options.fn(this",{"_index":2308,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":2309,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["orange",{"_index":3414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1602,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["organization",{"_index":3335,"title":{},"body":{"index.html":{}}}],["original",{"_index":1809,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/ZipExportService.html":{}}}],["orlength",{"_index":2325,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["others",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["outline",{"_index":2450,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":937,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":900,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":924,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":3300,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":1231,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1170,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":2969,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["owns",{"_index":826,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["p",{"_index":3060,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["p.text).join('\\n\\n",{"_index":1112,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":1390,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pad",{"_index":1672,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1676,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["pad(now.getmonth",{"_index":1675,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["padding",{"_index":666,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":3175,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":2803,"title":{},"body":{"components/SettingItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["pagewidth",{"_index":1594,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pairs",{"_index":2666,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["panel",{"_index":1227,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":1233,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["paragraph",{"_index":2009,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["parameterhints",{"_index":2973,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["parent",{"_index":888,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{}}}],["parsed",{"_index":2434,"title":{},"body":{"components/HomeComponent.html":{}}}],["parseint(exp.amount",{"_index":792,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":2177,"title":{},"body":{"components/GraphsComponent.html":{}}}],["part",{"_index":822,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":634,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":3176,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["parts",{"_index":972,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1111,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":3440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2615,"title":{},"body":{"injectables/PostApiService.html":{}}}],["password",{"_index":3095,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2911,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["pastdata.filter((item",{"_index":2914,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["path",{"_index":1152,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/section",{"_index":2817,"title":{},"body":{"components/SidebarComponent.html":{}}}],["path/to/custom/templates",{"_index":3174,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["patterns",{"_index":1990,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["payment",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["payment_mode",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["pdf",{"_index":1481,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["per",{"_index":671,"title":{},"body":{"components/CalendarComponent.html":{},"index.html":{}}}],["percent",{"_index":1799,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":1802,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["perform",{"_index":1931,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/PostApiService.html":{}}}],["performed",{"_index":3093,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["period",{"_index":587,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["persist",{"_index":3098,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["persistent",{"_index":3295,"title":{},"body":{"index.html":{}}}],["personal",{"_index":3282,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":3333,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1953,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":2402,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":307,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["pie/doughnut",{"_index":2494,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartcomponent",{"_index":306,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":3442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["places",{"_index":584,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["plain",{"_index":3097,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["platform_id",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["platformid",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["play",{"_index":2592,"title":{},"body":{"components/PlaylistMusicComponent.html":{}}}],["playground",{"_index":323,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":3029,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":1119,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":3026,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":2281,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":1118,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":3139,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playing",{"_index":1024,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["playlist",{"_index":310,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["playlistmusiccomponent",{"_index":309,"title":{"components/PlaylistMusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["playlists",{"_index":2590,"title":{},"body":{"components/PlaylistMusicComponent.html":{}}}],["please",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["plugins",{"_index":2572,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1258,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["points",{"_index":2007,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":1979,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":1992,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":2015,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pop",{"_index":3001,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["popup",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":1276,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["positive",{"_index":710,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1459,"title":{},"body":{"injectables/ConfigService.html":{}}}],["post",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":430,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2638,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2646,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2614,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2604,"title":{},"body":{"injectables/PostApiService.html":{}}}],["predefined",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predict",{"_index":1985,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":1987,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preferences",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["preferred",{"_index":3088,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prepare",{"_index":1560,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["presses",{"_index":2753,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevent",{"_index":1525,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["preventing",{"_index":2488,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["prevents",{"_index":2385,"title":{},"body":{"components/HomeComponent.html":{}}}],["preview",{"_index":1185,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":1300,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":1309,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["previous/next",{"_index":665,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevmonthdays",{"_index":765,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":1284,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":1285,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["privacy",{"_index":3352,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["process",{"_index":2020,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["processes",{"_index":2105,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/SearchButtonComponent.html":{}}}],["production",{"_index":1460,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":3084,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["progress",{"_index":3320,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1032,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["prompt",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":2031,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompting",{"_index":2457,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["prompts",{"_index":1943,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":2544,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"properties.html":{}}}],["property",{"_index":1927,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1175,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provide",{"_index":1089,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":3400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":631,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{}}}],["providedin",{"_index":600,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["providehttpclient",{"_index":3406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3021,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":594,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":3401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":3397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1428,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{}}}],["pt",{"_index":1592,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["public",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":3424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":1983,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["purposes",{"_index":1786,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["pvt",{"_index":2835,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["pwa",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["quality",{"_index":2838,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["query",{"_index":1008,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":1960,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":2021,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quickly",{"_index":3317,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":2970,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":1259,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["random",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":700,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["raw",{"_index":386,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactively",{"_index":2793,"title":{},"body":{"injectables/SectionService.html":{}}}],["read",{"_index":831,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["read/write",{"_index":3350,"title":{},"body":{"index.html":{}}}],["readable",{"_index":1813,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["readme",{"_index":3154,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":1304,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["ready",{"_index":1961,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recent",{"_index":2019,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommend",{"_index":1081,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["recommendation",{"_index":990,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":2831,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["records",{"_index":1509,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":2354,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/ToastService.html":{}}}],["reflected",{"_index":3310,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1186,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":1371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":1367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":2058,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":2060,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":3075,"title":{},"body":{"injectables/ToastService.html":{}}}],["registered",{"_index":2064,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{}}}],["registerhandlebarslanguage",{"_index":2938,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":2286,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registering",{"_index":3073,"title":{},"body":{"injectables/ToastService.html":{}}}],["registers",{"_index":2044,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":3405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":837,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/SettingItemComponent.html":{}}}],["relative",{"_index":1277,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":2315,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["release",{"_index":2837,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2610,"title":{},"body":{"injectables/PostApiService.html":{}}}],["reloads",{"_index":2119,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["remaining",{"_index":3330,"title":{},"body":{"index.html":{}}}],["remove",{"_index":2591,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["removes",{"_index":2755,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["render",{"_index":721,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["render.service",{"_index":1151,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":2282,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":2293,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":2290,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":2289,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":2291,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":2288,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendercalendar",{"_index":692,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":718,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":2504,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":2517,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendered",{"_index":370,"title":{},"body":{"components/AiComponent.html":{},"injectables/HbsRenderService.html":{}}}],["rendering",{"_index":362,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["rendermode",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renders",{"_index":659,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["rendertemplate",{"_index":2287,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":2292,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rent",{"_index":3430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat",{"_index":1098,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["repeat(auto",{"_index":1237,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["replace",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaced",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":644,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["reply",{"_index":2002,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["report",{"_index":1512,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["representing",{"_index":576,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["represents",{"_index":967,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["reqhandler",{"_index":3240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":3388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":359,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["required",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PieChartComponent.html":{}}}],["requires",{"_index":3072,"title":{},"body":{"injectables/ToastService.html":{}}}],["res",{"_index":1107,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["res.app_version",{"_index":2640,"title":{},"body":{"injectables/PostApiService.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1109,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":1915,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":1162,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["resetting",{"_index":1376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":1374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resize",{"_index":1874,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["resolve(serverdistfolder",{"_index":3384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":1993,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":1400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":1343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":1405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":1327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":1326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":1335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsehtml",{"_index":348,"title":{},"body":{"components/AiComponent.html":{}}}],["responsetype",{"_index":1397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsibilities",{"_index":1077,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":592,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["responsive",{"_index":2571,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restricts",{"_index":2749,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["result",{"_index":2305,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":327,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.map(exp",{"_index":1976,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ret",{"_index":2314,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["retrieve",{"_index":695,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":1455,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{}}}],["retrieves",{"_index":610,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":2096,"title":{},"body":{"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["returned",{"_index":367,"title":{},"body":{"components/AiComponent.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["reusable",{"_index":1919,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"components/ToastComponent.html":{}}}],["rgb",{"_index":1803,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["rgb(${math.max(r",{"_index":1844,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["rights",{"_index":1914,"title":{},"body":{"components/FooterComponent.html":{}}}],["roboto",{"_index":1197,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":973,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":266,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":582,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["roundedselection",{"_index":2965,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["rounds",{"_index":617,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["route",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["routeroutlet",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":1173,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1653,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rows",{"_index":1603,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["run",{"_index":2598,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":2516,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["rxjs",{"_index":983,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":980,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavn",{"_index":986,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":984,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safe",{"_index":361,"title":{},"body":{"components/AiComponent.html":{}}}],["safehtml",{"_index":368,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1037,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["same",{"_index":843,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["sample",{"_index":2359,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":2360,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sanitized",{"_index":342,"title":{},"body":{"components/AiComponent.html":{}}}],["sanitizer",{"_index":354,"title":{},"body":{"components/AiComponent.html":{}}}],["sans",{"_index":1198,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sat",{"_index":750,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["save",{"_index":645,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["save_delay",{"_index":1305,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveddata",{"_index":2908,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["saveddata.map((item",{"_index":2919,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["savedsettings",{"_index":2927,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["savedsettings[key",{"_index":2930,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["savedtheme",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["savetemplate(content",{"_index":1362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":1303,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":1157,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scales",{"_index":2581,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schedule",{"_index":1357,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":1353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":407,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["schema.service",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["schema.service.ts",{"_index":2876,"title":{},"body":{"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["schema.service.ts:13",{"_index":2887,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:30",{"_index":2888,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:34",{"_index":2889,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:50",{"_index":2895,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:82",{"_index":2892,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schemakeys",{"_index":2916,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schemakeys.foreach((key",{"_index":2921,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["screen",{"_index":2036,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["screens",{"_index":2802,"title":{},"body":{"components/SettingItemComponent.html":{},"index.html":{}}}],["screenshots",{"_index":3360,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":3168,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollable",{"_index":915,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":2966,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":2961,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":2987,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seamless",{"_index":2472,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["search",{"_index":312,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["searchbuttoncomponent",{"_index":311,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":1849,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1700,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searches",{"_index":1006,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{}}}],["searching",{"_index":1668,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/SearchMusicComponent.html":{}}}],["searchinput",{"_index":2741,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchmusiccomponent",{"_index":314,"title":{"components/SearchMusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchsongs",{"_index":2653,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1012,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["second",{"_index":2212,"title":{},"body":{"components/GraphsComponent.html":{}}}],["secondary",{"_index":1288,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":1289,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seconds\\n",{"_index":1043,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sections",{"_index":2251,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":1870,"title":{"injectables/SectionService.html":{}},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionservice.currentsection",{"_index":2260,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionsource",{"_index":2787,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":3272,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":1196,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["selectcategory",{"_index":895,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":930,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1725,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1773,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1774,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1775,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1779,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1777,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1778,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1776,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedfile",{"_index":1301,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":1182,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":1183,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":1349,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selecting",{"_index":886,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":351,"title":{},"body":{"components/AiComponent.html":{}}}],["sender",{"_index":976,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sendmessage(message",{"_index":2033,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sends",{"_index":337,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2611,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":2008,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":1828,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1049,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["september",{"_index":729,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["series",{"_index":2131,"title":{},"body":{"components/GraphsComponent.html":{}}}],["serif",{"_index":1199,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":1392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":3199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":3241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":3203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["service/backend",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["service/config/config.service",{"_index":1911,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["service/gemini",{"_index":378,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":1532,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/category.service",{"_index":938,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/sync",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/section/section.service",{"_index":1897,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["services",{"_index":357,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["session",{"_index":1153,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":1154,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":1155,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseWiseComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["seteditorcontent",{"_index":2939,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":2947,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback",{"_index":2940,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":2949,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["sets",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["setsection",{"_index":2786,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":2788,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":315,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["settings'},{'name",{"_index":319,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":2381,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":2405,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":3061,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":2154,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":1885,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["shared/global",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":1883,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":1884,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["shared/toast/toast.component",{"_index":1886,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":3305,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":1997,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shorter",{"_index":365,"title":{},"body":{"components/AiComponent.html":{}}}],["shouldbackup",{"_index":2628,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/SettingItemComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["show(message",{"_index":3077,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":2048,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["show/hide",{"_index":1004,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{}}}],["showaibutton",{"_index":2255,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":2483,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showconfigpanel",{"_index":1302,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["showdownloaddatamodal",{"_index":1490,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["showing",{"_index":739,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["showinstallbutton",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":685,"title":{},"body":{"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["shows",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{}}}],["shows/hides",{"_index":2248,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showtoast",{"_index":3035,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":3042,"title":{},"body":{"components/ToastComponent.html":{}}}],["side",{"_index":1393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":1242,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["sidebar'},{'name",{"_index":321,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":2811,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2812,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":320,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signature",{"_index":2363,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["silently",{"_index":2599,"title":{},"body":{"injectables/PostApiService.html":{}}}],["similar",{"_index":1083,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["simple",{"_index":2318,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["simplechanges",{"_index":2112,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["single",{"_index":968,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["size",{"_index":1216,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skipped",{"_index":2648,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2651,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["sm",{"_index":1295,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["small",{"_index":3343,"title":{},"body":{"index.html":{}}}],["smart",{"_index":1055,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":3280,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":1090,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":2776,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":2147,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sole",{"_index":1982,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["solid",{"_index":1212,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["something",{"_index":1082,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["song",{"_index":987,"title":{"interfaces/Song.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["song.service.ts",{"_index":3115,"title":{},"body":{"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["song.service.ts:12",{"_index":3117,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:26",{"_index":3125,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:35",{"_index":3124,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:46",{"_index":3121,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:56",{"_index":3118,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:70",{"_index":3123,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:80",{"_index":3120,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song_id",{"_index":2687,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{}}}],["song_name",{"_index":2688,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["song_type",{"_index":2825,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["songartists",{"_index":2828,"title":{"interfaces/SongArtists.html":{}},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["songdownloadurl",{"_index":2829,"title":{"interfaces/SongDownloadUrl.html":{}},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["songimage",{"_index":2830,"title":{"interfaces/SongImage.html":{}},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["songname",{"_index":1100,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1007,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{}}}],["song’s",{"_index":1092,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sony",{"_index":2832,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["sort",{"_index":832,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["sort((a",{"_index":857,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":3316,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":839,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":1201,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":1252,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specific",{"_index":717,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":3279,"title":{},"body":{"index.html":{}}}],["specified",{"_index":706,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["specify",{"_index":3171,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spending",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["spent",{"_index":3322,"title":{},"body":{"index.html":{}}}],["spent/day",{"_index":3328,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":3373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":3369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":3379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":3378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.ts",{"_index":3371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":3374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":3370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":3372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":3368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:122",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:130",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:140",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:147",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":3197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":3200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":3202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":3204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":884,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/form",{"_index":1917,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":2068,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":2152,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":2150,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":2156,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":2092,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":2157,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":2115,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":2113,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":2117,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":2101,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":2108,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":2104,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":2099,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":2097,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":2110,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":2130,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":2138,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":2142,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":2128,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":2134,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":2140,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":2145,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/install",{"_index":2456,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1709,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":2492,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":2733,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/settings",{"_index":1476,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":329,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:27",{"_index":371,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:30",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:48",{"_index":363,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":3214,"title":{},"body":{"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":658,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:141",{"_index":698,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:156",{"_index":716,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:171",{"_index":711,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":736,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:27",{"_index":734,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:30",{"_index":725,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":742,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:36",{"_index":723,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:39",{"_index":740,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:42",{"_index":738,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:45",{"_index":737,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:48",{"_index":731,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:51",{"_index":694,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:61",{"_index":743,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:67",{"_index":714,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:76",{"_index":705,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:94",{"_index":719,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/expense",{"_index":1859,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts",{"_index":2365,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":2395,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":2401,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":2404,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":2390,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":2393,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":2384,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":2409,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":2415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":2416,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":2417,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":2408,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":2412,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":2406,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":2397,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":2396,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":3218,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music",{"_index":2585,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":3221,"title":{},"body":{"coverage.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":3224,"title":{},"body":{"coverage.html":{}}}],["src/app/models/song.model.ts",{"_index":2819,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":2361,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/service/backend",{"_index":2596,"title":{},"body":{"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts",{"_index":1427,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts:19",{"_index":1457,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:24",{"_index":1454,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:29",{"_index":1467,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:36",{"_index":1462,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:43",{"_index":1437,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:61",{"_index":1438,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:84",{"_index":1451,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:93",{"_index":1452,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/gemini",{"_index":1939,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":2054,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":575,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:109",{"_index":657,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":651,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:43",{"_index":655,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:52",{"_index":654,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:63",{"_index":652,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:79",{"_index":656,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:97",{"_index":653,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":810,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:103",{"_index":957,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:119",{"_index":962,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:132",{"_index":958,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:152",{"_index":963,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:41",{"_index":956,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:60",{"_index":961,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:70",{"_index":960,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:92",{"_index":959,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":3230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1661,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:119",{"_index":1851,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:133",{"_index":1858,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:147",{"_index":1854,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:157",{"_index":1852,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:171",{"_index":1857,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:55",{"_index":1850,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:69",{"_index":1856,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:78",{"_index":1855,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:89",{"_index":1853,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2661,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:106",{"_index":2848,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:115",{"_index":2847,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:124",{"_index":2858,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:133",{"_index":2849,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:142",{"_index":2850,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:147",{"_index":2853,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:150",{"_index":2855,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:153",{"_index":2851,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:156",{"_index":2859,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:159",{"_index":2860,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:166",{"_index":2863,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:175",{"_index":2862,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:184",{"_index":2864,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:192",{"_index":2854,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:200",{"_index":2856,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:208",{"_index":2861,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:216",{"_index":2852,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:224",{"_index":2857,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:24",{"_index":2867,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:27",{"_index":2869,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:30",{"_index":2865,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:33",{"_index":2872,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:36",{"_index":2873,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:39",{"_index":2868,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:49",{"_index":2870,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:62",{"_index":2874,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:7",{"_index":2665,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:79",{"_index":2866,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:87",{"_index":2871,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/sync",{"_index":2875,"title":{},"body":{"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user",{"_index":3114,"title":{},"body":{"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":3083,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:102",{"_index":3135,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:112",{"_index":3134,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:122",{"_index":3138,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:53",{"_index":3132,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:68",{"_index":3136,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:77",{"_index":3133,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:88",{"_index":3137,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":965,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":2782,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:21",{"_index":2795,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:27",{"_index":2791,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:34",{"_index":2789,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":3071,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:19",{"_index":3080,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:27",{"_index":3076,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:39",{"_index":3078,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1902,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:22",{"_index":1910,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":2034,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":2242,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":2477,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:25",{"_index":2484,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:48",{"_index":2487,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2806,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:25",{"_index":2814,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:48",{"_index":2815,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":3030,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:17",{"_index":3037,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:30",{"_index":3038,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:41",{"_index":3043,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":3235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":3236,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":3237,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":3292,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":586,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["starty",{"_index":1610,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["state",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["statements",{"_index":3188,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1297,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FooterComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["status",{"_index":1214,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["stays",{"_index":3351,"title":{},"body":{"index.html":{}}}],["stops",{"_index":3271,"title":{},"body":{"index.html":{}}}],["storage",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storage.service",{"_index":591,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2893,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["storageservice",{"_index":513,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["store",{"_index":881,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["stores",{"_index":1468,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/SearchButtonComponent.html":{}}}],["stream",{"_index":2792,"title":{},"body":{"injectables/SectionService.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["string(date.getmonth",{"_index":2442,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":767,"title":{},"body":{"components/CalendarComponent.html":{}}}],["strings",{"_index":2972,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["stroke",{"_index":2082,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1533,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["structured",{"_index":1955,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["style",{"_index":1020,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":3165,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":346,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":1785,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["sub",{"_index":1596,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["submitedit",{"_index":1722,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["subscribe",{"_index":2785,"title":{},"body":{"injectables/SectionService.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":3425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["success:hover",{"_index":1292,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":2616,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["such",{"_index":696,"title":{},"body":{"components/CalendarComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["suffix",{"_index":1816,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["suggest",{"_index":1059,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":1029,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested/day",{"_index":3329,"title":{},"body":{"index.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestnextsong",{"_index":2654,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1031,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestontriggercharacters",{"_index":2976,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suggests",{"_index":1016,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suitable",{"_index":1021,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":782,"title":{},"body":{"components/CalendarComponent.html":{}}}],["summary",{"_index":3324,"title":{},"body":{"index.html":{}}}],["sun",{"_index":744,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["support",{"_index":3361,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1667,"title":{},"body":{"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/UserLikedSongsService.html":{}}}],["sure",{"_index":1378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surface",{"_index":780,"title":{},"body":{"components/CalendarComponent.html":{}}}],["surroundingpairs",{"_index":3016,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":3362,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2120,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["switches",{"_index":2118,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":2089,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":2116,"title":{},"body":{"components/GraphsComponent.html":{}}}],["symbol",{"_index":732,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["sync",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{}}}],["syncallschema",{"_index":2884,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["synced",{"_index":2920,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["synced[key",{"_index":2922,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncedsettings",{"_index":2928,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncedsettings['app_version",{"_index":2931,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncedsettings[key",{"_index":2929,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["synchronize",{"_index":2877,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncing",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["syncschemaservice",{"_index":431,"title":{"injectables/SyncSchemaService.html":{}},"body":{"components/AppComponent.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["syncuser",{"_index":2885,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncuser(storagekey",{"_index":2890,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncwithschema",{"_index":2886,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncwithschema(storagekey",{"_index":2894,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syntax",{"_index":2357,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":1194,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":1977,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["t.id",{"_index":2336,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":3006,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":1179,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["tabcompletion",{"_index":2978,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":2334,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":823,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3242,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3005,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tailored",{"_index":3278,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":914,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2619,"title":{},"body":{"injectables/PostApiService.html":{}}}],["taken",{"_index":1458,"title":{},"body":{"injectables/ConfigService.html":{}}}],["tap",{"_index":3314,"title":{},"body":{"index.html":{}}}],["target",{"_index":948,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["teal",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":3291,"title":{},"body":{"index.html":{}}}],["technology",{"_index":3293,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{"interfaces/Template.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":1180,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":1181,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":2294,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":1144,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":322,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":3018,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":1163,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":3161,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["term",{"_index":1009,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["text",{"_index":372,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["textcolor",{"_index":1625,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["that's",{"_index":2010,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["theme_mode",{"_index":2682,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["then((content",{"_index":3159,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["then(m",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thinking",{"_index":395,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":2818,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.appname",{"_index":1474,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.appversion",{"_index":1912,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.budgetkey",{"_index":2709,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetschema",{"_index":2730,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":773,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":758,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":774,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":769,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2560,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":941,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":944,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":2535,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2555,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":2537,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2705,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":2536,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":2548,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":951,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":952,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryschema",{"_index":2724,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categoryselected.emit(category",{"_index":947,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":2533,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":942,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":943,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2561,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2562,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":2193,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":2191,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.close.emit",{"_index":1938,"title":{},"body":{"components/FormModelComponent.html":{}}}],["this.closedownloaddatamodal",{"_index":1567,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.closemodal.emit",{"_index":1771,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.config",{"_index":1342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.getapiurl",{"_index":2634,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.configservice.getappname",{"_index":2470,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.configservice.getversion",{"_index":1913,"title":{},"body":{"components/FooterComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["this.confirmanddownload",{"_index":1545,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.createsession",{"_index":1315,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currency",{"_index":753,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate",{"_index":2422,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":2196,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":2169,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":2170,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":2425,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":2427,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":2426,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":2429,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":756,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":1899,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["this.currentyear",{"_index":757,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":2414,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.deferredprompt",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.prompt",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.userchoice.then((choiceresult",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1772,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1469,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.downloadblob(content",{"_index":3160,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.downloaddataform",{"_index":1541,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.invalid",{"_index":1543,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markallastouched",{"_index":1544,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markaspristine",{"_index":1587,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markasuntouched",{"_index":1588,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.reset",{"_index":1586,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.value",{"_index":1546,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1769,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1753,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1762,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1765,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1768,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editor",{"_index":2956,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":3017,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":2980,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":2986,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":1345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":1351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":1347,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":2707,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":2534,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2557,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":2546,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseschema",{"_index":2726,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenseselected.emit(expense",{"_index":1820,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":787,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":1974,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.exporttoexcel(filteredexpensedata",{"_index":1572,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.exporttopdf(filteredexpensedata",{"_index":1570,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["this.filteredlocationsuggestions",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":2433,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":2437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":1970,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generatereadme",{"_index":3155,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.generateuserid",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":3103,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":622,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["this.getall().find(item",{"_index":1698,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":2984,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.getlast30daysexpenses",{"_index":1968,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2635,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":2773,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":2772,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":2065,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":2067,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":2066,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1015,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":2051,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":1966,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1013,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1033,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.handlebarsinstance",{"_index":2297,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":2343,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":2303,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":2313,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":2338,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":2332,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":2326,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":2316,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":2311,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.history",{"_index":1106,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1101,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1014,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":1341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":1350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":1333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":1324,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":1365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":1396,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":1363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(url",{"_index":2636,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1752,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.initializeeditor",{"_index":1318,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":2296,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.installapp.emit",{"_index":2471,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.isappupdated",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isbrowser",{"_index":614,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":946,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.isdarkmode",{"_index":2532,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.iseditopen",{"_index":1763,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.ismenuopen",{"_index":2276,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":1900,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["this.isopen",{"_index":2765,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isvisible",{"_index":2053,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.lastsaved",{"_index":1360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.likedsongschema",{"_index":2732,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.liveapiurl",{"_index":1471,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.loadcategories",{"_index":940,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":2161,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":2542,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":2166,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loader.show",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmonthdata",{"_index":2540,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":2165,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsessionconfig",{"_index":1317,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":1316,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":2541,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":2167,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.localapiurl",{"_index":1470,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.locationsuggestions",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":2052,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":392,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":788,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":789,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":793,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onchangecallback",{"_index":2981,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":2982,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["this.previewframe.nativeelement.src",{"_index":1373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":1372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.query",{"_index":2769,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":2775,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim().length",{"_index":2774,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.registerhandlebarslanguage",{"_index":2983,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":2301,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":755,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2550,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":391,"title":{},"body":{"components/AiComponent.html":{}}}],["this.save_delay",{"_index":1361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":1359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":1321,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":1356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":1348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.search.emit(this.query",{"_index":2770,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":2771,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":2766,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":1898,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":2280,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":2790,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":2798,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1767,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1764,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1754,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1755,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1756,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1761,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1760,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1758,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1759,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1757,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedfile",{"_index":1338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":1339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":1310,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":1407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showaibutton",{"_index":2275,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":2490,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showconfigpanel",{"_index":1370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showdownloaddatamodal",{"_index":1589,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.showinstallbutton",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.showlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":794,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":615,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":849,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":848,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallsongs",{"_index":3127,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["this.storageservice.getbudgetschema",{"_index":2904,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getcategorykey",{"_index":2910,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getcategoryschema",{"_index":2900,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getexpenseschema",{"_index":2902,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getlikedsongschema",{"_index":2906,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getuser",{"_index":2652,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.getuserschema",{"_index":2898,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.updatebudgets(budgets",{"_index":647,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["this.storageservice.updatecategories(categories",{"_index":883,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.storageservice.updateuser(user",{"_index":3112,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.syncschemaservice.syncallschema",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["this.syncuser(this.storageservice.getuserkey",{"_index":2897,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getbudgetkey",{"_index":2903,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getcategorykey",{"_index":2899,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getexpensekey",{"_index":2901,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getuserlikedsongskey",{"_index":2905,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.templates",{"_index":1334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":1337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.theme.mode",{"_index":2160,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":2190,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":3081,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":3082,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":3046,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["this.toastservice.show('error",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('excel",{"_index":1573,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('expense",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('failed",{"_index":1575,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('json",{"_index":1568,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('pdf",{"_index":1571,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.today",{"_index":1539,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toggleedit",{"_index":1770,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":2184,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":786,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.triggerdownload(jsondata",{"_index":1566,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.userinput.trim",{"_index":382,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":2711,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userlikedsongskey",{"_index":2713,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userschema",{"_index":2728,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('app_version",{"_index":2642,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('currency",{"_index":754,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('is_app_updated",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2625,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('is_app_updated",{"_index":2643,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.update('last_backup",{"_index":2644,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":1475,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.viewtype",{"_index":2164,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":2423,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":2424,"title":{},"body":{"components/HomeComponent.html":{}}}],["though",{"_index":3346,"title":{},"body":{"index.html":{}}}],["through",{"_index":3307,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["thu",{"_index":748,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["ticks",{"_index":2582,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["timeamountmap",{"_index":2194,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":2218,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":2208,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":2215,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeout",{"_index":1355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["times",{"_index":801,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":2217,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":2219,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["timestamp}.${extension",{"_index":1581,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.pdf",{"_index":1644,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.xlsx",{"_index":1658,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestr",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["tips",{"_index":3178,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":727,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["titlecase",{"_index":2445,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1706,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["toast.classname",{"_index":3058,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":3034,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":3033,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":3068,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":3070,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.service",{"_index":2623,"title":{},"body":{"injectables/PostApiService.html":{}}}],["toastcomponent",{"_index":324,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":3047,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":3069,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":3050,"title":{},"body":{"components/ToastComponent.html":{}}}],["toasts",{"_index":3049,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["todate",{"_index":580,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["todate.toisostring",{"_index":1975,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":759,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["todaysexpenses",{"_index":2197,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":2209,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":2199,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":2195,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["today’s",{"_index":668,"title":{},"body":{"components/CalendarComponent.html":{}}}],["todo",{"_index":1382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":1168,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":896,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleconfigpanel",{"_index":1369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleedit",{"_index":1723,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglemenu",{"_index":2258,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":933,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":2743,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["token",{"_index":2997,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":2996,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tomato",{"_index":3410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":2003,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":2123,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":2083,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":1241,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":1325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":670,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["totalamount",{"_index":2175,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalexpenses",{"_index":686,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":3341,"title":{},"body":{"index.html":{}}}],["touched",{"_index":1505,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":1022,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseWiseComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trackbyname(index",{"_index":1424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tracker",{"_index":2491,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["tracks",{"_index":2273,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{}}}],["transform",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transition",{"_index":1229,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["translatey(0",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":2319,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":2321,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":2324,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":1281,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["travel",{"_index":3304,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":1989,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["trigger",{"_index":1412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["triggerdownload",{"_index":1497,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["triggerdownload(content",{"_index":1516,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggered",{"_index":2466,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["triggering",{"_index":1503,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["trimmedinput",{"_index":381,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":383,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["ts",{"_index":2990,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":3173,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["tslib",{"_index":3264,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":746,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["two",{"_index":842,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeclasses",{"_index":3052,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":3065,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":3064,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":606,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["typeparam",{"_index":3106,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":2991,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["typically",{"_index":1935,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/ToastService.html":{}}}],["typing",{"_index":3318,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1005,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["ui/ux",{"_index":3277,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":805,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":608,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["undone",{"_index":1381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unique",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["universal",{"_index":3381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2310,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unrelated",{"_index":2000,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":3336,"title":{},"body":{"index.html":{}}}],["up",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":636,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":865,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1695,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":3101,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateallbudgets",{"_index":649,"title":{},"body":{"injectables/BudgetService.html":{}}}],["updateallbudgets(budgets",{"_index":646,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["updateallcategories",{"_index":955,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateallcategories(categories",{"_index":882,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["updatebudgets",{"_index":2844,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatebudgets(budgets",{"_index":2717,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatecategories",{"_index":2845,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatecategories(categories",{"_index":2714,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateconfig",{"_index":1364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2918,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["updatedexpense",{"_index":1766,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":1969,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":2846,"title":{},"body":{"injectables/StorageService.html":{}}}],["updateuser(user",{"_index":2720,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateuserdata",{"_index":3131,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdata(user",{"_index":3111,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":1368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["upi",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":3334,"title":{},"body":{"index.html":{}}}],["upon",{"_index":3296,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1250,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":994,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["url.createobjecturl(zipblob",{"_index":1413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":1420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["usage",{"_index":3169,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["usd",{"_index":3089,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1091,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":1063,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.service",{"_index":828,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2612,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":815,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_liked_songs",{"_index":2674,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["user_password",{"_index":2681,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":1534,"title":{"interfaces/UserData.html":{}},"body":{"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2637,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2672,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userlikedsongskey",{"_index":2673,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userlikedsongsservice",{"_index":3113,"title":{"injectables/UserLikedSongsService.html":{}},"body":{"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["userquery",{"_index":1958,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":2589,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"index.html":{}}}],["userschema",{"_index":2677,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":420,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":2159,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":1959,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uses",{"_index":1017,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":332,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["utilities",{"_index":3416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":1782,"title":{},"body":{"components/ExpenseListComponent.html":{},"index.html":{}}}],["val?.tolowercase().trim",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1748,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["validates",{"_index":1486,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validation",{"_index":1524,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["validators.max(100000000",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(100",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["valign",{"_index":1622,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2330,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["value.split",{"_index":2438,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":2431,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":838,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["value}\\n",{"_index":1044,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":260,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":3190,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3367,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2820,"title":{},"body":{"interfaces/Song.html":{}}}],["version",{"_index":1433,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":2968,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["via",{"_index":1819,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"index.html":{}}}],["vibe",{"_index":1088,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":2521,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":935,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('editorcontainer",{"_index":1296,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":1299,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('searchinput",{"_index":2763,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":1881,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["views",{"_index":2495,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["viewtype",{"_index":2091,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":2371,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":2372,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["visible",{"_index":741,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":3184,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visualizes",{"_index":3301,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2011,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":2958,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["v{{appversion",{"_index":1916,"title":{},"body":{"components/FooterComponent.html":{}}}],["w",{"_index":3011,"title":{},"body":{"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["w+)(\\s*=\\s",{"_index":3007,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":1379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":868,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["warning)defaults",{"_index":3079,"title":{},"body":{"injectables/ToastService.html":{}}}],["way",{"_index":2668,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":2014,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":2447,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":747,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["weekday",{"_index":751,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":687,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekly",{"_index":3087,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":1222,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["whenever",{"_index":2748,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["white",{"_index":1265,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["whole",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1243,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window",{"_index":607,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/PieChartComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('beforeinstallprompt",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["window.innerwidth",{"_index":1901,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["window.localstorage",{"_index":609,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["window.location.href.includes(\"exwise",{"_index":1473,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.location.href.includes(\"localhost",{"_index":1472,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.settimeout(async",{"_index":1358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1577,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1585,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window:resize",{"_index":1868,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["window:resize(event",{"_index":1872,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise",{"_index":1862,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"index.html":{}}}],["wise'},{'name",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["wise.component')\\r\\n",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wise.component.css",{"_index":1864,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.html",{"_index":1863,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts",{"_index":1861,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["wise.component.ts:39",{"_index":1879,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts:44",{"_index":1871,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts:65",{"_index":1875,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts:75",{"_index":1873,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise/expense",{"_index":1860,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisely",{"_index":3269,"title":{},"body":{"index.html":{}}}],["within",{"_index":1484,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{}}}],["without",{"_index":619,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["wordbasedsuggestions",{"_index":2979,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":2963,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["workbook",{"_index":1646,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["worker",{"_index":3246,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":3402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":2595,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"index.html":{}}}],["worksheet",{"_index":1655,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["wrap",{"_index":2344,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":2348,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wraps",{"_index":1640,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":2135,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xlsx",{"_index":1521,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["xlsx.utils.aoa_to_sheet(aoa",{"_index":1656,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_append_sheet(workbook",{"_index":1657,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_new",{"_index":1647,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.writefile(workbook",{"_index":1659,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xs",{"_index":3059,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1245,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["year",{"_index":720,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["yearly",{"_index":2100,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["years",{"_index":3315,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":3055,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1608,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["yyyy",{"_index":701,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["z",{"_index":2452,"title":{},"body":{"components/HomeComponent.html":{}}}],["zip",{"_index":1147,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":3156,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":3152,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":3158,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":1401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":1146,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":1313,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":3267,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2124,"title":{},"body":{"components/GraphsComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0), Validators.max(100000000)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n\n                \n                    Amount cannot exceed 100,000,000\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount cannot exceed 100,000,000                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for AI interaction using Gemini API.\nFeatures:\n\nAccepts user input.\nSends input to Gemini API for processing.\nConverts AI Markdown response to sanitized HTML for display.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor to inject services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles AI requests.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular sanitizer for safe HTML rendering.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends the user input to the Gemini API.\n\nIgnores input shorter than 2 characters.\nConverts returned Markdown to sanitized HTML.\n\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:30\n                        \n                    \n\n            \n                \n                    AI response rendered as sanitized HTML\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:27\n                        \n                    \n\n            \n                \n                    User input from the text box\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n/**\n * Component for AI interaction using Gemini API.\n * \n * Features:\n * - Accepts user input.\n * - Sends input to Gemini API for processing.\n * - Converts AI Markdown response to sanitized HTML for display.\n */\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n\n  /** User input from the text box */\n  userInput = '';\n\n  /** AI response rendered as sanitized HTML */\n  responseHtml: SafeHtml | null = null;\n\n  /**\n   * Constructor to inject services.\n   * \n   * @param geminiApi Service that handles AI requests.\n   * @param sanitizer Angular sanitizer for safe HTML rendering.\n   */\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Sends the user input to the Gemini API.\n   * - Ignores input shorter than 2 characters.\n   * - Converts returned Markdown to sanitized HTML.\n   */\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GlobalLoaderComponent\n                            CommonModule\n                                InstallAppPopupComponentComponent\n                            RouterOutlet\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deferredPrompt\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                showInstallButton\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                installApp\n                            \n                            \n                                isAppUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, postApiService: PostApiService, toastService: ToastService, syncSchemaService: SyncSchemaService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:47\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying toast notifications\n\n                                                        \n                                                \n                                                \n                                                        syncSchemaService\n                                                  \n                                                        \n                                                                        SyncSchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installApp\n                        \n                    \n                \n            \n            \n                \ninstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Triggers the PWA installation prompt if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppUpdated\n                        \n                    \n                \n            \n            \n                \nisAppUpdated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Checks if the application is updated.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the app is updated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deferredPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:42\n                        \n                    \n\n            \n                \n                     PWA installation prompt event\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:37\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInstallButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                     Flag to control the display of the installation prompt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:61\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { InstallAppPopupComponentComponent } from './component/install-app-popup-component/install-app-popup-component.component';\n\nimport { SyncSchemaService } from './service/localStorage/sync-schema.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\nimport { ToastService } from './service/toast/toast.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    GlobalLoaderComponent, CommonModule, InstallAppPopupComponentComponent, RouterOutlet\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   *  PWA installation prompt event\n   */\n  deferredPrompt: any;\n\n  /**\n   *  Flag to control the display of the installation prompt\n   */\n  showInstallButton = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param storageService Local storage schema sync service\n   * @param postApiService Backend API post service\n   * @param toastService Service for displaying toast notifications\n   * @param platformId Angular platform ID to check if running in browser\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private postApiService: PostApiService,\n    private toastService: ToastService,\n    private syncSchemaService: SyncSchemaService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n\n      this.loader.show();\n      setTimeout(() => {\n        this.loader.hide();\n      }, 500);\n\n      this.syncSchemaService.syncAllSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n\n      // Show update toast if app is not updated\n      if (!this.isAppUpdated()) {\n        setTimeout(() => {\n          this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n        }, 500);\n      }\n\n      // Listen for PWA installation prompt\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.deferredPrompt = event;\n        this.showInstallButton = true;\n      });\n    }\n  }\n\n  /**\n   * Disables the context menu on right-click for the whole app.\n   * @param event Mouse event object\n   */\n  @HostListener('document:contextmenu', ['$event'])\n  onRightClick(event: MouseEvent) {\n    event.preventDefault();\n  }\n\n  /**\n   * Generates a unique user ID by combining timestamp and random string.\n   * @returns Generated user ID string\n   */\n  private generateUserId(): string {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substring(2, 10);\n    return `${timestamp}-${random}`;\n  }\n\n  /**\n   * Checks if the application is updated.\n   * @returns True if the app is updated, false otherwise.\n   */\n  isAppUpdated(): boolean {\n    return this.userService.getValue('is_app_updated') ?? false;\n  }\n\n  /**\n   * Triggers the PWA installation prompt if available.\n   */\n  installApp() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt();\n      this.deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.showInstallButton = false;\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n        this.deferredPrompt = null;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a budget entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget amount (rounded to 2 decimal places).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the budget.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing budgets in local storage.\nProvides methods to add, update, delete, and fetch budgets,\nwhile ensuring data is only accessed in the browser environment.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllBudgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Adds a new budget entry to local storage.\nAutomatically generates a unique budget_id and rounds the amount to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The budget data (without budget_id) to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Deletes a budget entry from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets stored in local storage.\n\n\n                        \n                            Returns :         Budget[]\n\n                        \n                            \n                                A list of all saved budgets, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Updates an existing budget entry in local storage.\nMatches by budget_id and merges with the provided data.\nThe amount is always rounded to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial budget fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllBudgets\n                        \n                    \n                \n            \n            \n                \nupdateAllBudgets(budgets: Budget[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Replaces all budgets in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                            Budget[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that renders a monthly calendar view with expense tracking.\nFeatures:\n\nDisplays days of the current month with previous/next month padding.\nHighlights today’s date.\nCalculates total expenses per month and per day.\nOpens modal to view daily expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of CalendarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve expenses from local storage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user settings such as currency.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Calculates the total expenses for a given date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date (YYYY-MM-DD)\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Changes the calendar month by a specified offset.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of months to change (positive or negative)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Closes the daily expenses modal and clears modal data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that initializes the calendar view\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Opens the modal to show expenses for a specific day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date string (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Renders the calendar for a given year and month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Year to render\n\n                                            \n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Month to render (0-11)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of calendar day objects for rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:30\n                        \n                    \n\n            \n                \n                    Calendar header title (e.g., \"September 2025\")\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:48\n                        \n                    \n\n            \n                \n                    Currency symbol from user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:27\n                        \n                    \n\n            \n                \n                    Current month of the calendar (0-11)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n            \n                \n                    Current year of the calendar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:45\n                        \n                    \n\n            \n                \n                    List of expenses for the selected day in the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:42\n                        \n                    \n\n            \n                \n                    Title of the modal showing daily expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:39\n                        \n                    \n\n            \n                \n                    Whether the daily expense modal is visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n            \n                \n                    Total expenses in the current month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:61\n                        \n                    \n\n            \n                \n                    Service to retrieve user settings such as currency.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:51\n                        \n                    \n\n            \n                \n                    Weekday labels\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Component that renders a monthly calendar view with expense tracking.\n *\n * Features:\n * - Displays days of the current month with previous/next month padding.\n * - Highlights today’s date.\n * - Calculates total expenses per month and per day.\n * - Opens modal to view daily expenses.\n */\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\nexport class CalendarComponent implements OnInit {\n\n  /** Current year of the calendar */\n  currentYear = new Date().getFullYear();\n\n  /** Current month of the calendar (0-11) */\n  currentMonth = new Date().getMonth();\n\n  /** Calendar header title (e.g., \"September 2025\") */\n  calendarTitle = '';\n\n  /** Total expenses in the current month */\n  totalExpenses = 0;\n\n  /** Array of calendar day objects for rendering */\n  calendarDays: any[] = [];\n\n  /** Whether the daily expense modal is visible */\n  showModal = false;\n\n  /** Title of the modal showing daily expenses */\n  modalTitle = '';\n\n  /** List of expenses for the selected day in the modal */\n  modalExpenses: any[] = [];\n\n  /** Currency symbol from user settings */\n  currency: string | null;\n\n  /** Weekday labels */\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  /**\n   * Creates an instance of CalendarComponent.\n   *\n   * @param expenseService Service to retrieve expenses from local storage.\n   * @param userService Service to retrieve user settings such as currency.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /** Angular lifecycle hook that initializes the calendar view */\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Changes the calendar month by a specified offset.\n   *\n   * @param offset Number of months to change (positive or negative)\n   */\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Renders the calendar for a given year and month.\n   *\n   * @param year Year to render\n   * @param month Month to render (0-11)\n   */\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Render previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Render current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  /**\n   * Opens the modal to show expenses for a specific day.\n   *\n   * @param dateStr Date string (YYYY-MM-DD)\n   */\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  /**\n   * Closes the daily expenses modal and clears modal data.\n   */\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a category used to group expenses.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category (e.g., hex or CSS color).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of expenses linked to this category.\n(This is a computed field and not part of the stored table.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon representing the category (e.g., from an icon set).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the category is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display name of the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user ID that owns this category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing categories in local storage.\nProvides methods to create, read, update, delete, and sort categories,\nensuring data consistency with associated expenses.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle local storage operations.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user-related values (like user ID).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Adds a new category to local storage.\nGenerates a unique category_id and associates it with the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Category data excluding category_id and user_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Deletes a category from local storage by its ID.\nIf the category does not exist, a warning is logged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from local storage.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                List of all categories, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories sorted by the number of expenses assigned to each.\nIf two categories have the same count, they are sorted alphabetically by name.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                Sorted list of categories with expense counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment\nwith localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Updates an existing category in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial category fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllCategories\n                        \n                    \n                \n            \n            \n                \nupdateAllCategories(categories: Category[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Replaces all categories in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                            Category[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of categories to store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ChatMessage interface\nRepresents a single message exchanged between the user and the model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text content of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role of the message sender (user or model).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      this.globalLoaderService.hide();\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appName\n                            \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                            \n                                    Private\n                                    Readonly\n                                liveAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                localAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                            \n                                getAppName\n                            \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/config/config.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL depending on the environment.\n\n\"local\" → http://localhost:8000\n\"live\" → https://exwiseapi.onrender.com\nAny other value → Determines based on current window location.\nIf the URL contains \"localhost\", returns http://localhost:8000.\nIf the URL contains \"exwise\", returns https://exwiseapi.onrender.com.\nDefaults to http://localhost:8000 if none of the above conditions are met.\n\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Returns the application name defined in environment settings.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The application name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:24\n                        \n                    \n\n            \n                \n                    The application name, retrieved from environment settings.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:19\n                        \n                    \n\n            \n                \n                    The current environment setting taken from environment configuration.\nPossible values:\n\n\"local\" → Uses localhost API endpoint.\n\"live\" → Uses production API endpoint.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        liveAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.liveAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:36\n                        \n                    \n\n            \n                \n                    The production (live) API base URL.\nExample: https://exwiseapi.onrender.com\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        localAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.localAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:43\n                        \n                    \n\n            \n                \n                    The local development API base URL.\nExample: http://localhost:8000\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:29\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting taken from environment configuration.\n   * \n   * Possible values:\n   * - `\"local\"` → Uses localhost API endpoint.\n   * - `\"live\"` → Uses production API endpoint.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n\n  /** \n   * The application name, retrieved from environment settings. \n   */\n  private readonly appName: string = environment.appName;\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  private readonly liveAPIUrl: string = environment.liveAPIUrl;\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  private readonly localAPIUrl: string = environment.localAPIUrl;\n\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL depending on the environment.\n   *\n   * - `\"local\"` → `http://localhost:8000`\n   * - `\"live\"` → `https://exwiseapi.onrender.com`\n   * - Any other value → Determines based on current window location.\n   * - If the URL contains `\"localhost\"`, returns `http://localhost:8000`.\n   * - If the URL contains `\"exwise\"`, returns `https://exwiseapi.onrender.com`.\n   * - Defaults to `http://localhost:8000` if none of the above conditions are met.\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return this.localAPIUrl;\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return this.liveAPIUrl;\n    }\n    else {\n      if (window.location.href.includes(\"localhost\")) {\n        return this.localAPIUrl;\n      }\n      else if (window.location.href.includes(\"exwise\")) {\n        return this.liveAPIUrl;\n      }\n      return this.localAPIUrl;\n    }\n  }\n\n  /**\n   * Returns the application name defined in environment settings.\n   *\n   * @returns {string} The application name.\n   */\n  getAppName(): string {\n    return this.appName;\n  }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadComponentComponent.html":{"url":"components/DownloadComponentComponent.html","title":"component - DownloadComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DownloadComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/download-component/download-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for exporting user expenses\ninto JSON, PDF, or Excel formats within a given date range.\nThis component provides a modal dialog with a form\nto select a date range and file type, validates the input,\nand triggers the download of filtered expense data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-component\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            ReactiveFormsModule\n                                FormModelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./download-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                downloadDataForm\n                            \n                            \n                                showDownloadDataModal\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDownloadDataModal\n                            \n                            \n                                confirmAndDownload\n                            \n                            \n                                downloadData\n                            \n                            \n                                    Private\n                                exportToExcel\n                            \n                            \n                                    Private\n                                exportToPDF\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDownloadDataModal\n                            \n                            \n                                    Private\n                                triggerDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, fb: FormBuilder, toastService: ToastService, categoryService: CategoryService, userService: UserService, budgetService: BudgetService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadComponentComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch and filter expenses.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder to build the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch category data.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch user data.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch budget data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDownloadDataModal\n                        \n                    \n                \n            \n            \n                \ncloseDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Closes the download modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmAndDownload\n                        \n                    \n                \n            \n            \n                \nconfirmAndDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Validates date range and triggers the appropriate\nexport function (JSON, PDF, Excel) based on user selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadData\n                        \n                    \n                \n            \n            \n                \ndownloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Validates the form before triggering data download.\nMarks all controls as touched if the form is invalid.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToExcel(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:302\n                        \n                    \n\n\n            \n                \n                        Exports expense data to an Excel file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToPDF\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToPDF(data: any[], fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Exports expense data to a formatted PDF file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date of the report.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date of the report.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the form\nwith default controls and validators.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDownloadDataModal\n                        \n                    \n                \n            \n            \n                \nopenDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Opens the modal and resets the download form\nto its initial state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        triggerDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerDownload(content: string, mimeType: string, extension: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Creates a file blob and triggers the browser to download it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File content to download.\n\n                                            \n                                        \n                                        \n                                                mimeType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    MIME type of the file.\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File extension (json, pdf, xlsx).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadDataForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:56\n                        \n                    \n\n            \n                \n                    Reactive form instance for selecting date range and file type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDownloadDataModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:61\n                        \n                    \n\n            \n                \n                    Controls the visibility of the download data modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                        \n                    \n\n            \n                \n                    Current date in yyyy-MM-dd format,\nused for validation to prevent future dates.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n\n    \n        From Date\n        \n        \n            From Date is required\n        \n\n        To Date\n        \n\n        \n            To Date is required\n        \n\n        File Type\n        \n            JSON\n            PDF\n            EXCEL\n        \n\n        \n            Cancel\n            Download\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                From Date                            From Date is required                To Date                            To Date is required                File Type                    JSON            PDF            EXCEL                            Cancel            Download            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an expense entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense amount\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category color (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category icon (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category ID associated with this expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category name (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the expense in YYYY-MM-DD format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this is extra spending\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional location of the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional note about the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Payment mode used for the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the expense in HH:MM:SS format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal component for displaying and editing expense details.\nFeatures:\n\nShows details of a selected expense.\nSupports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\nEmits events to parent components for closing, deleting, or editing expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseDetailsModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder service for building reactive forms.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Currency symbol to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:30\n                            \n                        \n                \n                    \n                        Whether the edit mode is currently open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:24\n                            \n                        \n                \n                    \n                        The currently selected expense object\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when the modal should be closed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:36\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense should be deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:39\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense has been edited\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Emits the closeModal event to notify parent to close the modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the reactive edit form with default or selected expense values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Updates the form when a new category is selected from the dropdown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Emits the delete event with the selected expense ID\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Submits the edited expense if the form is valid.\nEmits the edit event with the updated expense data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Toggles the edit mode of the modal.\nInitializes the form with current expense values if edit mode is opened.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    Form group for editing the expense\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:42\n                        \n                    \n\n            \n                \n                    Name of the currently selected category for editing\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n/**\n * Modal component for displaying and editing expense details.\n *\n * Features:\n * - Shows details of a selected expense.\n * - Supports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\n * - Emits events to parent components for closing, deleting, or editing expenses.\n */\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n\n  /** The currently selected expense object */\n  @Input() selectedExpense: any;\n\n  /** Currency symbol to display in the modal */\n  @Input() currency: string | null = '';\n\n  /** Whether the edit mode is currently open */\n  @Input() isEditOpen: boolean = false;\n\n  /** Event emitted when the modal should be closed */\n  @Output() closeModal = new EventEmitter();\n\n  /** Event emitted when the selected expense should be deleted */\n  @Output() delete = new EventEmitter();\n\n  /** Event emitted when the selected expense has been edited */\n  @Output() edit = new EventEmitter();\n\n  /** Name of the currently selected category for editing */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Form group for editing the expense */\n  editForm!: FormGroup;\n\n  /**\n   * Creates an instance of ExpenseDetailsModalComponent.\n   *\n   * @param fb FormBuilder service for building reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  /** Angular lifecycle hook called on component initialization */\n  ngOnInit(): void {}\n\n  /**\n   * Initializes the reactive edit form with default or selected expense values.\n   */\n  initForm(): void {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  /**\n   * Updates the form when a new category is selected from the dropdown.\n   *\n   * @param category The selected category object.\n   */\n  onCategorySelected(category: any): void {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  /**\n   * Toggles the edit mode of the modal.\n   * Initializes the form with current expense values if edit mode is opened.\n   */\n  toggleEdit(): void {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  /**\n   * Submits the edited expense if the form is valid.\n   * Emits the `edit` event with the updated expense data.\n   */\n  submitEdit(): void {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  /** Emits the `closeModal` event to notify parent to close the modal */\n  close(): void {\n    this.closeModal.emit();\n  }\n\n  /** Emits the `delete` event with the selected expense ID */\n  onDelete(): void {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        ExpenseListComponent\nDisplays a list of expenses with formatted dates and emits\nevents when an expense is selected. Also provides a utility\nto darken colors for styling purposes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseListComponent.\nInitializes the currency to an empty string.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:28\n                            \n                        \n                \n                    \n                        The currency symbol or code to display with expense amounts.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                            \n                        \n                \n                    \n                        The list of expense objects to display.\nEach expense should contain at least a date field.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when an expense is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Darkens a given HEX color by a percentage.\nConverts the color to RGB and decreases brightness.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HEX color string (e.g., #FF0000).\n\n                                            \n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The percentage (0–1) to darken the color.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The darkened color as an RGB string, or the original color on error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Formats the date of an expense into a human-readable string.\nExample: Mon 1st Mar 2025\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object containing a date field.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string with day, suffix, month, and year.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an expense.\nEmits the selected expense via the expenseSelected output.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object that was selected.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * ExpenseListComponent\n *\n * Displays a list of expenses with formatted dates and emits\n * events when an expense is selected. Also provides a utility\n * to darken colors for styling purposes.\n */\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\nexport class ExpenseListComponent {\n  /**\n   * The list of expense objects to display.\n   * Each expense should contain at least a `date` field.\n   */\n  @Input() expenses: any[] = [];\n\n  /**\n   * The currency symbol or code to display with expense amounts.\n   */\n  @Input() currency: string | null;\n\n  /**\n   * Event emitted when an expense is selected.\n   */\n  @Output() expenseSelected = new EventEmitter();\n\n  /**\n   * Creates an instance of ExpenseListComponent.\n   * Initializes the currency to an empty string.\n   */\n  constructor() {\n    this.currency = '';\n  }\n\n  /**\n   * Handles the selection of an expense.\n   * Emits the selected expense via the `expenseSelected` output.\n   *\n   * @param expense The expense object that was selected.\n   */\n  onSelect(expense: any): void {\n    this.expenseSelected.emit(expense);\n  }\n\n  /**\n   * Formats the date of an expense into a human-readable string.\n   * Example: `Mon 1st Mar 2025`\n   *\n   * @param exp The expense object containing a `date` field.\n   * @returns A formatted date string with day, suffix, month, and year.\n   */\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const months = [\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n\n    const dayName = days[date.getDay()];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n\n    const suffix = (d: number): string => {\n      if (d > 3 && d > 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing expenses stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve expenses.\nAutomatically attaches category metadata to each expense.\nSupports searching expenses by date range.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Adds a new expense to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Expense data excluding expense_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Deletes an expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage with category metadata attached.\n\n\n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of formatted {@link Expense} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Retrieves a single expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                The expense object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Searches expenses within a date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of expenses within the specified date range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Updates an existing expense by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial data to update the expense with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseWiseComponent.html":{"url":"components/ExpenseWiseComponent.html","title":"component - ExpenseWiseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseWiseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/expense-wise/expense-wise.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-wise\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                CalendarComponent\n                                AiComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-wise.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-wise.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                isMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/expense-wise/expense-wise.component.ts:44\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/expense-wise/expense-wise.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/expense-wise/expense-wise.component.ts:65\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to set initial mobile view detection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/features/expense-wise/expense-wise.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/expense-wise/expense-wise.component.ts:39\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/expense-wise/expense-wise.component.ts:44\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\n\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\nimport { SidebarComponent } from '../../shared/sidebar/sidebar.component';\nimport { FooterComponent } from '../../shared/footer/footer.component';\nimport { ToastComponent } from '../../shared/toast/toast.component';\nimport { AddExpenseComponent } from '../../features/add-expense/add-expense.component';\nimport { SettingsComponent } from '../../features/settings/settings.component';\nimport { ListExpensesComponent } from '../../features/list-expenses/list-expenses.component';\nimport { HomeComponent } from '../../features/home/home.component';\nimport { CalendarComponent } from '../../features/calendar/calendar.component';\nimport { BudgetComponent } from '../../features/budget/budget.component';\nimport { AiComponent } from '../../features/ai/ai.component';\n\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-expense-wise',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent, CommonModule, AddExpenseComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent, CalendarComponent, AiComponent\n  ],\n  templateUrl: './expense-wise.component.html',\n  styleUrl: './expense-wise.component.css'\n})\nexport class ExpenseWiseComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param sectionService Service to track current section changes\n   * @param platformId Angular platform ID to check if running in browser\n   */\n  constructor(\n    private sectionService: SectionService,\n    @Inject(PLATFORM_ID) private platformId: Object\n\n  ) {\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n  }\n  /**\n   * OnInit lifecycle hook to set initial mobile view detection.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth \n    \n\n    \n        \n    \n    \n        \n        \n            \n                \n                \n                    \n                \n                \n                \n                \n                \n                \n                \n            \n        \n    \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseWiseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer component that displays application information such as version.\nFeatures:\n\nRetrieves the app version from ConfigService.\nDisplays static footer content alongside dynamic version info.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of FooterComponent.\nRetrieves the current app version from ConfigService and\nstores it in appVersion for display in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing configuration and version info.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the current application version retrieved from ConfigService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Footer component that displays application information such as version.\n *\n * Features:\n * - Retrieves the app version from {@link ConfigService}.\n * - Displays static footer content alongside dynamic version info.\n */\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n  /**\n   * Stores the current application version retrieved from {@link ConfigService}.\n   */\n  appVersion: string = '';\n\n  /**\n   * Creates an instance of FooterComponent.\n   *\n   * Retrieves the current app version from {@link ConfigService} and\n   * stores it in {@link appVersion} for display in the template.\n   *\n   * @param configService Service providing configuration and version info.\n   */\n  constructor(private configService: ConfigService) {\n    this.appVersion = this.configService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormModelComponent.html":{"url":"components/FormModelComponent.html","title":"component - FormModelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FormModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/form-model/form-model.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable modal component for forms.\nThis component displays a modal with a customizable label\nand provides an output event to notify when the modal is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-model\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-model.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-model.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelAlignment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:23\n                            \n                        \n                \n                    \n                        The label text displayed in the form modal.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelAlignment\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"center\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:29\n                            \n                        \n                \n                    \n                        Alignment of the label text: 'left', 'center', or 'right'.\nDefault is 'left'.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:37\n                            \n                        \n                \n                    \n                        Event emitted when the modal is closed.\nThe parent component can listen to this event\nto perform actions such as hiding the modal.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModel\n                        \n                    \n                \n            \n            \n                \ncloseModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/form-model/form-model.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Closes the modal and emits the close event.\nThis method is typically called when the user\nclicks a close button or dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * A reusable modal component for forms.\n * \n * This component displays a modal with a customizable label\n * and provides an output event to notify when the modal is closed.\n */\n@Component({\n  selector: 'app-form-model',\n  imports: [CommonModule],\n  templateUrl: './form-model.component.html',\n  styleUrl: './form-model.component.css'\n})\nexport class FormModelComponent {\n\n  /**\n   * The label text displayed in the form modal.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label: string = '';\n\n  /** Alignment of the label text: 'left', 'center', or 'right'.\n   * \n   * Default is 'left'.\n   */\n  @Input() labelAlignment: 'left' | 'center' | 'right' = 'left';\n\n  /**\n   * Event emitted when the modal is closed.\n   * \n   * The parent component can listen to this event\n   * to perform actions such as hiding the modal.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Closes the modal and emits the `close` event.\n   * \n   * This method is typically called when the user\n   * clicks a close button or dismisses the modal.\n   */\n  closeModel(): void {\n    this.close.emit();\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ label }}\n            \n        \n\n        \n        \n            &times;\n        \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ label }}                                                ×                    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GeminiApiService\nThis service is responsible for communicating with the\nGoogle Gemini API to analyze the user's expense data.\nIt fetches the last 30 days of expenses, generates prompts,\nand retrieves AI-generated insights for the user.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of GeminiApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API requests.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to show/hide global loading indicators.\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch expense data from local storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Generates a structured AI prompt for expense analysis.\nIncludes instructions for the model and the last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s input or question.\n\n                                            \n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of expense objects from the last 30 days.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string prompt ready for Gemini API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Fetches the user's expenses from the last 30 days.\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n\n                        \n                            Returns :     Pick[]\n\n                        \n                            \n                                An array of expense objects with selected fields:\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Sends a prompt to the Gemini API and returns the generated response.\nEnhances the prompt with the user's last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s query or message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A string response from Gemini with analysis or insights.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                        \n                    \n\n            \n                \n                    API URL for the Gemini model including the environment API key.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n/**\n * GeminiApiService\n *\n * This service is responsible for communicating with the\n * Google Gemini API to analyze the user's expense data.\n * It fetches the last 30 days of expenses, generates prompts,\n * and retrieves AI-generated insights for the user.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  /**\n   * API URL for the Gemini model including the environment API key.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of GeminiApiService.\n   *\n   * @param http Angular HttpClient for API requests.\n   * @param globalLoaderService Service to show/hide global loading indicators.\n   * @param expenseService Service to fetch expense data from local storage.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService,\n    private expenseService: ExpenseService\n  ) {}\n\n  /**\n   * Sends a prompt to the Gemini API and returns the generated response.\n   * Enhances the prompt with the user's last 30 days of expenses.\n   *\n   * @param prompt The user’s query or message.\n   * @returns A string response from Gemini with analysis or insights.\n   */\n  async getResponse(prompt: string): Promise {\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  /**\n   * Fetches the user's expenses from the last 30 days.\n   *\n   * @returns An array of expense objects with selected fields:\n   * amount, note, location, date, category_name, payment_mode, isExtraSpending.\n   */\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  /**\n   * Generates a structured AI prompt for expense analysis.\n   * Includes instructions for the model and the last 30 days of expenses.\n   *\n   * @param userQuery The user’s input or question.\n   * @param last15DaysExpenses Array of expense objects from the last 30 days.\n   * @returns A formatted string prompt ready for Gemini API.\n   */\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global loader component to display a full-screen loading indicator.\nFeatures:\n\nShows a loading message with optional custom text.\nCan be controlled globally via GlobalLoaderService.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of GlobalLoaderComponent.\nRegisters this component with the GlobalLoaderService\nto allow global show/hide control.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing the global loader state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional custom message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Loading...'\n                                            \n\n                                            \n                                                    Optional message to display; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates whether the loader is currently visible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                        \n                    \n\n            \n                \n                    Text message displayed on the loader.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Global loader component to display a full-screen loading indicator.\n *\n * Features:\n * - Shows a loading message with optional custom text.\n * - Can be controlled globally via {@link GlobalLoaderService}.\n */\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n\n  /**\n   * Indicates whether the loader is currently visible.\n   */\n  isVisible = false;\n\n  /**\n   * Text message displayed on the loader.\n   */\n  message = '';\n\n  /**\n   * Creates an instance of GlobalLoaderComponent.\n   *\n   * Registers this component with the {@link GlobalLoaderService}\n   * to allow global show/hide control.\n   *\n   * @param globalLoaderService Service for managing the global loader state.\n   */\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  /**\n   * Shows the global loader with an optional custom message.\n   *\n   * @param text Optional message to display; defaults to \"Loading...\".\n   */\n  show(text: string = 'Loading...'): void {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.isVisible = false;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to control the global loading indicator component.\nFeatures:\n\nAllows showing and hiding a global loader with optional custom message.\nConnects with GlobalLoaderComponent to display the loader UI.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Registers the global loader component instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The GlobalLoaderComponent instance to control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                            \n                                                    Optional loading message; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:17\n                        \n                    \n\n            \n                \n                    Reference to the registered global loader component\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n/**\n * Service to control the global loading indicator component.\n *\n * Features:\n * - Allows showing and hiding a global loader with optional custom message.\n * - Connects with {@link GlobalLoaderComponent} to display the loader UI.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  /** Reference to the registered global loader component */\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  /**\n   * Registers the global loader component instance.\n   *\n   * @param component The {@link GlobalLoaderComponent} instance to control.\n   */\n  register(component: GlobalLoaderComponent): void {\n    this.globalLoaderComponent = component;\n  }\n  \n  /**\n   * Shows the global loader with an optional message.\n   *\n   * @param text Optional loading message; defaults to \"Loading...\".\n   */\n  show(text: string = \"Loading...\"): void {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.globalLoaderComponent?.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hamburger menu component for mobile or compact navigation.\nFeatures:\n\nToggles visibility of the menu.\nCloses menu when clicking outside of it.\nShows/hides AI button depending on the current section.\nIntegrates with SectionService to navigate between sections.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of HamburgerMenuComponent.\nSubscribes to SectionService.currentSection$ to manage the\nvisibility of the AI button based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the selected section and closes the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default anchor behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Toggles the hamburger menu open/closed state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Tracks whether the hamburger menu is currently open.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:26\n                        \n                    \n\n            \n                \n                    Determines whether the AI button should be displayed.\nHidden when the current section is 'ai'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Hamburger menu component for mobile or compact navigation.\n *\n * Features:\n * - Toggles visibility of the menu.\n * - Closes menu when clicking outside of it.\n * - Shows/hides AI button depending on the current section.\n * - Integrates with {@link SectionService} to navigate between sections.\n */\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  /**\n   * Determines whether the AI button should be displayed.\n   * Hidden when the current section is 'ai'.\n   */\n  showAIButton = false;\n\n  /**\n   * Tracks whether the hamburger menu is currently open.\n   */\n  isMenuOpen = false;\n\n  /**\n   * Creates an instance of HamburgerMenuComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to manage the\n   * visibility of the AI button based on the current section.\n   *\n   * @param sectionService Service for managing and broadcasting the active section.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n\n  /**\n   * Toggles the hamburger menu open/closed state.\n   */\n  toggleMenu(): void {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  /**\n   * Listens for clicks on the document to close the menu\n   * if the click occurs outside the hamburger menu container.\n   *\n   * @param event The mouse click event.\n   */\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent): void {\n    const clickedInside = event.target instanceof HTMLElement \n      && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  /**\n   * Navigates to the selected section and closes the menu.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default anchor behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstallAppPopupComponentComponent.html":{"url":"components/InstallAppPopupComponentComponent.html","title":"component - InstallAppPopupComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  InstallAppPopupComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that displays a popup prompting the user to install the app as a PWA.\nThis component shows a modal with the app name and an install button when\nshowInstallButton is set to true. It uses the ConfigService to retrieve\nthe application name and emits an event when the user clicks install.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-install-app-popup-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./install-app-popup-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./install-app-popup-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissInstall\n                            \n                            \n                                onClickinstallApp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showInstallButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                installApp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of the install popup component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch configuration values such as the app name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showInstallButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:26\n                            \n                        \n                \n                    \n                        Controls the visibility of the install popup.\nWhen set to true, the popup will be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        installApp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when the user clicks on the \"Install\" button.\nThe parent component can listen to this event to trigger\nthe actual PWA installation flow.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissInstall\n                        \n                    \n                \n            \n            \n                \ndismissInstall()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Dismisses the install popup.\nSets showInstallButton to false, hiding the popup from view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickinstallApp\n                        \n                    \n                \n            \n            \n                \nonClickinstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Handles the click event of the \"Install\" button.\nEmits the installApp event to notify the parent component\nthat the installation process should be triggered.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:32\n                        \n                    \n\n            \n                \n                    The application name fetched from ConfigService.\nDisplayed inside the popup UI.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Component that displays a popup prompting the user to install the app as a PWA.\n * \n * This component shows a modal with the app name and an install button when \n * `showInstallButton` is set to true. It uses the `ConfigService` to retrieve \n * the application name and emits an event when the user clicks install.\n */\n@Component({\n  selector: 'app-install-app-popup-component',\n  imports: [CommonModule],\n  templateUrl: './install-app-popup-component.component.html',\n  styleUrl: './install-app-popup-component.component.css',\n  standalone: true,\n})\nexport class InstallAppPopupComponentComponent {\n\n  /**\n   * Controls the visibility of the install popup.\n   * \n   * When set to true, the popup will be displayed.\n   */\n  @Input() showInstallButton: boolean = false;\n\n  /**\n   * The application name fetched from `ConfigService`.\n   * Displayed inside the popup UI.\n   */\n  appName: string;\n\n  /**\n   * Event emitted when the user clicks on the \"Install\" button.\n   * \n   * The parent component can listen to this event to trigger\n   * the actual PWA installation flow.\n   */\n  @Output() installApp = new EventEmitter();\n\n  /**\n   * Creates an instance of the install popup component.\n   *\n   * @param configService Service to fetch configuration values such as the app name.\n   */\n  constructor(private configService: ConfigService) {\n    this.appName = this.configService.getAppName();\n  }\n\n  /**\n   * Handles the click event of the \"Install\" button.\n   * \n   * Emits the `installApp` event to notify the parent component\n   * that the installation process should be triggered.\n   */\n  onClickinstallApp() {\n    this.installApp.emit();\n  }\n\n  /**\n   * Dismisses the install popup.\n   * \n   * Sets `showInstallButton` to false, hiding the popup from view.\n   */\n  dismissInstall() {\n    this.showInstallButton = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ✕\n\n    \n    Install {{ appName }}\n    \n    \n      Get a seamless experience and offline access by installing this app.\n    \n\n    \n    \n      \n        Install\n      \n      \n        Dismiss\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ✕        Install {{ appName }}              Get a seamless experience and offline access by installing this app.                          Install                    Dismiss            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstallAppPopupComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navbar component that displays the top navigation bar.\nFeatures:\n\nShows a back button when the current section is not 'home'.\nIntegrates with SectionService to track and update the current section.\nIncludes the HamburgerMenuComponent for mobile or compact navigation.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavbarComponent.\nSubscribes to SectionService.currentSection$ to determine\nwhether the back button should be visible based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage and broadcast the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles navigation link clicks by updating the current section\nand preventing default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Flag indicating whether the back button should be displayed.\nTrue when the current section is not 'home'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n/**\n * Navbar component that displays the top navigation bar.\n *\n * Features:\n * - Shows a back button when the current section is not 'home'.\n * - Integrates with {@link SectionService} to track and update the current section.\n * - Includes the {@link HamburgerMenuComponent} for mobile or compact navigation.\n */\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  /**\n   * Flag indicating whether the back button should be displayed.\n   * True when the current section is not 'home'.\n   */\n  showBackButton = false;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to determine\n   * whether the back button should be visible based on the current section.\n   *\n   * @param sectionService Service used to manage and broadcast the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  /**\n   * Handles navigation link clicks by updating the current section\n   * and preventing default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to render a pie/doughnut chart of expenses by category.\nSupports monthly, daily, and yearly views.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject required services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get category data\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get expense data\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get user preferences\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n                \n                    \n                        Current date to filter expenses\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:46\n                            \n                        \n                \n                    \n                        View type: 'month' | 'day' | 'year'\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the selected view type\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders daily expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders monthly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders yearly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook after view initialization.\nLoads chart data after canvas element is available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook for input changes.\nReloads chart if viewType or currentDate changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed inputs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook runs on component init.\nInitializes theme, categories, expenses, and category mapping.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Renders a Chart.js chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart ID\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart type ('doughnut', 'line', 'bar', etc.)\n\n                                            \n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:43\n                        \n                    \n\n            \n                \n                    Reference to the canvas element for Chart.js\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:28\n                        \n                    \n\n            \n                \n                    List of all categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Map of category name to its color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Map of category_id to category name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:34\n                        \n                    \n\n            \n                \n                    Chart instances keyed by chart ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:40\n                        \n                    \n\n            \n                \n                    User-selected currency\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:31\n                        \n                    \n\n            \n                \n                    List of all expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    Dark mode flag from user settings\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/** Chart.js instance */\ndeclare const Chart: any;\n\n/**\n * Component to render a pie/doughnut chart of expenses by category.\n * Supports monthly, daily, and yearly views.\n */\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /** Dark mode flag from user settings */\n  isDarkMode: boolean = false;\n\n  /** Map of category_id to category name */\n  categoryMap: any = {};\n\n  /** List of all categories */\n  categories: Category[] = [];\n\n  /** List of all expenses */\n  expenses: Expense[] = [];\n\n  /** Chart instances keyed by chart ID */\n  charts: { [key: string]: any } = {};\n\n  /** Map of category name to its color */\n  categoryColors: { [key: string]: string } = {};\n\n  /** User-selected currency */\n  currency: string | null;\n\n  /** Reference to the canvas element for Chart.js */\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n\n  /** View type: 'month' | 'day' | 'year' */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /** Current date to filter expenses */\n  @Input() currentDate!: Date;\n\n  /**\n   * Constructor to inject required services.\n   * @param categoryService Service to get category data\n   * @param expenseService Service to get expense data\n   * @param userService Service to get user preferences\n   */\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /**\n   * Lifecycle hook runs on component init.\n   * Initializes theme, categories, expenses, and category mapping.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  /**\n   * Lifecycle hook after view initialization.\n   * Loads chart data after canvas element is available.\n   */\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook for input changes.\n   * Reloads chart if viewType or currentDate changes.\n   * @param changes Object containing changed inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /** Loads chart data based on the selected view type */\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  /** Aggregates and renders monthly expense data */\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders daily expense data */\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders yearly expense data */\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /**\n   * Renders a Chart.js chart\n   * @param id Chart ID\n   * @param type Chart type ('doughnut', 'line', 'bar', etc.)\n   * @param config Chart configuration containing labels, data, colors, etc.\n   */\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistMusicComponent.html":{"url":"components/PlaylistMusicComponent.html","title":"component - PlaylistMusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlaylistMusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music-component/playlist-music/playlist-music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying and managing a music playlist.\nThis component allows users to view their music playlists,\nadd or remove tracks, and play selected songs.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playlist-music\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./playlist-music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist-music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component for displaying and managing a music playlist.\n * \n * This component allows users to view their music playlists,\n * add or remove tracks, and play selected songs.\n */\n@Component({\n  selector: 'app-playlist-music',\n  imports: [],\n  templateUrl: './playlist-music.component.html',\n  styleUrl: './playlist-music.component.css'\n})\nexport class PlaylistMusicComponent {\n\n}\n\n    \n\n    \n        playlist-music works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'playlist-music works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistMusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\nimport { ToastService } from '../../toast/toast.service';\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   * @param toastService Displays notifications to the user\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService,\n    private toastService: ToastService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      // console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: (res: any) => {\n          console.log('User data posted successfully. Response:', res);\n          const api_response_app_version = res.app_version;\n          const app_current_version = this.userService.getValue('app_version');\n          if (api_response_app_version != app_current_version) {\n            this.userService.update('is_app_updated', false);\n            setTimeout(() => {\n              this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n            }, 500);\n          }\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SaavnService\nService for integrating with Saavn API (song search) and\nGoogle Gemini API (next song recommendation).\nIt manages search, AI-based suggestions, and conversation history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of SaavnService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API calls.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader service to show/hide loading UI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Returns the full conversation history between user and model.\n\n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                            \n                                An array of ChatMessage objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Searches for songs using the Saavn API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search term provided by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable containing the list of matching songs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Suggests the next song based on the current song metadata.\nUses Gemini API to infer mood and style, and returns the most suitable next track.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently playing song object with metadata (name, album, artists, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A JSON string with the suggested song name and artist.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                        \n                    \n\n            \n                \n                    Gemini API URL with authentication key from environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:39\n                        \n                    \n\n            \n                \n                    Base URL for Saavn song search API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:34\n                        \n                    \n\n            \n                \n                    Conversation history between user and AI model.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) {}\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      this.globalLoaderService.hide();\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema interface for local storage items.\nDefines a generic structure for syncing data with default values.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:7\n                            \n                        \n                \n                    \n                        Key-value pairs representing item properties\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\nexport interface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Provides helper methods to get and update local storage items.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /** LocalStorage key for user Liked songs */\n  private readonly userLikedSongsKey = 'user_liked_songs';\n\n  /** Schema for categories */\n  private readonly categorySchema: Schema = {\n    category_id: \"\",\n    name: \"\",\n    icon: \"\",\n    color: \"\",\n    is_active: \"\",\n    user_id: \"\"\n  };\n\n  /** Schema for expenses */\n  private readonly expenseSchema: Schema = {\n    expense_id: \"\",\n    category_id: \"\",\n    amount: \"\",\n    date: \"\",\n    location: \"\",\n    note: \"\",\n    payment_mode: \"\",\n    time: \"\",\n    isExtraSpending: false\n  };\n\n  /** Schema for user */\n  private readonly userSchema: Schema = {\n    id: \"\",\n    backup_frequency: \"\",\n    email: \"\",\n    is_active: \"\",\n    is_backup: \"\",\n    last_backup: \"\",\n    name: \"\",\n    notifications: \"\",\n    user_password: \"\",\n    theme_mode: \"dark\",\n    currency: \"₹\",\n    app_version: \"0\",\n    is_app_updated: true\n  };\n\n  /** Schema for budget */\n  private readonly budgetSchema: Schema = {\n    budget_id: \"\",\n    amount: 0,\n    fromDate: \"\",\n    toDate: \"\"\n  };\n\n  /** Schema for Liked song */\n  private readonly likedSongSchema: Schema = {\n    song_id: '',\n    song_name: '',\n    year: '',\n    duration: 0,\n    language: '',\n    copyright: '',\n    albumName: '',\n    artistName: '',\n    image: '',\n    downloadUrl: '',\n    isLiked: false,\n  };\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /**\n   * Retrieves all liked songs from localStorage.\n   *\n   * @returns Array of liked songs objects.\n   */\n  getAllSongs(): any[] {\n    return JSON.parse(localStorage.getItem(this.userLikedSongsKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /** Returns the localStorage key used for user liked songs */\n  getUserLikedSongsKey(): string { return this.userLikedSongsKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n\n  /** Returns the schema for categories\n   * \n   * @returns Schema object for categories\n   */\n  getcategorySchema(): Schema {\n    return this.categorySchema;\n  }\n\n  /** Returns the schema for expenses\n   * \n   * @returns Schema object for expenses  \n   */\n  getexpenseSchema(): Schema {\n    return this.expenseSchema;\n  }\n\n  /** Returns the schema for user \n   * \n   * @returns Schema object for user\n  */\n  getuserSchema(): Schema {\n    return this.userSchema;\n  }\n\n  /** Returns the schema for budgets \n   * \n   * @returns Schema object for  budgets\n  */\n  getbudgetSchema(): Schema {\n    return this.budgetSchema;\n  }\n\n  /** Returns the schema for liked songs \n   * \n   * @returns Schema object for Liked Song\n  */\n  getlikedSongSchema(): Schema {\n    return this.likedSongSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchMusicComponent.html":{"url":"components/SearchMusicComponent.html","title":"component - SearchMusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchMusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music-component/search-music/search-music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for searching music.\nThis component provides a user interface for searching music tracks,\nalbums, or artists. It includes a search input field and displays\nthe search results.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-music\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search-music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component for searching music.\n * \n * This component provides a user interface for searching music tracks,\n * albums, or artists. It includes a search input field and displays\n * the search results.\n */\n@Component({\n  selector: 'app-search-music',\n  imports: [],\n  templateUrl: './search-music.component.html',\n  styleUrl: './search-music.component.css'\n})\nexport class SearchMusicComponent {\n\n}\n\n    \n\n    \n        search-music works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'search-music works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchMusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage and broadcast the current active section of the application.\nFeatures:\n\nMaintains the currently selected section using a BehaviorSubject.\nProvides an observable currentSection$ to subscribe to section changes.\nAllows updating the current section with setSection.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Updates the current active section.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new section identifier to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable stream of the current section.\nComponents can subscribe to reactively track section changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:21\n                        \n                    \n\n            \n                \n                    Internal BehaviorSubject holding the current section.\nInitialized with 'home'.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service to manage and broadcast the current active section of the application.\n *\n * Features:\n * - Maintains the currently selected section using a {@link BehaviorSubject}.\n * - Provides an observable {@link currentSection$} to subscribe to section changes.\n * - Allows updating the current section with {@link setSection}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n\n  /**\n   * Internal BehaviorSubject holding the current section.\n   * Initialized with 'home'.\n   */\n  private sectionSource = new BehaviorSubject('home');\n\n  /**\n   * Observable stream of the current section.\n   * Components can subscribe to reactively track section changes.\n   */\n  currentSection$ = this.sectionSource.asObservable();\n\n  /**\n   * Updates the current active section.\n   *\n   * @param section The new section identifier to set.\n   */\n  setSection(section: string): void {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/setting-item/setting-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable component to display a single setting item.\nThis component can be used inside settings screens or\npreferences pages to show a label or related content.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/settings-components/setting-item/setting-item.component.ts:22\n                            \n                        \n                \n                    \n                        The text label for the setting item.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * A reusable component to display a single setting item.\n * \n * This component can be used inside settings screens or\n * preferences pages to show a label or related content.\n */\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n\n  /**\n   * The text label for the setting item.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label!: string;\n\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidebar navigation component.\nThis component:\n\nDisplays sidebar links for navigating between different application sections.\nHighlights the currently active section.\nCommunicates with SectionService to update and listen to the current active section.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of SidebarComponent.\nSubscribes to SectionService.currentSection$ to keep track of\nthe currently selected section and update the UI accordingly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles sidebar link clicks by updating the current section\nand preventing the default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default navigation).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                        \n                    \n\n            \n                \n                    Holds the name of the currently active navigation path/section.\nUsed to apply active styling to the sidebar item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Sidebar navigation component.\n *\n * This component:\n * - Displays sidebar links for navigating between different application sections.\n * - Highlights the currently active section.\n * - Communicates with {@link SectionService} to update and listen to the current active section.\n */\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  /**\n   * Holds the name of the currently active navigation path/section.\n   * Used to apply active styling to the sidebar item.\n   */\n  activePath: string = '';\n\n  /**\n   * Creates an instance of SidebarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to keep track of\n   * the currently selected section and update the UI accordingly.\n   *\n   * @param sectionService Service for managing and broadcasting the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  /**\n   * Handles sidebar link clicks by updating the current section\n   * and preventing the default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default navigation).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Song.html":{"url":"interfaces/Song.html","title":"interface - Song","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a Song object with various attributes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            albumName\n                                        \n                                \n                                \n                                        \n                                            artistName\n                                        \n                                \n                                \n                                        \n                                            artistNames\n                                        \n                                \n                                \n                                        \n                                            copyright\n                                        \n                                \n                                \n                                        \n                                            downloadUrl\n                                        \n                                \n                                \n                                        \n                                            downloadUrls\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            isLiked\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            song_id\n                                        \n                                \n                                \n                                        \n                                            song_name\n                                        \n                                \n                                \n                                        \n                                            song_type\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        albumName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumName:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Name of the album the song belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artistName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistName:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Comma-separated names of the artists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     SongArtists[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SongArtists[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comma-separated names of the artists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        copyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        copyright:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Copyright information for the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloadUrl:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    URL to download the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloadUrls:     SongDownloadUrl[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SongDownloadUrl[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to download the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Duration of the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Array of images associated with the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     SongImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SongImage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of images associated with the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLiked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLiked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if the song is liked by the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Language of the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Name of the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type of the song (e.g., song, album)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Release year of the song\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongArtists.html":{"url":"interfaces/SongArtists.html","title":"interface - SongArtists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongArtists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing song artists.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist_name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Name of the artist\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongDownloadUrl.html":{"url":"interfaces/SongDownloadUrl.html","title":"interface - SongDownloadUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongDownloadUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a download URL with quality and link.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Quality of the download (e.g., 96kbps, 320kbps)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    URL to download the song in the specified quality\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongImage.html":{"url":"interfaces/SongImage.html","title":"interface - SongImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an image associated with a song.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Quality of the image (e.g., 50x50, 500x500)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    URL of the image\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing LocalStorage data in a structured and schema-compliant way.\nFeatures:\n\nProvides helper methods to get and update local storage items.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                budgetSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categorySchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                likedSongSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userLikedSongsKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getAllSongs\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getbudgetSchema\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getcategorySchema\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getexpenseSchema\n                            \n                            \n                                getlikedSongSchema\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                getUserLikedSongsKey\n                            \n                            \n                                getuserSchema\n                            \n                            \n                                updateBudgets\n                            \n                            \n                                updateCategories\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of budget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of category objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of expense objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSongs\n                        \n                    \n                \n            \n            \n                \ngetAllSongs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Retrieves all liked songs from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of liked songs objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for budgets\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getbudgetSchema\n                        \n                    \n                \n            \n            \n                \ngetbudgetSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:216\n                        \n                    \n\n\n            \n                \n                        Returns the schema for budgets\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for  budgets\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for categories\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getcategorySchema\n                        \n                    \n                \n            \n            \n                \ngetcategorySchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:192\n                        \n                    \n\n\n            \n                \n                        Returns the schema for categories\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for categories\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:150\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for expenses\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getexpenseSchema\n                        \n                    \n                \n            \n            \n                \ngetexpenseSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:200\n                        \n                    \n\n\n            \n                \n                        Returns the schema for expenses\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for expenses\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getlikedSongSchema\n                        \n                    \n                \n            \n            \n                \ngetlikedSongSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:224\n                        \n                    \n\n\n            \n                \n                        Returns the schema for liked songs\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for Liked Song\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Retrieves user data from localStorage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                User object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserLikedSongsKey\n                        \n                    \n                \n            \n            \n                \ngetUserLikedSongsKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user liked songs\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getuserSchema\n                        \n                    \n                \n            \n            \n                \ngetuserSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Returns the schema for user\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBudgets\n                        \n                    \n                \n            \n            \n                \nupdateBudgets(budgets: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:175\n                        \n                    \n\n\n            \n                \n                        Updates the budgets in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategories\n                        \n                    \n                \n            \n            \n                \nupdateCategories(categories: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Updates the categories in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of categories to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Updates the user data in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:30\n                        \n                    \n\n            \n                \n                    LocalStorage key for budgets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    budget_id: \"\",\n    amount: 0,\n    fromDate: \"\",\n    toDate: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:79\n                        \n                    \n\n            \n                \n                    Schema for budget\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:24\n                        \n                    \n\n            \n                \n                    LocalStorage key for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    category_id: \"\",\n    name: \"\",\n    icon: \"\",\n    color: \"\",\n    is_active: \"\",\n    user_id: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:39\n                        \n                    \n\n            \n                \n                    Schema for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:27\n                        \n                    \n\n            \n                \n                    LocalStorage key for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    expense_id: \"\",\n    category_id: \"\",\n    amount: \"\",\n    date: \"\",\n    location: \"\",\n    note: \"\",\n    payment_mode: \"\",\n    time: \"\",\n    isExtraSpending: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:49\n                        \n                    \n\n            \n                \n                    Schema for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        likedSongSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    song_id: '',\n    song_name: '',\n    year: '',\n    duration: 0,\n    language: '',\n    copyright: '',\n    albumName: '',\n    artistName: '',\n    image: '',\n    downloadUrl: '',\n    isLiked: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:87\n                        \n                    \n\n            \n                \n                    Schema for Liked song\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:33\n                        \n                    \n\n            \n                \n                    LocalStorage key for user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userLikedSongsKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user_liked_songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:36\n                        \n                    \n\n            \n                \n                    LocalStorage key for user Liked songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: \"\",\n    backup_frequency: \"\",\n    email: \"\",\n    is_active: \"\",\n    is_backup: \"\",\n    last_backup: \"\",\n    name: \"\",\n    notifications: \"\",\n    user_password: \"\",\n    theme_mode: \"dark\",\n    currency: \"₹\",\n    app_version: \"0\",\n    is_app_updated: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:62\n                        \n                    \n\n            \n                \n                    Schema for user\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\nexport interface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Provides helper methods to get and update local storage items.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /** LocalStorage key for user Liked songs */\n  private readonly userLikedSongsKey = 'user_liked_songs';\n\n  /** Schema for categories */\n  private readonly categorySchema: Schema = {\n    category_id: \"\",\n    name: \"\",\n    icon: \"\",\n    color: \"\",\n    is_active: \"\",\n    user_id: \"\"\n  };\n\n  /** Schema for expenses */\n  private readonly expenseSchema: Schema = {\n    expense_id: \"\",\n    category_id: \"\",\n    amount: \"\",\n    date: \"\",\n    location: \"\",\n    note: \"\",\n    payment_mode: \"\",\n    time: \"\",\n    isExtraSpending: false\n  };\n\n  /** Schema for user */\n  private readonly userSchema: Schema = {\n    id: \"\",\n    backup_frequency: \"\",\n    email: \"\",\n    is_active: \"\",\n    is_backup: \"\",\n    last_backup: \"\",\n    name: \"\",\n    notifications: \"\",\n    user_password: \"\",\n    theme_mode: \"dark\",\n    currency: \"₹\",\n    app_version: \"0\",\n    is_app_updated: true\n  };\n\n  /** Schema for budget */\n  private readonly budgetSchema: Schema = {\n    budget_id: \"\",\n    amount: 0,\n    fromDate: \"\",\n    toDate: \"\"\n  };\n\n  /** Schema for Liked song */\n  private readonly likedSongSchema: Schema = {\n    song_id: '',\n    song_name: '',\n    year: '',\n    duration: 0,\n    language: '',\n    copyright: '',\n    albumName: '',\n    artistName: '',\n    image: '',\n    downloadUrl: '',\n    isLiked: false,\n  };\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /**\n   * Retrieves all liked songs from localStorage.\n   *\n   * @returns Array of liked songs objects.\n   */\n  getAllSongs(): any[] {\n    return JSON.parse(localStorage.getItem(this.userLikedSongsKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /** Returns the localStorage key used for user liked songs */\n  getUserLikedSongsKey(): string { return this.userLikedSongsKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n\n  /** Returns the schema for categories\n   * \n   * @returns Schema object for categories\n   */\n  getcategorySchema(): Schema {\n    return this.categorySchema;\n  }\n\n  /** Returns the schema for expenses\n   * \n   * @returns Schema object for expenses  \n   */\n  getexpenseSchema(): Schema {\n    return this.expenseSchema;\n  }\n\n  /** Returns the schema for user \n   * \n   * @returns Schema object for user\n  */\n  getuserSchema(): Schema {\n    return this.userSchema;\n  }\n\n  /** Returns the schema for budgets \n   * \n   * @returns Schema object for  budgets\n  */\n  getbudgetSchema(): Schema {\n    return this.budgetSchema;\n  }\n\n  /** Returns the schema for liked songs \n   * \n   * @returns Schema object for Liked Song\n  */\n  getlikedSongSchema(): Schema {\n    return this.likedSongSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SyncSchemaService.html":{"url":"injectables/SyncSchemaService.html","title":"injectable - SyncSchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SyncSchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/sync-schema.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to synchronize local storage data with the current application schema.\nEnsures that stored data conforms to the latest schema definitions.\nThis service should be invoked during application initialization.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                syncAllSchema\n                            \n                            \n                                    Private\n                                syncUser\n                            \n                            \n                                    Private\n                                syncWithSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/sync-schema.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of SyncSchemaService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncAllSchema\n                        \n                    \n                \n            \n            \n                \nsyncAllSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with a schema and updates the app version.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key for the user.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Helper function to sync any localStorage data array with a given schema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key to sync.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply to missing properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { ConfigService } from '../config/config.service';\nimport { Categories } from './data/categories';\nimport { Schema } from './storage.service';\n\n/**\n * Service to synchronize local storage data with the current application schema.\n * Ensures that stored data conforms to the latest schema definitions.\n * This service should be invoked during application initialization.\n */\n@Injectable({ providedIn: 'root' })\nexport class SyncSchemaService {\n\n    /**\n     * Creates an instance of SyncSchemaService.\n     *\n     * @param storageService A service for interacting with local storage keys and data.\n     */\n    constructor(\n        private storageService: StorageService,\n        private configService: ConfigService\n    ) { }\n\n    /**\n     * Checks if the code is running in a browser environment with `localStorage` available.\n     *\n     * @returns {boolean} True if running in the browser, false otherwise.\n     */\n    private isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    syncAllSchema(): void {\n        if (this.isBrowser()) {\n            this.syncUser(this.storageService.getUserKey(), this.storageService.getuserSchema());\n            this.syncWithSchema(this.storageService.getCategoryKey(), this.storageService.getcategorySchema());\n            this.syncWithSchema(this.storageService.getExpenseKey(), this.storageService.getexpenseSchema());\n            this.syncWithSchema(this.storageService.getBudgetKey(), this.storageService.getbudgetSchema());\n            this.syncWithSchema(this.storageService.getUserLikedSongsKey(), this.storageService.getlikedSongSchema());\n        }\n    }\n\n    /**\n     * Helper function to sync any localStorage data array with a given schema.\n     *\n     * @param storageKey The localStorage key to sync.\n     * @param defaultSchema The default schema to apply to missing properties.\n     */\n    private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n        if (!this.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n        if (storageKey === this.storageService.getCategoryKey()) {\n            const pastData = JSON.parse(localStorage.getItem(this.storageService.getCategoryKey()) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    /**\n     * Syncs user data in localStorage with a schema and updates the app version.\n     *\n     * @param storageKey The localStorage key for the user.\n     * @param defaultSchema The default schema to apply.\n     */\n    private syncUser(storageKey: string, defaultSchema: Schema): void {\n        if (!this.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.configService.getVersion();\n\n        localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(syncedSettings));\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        ToastComponent\nA reusable component responsible for rendering toast notifications.\nIt integrates with ToastService to display messages dynamically\nand handles auto-dismiss after a configurable duration.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of ToastComponent.\nso that it can be accessed globally.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to register this component instance\nso that it can be accessed globally.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component's view has been fully initialized.\nRegisters this component with the ToastService so it can be controlled externally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with a message, style, and duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text content of the toast\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning), defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before the toast disappears, defaults to 3000\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n * ToastComponent\n *\n * A reusable component responsible for rendering toast notifications.\n * It integrates with `ToastService` to display messages dynamically\n * and handles auto-dismiss after a configurable duration.\n */\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent implements AfterViewInit {\n\n  /**\n   * Creates an instance of ToastComponent.\n   * @param toastService Service used to register this component instance\n   * so that it can be accessed globally.\n   */\n  constructor(private toastService: ToastService) { }\n\n  /**\n   * Lifecycle hook that runs after component's view has been fully initialized.\n   * Registers this component with the `ToastService` so it can be controlled externally.\n   */\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n\n  /**\n   * Displays a toast notification with a message, style, and duration.\n   *\n   * @param message The text content of the toast\n   * @param type The type of toast (`success` | `error` | `info` | `warning`), defaults to `'success'`\n   * @param duration Duration in milliseconds before the toast disappears, defaults to `3000`\n   */\n  showToast(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      // Clear any existing toasts\n      toastContainer.innerHTML = '';\n\n      // Define style classes for each toast type\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      // Create toast element\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      // Add message and dismiss button\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      // Auto-remove toast after the given duration\n      setTimeout(() => {\n        toast.remove();\n      }, duration);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ToastService\nA service for displaying toast notifications in the application.\nIt requires registering a ToastComponent instance so it can delegate\nshowing messages to the UI component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Registers the toast component instance.\nMust be called once, typically from the root component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Instance of ToastComponent used to render notifications\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Displays a toast message.\nExample :        Defaults to `'success'`\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The message text to display\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning)Defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before auto-hide (default: 3000)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:19\n                        \n                    \n\n            \n                \n                    Reference to the toast component instance.\nThis is registered once during app initialization.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n/**\n * ToastService\n *\n * A service for displaying toast notifications in the application.\n * It requires registering a `ToastComponent` instance so it can delegate\n * showing messages to the UI component.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  /**\n   * Reference to the toast component instance.\n   * This is registered once during app initialization.\n   */\n  private toastComponent!: ToastComponent;\n\n  /**\n   * Registers the toast component instance.\n   * Must be called once, typically from the root component.\n   *\n   * @param toast Instance of `ToastComponent` used to render notifications\n   */\n  register(toast: ToastComponent): void {\n    this.toastComponent = toast;\n  }\n\n  /**\n   * Displays a toast message.\n   *\n   * @param message The message text to display\n   * @param type The type of toast (`success` | `error` | `info` | `warning`)  \n   *             Defaults to `'success'`\n   * @param duration Duration in milliseconds before auto-hide (default: `3000`)\n   */\n  show(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    this.toastComponent?.showToast(message, type, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user profile and application settings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_app_updated\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Application version associated with the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Frequency of backups (e.g., daily, weekly).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred currency code (e.g., USD, INR).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_app_updated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_app_updated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user’s app has been updated to the latest version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if backup is enabled for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last performed backup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's display name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification preferences (e.g., enabled/disabled).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred theme mode (e.g., light, dark).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password (hashed or plain depending on storage implementation).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/settings-components/download-component/download-component.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the structure of user data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            budgetData\n                                        \n                                \n                                \n                                        \n                                            categoryData\n                                        \n                                \n                                \n                                        \n                                            expenseData\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        budgetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budgetData:         Budget[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Budget[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryData:         Category[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expenseData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expenseData:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         User | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLikedSongsService.html":{"url":"injectables/UserLikedSongsService.html","title":"injectable - UserLikedSongsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserLikedSongsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user-liked-song.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user liked songs stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve user liked songs.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBySongId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user-liked-song.service.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserLikedSongsService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Adds a new liked song to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Liked song data excluding song_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(song_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Deletes an user liked songs by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user liked songs to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Retrieves all liked songs from localStorage.\n\n\n                        \n                            Returns :         Song[]\n\n                        \n                            \n                                Array of formatted {@link Song} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBySongId\n                        \n                    \n                \n            \n            \n                \ngetBySongId(song_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves a single liked song by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the songs to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Song | null\n\n                        \n                            \n                                The user liked songs object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { Song } from '../../models/song.model';\n\n/**\n * Service for managing user liked songs stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve user liked songs.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserLikedSongsService {\n\n    /**\n     * Creates an instance of UserLikedSongsService.\n     *\n     * @param storageService Service for interacting with localStorage.\n     */\n    constructor(private storageService: StorageService) { }\n\n    /**\n     * Checks if the environment supports localStorage.\n     *\n     * @returns True if running in a browser with localStorage.\n     */\n    private isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    /**\n     * Returns the current date and time in ISO format adjusted for local time.\n     *\n     * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n     */\n    getLocalISOString(): string {\n        const now = new Date();\n        const pad = (n: number) => n.toString().padStart(2, '0');\n        return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n    }\n\n    /**\n     * Retrieves all liked songs from localStorage.\n     *\n     * @returns Array of formatted {@link Song} sorted by date (newest first).\n     */\n    getAll(): Song[] {\n        if (!this.isBrowser()) return [];\n        return this.storageService.getAllSongs();\n    }\n\n    /**\n     * Adds a new liked song to localStorage.\n     *\n     * @param data Liked song data excluding `song_id`.\n     */\n    add(data: Song): void {\n        if (!this.isBrowser()) return;\n        const all: Song[] = this.getAll();\n        all.push({ ...data });\n        localStorage.setItem(this.storageService.getUserLikedSongsKey(), JSON.stringify(all));\n    }\n\n\n    /**\n     * Retrieves a single liked song by its ID.\n     *\n     * @param song_id The ID of the songs to retrieve.\n     * @returns The user liked songs object or null if not found.\n     */\n    getBySongId(song_id: string): Song | null {\n        if (!this.isBrowser()) return null;\n        return this.getAll().find(item => item.song_id === song_id) || null;\n    }\n\n    /**\n     * Deletes an user liked songs by its ID.\n     *\n     * @param song_id The ID of the user liked songs to delete.\n     */\n    delete(song_id: string): void {\n        if (!this.isBrowser()) return;\n        let all: Song[] = this.getAll();\n        all = all.filter(item => item.song_id !== song_id);\n        localStorage.setItem(this.storageService.getUserLikedSongsKey(), JSON.stringify(all));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user data and preferences in local storage.\nProvides methods to read, update, and persist user settings.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getUserData\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for handling local storage operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user object from storage.\n\n\n                        \n                            Returns :     Record\n\n                        \n                            \n                                User data object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Retrieves full user data.\n\n\n                        \n                            Returns :         User | literal type\n\n                        \n                            \n                                The user object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:102\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a specific user property by key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The value if it exists, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Checks if the service is running in a browser environment\nwith access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Updates a single user property in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to update.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value to assign.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserData\n                        \n                    \n                \n            \n            \n                \nupdateUserData(user: User | literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Updates the entire user object in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new user object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/component/form-model/form-model.component.ts\n            \n            component\n            FormModelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                        src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n            \n            component\n            InstallAppPopupComponentComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            component\n            DownloadComponentComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            interface\n            UserData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                        src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/features/expense-wise/expense-wise.component.ts\n            \n            component\n            ExpenseWiseComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                        src/app/features/music/music-component/playlist-music/playlist-music.component.ts\n            \n            component\n            PlaylistMusicComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/features/music/music-component/search-music/search-music.component.ts\n            \n            component\n            SearchMusicComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                        src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            Song\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            SongArtists\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            SongDownloadUrl\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            SongImage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/sync-schema.service.ts\n            \n            injectable\n            SyncSchemaService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user-liked-song.service.ts\n            \n            injectable\n            UserLikedSongsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            canvg : ^4.0.3\n        \n            chart.js : ^4.5.0\n        \n            express : ^4.18.2\n        \n            jspdf : ^3.0.2\n        \n            jspdf-autotable : ^5.0.2\n        \n            lucide-angular : ^0.543.0\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            xlsx : ^0.18.5\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).\n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data in pdf, json, excel formats)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage (though it works as PWA).\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:\n👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n            \n                \n                    Angular Universal Node.js app engine\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n            \n                \n                    Express server\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n            \n                \n                    Browser distribution folder\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n            \n                \n                    Server distribution folder\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Application configuration\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Bootstrap the Angular application with server-specific configuration\n\n                \n            \n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n            \n                \n                    Predefined categories for the application\n\n                \n            \n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Chart.js instance\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Merged application configuration for server-side rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n            \n                \n                    Server-specific application configuration\n\n                \n            \n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** \n   * Name of the application. \n   */\n  appName: 'ExpenseWise',\n\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyBkBmHCsVna6d8bPYjQQhbpdymn7_Nvm2w',\n\n  /**\n   * Current environment type.\n   * - 'local' for local development (uses localhost API endpoint)\n   * - 'live' for production (uses production API endpoint)\n   * - leave empty for automatic detection based on current window location\n   */\n  developmentEnvironment: '', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.9.21', // Current application version\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  liveAPIUrl: \"https://exwiseapi.onrender.com\",\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  localAPIUrl: \"http://localhost:8000\"\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        path: '',\n        loadComponent: () =>\n            \"import('./features/expense-wise/expense-wise.component')\\r\\n\\\n                .then(m => m.ExpenseWiseComponent)\"\n    },\n    {\n        path: 'music',\n        loadComponent: () =>\n            \"import('./features/music/music.component')\\r\\n\\\n                .then(m => m.MusicComponent)\",\n    },\n    {\n        path: 'music/search',\n        loadComponent: () =>\n            \"import('./features/music/music-component/search-music/search-music.component')\\r\\n\\\n                .then(m => m.SearchMusicComponent)\"\n    },\n    {\n        path: 'music/playlist',\n        loadComponent: () =>\n            \"import('./features/music/music-component/playlist-music/playlist-music.component')\\r\\n\\\n                .then(m => m.PlaylistMusicComponent)\"\n    },\n    { path: '**', redirectTo: '' },\n    { path: 'music/**', redirectTo: '../music' }\n]\n                    \n                \n\n            \n                \n                    Application routes configuration.\nThis configuration defines the routes for the application, including\nlazy-loaded feature modules.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n            \n                \n                    Application routes for server-side rendering\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
