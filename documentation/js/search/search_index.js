var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.157,1,0.921]],["body/components/AddExpenseComponent.html",[0,0.272,1,1.33,2,0.915,3,0.1,4,0.1,5,0.772,6,0.961,7,0.634,8,0.634,9,0.075,10,6.535,11,5.863,12,2.37,13,0.407,14,4.957,15,0.969,16,2.088,17,2.369,18,4.41,19,1.694,20,5.804,21,3.182,22,4.123,23,2.112,24,2.539,25,0.583,26,1.662,27,1.339,28,1.275,29,1.156,30,1.651,31,0.645,32,1.036,33,3.518,34,1.597,35,1.33,36,2.003,37,4.957,38,1.036,39,4.123,40,0.125,41,0.405,42,4.957,43,4.957,44,4.957,45,4.957,46,4.957,47,4.957,48,3.847,49,4.957,50,4.957,51,0.505,52,5.515,53,5.515,54,2.208,55,3.566,56,5.515,57,5.515,58,5.515,59,4.123,60,4.123,61,0.824,62,2.37,63,4.41,64,3.063,65,3.398,66,0.97,67,4.123,68,2.525,69,2.112,70,0.863,71,0.017,72,0.304,73,0.322,74,0.785,75,3.518,76,0.707,77,2.111,78,2.648,79,0.748,80,1.195,81,2.926,82,2.74,83,0.877,84,4.123,85,0.762,86,4.576,87,4.123,88,2.74,89,2.926,90,3.566,91,3.518,92,0.852,93,2.74,94,1.651,95,1.904,96,2.003,97,3.566,98,2.74,99,2.003,100,1.21,101,2.707,102,4.41,103,2.657,104,2.74,105,2.926,106,2.623,107,2.233,108,4.123,109,2.74,110,3.566,111,2.112,112,2.74,113,2.926,114,0.915,115,1.93,116,2.782,117,4.123,118,0.579,119,2.74,120,5.515,121,6.915,122,5.515,123,4.123,124,2.74,125,2.849,126,1.574,127,4.123,128,2.369,129,2.607,130,1.444,131,2.74,132,1.274,133,1.246,134,0.963,135,1.057,136,2.74,137,4.28,138,0.988,139,2.74,140,2.74,141,2.546,142,4.28,143,2.74,144,2.685,145,2.74,146,2.003,147,1.036,148,1.295,149,2.74,150,3.621,151,2.987,152,2.74,153,0.345,154,1.799,155,1.574,156,0.152,157,1.944,158,1.331,159,1.678,160,2.74,161,1.944,162,2.37,163,0.846,164,1.799,165,0.087,166,0.166,167,0.802,168,0.74,169,2.74,170,2.74,171,1.799,172,2.74,173,2.408,174,4.123,175,4.123,176,2.74,177,0.988,178,1.944,179,4.41,180,2.74,181,2.74,182,2.179,183,2.112,184,4.77,185,2.74,186,2.74,187,2.112,188,4.957,189,2.37,190,3.2,191,2.37,192,1.105,193,1.799,194,3.566,195,1.944,196,2.74,197,2.126,198,1.156,199,2.74,200,4.123,201,2.74,202,2.74,203,2.74,204,2.74,205,2.74,206,2.74,207,2.74,208,1.205,209,2.74,210,2.74,211,2.37,212,1.574,213,1.484,214,1.149,215,1.898,216,2.74,217,2.126,218,2.74,219,4.957,220,2.126,221,2.74,222,1.813,223,4.123,224,2.74,225,2.74,226,4.957,227,2.74,228,2.74,229,2.74,230,2.74,231,4.123,232,4.957,233,4.123,234,2.74,235,2.74,236,2.74,237,2.74,238,4.957,239,4.123,240,2.74,241,2.74,242,2.74,243,3.2,244,4.123,245,4.123,246,4.708,247,2.233,248,1.446,249,3.566,250,3.2,251,3.914,252,3.914,253,2.369,254,3.566,255,2.003,256,2.112,257,0.608,258,0.954,259,0.717,260,1.444,261,0.717,262,0.717,263,0.661,264,0.717,265,0.661,266,1.08,267,0.688,268,0.717,269,0.661,270,0.717,271,0.717,272,0.634,273,0.47,274,1.08,275,0.661,276,0.608,277,0.717,278,0.661,279,0.717,280,0.661,281,0.717,282,0.661,283,0.717,284,0.634,285,0.717,286,0.634,287,0.608,288,0.717,289,0.661,290,0.717,291,0.661,292,0.717,293,0.717,294,0.661,295,0.717,296,0.661,297,0.717,298,0.661,299,0.688,300,0.47,301,0.717,302,0.688,303,1.298,304,0.661,305,0.717,306,0.661,307,0.688,308,0.717,309,0.661,310,0.717,311,0.661,312,0.841,313,0.717,314,0.661,315,0.661,316,0.688,317,0.717,318,0.688,319,0.717,320,0.661,321,0.717,322,0.559,323,0.583,324,0.634,325,0.717,326,0.717,327,0.008,328,0.008]],["title/components/AiComponent.html",[0,0.157,263,0.921]],["body/components/AiComponent.html",[0,0.283,1,0.979,2,1.211,3,0.148,4,0.148,5,1.022,7,0.939,8,0.939,9,0.111,13,0.358,19,0.979,25,0.864,26,1.714,27,1.38,28,0.728,29,0.965,30,2.186,31,0.854,32,1.372,34,1.987,35,0.979,38,1.372,40,0.186,41,0.537,51,0.669,61,0.985,66,0.851,68,3.344,70,0.636,71,0.017,72,0.282,73,0.282,74,0.578,79,0.741,80,0.979,85,0.447,99,2.652,100,0.665,106,2.643,118,0.331,130,1.43,134,0.815,135,0.895,138,1.27,147,1.372,153,0.402,156,0.225,158,1.973,163,1.255,165,0.129,166,0.246,167,0.704,168,0.815,177,0.978,192,1.057,252,3.874,257,0.901,258,1.758,259,1.063,260,1.727,261,1.063,262,1.063,263,1.59,264,1.063,265,0.979,266,1.43,267,1.02,268,1.063,269,0.979,270,1.063,271,1.063,272,0.939,273,0.696,274,1.43,275,0.979,276,0.901,277,1.063,278,0.979,279,1.063,280,0.979,281,1.063,282,0.979,283,1.063,284,0.939,285,1.063,286,0.939,287,0.901,288,1.063,289,0.979,290,1.063,291,0.979,292,1.063,293,1.063,294,0.979,295,1.063,296,0.979,297,1.063,298,0.979,299,1.02,300,0.696,301,1.063,302,1.02,303,1.615,304,0.979,305,1.063,306,0.979,307,1.02,308,1.063,309,0.979,310,1.063,311,0.979,312,1.114,313,1.063,314,0.979,315,0.979,316,1.02,317,1.063,318,1.02,319,1.063,320,0.979,321,1.063,322,0.828,323,0.864,324,0.939,325,1.063,326,1.063,327,0.011,328,0.011,329,3.513,330,4.399,331,5.459,332,3.137,333,4.652,334,3.629,335,2.09,336,5.459,337,5.704,338,4.722,339,5.704,340,6.594,341,3.571,342,7.085,343,3.544,344,5.334,345,5.459,346,2.289,347,5.459,348,6.166,349,6.166,350,3.544,351,7.085,352,4.061,353,4.68,354,7.085,355,6.594,356,5.459,357,3.344,358,6.166,359,4.237,360,2.186,361,5.459,362,3.585,363,4.061,364,5.459,365,5.459,366,2.4,367,5.459,368,6.594,369,1.954,370,4.722,371,4.061,372,2.09,373,5.459,374,2.08,375,3.151,376,1.308,377,4.722,378,4.061,379,3.151,380,3.513,381,4.061,382,4.061,383,4.061,384,4.061,385,2.487,386,3.513,387,6.166,388,2.334,389,4.061,390,5.459,391,4.061,392,4.061,393,4.061,394,3.585,395,5.459]],["title/components/AppComponent.html",[0,0.157,265,0.921]],["body/components/AppComponent.html",[0,0.276,1,0.748,2,1.003,3,0.165,4,0.113,5,0.846,6,1.088,7,0.717,8,0.717,9,0.085,13,0.384,19,0.748,25,0.66,26,1.68,27,1.368,28,0.556,29,0.834,30,1.81,31,0.975,32,1.136,34,1.718,35,0.748,36,2.195,38,1.136,40,0.142,41,0.444,51,0.554,54,2.346,61,0.875,65,3.523,66,0.942,68,1.899,70,0.834,71,0.017,72,0.285,73,0.268,74,0.759,79,0.967,80,1.413,85,0.739,92,0.62,94,1.81,95,2.086,96,2.195,100,0.508,114,1.3,118,0.529,126,1.782,130,1.183,134,0.796,135,0.874,138,1.277,147,1.136,148,1.334,153,0.401,154,2.036,156,0.251,163,0.958,164,2.036,165,0.099,166,0.188,167,0.866,168,1.027,171,2.967,177,0.81,192,0.914,198,0.606,248,1.088,257,0.688,258,1.045,259,0.812,260,1.534,261,0.812,262,0.812,263,0.748,264,0.812,265,1.567,266,1.183,267,0.779,268,0.812,269,0.748,270,0.812,271,0.812,272,0.717,273,0.532,274,1.183,275,0.748,276,0.688,277,0.812,278,0.748,279,0.812,280,0.748,281,0.812,282,0.748,283,0.812,284,0.717,285,0.812,286,1.355,287,1.382,288,0.812,289,0.748,290,0.812,291,0.748,292,0.812,293,0.812,294,0.748,295,0.812,296,1.413,297,1.396,298,1.286,299,0.779,300,0.532,301,0.812,302,0.779,303,1.396,304,0.748,305,0.812,306,0.748,307,0.779,308,0.812,309,0.748,310,0.812,311,0.748,312,0.922,313,0.812,314,0.748,315,0.748,316,0.779,317,0.812,318,0.779,319,0.812,320,0.748,321,0.812,322,0.633,323,0.66,324,0.717,325,0.812,326,0.812,327,0.009,328,0.009,334,2.315,357,2.768,360,2.346,369,0.919,376,1.456,380,2.682,396,2.682,397,1.3,398,2.726,399,2.967,400,2.195,401,3.501,402,2.195,403,3.507,404,3.366,405,4.546,406,3.373,407,3.579,408,3.207,409,4.977,410,2.255,411,3.909,412,5.331,413,5.331,414,4.519,415,5.331,416,5.331,417,5.331,418,4.612,419,4.138,420,2.853,421,5.858,422,5.067,423,5.858,424,4.519,425,3.207,426,4.519,427,2.682,428,4.212,429,3.001,430,4.88,431,4.762,432,5.067,433,1.702,434,4.519,435,5.623,436,1.655,437,3.507,438,1.953,439,3.064,440,4.519,441,3.507,442,3.909,443,2.967,444,2.195,445,3.909,446,2.357,447,2.967,448,1.81,449,2.201,450,3.403,451,3.101,452,4.157,453,4.519,454,5.331,455,4.138,456,4.612,457,2.731,458,3.064,459,5.331,460,4.612,461,3.101,462,2.768,463,1.895,464,4.519,465,3.847,466,5.858,467,3.207,468,3.101,469,3.207,470,5.804,471,4.977,472,2.462,473,3.101,474,2.086,475,3.025,476,1.567,477,2.315,478,3.101,479,2.967,480,2.768,481,4.519,482,3.909,483,3.507,484,2.597,485,4.519,486,4.519,487,3.101,488,3.101,489,4.546,490,2.146,491,4.519,492,3.588,493,3.101,494,2.195,495,2.768,496,2.967,497,3.101,498,2.682,499,2.682,500,2.682,501,2.682,502,2.447,503,2.682,504,3.507,505,3.101,506,3.101,507,3.101,508,1.782,509,2.036,510,1.899,511,3.101,512,2.407,513,1.136,514,1.088,515,1.3,516,2.407,517,2.682,518,2.682,519,3.101,520,3.101,521,2.315,522,3.101,523,2.407,524,1.899,525,4.519,526,2.407,527,1.363,528,3.101,529,3.101,530,3.101,531,1.899,532,4.546,533,2.036,534,3.101,535,3.101,536,3.101,537,1.3,538,3.101,539,2.682,540,1.782,541,1.187,542,2.682,543,2.201,544,3.101,545,2.967,546,5.331,547,3.909,548,3.101,549,3.101,550,2.407,551,3.101,552,3.101,553,3.101,554,3.101,555,4.519,556,3.909,557,3.101,558,3.101,559,2.036,560,2.682,561,4.519,562,2.201,563,2.201,564,2.407,565,3.101,566,3.101,567,3.207,568,3.101,569,2.967,570,3.101,571,0.958]],["title/interfaces/Budget.html",[572,0.493,573,1.764]],["body/interfaces/Budget.html",[3,0.159,4,0.159,9,0.119,13,0.285,15,0.937,28,1.025,31,0.682,40,0.199,41,0.562,51,0.534,61,0.65,71,0.017,73,0.31,76,0.746,77,1.667,79,0.776,83,0.927,85,0.63,92,0.789,111,2.23,115,1.928,118,0.639,129,2.795,133,1.816,141,2.01,148,0.815,153,0.317,156,0.242,165,0.182,166,0.263,167,0.933,168,0.854,177,1.32,192,0.98,253,3.896,300,1.094,327,0.011,328,0.011,366,2.981,376,2.184,397,0.966,410,2.146,436,1.595,438,1.595,446,1.922,448,2.29,462,2.667,463,2.677,472,2.01,474,2.01,476,1.379,477,2.23,513,2.484,514,2.584,515,3.089,524,2.667,572,0.824,573,3.709,574,1.595,575,3.379,576,1.842,577,4.046,578,5.521,579,3.293,580,3.293,581,2.146,582,4.955,583,4.946,584,4.946,585,2.006,586,3.097,587,5.864,588,4.452,589,3.097,590,0.701,591,2.115,592,2.23,593,5.227,594,1.595,595,2.778,596,2.502,597,2.859,598,3.379,599,2.006,600,1.188,601,3.502,602,2.667,603,3.09,604,1.744,605,2.115,606,2.64,607,1.744,608,2.29,609,2.115,610,1.826,611,2.115,612,1.463,613,2.502,614,3.42,615,3.379,616,2.358,617,3.766,618,4.946,619,3.766,620,2.502,621,2.667,622,3.669,623,2.667,624,2.502,625,3.09,626,5.523,627,3.669,628,2.01,629,3.09,630,3.766,631,2.778,632,3.09,633,3.91,634,2.778,635,2.115,636,3.766,637,3.502,638,4.946,639,2.444,640,3.09,641,2.502,642,3.766,643,2.859,644,3.09,645,2.115,646,3.766,647,3.766]],["title/injectables/BudgetService.html",[590,0.468,601,2.339]],["body/injectables/BudgetService.html",[3,0.142,4,0.142,9,0.107,13,0.459,15,1.062,28,1.254,31,0.831,40,0.178,51,0.795,61,0.793,66,0.924,70,1.062,71,0.017,72,0.311,73,0.311,74,0.966,76,0.91,77,2.032,79,0.879,83,1.129,85,0.803,92,0.848,111,2.718,115,1.509,118,0.614,129,2.67,133,1.896,141,2.45,148,0.993,153,0.294,156,0.216,165,0.169,166,0.236,167,0.903,168,0.968,177,1.283,192,0.91,253,3.725,300,1.2,327,0.011,328,0.011,366,2.982,376,2.348,397,0.864,410,2.45,436,1.944,438,1.944,446,2.179,448,2.596,462,3.25,463,2.531,472,2.45,474,2.45,476,1.456,477,2.718,513,2.623,514,2.701,515,3.229,524,3.25,572,0.685,573,3.699,575,3.023,576,1.255,577,4.116,578,5.492,579,1.892,580,1.892,581,1.309,582,4.685,583,3.369,584,3.369,585,1.366,586,2.109,587,4.59,588,3.485,589,2.109,590,0.651,591,1.892,592,2.718,593,5.464,594,1.944,595,3.4,596,3.05,597,3.485,598,4.118,599,2.274,600,1.063,601,3.97,602,3.25,603,3.766,604,2.125,605,3.149,606,2.45,607,1.56,608,2.125,609,1.892,610,2.225,611,2.578,612,1.784,613,3.725,614,3.295,615,3.023,616,2.874,617,4.59,618,5.607,619,4.59,620,3.05,621,3.697,622,3.469,623,2.385,624,2.238,625,2.764,626,5.221,627,3.469,628,2.45,629,3.766,630,4.59,631,3.149,632,3.766,633,4.154,634,3.295,635,2.578,636,4.59,637,3.25,638,4.59,639,2.311,640,2.764,641,3.05,642,4.59,643,2.557,644,3.766,645,2.578,646,4.59,647,3.369,648,1.309,649,5.307,650,2.385,651,3.895,652,3.895,653,3.895,654,3.895,655,3.895,656,3.895,657,3.895]],["title/components/CalendarComponent.html",[0,0.157,269,0.921]],["body/components/CalendarComponent.html",[0,0.223,1,0.548,2,0.793,3,0.083,4,0.083,5,0.669,7,0.526,8,0.526,9,0.062,13,0.421,15,1.146,16,2.555,19,0.548,21,1.498,23,1.829,24,2.259,25,0.484,26,1.631,27,1.314,28,0.407,29,1.135,31,0.356,32,0.898,34,1.421,35,0.548,38,0.898,40,0.104,41,0.351,51,0.438,54,2.002,61,0.534,64,2.785,66,0.967,70,0.978,71,0.017,72,0.301,73,0.332,74,0.89,76,0.612,78,1.367,79,0.737,80,0.548,83,1.156,85,0.738,91,1.649,92,0.814,94,1.43,95,1.649,96,1.735,100,0.723,103,1.43,107,1.934,111,2.783,114,1.487,115,1.938,116,1.498,118,0.602,129,2.793,130,0.935,132,1.104,133,1.365,134,1.001,135,1.098,138,0.974,142,1.764,147,0.898,148,1.169,153,0.32,156,0.126,158,1.104,159,1.392,163,0.702,165,0.072,166,0.329,167,0.829,168,0.747,173,1.104,177,0.64,192,1.127,194,4.699,198,1.427,208,1,211,3.089,214,1.498,243,2.772,247,1.934,248,1.253,257,0.979,258,0.826,259,0.595,260,1.683,261,0.595,262,0.595,263,0.548,264,0.595,265,0.548,266,0.935,267,0.571,268,0.595,269,1.391,270,0.595,271,0.595,272,0.526,273,0.39,274,0.935,275,0.548,276,0.504,277,0.595,278,0.548,279,0.595,280,0.548,281,0.595,282,0.548,283,0.595,284,0.526,285,0.595,286,0.526,287,0.504,288,0.595,289,0.548,290,0.595,291,0.548,292,0.595,293,0.595,294,0.548,295,0.595,296,0.548,297,0.595,298,0.548,299,0.571,300,0.756,301,0.595,302,0.571,303,1.155,304,0.548,305,0.595,306,0.548,307,0.571,308,0.595,309,0.548,310,0.595,311,0.548,312,0.729,313,0.595,314,0.548,315,0.548,316,0.571,317,0.595,318,0.571,319,0.595,320,0.548,321,0.595,322,0.464,323,0.484,324,0.526,325,0.595,326,0.595,327,0.007,328,0.007,335,1.367,343,2.535,346,1.498,360,1.43,362,2.345,369,1.059,372,0.87,402,2.801,405,2.772,410,1.2,419,3.423,420,2.684,436,1.308,467,2.535,476,0.861,477,2.259,490,1.831,508,1.306,514,1.253,515,1.498,521,1.164,531,2.702,537,2.418,541,2.08,569,1.493,571,2.071,576,1.151,577,3.59,579,1.735,580,2.428,581,2.454,586,1.231,589,1.231,596,1.306,612,1.2,628,2.785,631,2.143,639,1.367,658,1.966,659,4.988,660,3.13,661,4.268,662,1.367,663,4.331,664,4.992,665,3.571,666,2.345,667,4.762,668,3.571,669,4.027,670,4.411,671,5.271,672,4.324,673,4.372,674,3.879,675,4.02,676,3.571,677,3.571,678,4.411,679,5.433,680,3.656,681,3.423,682,3.423,683,4.757,684,4.411,685,4.411,686,5.433,687,4.411,688,6.031,689,4.411,690,3.571,691,3.571,692,3.571,693,4.324,694,3.571,695,3.571,696,3.571,697,3.571,698,4.999,699,1.966,700,3.571,701,2.783,702,2.897,703,3.571,704,2.273,705,4.475,706,3.571,707,3.383,708,2.483,709,3.13,710,4.411,711,3.13,712,3.423,713,3.089,714,2.772,715,2.273,716,2.273,717,1.231,718,3.122,719,3.122,720,3.328,721,3.571,722,2.273,723,2.053,724,5.433,725,2.535,726,1.829,727,2.772,728,2.273,729,2.345,730,3.571,731,3.571,732,2.273,733,4.411,734,3.571,735,2.273,736,2.273,737,2.389,738,1.104,739,2.273,740,3.571,741,2.273,742,3.571,743,2.273,744,2.811,745,4.848,746,4.699,747,2.273,748,2.345,749,3.571,750,2.273,751,2.053,752,2.273,753,2.535,754,3.062,755,1.43,756,3.089,757,2.772,758,2.273,759,2.772,760,3.571,761,2.273,762,3.571,763,2.273,764,2.535,765,1.735,766,2.772,767,1.829,768,2.273,769,2.535,770,2.273,771,2.273,772,2.772,773,2.273,774,2.345,775,2.273,776,2.273,777,3.089,778,3.089,779,3.089,780,3.089,781,3.089,782,3.089,783,3.089,784,2.273,785,3.571,786,3.089,787,2.273,788,2.273,789,1.764,790,1.764,791,5.433,792,2.273,793,4.411,794,5.767,795,2.273,796,2.273,797,2.273,798,1.764,799,3.571,800,4.324,801,2.273,802,3.571,803,3.571,804,3.571,805,4.411,806,2.273,807,1.966,808,2.273,809,2.273,810,2.273,811,2.273,812,2.273,813,2.273,814,0.953,815,1.966,816,4.411,817,3.423,818,3.571,819,2.273,820,2.273,821,2.273,822,2.772,823,2.273,824,2.273,825,2.273,826,3.571,827,2.273,828,1.966,829,3.571,830,2.273,831,2.273,832,3.571,833,2.345,834,1.231,835,1.104,836,2.273,837,2.897,838,2.273,839,2.273,840,2.273,841,2.273,842,2.273,843,2.273,844,3.571,845,2.273,846,3.13,847,3.879,848,2.273,849,3.571,850,2.772,851,1.613,852,2.188,853,2.345,854,2.772,855,2.535,856,2.535,857,2.535,858,2.535]],["title/interfaces/Category.html",[100,0.626,572,0.493]],["body/interfaces/Category.html",[3,0.141,4,0.141,9,0.106,13,0.253,15,0.864,16,2.401,29,1.011,31,0.604,40,0.177,41,0.518,51,0.473,61,0.576,71,0.017,72,0.327,73,0.327,76,0.662,77,1.477,79,0.815,83,0.821,85,0.662,92,0.751,100,1.323,111,1.977,114,0.856,118,0.642,132,1.629,133,1.623,138,1.211,141,2.435,147,1.325,148,0.722,153,0.358,156,0.214,165,0.168,166,0.233,167,0.922,168,0.897,177,1.337,182,3.381,192,1.265,198,1.174,222,2.319,300,1.107,327,0.011,328,0.011,376,1.936,397,0.856,410,2.019,420,2.586,436,1.414,438,1.414,446,2.401,447,2.534,448,2.112,462,2.364,463,2.519,472,1.782,474,1.782,475,1.875,476,1.272,477,1.977,490,1.932,513,2.365,514,2.506,515,2.996,531,2.364,533,2.534,571,1.192,572,0.775,574,1.414,576,2.08,581,2.401,585,1.85,590,0.647,591,1.875,592,1.977,594,1.414,595,2.562,597,2.534,599,1.354,600,1.053,604,1.545,605,1.875,606,2.435,607,1.545,608,2.112,609,1.875,610,2.212,611,1.875,612,1.297,613,2.218,614,3.284,620,2.218,621,2.364,622,3.452,623,2.364,624,2.218,627,3.031,628,1.782,631,1.875,633,3.68,634,2.562,635,1.875,637,2.364,639,2.019,641,2.218,644,2.739,701,1.977,708,2.444,711,2.739,755,2.586,765,1.875,767,2.701,852,2.364,859,2.995,860,3.743,861,5.848,862,3.358,863,3.711,864,4.376,865,2.918,866,4.093,867,3.463,868,4.562,869,4.562,870,3.031,871,3.743,872,2.435,873,2.212,874,4.562,875,3.338,876,3.338,877,3.041,878,2.218,879,2.739,880,2.995,881,3.338,882,2.856,883,2.739,884,2.534,885,2.739,886,1.618,887,3.68,888,3.338,889,2.995,890,3.338,891,3.338,892,3.338,893,3.338,894,2.534,895,3.463,896,3.338,897,3.338,898,4.562,899,2.739,900,1.618,901,3.338,902,3.338,903,2.739,904,2.364,905,3.338,906,3.338,907,3.338,908,3.338,909,2.534,910,5.197,911,3.338,912,3.338,913,3.338,914,2.534,915,3.338,916,3.338,917,3.338,918,2.09,919,3.338,920,3.338,921,4.562,922,3.338,923,3.743,924,3.338,925,3.338,926,3.338,927,3.338,928,3.338,929,3.338]],["title/components/CategoryDropdownComponent.html",[0,0.157,35,0.921]],["body/components/CategoryDropdownComponent.html",[0,0.281,1,0.802,2,1.054,3,0.121,4,0.121,5,0.889,6,1.166,7,1.283,8,0.769,9,0.091,13,0.42,15,0.545,19,0.802,25,0.707,26,1.69,27,1.361,28,0.596,29,1.002,30,1.903,31,0.744,32,1.194,34,1.787,35,1.459,36,2.308,38,1.194,40,0.152,41,0.467,48,4.967,51,0.583,54,2.423,61,0.828,66,0.97,68,2.91,70,0.947,71,0.017,72,0.321,73,0.344,74,0.998,79,0.903,80,0.802,85,0.705,89,4.294,92,0.842,96,2.308,99,2.308,100,1.303,101,3.12,102,5.37,103,2.806,106,2.122,118,0.542,125,3.187,126,2.731,128,2.731,130,1.584,133,1.194,134,1.137,135,1.049,138,0.851,144,2.573,146,2.308,147,1.52,148,1.133,151,3.277,153,0.336,154,2.183,155,1.91,156,0.184,161,5.37,163,1.027,165,0.106,166,0.335,167,0.781,168,0.497,190,2.58,191,2.876,192,0.57,198,0.929,257,0.738,258,1.099,259,0.871,260,1.584,261,0.871,262,0.871,263,0.802,264,0.871,265,0.802,266,1.244,267,0.835,268,0.871,269,0.802,270,0.871,271,0.871,272,0.769,273,0.57,274,1.244,275,0.802,276,0.738,277,0.871,278,0.802,279,0.871,280,0.802,281,0.871,282,0.802,283,0.871,284,0.769,285,0.871,286,0.769,287,0.738,288,0.871,289,0.802,290,0.871,291,0.802,292,0.871,293,0.871,294,0.802,295,0.871,296,0.802,297,0.871,298,0.802,299,0.835,300,1.097,301,0.871,302,0.835,303,1.452,304,0.802,305,0.871,306,0.802,307,0.835,308,0.871,309,0.802,310,0.871,311,0.802,312,0.969,313,0.871,314,0.802,315,0.802,316,0.835,317,0.871,318,0.835,319,0.871,320,0.802,321,0.871,322,0.678,323,0.707,324,0.769,325,0.871,326,0.871,327,0.01,328,0.01,357,2.91,400,2.308,420,2.806,425,3.372,449,2.359,450,3.294,452,4.294,458,3.187,476,1.146,508,1.91,532,3.688,533,2.183,748,3.12,877,3.09,882,3.711,887,2.91,930,6.545,931,2.876,932,3.372,933,3.706,934,3.706,935,5.545,936,4.751,937,5.545,938,5.545,939,6.05,940,4.751,941,4.751,942,6.05,943,2.308,944,6.4,945,5.545,946,2.731,947,5.545,948,4.11,949,2.876,950,4.751,951,4.294,952,4.292,953,3.324,954,2.91,955,4.371,956,6.05,957,4.695,958,3.324,959,3.12,960,4.11,961,4.11,962,4.751,963,3.324,964,3.706,965,3.324,966,2.876,967,4.751,968,4.796,969,3.396,970,4.303,971,3.641,972,3.324,973,3.324,974,4.751,975,4.11,976,4.751,977,3.324,978,3.324,979,3.324,980,4.751,981,3.324,982,2.91,983,2.359,984,1.273,985,3.324,986,4.796,987,3.324,988,4.751,989,4.751,990,4.751,991,6.4,992,3.324,993,3.324,994,2.876,995,2.58,996,3.324,997,3.324,998,4.11,999,4.751]],["title/injectables/CategoryService.html",[590,0.468,882,2.069]],["body/injectables/CategoryService.html",[3,0.128,4,0.128,9,0.096,13,0.445,15,1.017,16,2.341,28,0.886,29,1.024,31,0.774,40,0.161,51,0.761,61,0.739,66,0.918,70,1.024,71,0.017,72,0.331,73,0.299,74,0.931,76,0.848,77,1.894,79,0.92,83,1.053,85,0.807,92,0.827,100,1.319,111,2.534,114,1.098,118,0.613,132,1.087,133,1.751,138,1.248,141,1.625,147,0.884,148,0.926,153,0.344,156,0.195,165,0.158,166,0.213,167,0.899,168,0.977,177,1.313,182,3.355,192,1.239,198,1.118,222,1.547,300,1.219,327,0.01,328,0.01,376,2.185,397,0.781,410,2.39,420,2.848,436,1.812,438,1.812,446,2.462,447,2.31,448,2.485,462,3.03,463,2.399,472,2.284,474,2.284,475,1.709,476,1.379,477,2.534,490,1.289,513,2.552,514,2.661,515,3.181,531,2.155,533,2.31,571,1.087,572,0.638,576,1.594,581,2.198,585,1.234,590,0.606,591,1.709,592,2.534,594,1.812,595,3.294,597,3.248,599,1.735,600,0.96,604,1.981,605,3.015,606,2.284,607,1.409,608,1.981,609,1.709,610,2.603,611,2.403,612,1.663,613,3.566,614,3.176,620,2.843,621,3.504,622,3.287,623,2.155,624,2.022,627,2.843,628,2.284,631,2.403,633,4.005,634,3.176,635,2.403,637,2.155,639,1.894,641,2.843,644,3.51,648,1.183,650,2.155,701,2.534,708,1.923,711,3.51,755,1.981,765,2.403,767,1.802,852,2.155,859,2.731,860,2.497,861,4.279,862,2.641,863,2.022,864,4.005,865,2.779,866,2.731,867,2.31,868,3.044,869,3.044,870,2.022,871,2.497,872,1.625,873,1.476,874,3.044,875,3.044,876,3.044,877,3.139,878,2.843,879,3.51,880,3.839,881,4.279,882,3.361,883,3.51,884,3.248,885,3.51,886,2.074,887,4.154,888,4.279,889,3.839,890,4.279,891,4.279,892,4.279,893,5.368,894,2.31,895,3.248,896,3.044,897,3.044,898,4.279,899,2.497,900,1.476,901,3.044,902,3.044,903,2.497,904,2.155,905,3.044,906,3.044,907,3.044,908,4.279,909,3.248,910,4.948,911,4.279,912,3.044,913,4.279,914,3.248,915,4.279,916,4.279,917,3.044,918,1.906,919,3.044,920,3.044,921,4.279,922,3.044,923,3.51,924,3.044,925,3.044,926,3.044,927,4.279,928,4.279,929,3.044,1000,4.947,1001,3.519,1002,3.519,1003,3.519,1004,3.519,1005,3.519,1006,3.519,1007,3.519,1008,3.519]],["title/interfaces/ChatMessage.html",[572,0.493,1009,2.508]],["body/interfaces/ChatMessage.html",[3,0.137,4,0.137,9,0.103,13,0.247,15,0.616,20,2.919,25,1.426,40,0.172,41,0.509,61,0.562,71,0.017,72,0.331,73,0.307,76,0.645,78,2.269,79,0.703,83,0.8,85,0.763,114,1.487,118,0.597,135,1.163,138,1.387,146,1.827,153,0.384,156,0.209,165,0.165,166,0.227,167,0.894,168,1.001,177,1.271,192,1.258,198,0.735,208,1.654,214,1.577,215,1.44,255,1.827,276,1.15,287,0.835,300,0.645,312,1.303,327,0.01,328,0.012,330,2.977,332,2.161,333,4.194,334,3.703,341,3.21,350,2.161,360,1.506,369,1.115,372,2.716,374,1.926,385,4.547,388,2.161,394,2.469,397,0.835,399,2.469,428,2.303,429,3.272,433,1.357,439,2.161,471,4.206,490,1.378,494,1.827,502,2.037,509,2.469,510,2.303,572,0.765,574,1.378,590,0.635,599,1.817,600,1.026,608,1.506,611,1.827,612,1.264,631,1.827,635,1.827,707,2.806,709,2.669,727,2.919,738,2.517,744,1.577,751,2.161,833,3.402,834,2.037,835,1.827,870,2.977,900,1.577,1009,4.659,1010,2.919,1011,2.919,1012,3.677,1013,2.654,1014,3.364,1015,4.482,1016,3.103,1017,5.506,1018,5.61,1019,3.677,1020,2.606,1021,4.482,1022,3.406,1023,4.021,1024,4.482,1025,2.919,1026,2.669,1027,2.919,1028,2.469,1029,4.206,1030,3.253,1031,5.127,1032,3.613,1033,2.919,1034,4.747,1035,4.482,1036,5.127,1037,4.957,1038,2.469,1039,1.817,1040,3.253,1041,3.253,1042,3.253,1043,3.253,1044,2.919,1045,2.919,1046,2.919,1047,2.977,1048,3.253,1049,2.669,1050,1.827,1051,2.669,1052,3.63,1053,2.669,1054,3.253,1055,2.919,1056,2.161,1057,3.253,1058,3.253,1059,3.253,1060,4.021,1061,3.253,1062,2.303,1063,4.482,1064,5.99,1065,3.459,1066,3.253,1067,2.037,1068,3.253,1069,2.919,1070,3.63,1071,2.977,1072,3.402,1073,3.173,1074,4.482,1075,3.173,1076,3.253,1077,2.303,1078,3.253,1079,2.303,1080,2.161,1081,4.482,1082,5.795,1083,1.827,1084,2.669,1085,3.253,1086,1.736,1087,3.253,1088,3.253,1089,4.021,1090,2.037,1091,3.253,1092,2.303,1093,2.303,1094,4.482,1095,3.253,1096,3.253,1097,3.253,1098,3.253,1099,3.253,1100,3.253,1101,4.021,1102,4.482,1103,5.525,1104,4.482,1105,3.253,1106,2.919,1107,2.977,1108,4.021,1109,3.253,1110,3.253,1111,3.253,1112,3.253,1113,3.253,1114,3.253,1115,3.253,1116,3.253,1117,3.253,1118,3.253,1119,2.879,1120,3.253,1121,2.919,1122,1.926,1123,3.253,1124,2.669,1125,3.253,1126,2.919,1127,2.919,1128,3.253,1129,2.669,1130,2.469,1131,3.253,1132,3.253,1133,4.482,1134,2.919,1135,2.469,1136,3.253,1137,3.253,1138,2.669,1139,2.919,1140,3.253,1141,4.482,1142,3.253,1143,3.253,1144,4.021,1145,2.806,1146,2.469,1147,2.654,1148,2.669,1149,4.021,1150,2.669,1151,3.253,1152,2.919,1153,4.6,1154,2.919,1155,2.919,1156,2.919,1157,2.303,1158,2.919]],["title/interfaces/CompoDocConfig.html",[572,0.493,1159,2.508]],["body/interfaces/CompoDocConfig.html",[0,0.152,3,0.135,4,0.135,5,1.449,6,0.834,7,0.55,8,0.55,9,0.189,15,0.909,17,2.944,23,1.218,24,1.895,26,0.506,31,0.711,40,0.109,41,0.446,54,0.952,61,0.355,69,1.218,71,0.017,72,0.109,73,0.349,74,1.127,92,0.596,94,0.952,115,1.052,118,0.599,125,2.609,134,0.765,144,1.288,147,1.755,148,0.959,153,0.308,155,1.366,156,0.132,165,0.076,166,0.144,168,1.029,173,1.797,177,1.167,192,1.181,198,1.347,208,2.584,212,1.366,213,2.003,214,2.327,215,2.55,222,1.626,248,1.298,273,0.778,300,1.051,312,0.485,322,0.485,323,1.466,327,0.007,328,0.007,341,3.899,350,3.645,369,1.518,372,2.125,374,1.218,388,3.898,397,0.528,457,2.325,475,1.155,476,1.934,492,1.456,521,1.218,524,2.266,527,1.046,540,1.366,559,1.561,562,1.687,563,3.222,567,3.222,569,2.429,571,1.583,572,0.586,574,0.871,581,1.243,604,0.952,616,1.288,628,1.098,634,1.155,639,0.91,645,2.205,666,4.524,708,2.439,726,1.218,753,3.938,814,0.997,834,3.006,835,2.205,846,1.687,862,1.098,873,0.997,878,2.609,886,0.997,955,2.429,959,2.981,1014,1.155,1016,2.205,1020,2.44,1022,2.126,1039,1.298,1047,1.366,1050,1.155,1065,2.459,1077,3.599,1130,1.561,1145,1.288,1147,1.218,1159,2.981,1160,1.218,1161,1.366,1162,1.687,1163,3.975,1164,3.975,1165,3.975,1166,3.975,1167,3.975,1168,3.975,1169,3.975,1170,3.975,1171,3.975,1172,3.975,1173,3.975,1174,3.975,1175,3.975,1176,3.975,1177,3.975,1178,3.975,1179,3.975,1180,3.975,1181,3.975,1182,3.975,1183,3.975,1184,3.975,1185,4.307,1186,2.871,1187,2.003,1188,1.687,1189,2.003,1190,2.981,1191,1.687,1192,2.003,1193,1.456,1194,1.687,1195,2.429,1196,3.644,1197,2.871,1198,1.845,1199,1.366,1200,4.307,1201,2.126,1202,2.871,1203,1.845,1204,3.99,1205,2.981,1206,4.454,1207,2.429,1208,1.218,1209,2.126,1210,1.845,1211,1.561,1212,5.673,1213,1.366,1214,3.222,1215,2.266,1216,1.366,1217,1.561,1218,1.845,1219,1.687,1220,1.845,1221,1.845,1222,2.429,1223,1.845,1224,2.871,1225,1.845,1226,1.845,1227,1.456,1228,3.938,1229,2.871,1230,5.221,1231,3.523,1232,3.523,1233,1.845,1234,5.187,1235,2.429,1236,1.845,1237,1.687,1238,1.845,1239,1.845,1240,1.845,1241,1.687,1242,1.687,1243,3.222,1244,3.523,1245,3.757,1246,3.599,1247,3.322,1248,4.56,1249,3.975,1250,4.138,1251,3.975,1252,4.766,1253,3.364,1254,4.353,1255,4.353,1256,4.56,1257,1.845,1258,3.975,1259,5.168,1260,4.76,1261,4.307,1262,1.845,1263,2.126,1264,1.687,1265,4.307,1266,1.561,1267,3.523,1268,1.687,1269,5.056,1270,1.845,1271,2.871,1272,3.222,1273,1.845,1274,3.364,1275,3.222,1276,1.845,1277,2.266,1278,2.625,1279,1.845,1280,1.845,1281,1.845,1282,1.845,1283,3.757,1284,1.561,1285,1.687,1286,2.981,1287,1.845,1288,1.561,1289,2.981,1290,1.845,1291,3.523,1292,1.845,1293,3.523,1294,1.845,1295,1.845,1296,1.845,1297,2.781,1298,1.845,1299,1.845,1300,2.625,1301,2.625,1302,3.523,1303,1.687,1304,2.871,1305,1.845,1306,1.845,1307,3.222,1308,3.858,1309,2.871,1310,1.366,1311,4.56,1312,1.845,1313,3.635,1314,2.871,1315,1.845,1316,1.845,1317,1.845,1318,1.456,1319,1.687,1320,1.845,1321,1.845,1322,4.922,1323,1.845,1324,1.561,1325,2.871,1326,1.845,1327,1.845,1328,1.845,1329,1.845,1330,1.845,1331,1.845,1332,1.845,1333,1.845,1334,1.845,1335,1.845,1336,1.845,1337,1.845,1338,1.845,1339,1.845,1340,2.429,1341,1.845,1342,1.845,1343,1.845,1344,1.845,1345,1.845,1346,1.845,1347,1.456,1348,1.845,1349,1.845,1350,1.845,1351,1.845,1352,5.168,1353,1.845,1354,1.845,1355,1.845,1356,1.845,1357,1.845,1358,1.845,1359,1.845,1360,1.845,1361,1.845,1362,1.845,1363,3.523,1364,2.871,1365,1.845,1366,1.845,1367,3.975,1368,4.56,1369,1.845,1370,1.845,1371,1.845,1372,3.523,1373,3.523,1374,1.845,1375,1.845,1376,1.845,1377,1.845,1378,1.366,1379,1.845,1380,3.975,1381,1.845,1382,1.845,1383,1.845,1384,2.871,1385,1.845,1386,1.687,1387,1.845,1388,1.845,1389,1.845,1390,1.845,1391,1.845,1392,1.845,1393,1.845,1394,2.003,1395,1.845,1396,1.687,1397,1.845,1398,3.523,1399,1.845,1400,1.845,1401,1.845,1402,1.845,1403,1.845,1404,1.845,1405,1.845,1406,1.845,1407,1.845,1408,1.366,1409,1.845,1410,1.456,1411,1.845,1412,2.871,1413,1.845,1414,1.845,1415,2.871,1416,1.845,1417,1.561,1418,1.687,1419,1.845,1420,1.845,1421,1.845,1422,1.687,1423,1.845,1424,1.845,1425,1.845,1426,1.561,1427,1.845,1428,1.845,1429,1.845,1430,1.687,1431,1.845,1432,3.364,1433,1.845,1434,1.366,1435,1.687,1436,1.845,1437,1.456,1438,1.845,1439,1.845,1440,2.266,1441,1.845,1442,2.871,1443,1.845,1444,3.137,1445,1.845,1446,2.871,1447,1.845,1448,1.845,1449,1.845,1450,2.871,1451,1.845,1452,1.845,1453,0.766,1454,1.687,1455,1.845,1456,1.456,1457,1.687,1458,1.687,1459,1.687,1460,1.687,1461,1.687,1462,1.845,1463,1.845,1464,1.561,1465,1.845,1466,1.845,1467,1.845]],["title/injectables/ConfigService.html",[590,0.468,1468,2.195]],["body/injectables/ConfigService.html",[3,0.152,4,0.152,9,0.171,13,0.274,21,2.332,27,0.953,40,0.191,41,0.547,51,0.682,61,0.934,66,0.985,71,0.017,72,0.327,73,0.318,76,0.953,78,2.129,79,0.754,83,1.183,85,0.864,114,1.643,118,0.646,134,1.037,135,1.195,153,0.309,156,0.232,165,0.133,166,0.253,168,1.166,177,1.306,316,1.398,327,0.011,328,0.011,334,3.938,397,0.927,398,3.224,514,2.557,541,2.553,576,1.792,590,0.682,592,2.849,599,2.739,600,1.139,607,2.227,648,1.403,764,3.947,766,5.175,886,2.797,1026,2.963,1038,4.863,1039,2.697,1062,4.084,1208,3.416,1227,4.465,1297,3.407,1347,4.782,1437,4.084,1468,3.832,1469,3.612,1470,4.811,1471,4.853,1472,5.409,1473,5.409,1474,5.409,1475,4.309,1476,6.668,1477,6.668,1478,6.668,1479,5.562,1480,4.176,1481,3.947,1482,3.652,1483,6.406,1484,6.178,1485,4.316,1486,5.768,1487,4.811,1488,3.407,1489,5.562,1490,5.562,1491,5.562,1492,4.176,1493,4.176,1494,5.562,1495,4.176,1496,4.811,1497,5.562,1498,4.176,1499,5.562,1500,5.562,1501,5.768,1502,5.562,1503,4.176,1504,4.379,1505,5.562,1506,4.811,1507,5.562,1508,4.176,1509,5.562,1510,6.254,1511,5.562,1512,4.176,1513,4.176,1514,3.612,1515,4.176]],["title/components/DownloadComponentComponent.html",[0,0.157,272,0.884]],["body/components/DownloadComponentComponent.html",[0,0.268,1,0.577,2,0.825,3,0.087,4,0.087,5,0.696,6,0.839,7,0.553,8,0.553,9,0.203,13,0.365,15,1.007,16,2.136,18,3.647,19,1.738,21,2.155,25,0.791,26,1.64,27,1.321,28,0.429,29,1.118,31,0.374,32,0.934,33,3.234,34,1.468,35,0.577,38,0.934,40,0.235,41,0.365,51,0.456,54,2.058,61,0.555,63,4.18,64,2.838,65,3.255,66,0.89,70,0.804,71,0.017,72,0.281,73,0.327,74,0.732,75,3.647,76,0.881,78,1.423,79,0.905,80,1.099,83,1.094,85,0.7,86,3.234,91,2.373,92,0.838,94,1.488,95,1.716,96,1.805,100,1.07,101,2.44,106,1.304,113,2.638,114,0.825,115,2.161,116,2.155,118,0.592,129,1.883,130,0.973,132,1.82,133,1.91,134,0.681,135,0.392,137,4.572,138,1.195,144,2.013,148,0.853,150,3.868,151,2.013,153,0.383,156,0.133,157,3.234,158,1.162,159,1.465,163,0.739,164,1.571,165,0.164,166,0.145,167,0.902,168,1.067,173,1.805,177,0.921,178,1.698,179,3.234,182,1.052,183,1.225,187,1.225,192,1.283,198,0.726,208,1.052,212,2.619,213,2.468,214,1.003,215,1.745,217,1.857,246,3.647,247,2.468,248,1.599,255,2.214,256,2.334,257,0.531,258,0.86,259,0.626,260,1.346,261,0.626,262,0.626,263,0.577,264,0.626,265,0.577,266,0.973,267,0.601,268,0.626,269,0.577,270,0.626,271,0.626,272,1.363,273,1.293,274,0.973,275,0.577,276,0.531,277,0.626,278,0.577,279,0.626,280,0.577,281,0.626,282,0.577,283,0.626,284,1.189,285,0.626,286,0.553,287,0.531,288,0.626,289,0.577,290,0.626,291,0.577,292,0.626,293,0.626,294,0.577,295,0.626,296,0.577,297,0.626,298,0.577,299,0.601,300,0.41,301,0.626,302,0.601,303,1.193,304,0.577,305,0.626,306,0.577,307,0.601,308,0.626,309,0.577,310,0.626,311,0.577,312,0.758,313,0.626,314,0.577,315,0.577,316,0.601,317,0.626,318,0.601,319,0.626,320,0.577,321,0.626,322,0.488,323,0.509,324,0.553,325,0.626,326,0.626,327,0.007,328,0.007,343,2.619,346,1.559,360,1.488,366,2.26,369,0.709,376,1.197,400,1.805,420,2.545,433,0.626,444,1.805,457,1.225,465,2.993,469,4.18,508,1.375,537,1.559,571,1.408,572,0.48,573,2.57,576,0.771,579,3.171,580,3.171,586,2.013,589,2.013,592,1.904,594,1.361,596,3.652,601,3.893,629,1.698,674,2.884,675,3.652,699,2.069,707,2.013,717,3.442,718,2.136,719,2.136,720,2.276,729,2.44,738,1.805,754,2.276,767,1.225,798,3.537,837,2.44,853,2.44,855,2.638,856,2.638,857,2.638,858,2.638,882,3.442,918,2.013,932,2.638,954,2.276,957,1.857,983,1.698,1020,2.26,1039,1.304,1073,4.226,1080,2.136,1083,1.805,1084,2.638,1145,2.468,1146,1.571,1147,1.225,1199,1.375,1245,2.276,1247,2.783,1266,1.571,1274,1.571,1283,1.465,1310,2.953,1440,2.792,1444,2.276,1453,0.771,1456,1.465,1464,2.993,1481,2.638,1516,4.962,1517,5.426,1518,5.426,1519,1.698,1520,3.215,1521,5.272,1522,5.065,1523,2.44,1524,2.44,1525,3.215,1526,5.095,1527,2.884,1528,2.884,1529,3.942,1530,3.942,1531,4.445,1532,4.445,1533,4.445,1534,3.716,1535,3.716,1536,4.445,1537,3.716,1538,3.716,1539,2.884,1540,2.392,1541,2.392,1542,2.392,1543,3.215,1544,3.215,1545,3.215,1546,3.215,1547,2.392,1548,3.647,1549,4.445,1550,3.215,1551,2.392,1552,4.814,1553,2.392,1554,2.392,1555,2.884,1556,3.215,1557,4.814,1558,5.095,1559,2.392,1560,3.215,1561,3.988,1562,2.392,1563,2.392,1564,3.215,1565,2.44,1566,2.884,1567,2.638,1568,1.698,1569,2.069,1570,3.537,1571,2.884,1572,2.069,1573,1.375,1574,3.654,1575,1.225,1576,3.215,1577,3.942,1578,3.942,1579,2.069,1580,2.069,1581,2.069,1582,4.572,1583,2.069,1584,2.069,1585,2.069,1586,2.069,1587,1.698,1588,2.069,1589,2.069,1590,2.069,1591,2.069,1592,2.069,1593,2.069,1594,1.571,1595,2.069,1596,2.069,1597,1.465,1598,2.069,1599,2.069,1600,2.069,1601,2.069,1602,2.069,1603,2.069,1604,2.069,1605,2.069,1606,2.069,1607,3.942,1608,2.069,1609,3.234,1610,2.069,1611,2.069,1612,2.069,1613,2.069,1614,2.069,1615,2.069,1616,2.069,1617,1.857,1618,2.069,1619,3.942,1620,2.069,1621,2.069,1622,2.069,1623,2.069,1624,2.069,1625,1.857,1626,2.069,1627,2.069,1628,2.069,1629,3.215,1630,2.069,1631,2.069,1632,2.069,1633,2.069,1634,3.942,1635,2.069,1636,2.069,1637,2.069,1638,2.069,1639,2.069,1640,2.069,1641,3.215,1642,2.069,1643,4.445,1644,1.857,1645,3.215,1646,2.44,1647,2.884,1648,2.884,1649,2.069,1650,2.069,1651,2.069,1652,2.069,1653,1.857,1654,1.857,1655,2.069,1656,2.069,1657,2.069,1658,2.069,1659,2.069,1660,2.069,1661,4.814,1662,2.069,1663,2.069,1664,2.069,1665,2.069,1666,2.069,1667,2.884,1668,2.069,1669,2.069,1670,5.646,1671,2.069,1672,2.069,1673,1.465,1674,2.069,1675,1.571,1676,1.698,1677,2.069,1678,1.698,1679,2.069,1680,2.069,1681,1.857,1682,2.069,1683,2.069,1684,2.069,1685,3.215,1686,2.069,1687,2.069,1688,2.069,1689,2.069,1690,2.069,1691,2.069,1692,2.069,1693,2.069,1694,2.069,1695,3.215,1696,2.069,1697,2.069,1698,2.069,1699,2.069,1700,3.716]],["title/interfaces/Expense.html",[29,0.598,572,0.493]],["body/interfaces/Expense.html",[3,0.128,4,0.128,9,0.096,13,0.23,15,1.141,16,2.34,21,2.843,25,1.052,28,0.63,29,1.258,31,0.55,40,0.161,41,0.486,64,2.282,71,0.017,72,0.226,73,0.342,74,1.043,76,0.602,77,2.595,79,0.67,83,0.748,85,0.747,91,3.13,92,0.665,100,1.225,111,1.8,114,0.78,115,2.157,116,2.981,118,0.654,129,2.647,132,1.527,133,1.559,141,3.215,153,0.317,156,0.195,165,0.158,166,0.213,167,0.917,168,0.525,177,1.359,182,2.727,183,3.177,187,3.177,192,1.3,193,2.308,195,2.494,198,1.361,247,2.677,248,1.734,253,3.896,255,2.401,256,2.532,327,0.01,328,0.01,335,1.346,369,1.838,376,1.132,397,0.78,410,1.921,433,0.92,436,1.287,438,1.287,446,2.389,448,1.407,463,2.073,474,1.623,476,1.496,513,2.272,514,1.734,571,1.086,572,0.738,574,1.287,576,1.592,577,2.84,579,1.707,580,2.401,581,2.085,585,1.734,586,1.903,588,3.245,589,1.903,590,0.606,591,1.707,595,2.401,599,1.233,600,0.959,602,2.153,605,1.707,606,2.282,607,1.407,608,1.979,609,1.707,610,2.073,612,1.661,613,2.02,614,3.293,616,1.903,620,2.02,621,2.153,622,3.565,623,2.153,624,2.02,625,2.494,627,3.285,628,1.623,633,3.502,634,2.401,637,3.027,639,2.375,640,3.508,641,2.02,643,3.245,701,2.532,708,1.661,717,3.096,718,3.756,719,3.756,720,3.799,723,2.02,738,3.383,765,1.707,767,3.472,822,2.727,852,2.153,862,2.282,865,2.401,871,4.811,872,2.282,877,1.407,887,2.153,894,2.308,895,2.308,903,2.494,904,2.153,909,2.308,923,2.494,984,1.346,1013,1.8,1051,2.494,1083,1.707,1378,2.02,1453,1.132,1524,3.245,1587,2.494,1594,4.292,1597,4.613,1701,2.727,1702,5.654,1703,5.654,1704,4.275,1705,3.04,1706,3.04,1707,3.245,1708,2.727,1709,2.727,1710,2.727,1711,2.727,1712,2.727,1713,2.727,1714,2.727,1715,2.727,1716,2.727,1717,3.04,1718,2.727,1719,4.275,1720,3.04,1721,3.04,1722,3.04,1723,3.04,1724,3.04,1725,3.04,1726,3.04,1727,3.04,1728,3.04,1729,3.04,1730,3.04,1731,3.04,1732,3.04,1733,3.04,1734,4.945,1735,3.04,1736,4.945,1737,3.04,1738,2.727,1739,3.04,1740,3.04,1741,3.04,1742,4.945,1743,3.04,1744,3.04,1745,3.04,1746,3.04,1747,4.275,1748,3.04]],["title/components/ExpenseDetailsModalComponent.html",[0,0.157,275,0.921]],["body/components/ExpenseDetailsModalComponent.html",[0,0.269,1,0.697,2,1.257,3,0.105,4,0.105,5,0.803,7,0.669,8,0.669,9,0.079,13,0.335,15,0.991,16,1.442,18,4.019,19,1.714,21,2.888,23,2.198,24,2.621,25,0.615,26,1.67,27,1.345,28,0.518,29,1.237,30,1.718,31,0.672,32,1.078,33,3.632,34,1.649,35,1.365,38,1.078,40,0.132,41,0.422,48,3.971,51,0.526,54,2.268,55,3.711,61,0.432,62,2.5,63,4.498,66,0.961,70,0.672,71,0.017,72,0.29,73,0.321,74,0.611,75,3.632,76,0.735,79,0.582,80,0.697,83,0.913,85,0.723,86,3.632,91,3.18,92,0.854,94,1.718,95,1.981,96,2.751,97,3.711,100,1.247,102,3.045,103,3.019,106,1.986,110,3.711,114,0.952,115,1.958,116,2.888,118,0.461,129,2.605,130,1.124,133,1.078,134,0.904,135,0.839,144,2.324,146,3.079,147,1.078,148,0.958,153,0.336,156,0.238,157,2.051,158,1.404,161,2.051,162,2.5,163,0.893,165,0.092,166,0.175,167,0.554,173,2.084,178,2.051,179,4.293,182,1.887,183,1.48,184,3.711,187,1.48,189,2.5,190,2.243,192,0.495,243,3.33,246,4.784,247,3.433,248,2.525,249,3.711,250,3.33,251,4.019,252,4.019,253,2.466,254,3.711,255,3.079,256,3.247,257,0.641,258,0.993,259,0.757,260,1.483,261,0.757,262,0.757,263,0.697,264,0.757,265,0.697,266,1.124,267,0.726,268,0.757,269,0.697,270,0.757,271,0.757,272,0.669,273,0.495,274,1.124,275,1.528,276,1.773,277,0.757,278,0.697,279,0.757,280,0.697,281,0.757,282,0.697,283,0.757,284,0.669,285,0.757,286,0.669,287,0.641,288,0.757,289,0.697,290,0.757,291,0.697,292,0.757,293,0.757,294,0.697,295,0.757,296,0.697,297,0.757,298,0.697,299,0.726,300,0.495,301,0.757,302,0.726,303,1.34,304,0.697,305,0.757,306,0.697,307,0.726,308,0.757,309,0.697,310,0.757,311,0.697,312,0.875,313,0.757,314,0.697,315,0.697,316,0.726,317,0.757,318,0.726,319,0.757,320,0.697,321,0.757,322,0.59,323,0.615,324,0.669,325,0.757,326,0.757,327,0.009,328,0.009,335,1.643,360,1.718,369,1.272,433,1.483,436,1.572,443,2.817,446,1.442,450,3.323,475,2.084,476,1.035,479,2.817,480,2.628,484,2.466,490,1.572,595,3.188,635,2.084,645,2.084,675,4.136,680,3.361,693,5.233,748,2.817,759,3.33,854,3.33,860,3.045,886,2.375,933,4.129,934,3.468,943,2.084,946,2.466,964,4.019,971,4.426,982,3.468,984,1.106,1648,3.33,1707,2.817,1749,5.818,1750,5.818,1751,6.484,1752,2.5,1753,7.007,1754,3.045,1755,3.33,1756,4.29,1757,4.29,1758,4.29,1759,5.117,1760,5.663,1761,5.663,1762,5.663,1763,5.663,1764,6.05,1765,5.117,1766,6.399,1767,4.29,1768,4.29,1769,3.711,1770,2.89,1771,2.89,1772,2.817,1773,2.89,1774,2.89,1775,4.498,1776,3.33,1777,2.89,1778,4.29,1779,2.89,1780,5.663,1781,2.89,1782,3.33,1783,2.89,1784,2.89,1785,2.89,1786,2.89,1787,2.89,1788,4.29,1789,2.89,1790,3.711,1791,2.89,1792,4.29,1793,2.89,1794,2.89,1795,2.89,1796,2.89,1797,2.89,1798,2.89,1799,2.89,1800,2.89,1801,2.89,1802,2.89,1803,5.117,1804,2.89,1805,2.89,1806,2.89,1807,2.89,1808,2.89,1809,2.89,1810,2.89,1811,2.89,1812,2.89,1813,4.29,1814,4.29,1815,4.29,1816,4.29,1817,4.29,1818,4.29,1819,4.29]],["title/components/ExpenseListComponent.html",[0,0.157,278,0.921]],["body/components/ExpenseListComponent.html",[0,0.238,1,0.871,2,1.118,3,0.132,4,0.132,5,0.943,7,0.836,8,0.836,9,0.099,13,0.412,15,0.826,16,2.219,19,0.871,25,0.769,26,1.7,27,1.37,28,0.647,29,1.251,30,2.018,31,0.789,32,1.266,34,1.87,35,0.871,38,1.266,40,0.165,51,0.618,61,0.867,66,0.906,70,0.908,71,0.017,72,0.302,73,0.313,74,0.827,76,0.864,80,0.871,83,1.072,85,0.692,92,0.586,96,2.448,99,2.448,100,0.592,101,3.309,103,2.867,106,2.036,115,2.068,118,0.627,130,1.32,134,0.54,135,0.592,147,1.578,153,0.28,156,0.2,163,1.116,165,0.115,166,0.219,167,0.65,177,0.903,192,1.262,198,1.134,214,1.515,215,1.383,257,0.802,258,1.166,259,0.946,260,1.644,261,0.946,262,0.946,263,0.871,264,0.946,265,0.871,266,1.32,267,0.908,268,0.946,269,0.871,270,0.946,271,0.946,272,0.836,273,0.619,274,1.32,275,0.871,276,0.802,277,0.946,278,1.726,279,0.946,280,0.871,281,0.946,282,0.871,283,0.946,284,0.836,285,0.946,286,0.836,287,0.802,288,0.946,289,0.871,290,0.946,291,0.871,292,0.946,293,0.946,294,0.871,295,0.946,296,0.871,297,0.946,298,0.871,299,0.908,300,1.203,301,0.946,302,0.908,303,1.52,304,0.871,305,0.946,306,0.871,307,0.908,308,0.946,309,0.871,310,0.946,311,0.871,312,1.028,313,0.946,314,0.871,315,0.871,316,0.908,317,0.946,318,0.908,319,0.946,320,0.871,321,0.946,322,0.737,323,0.769,324,0.836,325,0.946,326,0.946,327,0.01,328,0.01,339,3.126,346,2.113,369,1.494,433,1.644,450,2.327,581,1.95,594,1.846,604,2.018,611,2.448,662,1.929,663,2.213,664,3.81,673,3.554,680,3.725,707,1.957,708,2.406,725,2.564,744,2.434,751,2.896,755,1.447,757,3.911,759,3.911,765,2.448,769,3.576,777,3.126,778,5.02,779,3.126,780,3.126,781,3.126,782,3.126,783,3.126,789,2.804,828,4.359,837,3.309,853,3.309,854,3.911,866,3.911,870,3.608,904,2.213,933,3.846,943,2.448,946,2.896,964,3.554,982,3.846,1056,2.896,1083,3.05,1199,2.077,1504,3.309,1523,3.309,1567,3.576,1673,2.213,1749,5.556,1750,5.556,1755,3.911,1775,3.576,1820,6.192,1821,3.126,1822,4.359,1823,5.803,1824,3.576,1825,5.039,1826,5.039,1827,5.039,1828,5.039,1829,5.039,1830,5.039,1831,6.603,1832,5.039,1833,3.613,1834,4.359,1835,3.613,1836,5.039,1837,3.613,1838,5.039,1839,3.613,1840,3.613,1841,5.039,1842,5.039,1843,3.613,1844,3.613,1845,3.613,1846,3.613,1847,3.613,1848,3.126,1849,6.278,1850,3.613,1851,4.359,1852,5.039,1853,5.039,1854,4.504,1855,5.803,1856,5.039,1857,3.613,1858,3.911,1859,3.613,1860,3.613,1861,2.804,1862,2.804,1863,2.804,1864,2.804,1865,2.804,1866,2.804,1867,2.804,1868,2.804,1869,2.804,1870,2.804,1871,3.613,1872,3.613,1873,3.613,1874,3.613,1875,3.126,1876,5.803,1877,3.126,1878,5.803,1879,3.613,1880,5.039,1881,3.613,1882,3.613,1883,3.613,1884,3.613,1885,3.613,1886,5.039]],["title/injectables/ExpenseService.html",[64,1.764,590,0.468]],["body/injectables/ExpenseService.html",[3,0.12,4,0.12,9,0.09,13,0.448,15,1.145,16,2.503,21,1.975,25,1.28,28,1.078,29,1.259,31,0.737,40,0.15,51,0.577,61,0.491,64,2.778,66,0.918,70,1.038,71,0.017,72,0.313,73,0.304,74,0.995,76,0.807,77,2.826,79,0.816,83,1.002,85,0.832,91,2.175,92,0.771,100,1.183,111,2.412,114,1.045,115,2.171,116,2.78,118,0.644,129,2.333,132,1.015,133,1.716,141,2.941,153,0.306,156,0.182,165,0.15,166,0.199,167,0.901,168,0.823,177,1.344,182,1.444,183,1.682,187,1.682,192,1.286,193,2.156,195,2.33,198,1.335,247,1.779,248,1.152,253,3.81,255,1.595,256,1.682,327,0.009,328,0.009,335,1.803,369,1.965,376,1.517,397,0.729,410,2.348,433,1.233,436,1.725,438,1.725,446,2.503,448,1.886,463,1.377,474,2.175,476,1.328,513,2.501,514,2.11,571,1.015,572,0.608,576,1.058,577,1.887,579,2.288,580,2.922,581,1.583,585,1.152,586,2.551,588,3.95,589,2.551,590,0.577,591,1.595,595,3.22,599,1.652,600,0.896,602,2.885,605,2.922,606,2.175,607,1.315,608,1.886,609,1.595,610,2.523,612,2.022,613,3.457,614,3.22,616,2.551,620,2.707,621,3.373,622,3.457,623,2.011,624,1.887,625,2.33,627,3.165,628,2.175,633,3.901,634,3.094,637,2.885,639,2.303,640,3.342,641,2.707,643,3.093,648,1.104,650,2.011,701,3.082,708,1.104,717,3.59,718,3.924,719,3.924,720,3.901,723,2.707,738,3.393,765,2.288,767,2.821,822,2.548,852,2.885,862,1.516,865,1.595,871,3.908,872,1.516,877,1.315,887,2.885,894,2.156,895,2.156,903,2.33,904,2.011,909,3.093,923,2.33,984,1.257,1013,2.412,1051,3.342,1083,2.288,1378,2.707,1453,1.517,1524,3.95,1587,2.33,1594,3.093,1597,4.595,1701,2.548,1702,4.074,1703,4.074,1704,2.84,1705,2.84,1706,4.074,1707,3.95,1708,3.655,1709,3.655,1710,3.655,1711,4.669,1712,2.548,1713,2.548,1714,2.548,1715,2.548,1716,2.548,1717,4.074,1718,3.655,1719,4.074,1720,2.84,1721,2.84,1722,2.84,1723,2.84,1724,2.84,1725,2.84,1726,2.84,1727,2.84,1728,2.84,1729,2.84,1730,2.84,1731,2.84,1732,2.84,1733,2.84,1734,4.764,1735,4.074,1736,4.764,1737,4.074,1738,2.548,1739,4.074,1740,4.074,1741,2.84,1742,4.764,1743,2.84,1744,2.84,1745,2.84,1746,2.84,1747,4.074,1748,2.84,1887,4.71,1888,4.71,1889,3.284,1890,3.284,1891,3.284,1892,3.284,1893,3.284,1894,3.284,1895,3.284,1896,3.284,1897,3.284]],["title/components/ExpenseWiseComponent.html",[0,0.157,280,0.921]],["body/components/ExpenseWiseComponent.html",[0,0.276,1,1.548,2,1.159,3,0.139,4,0.139,5,0.978,7,0.88,8,0.88,9,0.104,11,2.952,13,0.421,19,0.917,24,2.675,25,0.81,26,1.706,27,1.38,28,0.682,29,1.151,30,2.091,31,0.817,32,1.312,34,1.921,35,0.917,38,1.312,40,0.174,41,0.513,51,0.64,54,2.57,61,0.959,66,0.897,68,2.33,70,0.933,71,0.017,72,0.318,73,0.294,74,0.849,79,0.708,80,0.917,85,0.575,92,0.607,94,2.091,95,2.411,96,2.537,100,0.623,107,2.828,114,1.323,118,0.425,126,2.186,130,1.368,134,0.78,135,0.856,146,2.537,148,0.978,153,0.428,154,2.498,156,0.29,163,1.175,165,0.121,166,0.23,167,0.674,168,0.78,222,2.296,257,0.844,258,1.208,259,0.996,260,1.681,261,0.996,262,0.996,263,1.548,264,0.996,265,1.438,266,1.368,267,1.613,268,0.996,269,1.548,270,0.996,271,0.996,272,0.88,273,0.652,274,1.368,275,0.917,276,0.844,277,0.996,278,0.917,279,0.996,280,1.548,281,0.996,282,1.548,283,0.996,284,0.88,285,0.996,286,0.88,287,1.323,288,0.996,289,0.917,290,0.996,291,0.917,292,0.996,293,0.996,294,1.548,295,0.996,296,0.917,297,0.996,298,0.917,299,1.613,300,0.652,301,0.996,302,0.956,303,1.562,304,1.548,305,0.996,306,0.917,307,0.956,308,0.996,309,0.917,310,0.996,311,0.917,312,1.065,313,0.996,314,0.917,315,0.917,316,0.956,317,0.996,318,1.613,319,0.996,320,1.548,321,0.996,322,0.776,323,0.81,324,1.485,325,0.996,326,0.996,327,0.01,328,0.01,346,2.19,357,3.199,360,2.091,376,1.683,397,1.159,398,2.692,399,3.429,400,2.537,401,4.76,402,3.376,403,5.393,404,4.276,405,4.981,406,2.828,407,3.001,408,3.706,409,4.555,410,2.336,411,4.517,425,3.706,432,5.552,433,1.761,435,4.517,436,1.913,437,4.981,445,4.517,446,1.755,447,3.429,448,2.091,449,2.7,450,3.347,476,1.548,489,4.053,490,1.913,498,3.291,499,3.291,517,3.291,518,3.291,541,1.999,607,2.091,755,2.091,873,2.19,1067,3.23,1555,4.053,1898,6.156,1899,5.523,1900,3.291,1901,4.517,1902,5.222,1903,5.222,1904,5.158,1905,5.963,1906,5.222,1907,5.222,1908,2.7,1909,4.09,1910,5.222,1911,3.804,1912,5.222,1913,6.418,1914,3.804,1915,3.804,1916,3.804,1917,3.931,1918,3.804,1919,5.222,1920,5.222,1921,4.517,1922,3.804,1923,3.804,1924,3.804,1925,3.291,1926,3.804,1927,3.804,1928,3.804,1929,3.804,1930,3.291,1931,3.804,1932,3.804,1933,3.804,1934,3.804,1935,3.804,1936,2.7,1937,2.7,1938,3.804,1939,3.804,1940,3.804]],["title/components/FooterComponent.html",[0,0.157,282,0.921]],["body/components/FooterComponent.html",[0,0.294,1,1.101,2,1.309,3,0.26,4,0.166,5,1.293,7,1.056,8,1.056,9,0.125,13,0.387,19,1.101,25,0.972,26,1.726,27,1.394,28,0.818,29,1.023,32,1.148,35,1.101,38,1.482,40,0.209,41,0.58,61,0.682,66,0.761,70,0.715,71,0.016,72,0.299,73,0.27,74,0.65,76,1.011,79,0.8,80,1.101,83,1.255,100,0.748,114,1.532,118,0.48,130,1.544,134,0.682,135,0.748,147,1.482,153,0.327,156,0.253,165,0.146,166,0.276,167,0.589,257,1.013,258,1.364,259,1.196,260,1.808,261,1.196,262,1.196,263,1.101,264,1.196,265,1.101,266,1.544,267,1.148,268,1.196,269,1.101,270,1.196,271,1.196,272,1.056,273,0.783,274,1.544,275,1.101,276,1.013,277,1.196,278,1.101,279,1.196,280,1.101,281,1.196,282,1.765,283,1.196,284,1.056,285,1.196,286,1.056,287,1.013,288,1.196,289,1.101,290,1.196,291,1.101,292,1.196,293,1.196,294,1.101,295,1.196,296,1.101,297,1.196,298,1.101,299,1.148,300,0.783,301,1.196,302,1.148,303,1.711,304,1.101,305,1.196,306,1.101,307,1.148,308,1.196,309,1.101,310,1.196,311,1.101,312,1.203,313,1.196,314,1.101,315,1.101,316,1.148,317,1.196,318,1.148,319,1.196,320,1.101,321,1.196,322,0.931,323,0.972,324,1.056,325,1.196,326,1.196,327,0.012,328,0.012,335,2.258,346,2.473,398,2.895,610,2.895,662,2.643,702,3.873,757,4.577,764,4.9,984,1.748,1020,2.593,1208,3.021,1340,3.873,1453,2.225,1468,4.5,1470,5.102,1475,4.477,1487,5.102,1496,5.102,1575,3.021,1941,3.95,1942,7.321,1943,5.898,1944,5.102,1945,5.898,1946,5.898,1947,7.148,1948,3.95,1949,5.898,1950,3.95,1951,4.566,1952,3.95,1953,5.898,1954,5.898,1955,5.898]],["title/components/FormModelComponent.html",[0,0.157,284,0.884]],["body/components/FormModelComponent.html",[0,0.315,1,1.032,2,1.255,3,0.156,4,0.156,5,1.059,7,0.991,8,0.991,9,0.117,13,0.281,15,0.702,19,1.817,25,0.911,26,1.719,27,1.385,28,0.767,29,0.991,32,1.421,34,2.04,35,1.032,38,1.421,40,0.196,51,0.693,66,0.869,71,0.016,72,0.259,73,0.29,80,1.032,85,0.472,92,0.658,100,0.702,106,2.221,118,0.46,130,1.481,134,1.006,135,0.927,138,1.013,153,0.314,156,0.238,163,1.323,165,0.136,166,0.259,257,0.95,258,1.308,259,1.121,260,1.764,261,1.121,262,1.121,263,1.032,264,1.121,265,1.032,266,1.481,267,1.076,268,1.121,269,1.032,270,1.121,271,1.121,272,0.991,273,0.734,274,1.481,275,1.032,276,0.95,277,1.121,278,1.032,279,1.121,280,1.032,281,1.121,282,1.032,283,1.121,284,1.558,285,1.121,286,0.991,287,0.95,288,1.121,289,1.032,290,1.121,291,1.032,292,1.121,293,1.121,294,1.032,295,1.121,296,1.032,297,1.121,298,1.032,299,1.076,300,0.734,301,1.121,302,1.076,303,1.658,304,1.032,305,1.121,306,1.032,307,1.076,308,1.121,309,1.032,310,1.121,311,1.032,312,1.154,313,1.121,314,1.032,315,1.032,316,1.076,317,1.121,318,1.076,319,1.121,320,1.032,321,1.121,322,0.873,323,0.911,324,0.991,325,1.121,326,1.121,327,0.011,328,0.011,346,2.371,372,2.579,385,3.464,450,3.438,457,3.45,479,3.713,543,4.013,594,2.072,631,2.747,662,2.165,675,4.518,702,3.713,729,3.713,814,3.215,851,3.039,933,3.464,934,4.125,943,2.747,946,3.25,964,3.878,969,3.464,971,4.817,982,4.125,1247,3.648,1268,4.013,1310,4.279,1568,4.97,1769,4.892,1775,4.013,1776,5.227,1782,4.389,1956,6.057,1957,3.704,1958,4.389,1959,5.655,1960,5.655,1961,5.655,1962,6.735,1963,6.332,1964,4.282,1965,3.713,1966,4.013,1967,4.282,1968,5.655,1969,4.282,1970,4.892,1971,4.389,1972,4.282,1973,5.655,1974,4.892,1975,3.464,1976,4.892,1977,4.282]],["title/injectables/GeminiApiService.html",[353,2.711,590,0.468]],["body/injectables/GeminiApiService.html",[3,0.116,4,0.116,9,0.087,13,0.389,15,0.972,16,2.509,17,2.648,21,2.487,28,0.571,29,1.19,40,0.146,41,0.453,51,0.565,61,0.688,64,3.199,66,0.812,70,0.847,71,0.017,72,0.248,73,0.288,74,0.771,76,0.79,79,0.89,83,0.98,85,0.763,91,2.739,103,1.845,106,1.616,115,1.866,118,0.608,129,2.173,133,1.801,134,0.476,135,0.522,138,1.265,153,0.398,156,0.256,165,0.173,166,0.279,167,0.847,168,1.035,177,1.241,183,3.038,187,3.038,192,1.303,208,2.026,214,1.932,215,2.072,255,1.547,256,1.631,287,1.201,327,0.011,328,0.009,330,3.617,332,1.83,333,4.707,334,3.793,337,3.985,341,3.882,350,3.409,353,4.801,359,3.575,360,1.845,366,1.4,369,0.944,372,2.271,374,2.36,379,5.091,385,4.018,386,2.755,388,2.648,394,2.091,397,1.022,429,3.548,462,3.633,467,4.209,471,5.152,502,1.725,510,1.951,514,1.616,515,1.932,540,1.83,572,0.411,579,1.547,580,1.547,590,0.727,592,2.36,596,2.648,599,2.081,600,1.257,604,1.275,610,1.932,612,1.994,631,1.547,635,2.238,648,1.07,663,4.536,738,1.547,751,3.409,755,1.275,833,4.133,834,1.725,835,2.238,837,2.091,853,2.091,855,2.26,856,2.26,857,2.26,858,2.26,885,2.26,900,1.932,914,2.091,970,2.471,984,1.219,1009,3.554,1014,3.057,1017,5.091,1018,4.201,1020,2.026,1022,3.981,1023,4.603,1026,3.269,1027,3.575,1028,3.025,1033,3.575,1037,2.471,1039,1.616,1044,4.201,1045,4.201,1046,4.201,1047,3.409,1049,3.269,1053,3.841,1060,3.575,1065,1.725,1073,1.951,1077,3.315,1083,2.238,1101,4.201,1106,3.575,1107,3.888,1121,2.471,1126,3.575,1129,2.26,1135,3.025,1138,2.26,1144,3.575,1145,3.213,1146,3.025,1147,3.038,1148,3.269,1149,3.575,1150,3.269,1152,3.575,1153,4.201,1154,3.575,1155,3.575,1156,3.575,1158,2.471,1201,4.256,1481,2.26,1573,1.83,1594,3.895,1646,2.091,1647,2.471,1667,5.747,1754,3.269,1851,2.755,1978,5.675,1979,2.471,1980,4.607,1981,5.931,1982,4.607,1983,5.131,1984,5.931,1985,5.413,1986,5.931,1987,4.607,1988,2.471,1989,4.607,1990,4.607,1991,3.185,1992,5.931,1993,6.293,1994,3.185,1995,3.575,1996,6.293,1997,3.985,1998,5.931,1999,4.884,2000,5.413,2001,4.607,2002,3.185,2003,4.607,2004,3.185,2005,3.185,2006,3.185,2007,3.185,2008,3.185,2009,4.607,2010,3.185,2011,4.607,2012,3.185,2013,3.185,2014,2.755,2015,3.185,2016,3.185,2017,3.185,2018,2.471,2019,4.607,2020,3.185,2021,4.607,2022,2.755,2023,3.185,2024,2.755,2025,3.985,2026,4.607,2027,3.185,2028,3.185,2029,3.185,2030,3.185,2031,3.185,2032,3.185,2033,3.185,2034,4.607,2035,3.185,2036,3.185,2037,3.185,2038,3.985,2039,3.985,2040,4.607,2041,5.413,2042,3.185,2043,3.185,2044,3.185,2045,3.185,2046,3.185,2047,3.185,2048,3.185,2049,3.185,2050,3.185,2051,3.185,2052,2.755,2053,2.755,2054,3.185,2055,3.185,2056,3.185,2057,3.185,2058,3.985,2059,3.185,2060,3.185,2061,2.755,2062,4.607,2063,3.185,2064,2.471,2065,3.185,2066,3.185,2067,2.471,2068,3.185,2069,3.185,2070,4.607,2071,3.185,2072,3.185,2073,3.185,2074,3.185]],["title/components/GlobalLoaderComponent.html",[0,0.157,286,0.884]],["body/components/GlobalLoaderComponent.html",[0,0.3,1,1.012,2,1.238,3,0.153,4,0.153,5,1.045,7,0.971,8,0.971,9,0.115,13,0.411,19,1.012,25,0.893,26,1.717,27,1.383,28,0.752,29,0.981,31,0.657,32,1.402,34,2.02,35,1.012,38,1.402,40,0.192,41,0.548,51,0.684,61,0.627,66,0.898,70,0.873,71,0.016,72,0.306,73,0.287,74,1.056,76,0.957,79,0.757,80,1.012,83,1.187,85,0.615,92,0.777,100,0.688,118,0.544,130,1.461,134,0.937,135,1.027,146,2.711,147,1.679,148,1.174,153,0.348,156,0.233,163,1.297,165,0.134,166,0.254,167,0.72,257,0.931,258,1.291,259,1.099,260,1.75,261,1.099,262,1.099,263,1.012,264,1.099,265,1.012,266,1.461,267,1.055,268,1.099,269,1.012,270,1.099,271,1.099,272,0.971,273,0.719,274,1.461,275,1.012,276,0.931,277,1.099,278,1.012,279,1.099,280,1.012,281,1.099,282,1.012,283,1.099,284,0.971,285,1.099,286,1.655,287,1.746,288,1.099,289,1.012,290,1.099,291,1.012,292,1.099,293,1.099,294,1.012,295,1.099,296,1.012,297,1.099,298,1.012,299,1.055,300,0.719,301,1.099,302,1.055,303,1.642,304,1.012,305,1.099,306,1.012,307,1.055,308,1.099,309,1.012,310,1.099,311,1.012,312,1.138,313,1.099,314,1.012,315,1.012,316,1.055,317,1.099,318,1.055,319,1.099,320,1.012,321,1.099,322,0.856,323,0.893,324,0.971,325,1.099,326,1.099,327,0.011,328,0.011,335,2.136,346,2.34,372,2.795,400,2.711,428,4.764,429,3.914,438,2.044,484,3.84,490,2.044,496,3.664,502,3.953,509,2.756,510,2.57,537,2.34,774,3.664,835,3.601,872,2.577,952,4.093,984,1.607,1014,3.76,1049,3.96,1157,3.418,1209,3.84,1263,3.207,1453,1.798,1488,3.418,1858,4.331,1965,3.664,2075,6.187,2076,3.63,2077,5.58,2078,4.827,2079,4.827,2080,5.58,2081,5.58,2082,5.423,2083,4.196,2084,5.58,2085,3.96,2086,5.58,2087,4.196,2088,4.827,2089,4.827,2090,4.196,2091,4.196,2092,4.196,2093,4.196,2094,5.58]],["title/injectables/GlobalLoaderService.html",[429,1.956,590,0.468]],["body/injectables/GlobalLoaderService.html",[0,0.319,3,0.184,4,0.184,9,0.138,13,0.449,40,0.231,41,0.618,51,0.771,66,0.925,70,0.984,71,0.016,72,0.288,73,0.313,74,1.097,76,1.228,79,0.853,85,0.754,92,0.874,118,0.557,128,3.613,134,0.755,135,0.828,147,1.58,153,0.349,156,0.28,165,0.161,166,0.305,167,0.811,168,1.023,286,1.835,287,1.753,327,0.013,328,0.013,335,2.407,372,2.407,397,1.121,428,4.838,429,3.22,484,3.613,496,4.704,501,4.369,502,4.069,503,4.369,537,2.637,590,0.771,600,1.378,648,1.698,772,4.879,835,3.741,952,3.851,1014,3.65,1050,3.054,1209,4.117,1263,3.613,1453,2.026,1488,3.851,1971,4.879,2085,4.462,2088,5.438,2089,5.438,2095,6.375,2096,4.369,2097,4.462,2098,6.287,2099,4.129,2100,5.051,2101,6.287,2102,5.051,2103,5.051,2104,5.051,2105,4.879,2106,5.051,2107,5.051,2108,5.051]],["title/components/GraphsComponent.html",[0,0.157,289,0.921]],["body/components/GraphsComponent.html",[0,0.222,1,0.542,2,0.785,3,0.082,4,0.082,5,0.662,6,0.788,7,0.52,8,0.52,9,0.062,13,0.394,15,0.717,16,2.503,19,0.542,23,1.812,24,2.242,25,0.478,26,1.629,27,1.313,28,0.402,29,1.171,30,1.417,31,1.046,32,0.889,35,0.542,36,1.718,38,0.889,40,0.103,41,0.488,51,0.434,54,1.988,61,0.528,64,2.872,66,0.952,70,0.898,71,0.017,72,0.315,73,0.353,74,0.817,78,1.901,79,0.733,80,0.542,85,0.661,89,4.414,92,0.811,94,1.988,95,2.293,100,0.94,103,1.988,106,2.106,107,1.916,114,1.454,115,1.536,116,2.609,129,1.819,130,0.926,132,1.534,133,1.853,134,0.998,135,1.194,138,0.784,141,1.633,148,1.355,153,0.3,156,0.125,159,1.376,165,0.072,166,0.136,167,0.775,168,0.335,177,1.174,192,1.325,197,1.743,198,1.173,220,1.743,248,1.742,257,0.498,258,0.818,259,0.588,260,1.676,261,0.588,262,0.588,263,0.542,264,0.588,265,0.542,266,0.926,267,0.564,268,0.588,269,0.542,270,0.588,271,0.588,272,0.52,273,0.385,274,0.926,275,0.542,276,0.498,277,0.588,278,0.542,279,0.588,280,0.542,281,0.588,282,0.542,283,0.588,284,0.52,285,0.588,286,0.52,287,0.498,288,0.588,289,1.5,290,0.588,291,0.542,292,0.588,293,0.588,294,0.542,295,0.588,296,0.542,297,0.588,298,0.542,299,0.564,300,1.029,301,0.588,302,0.564,303,1.146,304,0.542,305,0.588,306,0.542,307,0.564,308,0.588,309,0.542,310,0.588,311,0.542,312,0.722,313,0.588,314,0.542,315,0.542,316,0.564,317,0.588,318,0.564,319,0.588,320,0.542,321,0.588,322,0.458,323,0.478,324,0.52,325,0.588,326,0.588,327,0.007,328,0.007,357,2.167,366,0.987,372,2.381,402,3.022,406,3.369,419,3.396,420,2.624,427,1.943,433,0.926,479,3.26,480,2.167,490,1.296,508,1.291,526,1.743,527,2.183,537,2.609,541,1.675,571,1.773,581,1.471,660,2.51,662,1.354,663,1.376,664,4.785,669,2.167,671,3.833,673,4.361,680,2.242,681,2.745,682,3.853,702,2.323,708,2.091,717,1.916,725,2.51,726,1.812,744,2.986,754,3.308,756,1.943,790,3.396,814,1.483,850,4.192,851,2.51,877,2.404,886,1.483,899,3.106,904,2.68,943,1.718,959,2.323,1016,1.718,1056,2.033,1065,2.37,1134,2.745,1208,3.573,1215,2.167,1245,2.68,1247,2.37,1250,2.033,1278,3.833,1288,3.942,1324,2.323,1485,2.745,1646,1.475,1754,3.524,1824,2.51,1834,4.962,1854,2.745,1861,2.745,1862,2.745,1863,2.745,1864,2.745,1865,2.745,1866,2.745,1867,2.745,1868,2.745,1869,2.745,1870,2.745,2109,1.943,2110,4.965,2111,2.51,2112,3.537,2113,3.785,2114,2.745,2115,4.376,2116,4.376,2117,3.537,2118,4.376,2119,4.376,2120,4.376,2121,4.376,2122,4.376,2123,5.401,2124,5.876,2125,4.295,2126,3.06,2127,3.06,2128,3.06,2129,3.06,2130,3.537,2131,3.396,2132,4.452,2133,2.246,2134,3.537,2135,3.537,2136,3.785,2137,3.537,2138,2.246,2139,3.537,2140,2.246,2141,2.745,2142,2.246,2143,4.752,2144,3.537,2145,2.246,2146,5.737,2147,5.737,2148,3.537,2149,2.246,2150,3.537,2151,2.246,2152,3.06,2153,4.295,2154,2.246,2155,3.06,2156,2.246,2157,3.537,2158,2.246,2159,3.537,2160,3.06,2161,2.323,2162,4.376,2163,3.537,2164,4.965,2165,3.853,2166,4.387,2167,3.537,2168,3.537,2169,2.246,2170,4.376,2171,2.246,2172,3.537,2173,4.295,2174,4.376,2175,2.246,2176,5.193,2177,4.965,2178,4.376,2179,2.246,2180,4.376,2181,2.246,2182,4.376,2183,2.246,2184,4.376,2185,3.537,2186,2.246,2187,2.745,2188,3.537,2189,4.376,2190,3.547,2191,2.246,2192,4.376,2193,2.246,2194,4.376,2195,5.401,2196,5.401,2197,2.246,2198,2.246,2199,3.06,2200,3.06,2201,2.246,2202,3.785,2203,1.943,2204,1.943,2205,3.396,2206,2.246,2207,2.246,2208,2.246,2209,2.246,2210,3.853,2211,3.06,2212,1.943,2213,3.537,2214,3.06,2215,2.745,2216,6.4,2217,1.943,2218,3.537,2219,2.246,2220,3.537,2221,3.537,2222,2.246,2223,3.537,2224,4.376,2225,5.737,2226,2.246,2227,3.06,2228,4.376,2229,1.943,2230,4.376,2231,4.376,2232,2.246,2233,4.376,2234,2.246,2235,3.06,2236,1.943,2237,1.943,2238,2.246,2239,2.246,2240,4.376,2241,4.376,2242,3.537,2243,2.246,2244,4.376,2245,4.376,2246,3.537,2247,2.246,2248,2.246,2249,1.943,2250,2.246,2251,2.246,2252,2.246,2253,2.246,2254,2.246,2255,2.246,2256,2.246,2257,2.246,2258,2.246,2259,2.246,2260,2.246,2261,1.943,2262,1.943,2263,2.246,2264,2.246,2265,2.246,2266,2.246,2267,2.246,2268,2.246,2269,2.246,2270,2.246,2271,2.246,2272,2.246,2273,2.246,2274,2.246,2275,2.246,2276,2.246,2277,2.246,2278,2.246,2279,2.246,2280,2.246,2281,2.246]],["title/components/HamburgerMenuComponent.html",[0,0.157,291,0.921]],["body/components/HamburgerMenuComponent.html",[0,0.274,1,0.898,2,1.142,3,0.136,4,0.136,5,0.963,6,1.306,7,0.861,8,0.861,9,0.102,13,0.438,19,0.898,25,0.792,26,1.704,27,1.372,28,0.667,29,0.923,32,1.293,34,1.9,35,0.898,36,2.499,38,1.293,40,0.17,41,0.506,51,0.631,61,0.556,66,0.913,70,0.995,71,0.017,72,0.316,73,0.27,74,0.906,76,0.882,78,1.97,79,0.698,80,0.898,83,1.095,85,0.649,92,0.803,100,0.61,103,2.06,105,3.651,114,1.532,118,0.48,126,2.139,130,1.347,132,1.59,134,0.95,135,0.843,146,2.499,148,1.25,151,3.444,153,0.327,154,2.445,156,0.207,163,1.15,165,0.119,166,0.225,167,0.821,192,0.638,257,0.826,258,1.19,259,0.975,260,1.665,261,0.975,262,0.975,263,0.898,264,0.975,265,0.898,266,1.347,267,0.936,268,0.975,269,0.898,270,0.975,271,0.975,272,0.861,273,0.638,274,1.347,275,0.898,276,0.826,277,0.975,278,0.898,279,0.975,280,0.898,281,0.975,282,0.898,283,0.975,284,0.861,285,0.975,286,0.861,287,0.826,288,0.975,289,0.898,290,0.975,291,1.665,292,2.032,293,0.975,294,0.898,295,0.975,296,0.898,297,0.975,298,0.898,299,0.936,300,0.638,301,0.975,302,0.936,303,1.544,304,0.898,305,0.975,306,0.898,307,0.936,308,0.975,309,0.898,310,0.975,311,0.898,312,1.297,313,0.975,314,0.898,315,0.898,316,0.936,317,0.975,318,0.936,319,0.975,320,0.898,321,0.975,322,0.759,323,0.792,324,0.861,325,0.975,326,0.975,327,0.01,328,0.01,330,4.207,335,1.97,400,2.499,401,3.378,404,4.42,425,3.651,433,1.347,438,1.885,449,2.642,450,3.597,452,4.513,456,6.801,458,4.144,460,5.1,490,2.33,541,1.97,545,2.445,585,1.805,729,4.176,748,4.176,873,2.158,948,4.45,951,3.651,966,3.22,968,5.1,969,3.611,970,5.18,971,3.871,975,4.45,984,1.425,994,3.22,995,2.889,1016,2.499,1275,3.651,1318,3.895,1453,1.658,1482,3.378,1485,3.993,1565,3.378,1772,3.378,1908,2.642,1909,4.207,1936,2.642,1937,2.642,1965,3.378,1975,4.228,2282,6.237,2283,5.596,2284,3.22,2285,4.45,2286,3.993,2287,5.145,2288,5.145,2289,3.993,2290,4.513,2291,4.45,2292,5.896,2293,5.145,2294,5.896,2295,5.896,2296,3.993,2297,4.45,2298,6.36,2299,5.145,2300,3.993,2301,4.45,2302,5.145,2303,5.1,2304,5.896,2305,3.993,2306,3.723,2307,4.45,2308,3.993,2309,3.993,2310,4.45,2311,3.723,2312,5.145,2313,3.651,2314,3.723,2315,3.723,2316,6.675,2317,5.145,2318,3.723,2319,3.723,2320,2.889]],["title/injectables/HbsRenderService.html",[590,0.468,1192,2.069]],["body/injectables/HbsRenderService.html",[0,0.286,2,1.325,3,0.245,4,0.253,5,1.393,6,1.834,9,0.176,13,0.467,15,0.625,26,1.27,27,0.653,40,0.239,41,0.662,51,0.825,54,2.094,61,0.892,66,0.897,70,0.597,71,0.017,72,0.318,73,0.294,74,0.543,76,0.653,85,0.708,92,0.747,94,1.526,95,1.76,118,0.617,132,1.178,133,1.692,134,0.569,135,0.857,148,0.714,153,0.211,156,0.211,165,0.122,166,0.23,168,1.099,177,1.347,192,1.261,198,1.316,208,2.299,214,1.598,215,2.577,258,1.21,323,0.811,327,0.011,328,0.011,370,4.523,397,0.846,446,2.006,447,2.503,452,2.705,455,4.058,457,3.448,458,2.19,476,0.919,490,1.396,492,2.335,540,2.19,571,1.616,581,1.281,590,0.641,600,1.04,648,1.281,666,3.92,708,1.281,754,3.203,765,1.852,774,2.503,814,2.503,878,3.005,883,2.705,886,2.193,900,2.193,943,2.54,946,3.005,1039,1.337,1079,4.361,1147,2.678,1160,3.647,1192,2.832,1206,2.503,1207,2.503,1213,3.005,1222,3.434,1227,2.335,1228,5.221,1234,3.711,1235,3.434,1241,3.711,1242,3.711,1250,3.005,1252,3.92,1253,2.503,1254,3.711,1255,4.236,1277,4.259,1283,3.656,1303,2.705,1307,2.705,1310,3.996,1394,2.832,1408,2.19,1430,2.705,1504,4.42,1573,2.19,1575,1.952,1755,2.958,2082,3.297,2099,4.762,2161,2.503,2297,3.297,2303,3.297,2310,3.297,2321,5.526,2322,2.958,2323,5.969,2324,6.424,2325,6.424,2326,6.424,2327,5.229,2328,5.229,2329,3.812,2330,3.812,2331,3.812,2332,5.229,2333,3.812,2334,3.812,2335,2.705,2336,3.812,2337,3.812,2338,3.812,2339,3.812,2340,3.812,2341,3.812,2342,3.812,2343,3.812,2344,5.229,2345,7.121,2346,5.556,2347,6.424,2348,6.953,2349,6.953,2350,3.812,2351,3.812,2352,5.969,2353,3.812,2354,3.812,2355,3.812,2356,3.812,2357,5.229,2358,3.812,2359,3.812,2360,3.297,2361,3.812,2362,3.711,2363,3.434,2364,3.812,2365,3.812,2366,3.812,2367,3.812,2368,3.812,2369,3.812,2370,5.229,2371,3.812,2372,3.812,2373,6.731,2374,6.424,2375,3.812,2376,3.812,2377,3.812,2378,3.812,2379,5.229,2380,3.812,2381,3.812,2382,3.297,2383,3.812,2384,3.812,2385,3.812,2386,5.229,2387,6.731,2388,3.812,2389,3.297,2390,3.812,2391,3.812,2392,3.812,2393,3.812,2394,4.058,2395,3.812,2396,3.812,2397,3.297,2398,3.812,2399,5.969,2400,3.812,2401,3.812,2402,3.812,2403,5.229,2404,5.969]],["title/interfaces/HeatmapSummary.html",[572,0.493,683,2.711]],["body/interfaces/HeatmapSummary.html",[3,0.199,4,0.199,9,0.15,13,0.359,16,2.22,29,0.857,40,0.251,41,0.649,71,0.016,73,0.325,118,0.577,129,2.838,132,2.329,147,1.66,165,0.174,256,3.773,257,1.465,327,0.013,328,0.013,521,3.383,572,0.852,574,2.005,577,3.145,581,2.627,604,2.645,661,3.145,663,4.869,667,4.336,671,5.436,683,4.687,705,4.247,708,2.604,713,6.702,714,5.504,717,3.577,737,2.964,755,2.645,817,5.125,860,4.687,1012,3.883,1013,2.803,1127,5.125,2405,4.733,2406,4.733,2407,5.472,2408,6.702,2409,6.604,2410,6.604,2411,6.604,2412,6.604,2413,6.604,2414,6.604,2415,5.125,2416,6.604,2417,6.604]],["title/components/HomeComponent.html",[0,0.157,294,0.921]],["body/components/HomeComponent.html",[0,0.245,1,0.673,2,0.928,3,0.102,4,0.102,5,0.783,6,0.979,7,0.646,8,0.646,9,0.076,13,0.425,15,1.063,19,0.673,25,0.594,26,1.665,27,1.341,28,0.5,29,0.785,30,1.674,31,0.871,32,1.051,34,1.615,35,0.673,36,2.031,38,1.051,40,0.191,41,0.411,51,0.513,66,0.949,70,0.98,71,0.017,72,0.305,73,0.354,74,0.891,78,2.131,80,0.673,85,0.803,92,0.728,99,2.704,100,0.457,103,2.506,106,2.657,113,2.967,114,1.481,115,2.216,116,1.753,118,0.594,128,3.199,130,1.639,133,1.051,134,0.997,135,1.139,138,0.749,142,3.245,147,1.399,148,1.249,151,3.015,153,0.331,156,0.155,158,1.356,163,0.863,165,0.089,166,0.169,167,0.861,173,1.356,177,1.163,192,1.022,198,0.546,257,0.619,258,0.967,259,0.731,260,1.561,261,0.731,262,0.731,263,0.673,264,0.731,265,0.673,266,1.095,267,0.702,268,0.731,269,0.673,270,0.731,271,0.731,272,0.646,273,0.479,274,1.095,275,0.673,276,0.619,277,0.731,278,0.673,279,0.731,280,0.673,281,0.731,282,0.673,283,0.731,284,0.646,285,0.731,286,0.646,287,0.619,288,0.731,289,1.342,290,0.731,291,0.673,292,0.731,293,0.731,294,1.509,295,0.731,296,0.673,297,0.731,298,0.673,299,0.702,300,0.479,301,0.731,302,0.702,303,1.313,304,0.673,305,0.731,306,1.342,307,0.702,308,0.731,309,0.673,310,0.731,311,0.673,312,0.853,313,0.731,314,0.673,315,0.673,316,0.702,317,0.731,318,0.702,319,0.731,320,0.673,321,0.731,322,0.569,323,0.594,324,0.646,325,0.731,326,0.731,327,0.008,328,0.008,332,2.403,343,2.881,400,2.031,402,3.695,404,3.199,433,1.747,450,3.299,457,1.43,476,1.609,483,3.245,495,3.41,537,1.753,545,1.833,571,2.005,603,2.967,635,2.031,661,2.403,662,1.601,664,5.08,673,4.725,708,0.938,718,3.199,719,3.199,720,2.561,726,2.851,737,3.015,738,2.704,744,3.214,800,2.415,807,2.415,862,1.289,873,2.334,943,2.031,954,1.71,1034,2.746,1083,3.241,1107,2.403,1124,2.967,1211,3.655,1215,2.561,1250,1.604,1252,1.833,1263,2.403,1286,1.833,1297,3.07,1300,2.967,1301,2.967,1324,1.833,1418,2.967,1482,3.655,1523,3.655,1854,2.166,1861,2.166,1862,2.166,1863,2.166,1864,2.166,1865,2.166,1866,2.166,1867,2.166,1868,2.166,1869,2.166,1870,2.166,1875,2.415,1917,2.561,2111,2.967,2114,3.245,2131,3.89,2132,3.89,2161,2.746,2205,5.545,2210,3.245,2215,2.166,2227,2.415,2229,2.415,2307,4.815,2418,2.415,2419,3.617,2420,5.013,2421,4.181,2422,5.013,2423,5.013,2424,5.013,2425,5.013,2426,4.181,2427,4.181,2428,4.181,2429,6.258,2430,5.567,2431,5.567,2432,3.617,2433,4.181,2434,4.181,2435,4.181,2436,5.013,2437,2.791,2438,4.181,2439,4.181,2440,4.181,2441,4.181,2442,4.181,2443,2.791,2444,4.181,2445,4.181,2446,2.791,2447,4.181,2448,2.791,2449,2.791,2450,2.791,2451,4.181,2452,6.672,2453,6.258,2454,2.791,2455,5.567,2456,4.181,2457,2.791,2458,4.181,2459,2.791,2460,4.181,2461,2.791,2462,2.791,2463,3.245,2464,3.617,2465,2.791,2466,4.181,2467,5.013,2468,2.791,2469,2.791,2470,2.791,2471,2.791,2472,2.791,2473,1.981,2474,2.791,2475,5.962,2476,4.181,2477,4.181,2478,4.181,2479,4.181,2480,4.181,2481,4.181,2482,2.791,2483,4.181,2484,4.181,2485,5.567,2486,4.181,2487,4.181,2488,2.791,2489,2.791,2490,4.181,2491,2.791,2492,2.791,2493,2.791,2494,2.791,2495,2.791,2496,2.791,2497,2.791,2498,6.258,2499,5.013,2500,4.181,2501,5.013,2502,2.791,2503,2.791,2504,2.791,2505,2.791,2506,2.791,2507,2.791,2508,2.791]],["title/components/InstallAppPopupComponentComponent.html",[0,0.157,296,0.921]],["body/components/InstallAppPopupComponentComponent.html",[0,0.317,1,0.916,2,1.158,3,0.138,4,0.138,5,0.977,7,0.879,8,0.879,9,0.104,13,0.342,15,0.623,19,0.916,25,0.808,26,1.706,27,1.399,28,0.681,29,0.933,30,2.09,31,1.087,32,1.311,34,1.92,35,0.916,38,1.311,40,0.174,41,0.513,51,0.64,61,0.568,66,0.896,70,0.595,71,0.016,72,0.344,73,0.294,74,0.541,76,0.894,79,0.708,80,0.916,83,1.11,85,0.575,92,0.607,99,2.535,100,0.623,106,1.83,118,0.425,130,1.366,134,0.568,135,0.623,138,1.245,148,1.259,150,3.426,151,2.826,153,0.331,156,0.211,163,1.174,165,0.121,166,0.23,167,0.49,222,2.821,257,0.843,258,1.207,259,0.995,260,1.68,261,0.995,262,0.995,263,0.916,264,0.995,265,0.916,266,1.366,267,0.955,268,0.995,269,0.916,270,0.995,271,0.995,272,0.879,273,0.651,274,1.366,275,0.916,276,0.843,277,0.995,278,0.916,279,0.995,280,0.916,281,0.995,282,0.916,283,0.995,284,0.879,285,0.995,286,0.879,287,0.843,288,0.995,289,0.916,290,0.995,291,0.916,292,0.995,293,0.995,294,0.916,295,0.995,296,1.547,297,2.088,298,1.941,299,0.955,300,0.651,301,0.995,302,0.955,303,1.561,304,0.916,305,0.995,306,0.916,307,0.955,308,0.995,309,0.916,310,0.995,311,0.916,312,1.064,313,0.995,314,0.916,315,0.916,316,0.955,317,0.995,318,0.955,319,0.995,320,0.916,321,0.995,322,0.775,323,0.808,324,0.879,325,0.995,326,0.995,327,0.01,328,0.01,346,2.188,398,2.69,402,2.535,409,4.552,418,6.154,422,5.816,450,3.435,458,2.998,470,5.549,476,1.258,483,4.049,484,2.998,504,5.522,543,3.703,547,3.286,596,2.998,662,1.998,675,2.998,701,2.673,702,3.426,886,2.188,933,3.929,934,3.929,943,2.535,946,2.998,964,3.65,969,3.929,982,3.196,984,1.455,1050,2.535,1062,3.196,1108,4.049,1208,2.673,1454,3.703,1468,4.317,1471,5.218,1514,3.286,1519,2.696,1527,4.049,1528,4.049,1775,3.703,1782,4.049,1948,3.286,1950,3.286,1965,4.212,1971,4.049,1975,4.255,1976,4.513,2061,4.513,2509,6.154,2510,5.218,2511,6.415,2512,6.415,2513,5.218,2514,3.799,2515,5.218,2516,4.513,2517,3.799,2518,3.799,2519,5.218,2520,3.799,2521,5.218,2522,4.513,2523,3.799,2524,3.799,2525,4.513,2526,5.218,2527,4.049,2528,5.218,2529,4.513]],["title/components/NavbarComponent.html",[0,0.157,304,0.921]],["body/components/NavbarComponent.html",[0,0.285,1,1.005,2,1.233,3,0.152,4,0.152,5,1.04,6,1.463,7,0.965,8,0.965,9,0.114,13,0.41,17,3.193,19,1.005,25,0.887,26,1.716,27,1.383,28,0.747,29,1.087,31,0.87,32,1.396,34,2.013,35,1.005,36,2.699,38,1.396,40,0.191,41,0.546,51,0.681,61,0.623,66,0.806,70,0.87,71,0.016,72,0.305,73,0.254,74,0.791,76,0.952,78,2.127,79,0.754,80,1.005,83,1.182,85,0.459,92,0.646,99,2.699,100,0.683,105,3.943,114,1.68,118,0.509,130,1.455,132,2.059,134,1.037,135,0.683,148,1.04,153,0.37,156,0.231,163,1.288,165,0.133,166,0.252,167,0.806,257,0.925,258,1.285,259,1.092,260,1.745,261,1.092,262,1.092,263,1.005,264,1.092,265,1.005,266,1.455,267,1.048,268,1.092,269,1.005,270,1.092,271,1.092,272,0.965,273,0.715,274,1.455,275,1.005,276,0.925,277,1.092,278,1.005,279,1.092,280,1.005,281,1.092,282,1.005,283,1.092,284,0.965,285,1.092,286,0.965,287,0.925,288,1.092,289,1.005,290,1.092,291,1.722,292,1.455,293,1.092,294,1.005,295,1.092,296,1.005,297,1.092,298,1.005,299,1.048,300,0.715,301,1.092,302,1.048,303,1.636,304,1.722,305,1.092,306,1.005,307,1.048,308,1.092,309,1.005,310,1.092,311,1.005,312,1.133,313,1.092,314,1.005,315,1.005,316,1.048,317,1.092,318,1.048,319,1.092,320,1.005,321,1.092,322,0.851,323,0.887,324,0.965,325,1.092,326,1.092,327,0.011,328,0.011,335,2.127,400,2.699,401,3.649,404,4.519,410,1.868,433,1.455,450,3.461,458,3.193,484,3.193,489,4.312,490,2.442,495,3.403,545,2.738,585,1.949,662,2.127,774,3.649,873,2.33,951,3.943,969,3.403,984,1.596,1067,3.009,1284,3.649,1410,3.403,1453,2.237,1565,3.649,1908,2.959,1909,4.307,1917,4.252,1936,2.959,1937,2.959,1965,3.649,1975,4.373,2283,3.236,2285,4.806,2286,5.745,2289,4.312,2290,3.943,2296,4.312,2300,4.312,2305,4.312,2308,4.312,2309,5.172,2320,3.236,2530,3.607,2531,6.665,2532,4.312,2533,7.139,2534,6.249,2535,5.556,2536,6.249,2537,5.556,2538,5.556,2539,4.806,2540,4.17,2541,4.806,2542,4.17,2543,4.17,2544,4.806]],["title/components/PieChartComponent.html",[0,0.157,306,0.921]],["body/components/PieChartComponent.html",[0,0.257,1,0.609,2,0.86,3,0.092,4,0.092,5,0.726,6,0.886,7,0.584,8,0.584,9,0.069,13,0.347,15,0.414,16,2.315,19,0.609,23,1.986,24,2.416,25,0.538,26,1.649,27,1.329,28,0.453,29,1.12,30,1.552,31,0.828,35,0.609,36,1.883,38,0.974,40,0.116,41,0.381,51,0.475,54,2.118,61,0.79,64,2.987,66,0.959,68,2.374,70,0.738,71,0.017,72,0.304,73,0.356,74,0.672,76,0.433,78,1.484,79,0.817,80,0.609,85,0.713,89,3.754,92,0.84,94,2.412,95,2.78,96,1.883,100,1.172,103,2.118,106,2.002,107,3.261,114,0.86,115,1.504,118,0.582,125,2.711,126,1.452,128,2.228,129,1.728,130,1.577,133,1.894,134,0.937,135,1.06,138,1.079,147,0.635,148,1.127,153,0.294,155,1.452,156,0.14,159,1.547,165,0.081,166,0.153,167,0.809,168,0.705,177,0.948,182,1.704,192,1.273,197,1.961,198,1.115,208,1.111,214,1.059,215,1.484,220,1.961,246,2.751,248,1.36,257,0.86,258,0.897,259,0.662,260,1.385,261,0.662,262,0.662,263,0.609,264,0.662,265,0.609,266,1.015,267,0.635,268,0.662,269,0.609,270,0.662,271,0.662,272,0.584,273,0.433,274,1.015,275,0.609,276,0.561,277,0.662,278,0.609,279,0.662,280,0.609,281,0.662,282,0.609,283,0.662,284,0.584,285,0.662,286,0.584,287,0.561,288,0.662,289,0.609,290,0.662,291,0.609,292,0.662,293,0.662,294,0.609,295,0.662,296,0.609,297,0.662,298,0.609,299,0.635,300,0.978,301,0.662,302,0.635,303,1.235,304,0.609,305,0.662,306,1.276,307,1.626,308,0.662,309,0.609,310,0.662,311,0.609,312,0.791,313,0.662,314,0.609,315,0.609,316,0.635,317,0.662,318,0.635,319,0.662,320,0.609,321,0.662,322,0.515,323,0.538,324,0.584,325,0.662,326,0.662,327,0.008,328,0.008,357,2.374,362,1.659,366,1.704,369,1.149,402,2.925,406,2.099,420,2.591,433,1.015,439,2.228,446,2.024,455,1.961,472,1.79,476,0.935,480,2.374,495,2.374,508,1.452,526,1.961,527,2.074,541,1.484,571,1.198,581,1.585,595,1.227,606,1.166,607,2.285,608,1.889,659,5.596,660,3.754,664,4.356,669,3.24,673,3.495,680,2.923,681,3.008,682,4.105,708,1.918,744,2.782,745,3.008,754,1.547,769,1.793,786,5.596,789,4.105,790,1.961,814,2.629,850,3.66,877,2.511,882,3.396,899,3.754,900,2.393,943,2.57,949,2.185,954,2.374,983,1.793,986,2.185,998,2.185,1019,2.751,1056,2.711,1072,3.097,1080,1.452,1204,1.547,1208,1.294,1253,1.659,1277,1.547,1284,1.659,1288,1.659,1319,1.793,1340,2.545,1646,1.659,1707,2.545,2111,3.347,2113,4.08,2124,2.185,2125,4.576,2126,4.576,2127,4.576,2128,4.576,2129,3.353,2131,4.428,2132,4.428,2141,4.105,2143,4.99,2152,3.353,2153,4.576,2155,3.353,2160,3.353,2176,2.185,2187,4.428,2200,3.353,2202,3.353,2203,2.185,2204,2.185,2205,3.66,2210,3.66,2211,3.353,2212,2.185,2214,3.353,2215,3.008,2217,2.185,2235,3.353,2236,2.185,2237,2.185,2249,2.185,2261,2.185,2262,2.185,2335,1.793,2360,3.353,2389,3.353,2463,1.961,2464,3.353,2473,5.3,2532,4.105,2545,5.796,2546,1.961,2547,3.876,2548,3.353,2549,4.08,2550,4.716,2551,3.876,2552,4.716,2553,4.716,2554,4.716,2555,4.716,2556,4.576,2557,3.876,2558,3.876,2559,2.526,2560,2.526,2561,2.526,2562,6.022,2563,2.526,2564,2.526,2565,2.526,2566,5.29,2567,2.526,2568,2.526,2569,3.353,2570,3.876,2571,2.526,2572,4.428,2573,5.706,2574,3.876,2575,2.526,2576,2.526,2577,2.526,2578,2.526,2579,2.526,2580,3.876,2581,3.876,2582,2.526,2583,2.526,2584,2.526,2585,5.29,2586,2.526,2587,2.526,2588,2.526,2589,2.526,2590,2.526,2591,2.526,2592,4.716,2593,2.526,2594,2.526,2595,2.526,2596,2.526,2597,2.526,2598,4.716,2599,3.876,2600,4.716,2601,4.716,2602,6.022,2603,4.716,2604,4.716,2605,4.716,2606,6.022,2607,4.716,2608,4.716,2609,4.716,2610,2.526,2611,4.716,2612,3.876,2613,2.526,2614,4.716,2615,2.526,2616,3.876,2617,2.526,2618,2.526,2619,2.526,2620,2.526,2621,2.526,2622,2.526,2623,2.526,2624,2.185,2625,2.526,2626,2.526,2627,4.716,2628,2.526,2629,3.876,2630,2.526,2631,2.526,2632,2.526,2633,2.526,2634,2.526,2635,3.876,2636,2.526,2637,2.526]],["title/components/PlaylistMusicComponent.html",[0,0.157,309,0.921]],["body/components/PlaylistMusicComponent.html",[0,0.312,1,1.206,2,1.386,3,0.182,4,0.182,5,1.17,7,1.157,8,1.157,9,0.137,13,0.328,19,1.206,25,1.064,26,1.734,27,1.397,28,1.221,29,1.067,32,1.256,35,1.206,38,1.57,71,0.016,72,0.286,80,1.206,100,0.819,103,2.502,130,1.636,153,0.277,156,0.277,165,0.159,166,0.302,257,1.109,258,1.445,259,1.309,260,1.869,261,1.309,262,1.309,263,1.206,264,1.309,265,1.206,266,1.636,267,1.256,268,1.309,269,1.206,270,1.309,271,1.309,272,1.157,273,0.857,274,1.636,275,1.206,276,1.109,277,1.309,278,1.206,279,1.309,280,1.206,281,1.309,282,1.206,283,1.309,284,1.157,285,1.309,286,1.157,287,1.109,288,1.309,289,1.206,290,1.309,291,1.206,292,1.309,293,1.309,294,1.206,295,1.309,296,1.206,297,1.309,298,1.206,299,1.256,300,0.857,301,1.309,302,1.256,303,1.784,304,1.206,305,1.309,306,1.206,307,1.256,308,1.309,309,1.721,310,2.056,311,1.206,312,1.274,313,1.309,314,1.206,315,1.206,316,1.256,317,1.309,318,1.256,319,1.309,320,1.206,321,1.309,322,1.02,323,1.064,324,1.157,325,1.309,326,1.309,327,0.013,328,0.013,346,2.62,402,3.035,438,2.289,443,4.102,494,3.734,1052,3.827,2097,4.434,2313,4.434,2638,3.88,2639,3.88,2640,3.88,2641,3.88,2642,5.404,2643,6.247,2644,4.848,2645,6.247,2646,5.404,2647,5.404,2648,4.848]],["title/injectables/PostApiService.html",[430,2.711,590,0.468]],["body/injectables/PostApiService.html",[3,0.202,4,0.152,9,0.114,13,0.364,15,0.909,16,2.448,40,0.191,51,0.68,61,0.829,65,3.79,66,0.806,70,0.651,71,0.017,72,0.191,73,0.191,74,0.593,76,0.951,77,2.549,78,2.124,79,0.753,83,1.181,85,0.688,92,0.645,100,1.023,115,1.183,133,1.918,138,1.392,148,0.779,153,0.404,156,0.231,165,0.133,166,0.252,167,0.895,168,1.036,171,2.732,177,0.994,192,1.325,193,2.732,212,2.391,215,1.593,251,3.938,327,0.011,328,0.011,334,3.411,341,2.254,359,5.168,360,2.222,369,1.233,374,2.131,397,0.923,399,3.643,410,1.865,420,2.963,430,4.726,433,1.453,441,5.168,442,4.8,444,2.695,446,2.098,472,3.075,512,5.168,513,2.711,516,4.306,521,2.131,532,4.845,533,2.732,539,3.599,540,2.391,541,1.593,542,3.599,556,3.599,573,3.363,590,0.68,594,2.033,599,1.946,600,1.135,608,2.5,615,3.229,648,1.398,662,2.124,737,3.005,833,3.643,834,2.254,847,3.229,864,4.37,877,2.667,883,3.938,886,2.327,894,2.732,895,2.732,1022,4.1,1025,3.229,1034,2.732,1038,3.643,1039,2.19,1047,3.986,1056,3.189,1062,3.399,1072,3.643,1150,3.938,1201,3.588,1250,3.986,1434,3.189,1437,3.399,1468,4.252,1524,2.732,1574,4.099,1970,4.8,1979,3.229,1988,3.229,2649,5.76,2650,4.8,2651,5.549,2652,5.549,2653,4.306,2654,7.135,2655,6.937,2656,6.659,2657,6.659,2658,4.161,2659,5.549,2660,3.643,2661,4.161,2662,5.549,2663,5.549,2664,5.549,2665,6.243,2666,4.161,2667,5.549,2668,5.549,2669,5.549,2670,4.726,2671,6.243,2672,4.161,2673,3.599,2674,4.161,2675,4.161,2676,4.161,2677,5.549,2678,4.161,2679,5.549,2680,4.161,2681,5.549,2682,4.161,2683,4.161,2684,5.549,2685,4.161,2686,4.161,2687,4.161,2688,4.161,2689,4.161,2690,4.161,2691,5.549,2692,4.161,2693,5.549,2694,4.161,2695,4.161,2696,4.161,2697,4.161,2698,4.161,2699,4.161,2700,4.161,2701,4.161,2702,3.599,2703,4.161,2704,3.229]],["title/injectables/SaavnService.html",[590,0.468,1029,2.711]],["body/injectables/SaavnService.html",[3,0.123,4,0.123,9,0.093,13,0.4,15,0.554,20,3.734,25,1.466,40,0.155,41,0.473,51,0.59,61,0.719,66,0.889,70,0.876,71,0.017,72,0.343,73,0.307,74,0.798,76,0.825,78,2.467,79,0.827,83,1.024,85,0.81,114,1.486,118,0.609,134,0.836,135,1.19,138,1.359,146,2.337,153,0.372,156,0.188,165,0.153,166,0.205,167,0.864,168,1.098,177,1.234,192,1.228,198,0.661,208,1.488,214,1.419,215,1.295,255,1.644,276,1.068,287,1.068,300,0.825,312,1.436,327,0.01,328,0.012,330,3.505,332,2.765,333,4.523,334,3.886,341,3.033,350,3.218,360,1.927,369,1.003,372,2.563,374,1.733,385,4.312,388,1.944,394,2.222,397,0.751,399,3.159,428,2.947,429,3.606,433,1.466,439,1.944,471,3.974,490,1.239,494,1.644,502,1.833,509,2.222,510,2.072,572,0.621,590,0.59,599,1.964,600,0.923,608,1.355,611,1.644,612,1.617,631,2.337,635,1.644,648,1.137,707,2.606,709,2.401,727,2.626,738,2.337,744,1.419,751,2.765,833,3.159,834,1.833,835,2.337,870,2.765,900,2.018,1009,4.623,1010,5.464,1011,2.626,1012,2.401,1013,1.733,1014,2.72,1015,2.927,1016,3.13,1017,4.733,1018,4.733,1020,2.116,1021,2.927,1022,3.848,1023,3.734,1024,4.162,1025,2.626,1026,2.401,1027,2.626,1028,2.222,1029,4.752,1030,4.162,1031,5.792,1032,3.64,1033,3.734,1034,4.826,1035,4.843,1036,5.792,1037,5.559,1038,3.159,1039,2.139,1040,4.843,1041,4.162,1042,4.162,1043,4.843,1044,3.734,1045,3.734,1046,3.734,1047,3.218,1048,4.162,1049,3.415,1050,2.337,1051,3.415,1052,3.946,1053,3.415,1054,4.162,1055,3.734,1056,2.765,1057,4.162,1058,2.927,1059,2.927,1060,3.734,1061,4.162,1062,2.947,1063,4.843,1064,5.958,1065,3.49,1066,4.162,1067,2.606,1068,4.162,1069,3.734,1070,3.735,1071,3.218,1072,3.677,1073,3.43,1074,4.843,1075,3.43,1076,4.162,1077,2.947,1078,2.927,1079,2.072,1080,1.944,1081,4.162,1082,5.573,1083,1.644,1084,2.401,1085,2.927,1086,1.562,1087,2.927,1088,2.927,1089,3.734,1090,1.833,1091,2.927,1092,2.072,1093,2.072,1094,4.162,1095,2.927,1096,2.927,1097,2.927,1098,2.927,1099,2.927,1100,2.927,1101,3.734,1102,4.162,1103,5.275,1104,4.162,1105,2.927,1106,2.626,1107,2.765,1108,3.734,1109,2.927,1110,2.927,1111,2.927,1112,2.927,1113,2.927,1114,2.927,1115,2.927,1116,2.927,1117,2.927,1118,2.927,1119,2.72,1120,2.927,1121,2.626,1122,1.733,1123,2.927,1124,2.401,1125,2.927,1126,2.626,1127,2.626,1128,2.927,1129,2.401,1130,2.222,1131,2.927,1132,2.927,1133,4.162,1134,2.626,1135,2.222,1136,2.927,1137,2.927,1138,2.401,1139,2.626,1140,2.927,1141,4.162,1142,2.927,1143,2.927,1144,3.734,1145,2.606,1146,2.222,1147,2.465,1148,2.401,1149,3.734,1150,2.401,1151,2.927,1152,2.626,1153,4.346,1154,2.626,1155,2.626,1156,2.626,1157,2.947,1158,4.733,1988,2.626,2705,4.811,2706,4.811,2707,4.811,2708,3.383,2709,3.383,2710,3.383,2711,3.383,2712,3.383]],["title/interfaces/Schema.html",[407,2.195,572,0.493]],["body/interfaces/Schema.html",[3,0.141,4,0.141,9,0.106,13,0.253,16,2.401,21,1.617,29,0.604,31,0.604,41,0.518,51,0.473,66,0.498,71,0.017,72,0.241,77,3.004,79,0.523,85,0.867,91,1.781,92,0.699,100,0.632,115,1.097,116,1.617,118,0.582,129,1.931,132,2.088,133,1.699,134,0.787,135,0.864,138,1.37,148,1.124,153,0.214,156,0.214,165,0.168,166,0.233,167,0.775,168,1.115,177,1.385,182,2.318,183,1.975,187,1.975,198,1.174,327,0.011,328,0.011,335,1.476,397,0.856,407,4.607,408,3.741,410,1.296,433,1.871,436,2.2,438,1.413,444,1.873,446,1.296,513,1.413,514,2.107,515,2.519,527,1.696,541,1.476,572,0.775,573,2.773,574,1.413,576,1.698,578,2.737,579,1.873,580,1.873,590,0.646,593,5.161,594,1.413,600,1.052,610,2.834,612,2.345,639,2.018,645,2.917,680,1.975,708,1.296,744,1.617,751,3.71,862,1.781,863,3.029,864,2.362,877,2.988,886,2.211,900,3.224,1032,2.434,1052,4.14,1079,2.362,1086,1.781,1090,2.089,1119,3.47,1122,1.975,1246,3.678,1347,4.57,1573,3.029,1597,2.362,1995,2.993,2660,2.532,2713,2.993,2714,4.091,2715,4.56,2716,3.856,2717,3.856,2718,4.56,2719,3.336,2720,3.336,2721,3.336,2722,3.336,2723,3.336,2724,3.336,2725,3.336,2726,3.336,2727,3.336,2728,3.336,2729,3.336,2730,2.737,2731,2.737,2732,2.737,2733,2.737,2734,2.737,2735,2.737,2736,2.737,2737,2.737,2738,3.336,2739,3.336,2740,2.216,2741,2.362,2742,2.362,2743,2.362,2744,2.362,2745,2.362,2746,2.362,2747,3.336,2748,3.336,2749,3.336,2750,3.336,2751,3.336,2752,3.336,2753,3.336,2754,3.336,2755,3.336,2756,3.336,2757,3.336,2758,3.336,2759,3.336,2760,3.336,2761,3.336,2762,3.336,2763,3.336,2764,3.336,2765,3.336,2766,3.336,2767,3.336,2768,3.336,2769,3.336,2770,3.336,2771,3.336,2772,3.336,2773,3.336,2774,3.336,2775,3.336,2776,3.336,2777,3.336,2778,3.336,2779,3.336,2780,3.336,2781,3.336,2782,3.336,2783,3.336,2784,3.336,2785,3.336]],["title/components/SearchButtonComponent.html",[0,0.157,311,0.921]],["body/components/SearchButtonComponent.html",[0,0.292,1,0.91,2,1.152,3,0.137,4,0.137,5,1.197,6,1.323,7,0.873,8,0.873,9,0.103,13,0.34,15,0.618,19,0.91,25,0.803,26,1.705,27,1.374,28,0.676,29,0.929,30,2.079,31,0.813,32,1.305,34,1.913,35,0.91,36,2.522,38,1.305,40,0.173,41,0.51,51,0.637,61,0.776,66,0.934,70,0.591,71,0.017,72,0.272,73,0.293,74,0.74,76,0.89,79,0.704,80,0.91,83,1.105,85,0.654,92,0.806,99,2.522,100,0.618,106,2.689,107,2.812,114,1.419,118,0.307,125,3.412,126,2.168,128,2.984,130,1.36,134,0.776,135,1.048,138,1.146,147,0.948,148,1.197,151,2.812,153,0.355,155,2.168,156,0.209,158,1.833,163,1.166,165,0.12,166,0.228,167,0.487,168,0.564,171,3.41,173,1.833,252,3.685,257,0.837,258,1.201,259,0.988,260,1.675,261,0.988,262,0.988,263,0.91,264,0.988,265,0.91,266,1.36,267,0.948,268,0.988,269,0.91,270,0.988,271,0.988,272,0.873,273,0.647,274,1.36,275,0.91,276,0.837,277,0.988,278,0.91,279,0.988,280,0.91,281,0.988,282,0.91,283,0.988,284,0.873,285,0.988,286,0.873,287,1.576,288,0.988,289,0.91,290,0.988,291,0.91,292,0.988,293,0.988,294,0.91,295,0.988,296,0.91,297,0.988,298,0.91,299,0.948,300,0.647,301,0.988,302,0.948,303,1.555,304,0.91,305,0.988,306,0.91,307,0.948,308,0.988,309,0.91,310,0.988,311,1.744,312,1.635,313,0.988,314,0.91,315,0.91,316,0.948,317,0.988,318,0.948,319,0.988,320,0.91,321,0.988,322,0.77,323,0.803,324,0.873,325,0.988,326,0.988,327,0.01,328,0.01,338,4.491,343,3.412,428,3.917,429,3.276,469,3.685,484,2.984,490,1.902,496,3.41,502,2.043,509,2.477,510,2.311,521,1.932,550,4.964,560,3.263,616,2.812,662,1.988,748,3.41,764,3.685,835,2.522,870,4.157,933,4.245,934,4.245,946,2.984,964,3.636,982,3.18,1053,5.439,1086,2.397,1263,2.984,1272,2.677,1286,2.477,1422,4.539,1488,3.18,1772,3.41,1776,4.03,1790,4.491,1975,3.917,2038,5.532,2313,3.685,2432,5.532,2786,6.35,2787,6.35,2788,3.263,2789,5.192,2790,5.192,2791,5.937,2792,5.192,2793,5.937,2794,5.937,2795,6.396,2796,6.396,2797,3.773,2798,5.192,2799,5.937,2800,3.773,2801,5.192,2802,5.192,2803,5.192,2804,5.192,2805,3.773,2806,5.192,2807,5.192,2808,5.192,2809,5.192,2810,3.773,2811,5.192,2812,5.192,2813,3.773,2814,3.773,2815,5.192,2816,5.192,2817,3.773,2818,5.937,2819,3.773,2820,3.773,2821,3.773,2822,5.192,2823,3.773,2824,3.773,2825,3.773,2826,3.773,2827,3.773,2828,3.773,2829,3.773,2830,3.773,2831,3.773]],["title/components/SearchMusicComponent.html",[0,0.157,314,0.921]],["body/components/SearchMusicComponent.html",[0,0.312,1,1.2,2,1.383,3,0.181,4,0.181,5,1.166,7,1.152,8,1.152,9,0.136,13,0.326,17,3.581,19,1.2,25,1.059,26,1.734,27,1.397,28,0.892,29,1.065,32,1.251,35,1.2,38,1.566,71,0.016,72,0.285,80,1.2,100,0.816,106,2.186,130,1.632,138,1.117,153,0.276,156,0.276,165,0.159,166,0.301,257,1.105,258,1.441,259,1.304,260,1.866,261,1.304,262,1.304,263,1.2,264,1.304,265,1.2,266,1.632,267,1.251,268,1.304,269,1.2,270,1.304,271,1.304,272,1.152,273,0.853,274,1.632,275,1.2,276,1.105,277,1.304,278,1.2,279,1.304,280,1.2,281,1.304,282,1.2,283,1.304,284,1.152,285,1.304,286,1.152,287,1.105,288,1.304,289,1.2,290,1.304,291,1.2,292,1.304,293,1.304,294,1.2,295,1.304,296,1.2,297,1.304,298,1.2,299,1.251,300,0.853,301,1.304,302,1.251,303,1.781,304,1.2,305,1.304,306,1.2,307,1.251,308,1.304,309,1.2,310,1.304,311,1.2,312,1.62,313,1.304,314,1.719,315,1.2,316,1.251,317,1.304,318,1.251,319,1.304,320,1.2,321,1.304,322,1.016,323,1.059,324,1.152,325,1.304,326,1.304,327,0.014,328,0.013,346,2.613,494,3.731,572,0.804,594,2.283,662,2.386,870,3.581,1071,3.581,1708,5.531,2313,4.422,2638,3.864,2641,3.864,2646,5.39,2647,5.39,2648,4.836,2832,3.864,2833,3.864,2834,6.231]],["title/injectables/SectionService.html",[590,0.468,1909,2.195]],["body/injectables/SectionService.html",[2,1.421,3,0.19,4,0.19,9,0.143,13,0.42,15,1.186,40,0.238,41,0.629,51,0.785,66,0.895,70,0.814,71,0.016,72,0.238,73,0.238,74,0.741,79,0.869,85,0.573,92,0.745,103,2.564,107,3.921,114,1.743,118,0.565,134,0.957,135,1.049,146,3.11,153,0.355,156,0.289,165,0.166,166,0.315,167,0.671,168,1.036,222,2.815,327,0.013,328,0.013,332,3.68,335,2.451,397,1.154,398,2.685,404,4.645,436,2.346,585,2.246,590,0.785,594,2.346,600,1.42,648,1.748,712,4.969,873,3.036,951,4.544,1028,3.416,1055,5.618,1067,3.468,1219,4.544,1410,3.922,1453,2.235,1904,6.429,1909,3.68,1917,3.922,2097,4.544,2539,5.539,2835,4.5,2836,6.403,2837,7.433,2838,7.239,2839,7.239,2840,6.937,2841,6.403,2842,5.202,2843,6.403,2844,5.202,2845,6.403,2846,6.403,2847,6.403,2848,5.202,2849,6.403,2850,5.202]],["title/interfaces/Session.html",[572,0.493,1196,2.508]],["body/interfaces/Session.html",[0,0.162,3,0.144,4,0.144,5,1.46,6,0.905,7,0.597,8,0.597,9,0.192,15,0.944,17,1.483,23,1.322,24,2.018,26,0.549,31,0.748,40,0.118,41,0.47,54,1.033,61,0.385,69,1.322,71,0.017,72,0.118,73,0.278,92,0.622,94,1.033,115,1.12,118,0.599,125,2.746,134,0.799,144,1.398,147,1.786,148,1.001,153,0.32,155,1.483,156,0.143,165,0.082,166,0.156,168,1.049,173,1.914,177,1.196,192,1.204,198,1.373,208,2.67,212,1.483,213,3.12,214,2.416,215,2.607,222,1.732,248,1.382,273,0.819,300,1.083,312,0.526,322,0.526,323,1.494,327,0.008,328,0.008,341,3.958,350,3.743,369,1.585,372,2.205,374,1.322,388,3.979,397,0.573,457,2.448,475,1.254,476,1.849,492,1.581,521,1.322,524,2.413,527,1.135,540,1.483,559,1.694,562,1.831,563,3.391,567,3.391,569,2.587,571,1.653,572,0.617,574,0.945,581,1.324,604,1.033,616,1.398,628,1.191,634,1.254,639,0.988,645,2.321,666,4.611,708,2.474,726,1.322,753,4.088,814,1.082,834,3.12,835,2.321,846,1.831,862,1.191,873,1.082,878,2.746,886,1.082,955,2.587,959,3.138,1014,2.598,1016,2.321,1020,2.533,1022,2.264,1039,1.382,1047,1.483,1050,1.254,1065,2.588,1077,3.719,1130,1.694,1145,1.398,1147,1.322,1159,2.587,1160,1.322,1161,1.483,1162,1.831,1163,2.003,1164,2.003,1165,2.003,1166,2.003,1167,2.003,1168,2.003,1169,2.003,1170,2.003,1171,2.003,1172,2.003,1173,2.003,1174,2.003,1175,2.003,1176,2.003,1177,2.003,1178,2.003,1179,2.003,1180,2.003,1181,2.003,1182,2.003,1183,2.003,1184,2.003,1185,3.058,1186,3.058,1187,2.134,1188,1.831,1189,2.134,1190,3.138,1191,1.831,1192,2.134,1193,1.581,1194,1.831,1195,2.587,1196,3.987,1197,4.471,1198,2.003,1199,1.483,1200,4.471,1201,2.264,1202,3.058,1203,2.003,1204,4.088,1205,3.138,1206,4.547,1207,2.587,1208,1.322,1209,2.264,1210,2.003,1211,1.694,1212,5.75,1213,1.483,1214,3.391,1215,2.413,1216,1.483,1217,1.694,1218,2.003,1219,1.831,1220,2.003,1221,2.003,1222,2.587,1223,2.003,1224,3.058,1225,2.003,1226,2.003,1227,1.581,1228,4.088,1229,3.058,1230,5.289,1231,3.709,1232,3.709,1233,2.003,1234,5.258,1235,2.587,1236,2.003,1237,1.831,1238,2.003,1239,2.003,1240,2.003,1241,1.831,1242,1.831,1243,3.391,1244,3.709,1245,3.869,1246,3.719,1247,3.421,1248,4.713,1249,4.151,1250,4.2,1251,4.151,1252,4.834,1253,3.512,1254,4.483,1255,4.483,1256,4.713,1257,2.003,1258,4.151,1259,5.285,1260,4.902,1261,4.471,1262,2.003,1263,2.264,1264,1.831,1265,4.471,1266,1.694,1267,3.709,1268,1.831,1269,5.18,1270,2.003,1271,3.058,1272,3.391,1273,2.003,1274,3.512,1275,3.391,1276,2.003,1277,2.413,1278,2.796,1279,2.003,1280,2.003,1281,2.003,1282,2.003,1283,3.869,1284,1.694,1285,1.831,1286,3.138,1287,2.003,1288,1.694,1289,3.138,1290,2.003,1291,3.709,1292,2.003,1293,3.709,1294,2.003,1295,2.003,1296,2.003,1297,2.927,1298,2.003,1299,2.003,1300,2.796,1301,2.796,1302,3.709,1303,1.831,1304,3.058,1305,2.003,1306,2.003,1307,3.391,1308,3.987,1309,3.058,1310,1.483,1311,4.713,1312,2.003,1313,3.796,1314,3.058,1315,2.003,1316,2.003,1317,2.003,1318,1.581,1319,1.831,1320,2.003,1321,2.003,1322,5.055,1323,2.003,1324,1.694,1325,3.058,1326,2.003,1327,2.003,1328,2.003,1329,2.003,1330,2.003,1331,2.003,1332,2.003,1333,2.003,1334,2.003,1335,2.003,1336,2.003,1337,2.003,1338,2.003,1339,2.003,1340,2.587,1341,2.003,1342,2.003,1343,2.003,1344,2.003,1345,2.003,1346,2.003,1347,1.581,1348,2.003,1349,2.003,1350,2.003,1351,2.003,1352,5.285,1353,2.003,1354,2.003,1355,2.003,1356,2.003,1357,2.003,1358,2.003,1359,2.003,1360,2.003,1361,2.003,1362,2.003,1363,3.709,1364,3.058,1365,2.003,1366,2.003,1367,4.151,1368,4.713,1369,2.003,1370,2.003,1371,2.003,1372,3.709,1373,3.709,1374,2.003,1375,2.003,1376,2.003,1377,2.003,1378,1.483,1379,2.003,1380,4.151,1381,2.003,1382,2.003,1383,2.003,1384,3.058,1385,2.003,1386,1.831,1387,2.003,1388,2.003,1389,2.003,1390,2.003,1391,2.003,1392,2.003,1393,2.003,1394,2.134,1395,2.003,1396,1.831,1397,2.003,1398,3.709,1399,2.003,1400,2.003,1401,2.003,1402,2.003,1403,2.003,1404,2.003,1405,2.003,1406,2.003,1407,2.003,1408,1.483,1409,2.003,1410,1.581,1411,2.003,1412,3.058,1413,2.003,1414,2.003,1415,3.058,1416,2.003,1417,1.694,1418,1.831,1419,2.003,1420,2.003,1421,2.003,1422,1.831,1423,2.003,1424,2.003,1425,2.003,1426,1.694,1427,2.003,1428,2.003,1429,2.003,1430,1.831,1431,2.003,1432,3.512,1433,2.003,1434,1.483,1435,1.831,1436,2.003,1437,1.581,1438,2.003,1439,2.003,1440,2.413,1441,2.003,1442,3.058,1443,2.003,1444,3.276,1445,2.003,1446,3.058,1447,2.003,1448,2.003,1449,2.003,1450,3.058,1451,2.003,1452,2.003,1453,0.831,1454,1.831,1455,2.003,1456,1.581,1457,1.831,1458,1.831,1459,1.831,1460,1.831,1461,1.831,1462,2.003,1463,2.003,1464,1.694,1465,2.003,1466,2.003,1467,2.003]],["title/components/SettingItemComponent.html",[0,0.157,315,0.921]],["body/components/SettingItemComponent.html",[0,0.317,1,1.168,2,1.359,3,0.176,4,0.176,5,1.146,7,1.121,8,1.121,9,0.133,13,0.318,19,1.168,25,1.031,26,1.731,27,1.395,28,0.868,29,1.051,30,2.453,31,0.959,32,1.217,35,1.168,38,1.539,40,0.222,66,0.625,71,0.016,72,0.28,73,0.222,80,1.168,100,0.794,106,2.148,118,0.499,130,1.604,132,1.892,147,1.539,153,0.269,156,0.269,165,0.154,166,0.293,257,1.075,258,1.417,259,1.268,260,1.848,261,1.268,262,1.268,263,1.168,264,1.268,265,1.168,266,1.604,267,1.217,268,1.268,269,1.168,270,1.268,271,1.268,272,1.121,273,0.83,274,1.604,275,1.168,276,1.075,277,1.268,278,1.168,279,1.268,280,1.168,281,1.268,282,1.168,283,1.268,284,1.121,285,1.268,286,1.121,287,1.075,288,1.268,289,1.168,290,1.268,291,1.168,292,1.268,293,1.268,294,1.168,295,1.268,296,1.168,297,1.268,298,1.168,299,1.217,300,0.83,301,1.268,302,1.217,303,1.759,304,1.168,305,1.268,306,1.168,307,1.217,308,1.268,309,1.168,310,1.268,311,1.168,312,1.249,313,1.268,314,1.168,315,1.702,316,1.937,317,1.268,318,1.217,319,1.268,320,1.168,321,1.268,322,0.988,323,1.031,324,1.121,325,1.268,326,1.268,327,0.012,328,0.012,372,2.345,439,3.52,537,2.568,541,2.345,631,2.975,639,2.846,814,3.233,885,4.346,934,3.751,943,2.975,1013,3.137,1020,2.693,1516,4.346,1958,4.753,1966,4.346,2522,5.297,2851,5.297,2852,5.297,2853,4.19,2854,5.297,2855,5.297,2856,6.124,2857,4.844]],["title/components/SidebarComponent.html",[0,0.157,320,0.921]],["body/components/SidebarComponent.html",[0,0.298,1,0.989,2,1.219,3,0.149,4,0.149,5,1.029,6,1.438,7,0.949,8,0.949,9,0.112,13,0.406,19,0.989,25,0.872,26,1.715,27,1.381,28,1.11,29,1.08,30,2.2,31,0.86,32,1.381,34,1.997,35,0.989,36,2.669,38,1.381,40,0.188,41,0.54,51,0.674,61,0.613,66,0.8,70,0.86,71,0.017,72,0.325,73,0.284,74,0.783,76,0.942,79,0.745,80,0.989,83,1.169,85,0.452,92,0.639,99,2.669,100,0.672,103,2.2,105,3.899,114,1.469,118,0.562,130,1.439,132,2.045,134,1.031,135,0.672,146,3.451,153,0.344,156,0.228,163,1.267,165,0.131,166,0.248,167,0.8,257,0.91,258,1.271,259,1.074,260,1.734,261,1.074,262,1.074,263,0.989,264,1.074,265,0.989,266,1.439,267,1.03,268,1.074,269,0.989,270,1.074,271,1.074,272,0.949,273,0.703,274,1.439,275,0.989,276,0.91,277,1.074,278,0.989,279,1.074,280,0.989,281,1.074,282,0.989,283,1.074,284,0.949,285,1.074,286,0.949,287,0.91,288,1.074,289,0.989,290,1.074,291,0.989,292,1.074,293,1.074,294,0.989,295,1.074,296,0.989,297,1.074,298,0.989,299,1.03,300,1.062,301,1.074,302,1.03,303,1.623,304,0.989,305,1.074,306,0.989,307,1.03,308,1.074,309,0.989,310,1.074,311,0.989,312,1.121,313,1.074,314,0.989,315,0.989,316,1.03,317,1.074,318,1.03,319,1.074,320,1.713,321,1.074,322,0.836,323,0.872,324,0.949,325,1.074,326,1.074,327,0.011,328,0.011,330,3.158,394,3.608,398,2.304,400,2.669,404,4.477,410,2.225,433,1.439,438,2.013,450,3.449,458,3.158,523,4.264,541,2.104,543,3.899,545,2.692,573,2.537,585,1.927,639,2.104,661,3.158,662,2.104,873,3.165,969,3.365,984,1.57,1016,2.669,1050,2.669,1067,2.976,1124,3.899,1285,5.356,1410,3.365,1453,2.133,1565,3.608,1824,3.899,1908,2.91,1909,4.293,1917,3.365,1936,2.91,1937,2.91,2064,4.264,2286,5.724,2290,3.899,2291,4.753,2296,4.264,2300,4.264,2301,4.753,2305,4.264,2308,4.264,2309,4.264,2320,3.182,2541,4.753,2858,3.547,2859,5.494,2860,5.494,2861,4.753,2862,5.494,2863,5.494,2864,6.197,2865,5.494,2866,6.197,2867,5.494,2868,4.1,2869,5.494,2870,5.494,2871,4.1]],["title/interfaces/Song.html",[572,0.493,1032,1.764]],["body/interfaces/Song.html",[3,0.169,4,0.169,9,0.127,13,0.304,40,0.212,41,0.585,71,0.017,72,0.329,73,0.336,138,1.066,165,0.221,198,0.905,273,1.281,327,0.012,328,0.012,433,1.213,463,2.496,476,1.586,494,2.891,572,0.977,574,1.696,576,2.236,585,2.088,612,2.333,723,2.661,744,3.082,755,2.943,814,3.082,865,3.488,872,2.748,1032,3.761,1039,2.683,1070,4.251,1071,4.126,1075,2.836,1086,3.393,1090,3.759,1092,4.251,1093,4.251,1119,2.891,1122,3.764,1453,1.492,1575,3.048,2740,3.989,2741,4.251,2742,4.501,2743,4.251,2744,4.578,2745,4.251,2746,4.251,2872,3.041,2873,4.631,2874,4.631,2875,4.926,2876,4.926,2877,5.373,2878,4.926,2879,4.224,2880,4.926,2881,4.251,2882,4.251,2883,4.251,2884,3.645,2885,4.224,2886,3.908,2887,4.224,2888,4.224,2889,4.224,2890,3.645,2891,5.215,2892,3.286,2893,3.286,2894,3.286,2895,3.286,2896,3.286]],["title/interfaces/SongArtists.html",[572,0.493,2881,2.339]],["body/interfaces/SongArtists.html",[3,0.186,4,0.186,9,0.14,13,0.335,40,0.234,41,0.623,71,0.017,72,0.33,73,0.234,138,0.917,165,0.229,198,1,273,1.268,327,0.013,328,0.013,463,2.146,476,1.234,494,2.485,572,0.996,574,1.874,576,2.319,585,1.795,612,2.13,723,2.94,744,2.658,755,2.882,814,2.658,865,3.345,872,2.362,1032,3.727,1039,2.68,1070,3.882,1071,4.136,1075,3.882,1086,2.926,1090,2.771,1092,3.882,1093,3.882,1119,2.485,1122,3.246,1453,1.648,1575,2.621,2740,2.94,2741,3.134,2742,3.882,2743,3.134,2744,4.408,2745,3.134,2746,3.134,2872,3.36,2875,3.631,2876,3.631,2877,4.887,2878,3.631,2879,3.631,2880,4.498,2881,4.218,2882,3.882,2883,3.882,2884,3.134,2885,3.631,2886,3.36,2887,3.631,2888,3.631,2889,3.631,2890,3.134,2891,5.349,2892,3.631,2893,3.631,2894,3.631,2895,3.631,2896,5.107]],["title/interfaces/SongDownloadUrl.html",[572,0.493,2882,2.339]],["body/interfaces/SongDownloadUrl.html",[3,0.184,4,0.184,9,0.139,13,0.332,40,0.232,41,0.619,71,0.017,72,0.314,73,0.232,138,0.907,165,0.229,198,0.989,273,1.321,327,0.013,328,0.013,463,2.122,476,1.22,494,2.458,572,0.994,574,1.853,576,2.31,585,1.775,612,2.115,723,3.617,744,2.639,755,2.953,814,2.639,865,3.328,872,2.336,1032,3.724,1039,2.771,1070,3.855,1071,3.937,1075,3.099,1086,2.906,1090,2.74,1092,3.855,1093,3.855,1119,2.458,1122,3.224,1453,2.028,1575,2.592,2740,2.908,2741,3.099,2742,3.855,2743,3.099,2744,4.391,2745,3.099,2746,3.099,2872,3.322,2875,3.591,2876,3.591,2877,4.862,2878,3.591,2879,3.591,2880,4.467,2881,3.855,2882,4.196,2883,3.855,2884,3.099,2885,3.591,2886,3.322,2887,3.591,2888,3.591,2889,3.591,2890,3.099,2891,5.607,2892,4.467,2893,4.467,2894,3.591,2895,3.591,2896,3.591]],["title/interfaces/SongImage.html",[572,0.493,2883,2.339]],["body/interfaces/SongImage.html",[3,0.185,4,0.185,9,0.139,13,0.333,40,0.232,41,0.62,71,0.017,72,0.314,73,0.232,138,0.91,165,0.229,198,0.992,273,1.265,327,0.013,328,0.013,463,2.129,476,1.224,494,2.466,572,0.995,574,1.86,576,2.312,585,1.781,612,2.12,723,2.918,744,2.645,755,2.956,814,2.645,865,3.487,872,2.344,1032,3.725,1039,2.76,1070,3.863,1071,3.943,1075,3.11,1086,2.912,1090,2.75,1092,3.863,1093,3.863,1119,2.466,1122,3.231,1453,1.636,1575,2.6,2740,2.918,2741,3.11,2742,3.863,2743,3.11,2744,4.672,2745,3.11,2746,3.11,2872,3.334,2875,3.603,2876,3.603,2877,4.87,2878,3.603,2879,3.603,2880,4.476,2881,3.863,2882,3.863,2883,4.203,2884,3.11,2885,3.603,2886,3.334,2887,3.603,2888,3.603,2889,3.603,2890,3.11,2891,5.553,2892,3.603,2893,3.603,2894,4.476,2895,4.476,2896,3.603]],["title/injectables/StorageService.html",[513,1.399,590,0.468]],["body/injectables/StorageService.html",[3,0.104,4,0.104,9,0.078,13,0.369,16,2.461,21,1.781,29,0.665,31,0.665,40,0.131,41,0.499,51,0.69,66,1.005,70,0.795,71,0.017,72,0.299,73,0.332,74,0.723,77,3.034,79,0.576,85,0.882,91,1.961,92,0.734,100,0.696,115,1.208,116,1.781,118,0.605,129,2.061,132,2.158,133,1.642,134,1.059,135,1.162,138,1.389,148,1.181,153,0.158,156,0.158,165,0.135,166,0.172,167,0.655,168,1.169,177,1.323,182,2.473,183,2.176,187,2.176,198,1.233,327,0.009,328,0.009,335,1.626,397,0.633,407,4.62,408,2.023,410,1.428,433,1.917,436,2.31,438,1.556,444,2.063,446,1.428,513,1.556,514,1.781,515,2.129,527,1.868,541,1.626,572,0.548,573,2.912,576,0.919,578,3.014,579,2.063,580,2.063,590,0.521,593,5.275,594,1.556,600,0.778,610,2.929,612,2.412,639,1.091,645,3.064,648,0.958,680,2.176,708,1.428,744,1.781,751,3.858,862,1.961,863,3.233,864,2.601,877,3.042,886,1.196,900,3.211,1032,2.597,1052,4.278,1079,2.601,1086,1.961,1090,2.3,1119,3.556,1122,2.176,1246,3.109,1347,4.793,1573,1.638,1597,2.601,1995,3.296,2660,2.789,2713,2.212,2714,2.212,2715,2.466,2718,2.466,2719,3.674,2720,3.674,2721,4.391,2722,4.391,2723,4.391,2724,4.391,2725,4.391,2726,3.674,2727,4.391,2728,4.391,2729,4.391,2730,3.014,2731,3.014,2732,3.014,2733,3.014,2734,3.014,2735,3.014,2736,3.014,2737,3.014,2738,4.391,2739,4.391,2740,2.441,2741,2.601,2742,2.601,2743,2.601,2744,2.601,2745,2.601,2746,2.601,2747,4.866,2748,2.466,2749,4.866,2750,2.466,2751,4.866,2752,2.466,2753,4.866,2754,2.466,2755,4.866,2756,2.466,2757,4.866,2758,2.466,2759,4.866,2760,2.466,2761,4.866,2762,2.466,2763,4.866,2764,2.466,2765,4.866,2766,2.466,2767,3.674,2768,2.466,2769,2.466,2770,3.674,2771,2.466,2772,2.466,2773,3.674,2774,2.466,2775,2.466,2776,4.866,2777,2.466,2778,4.866,2779,2.466,2780,4.866,2781,2.466,2782,4.866,2783,2.466,2784,4.866,2785,2.466,2897,4.247,2898,4.247,2899,4.247,2900,2.851,2901,2.851,2902,2.851,2903,2.851,2904,2.851,2905,2.851,2906,2.851,2907,2.851,2908,2.851,2909,2.851,2910,2.851,2911,2.851,2912,2.851,2913,2.851,2914,2.851,2915,2.851,2916,2.851,2917,2.851,2918,2.851,2919,2.851,2920,2.851,2921,2.851,2922,2.851,2923,2.851,2924,2.851,2925,2.851,2926,2.851,2927,2.851]],["title/injectables/SyncSchemaService.html",[431,2.711,590,0.468]],["body/injectables/SyncSchemaService.html",[3,0.153,4,0.153,9,0.115,13,0.438,27,0.957,31,0.873,40,0.192,41,0.548,51,0.684,61,0.834,66,0.898,70,0.981,71,0.017,72,0.287,73,0.287,74,0.893,76,0.957,77,2.902,79,0.97,83,1.187,85,0.766,92,0.832,114,1.238,118,0.604,133,1.905,134,0.998,138,1.197,141,2.577,148,1.045,153,0.386,156,0.233,165,0.134,166,0.254,167,0.898,168,1.142,177,1.197,192,1.271,198,0.82,327,0.011,328,0.011,376,2.153,397,0.931,398,2.802,407,4.58,431,4.742,436,2.044,448,2.676,472,3.085,474,2.577,476,1.512,477,2.858,480,3.418,482,4.827,513,2.674,514,2.344,515,2.802,516,5.186,523,5.186,590,0.684,591,2.711,599,2.344,600,1.145,602,3.418,603,3.96,604,2.235,605,3.246,606,2.577,607,1.681,608,2.235,609,2.038,612,1.875,614,3.045,639,1.607,648,1.41,650,2.57,707,3.022,877,2.235,900,2.999,1079,3.418,1080,3.207,1468,4.195,1475,3.207,1952,3.63,2673,3.63,2702,4.827,2928,6.187,2929,3.63,2930,5.58,2931,5.58,2932,5.58,2933,3.96,2934,4.827,2935,5.58,2936,4.331,2937,6.682,2938,5.58,2939,5.58,2940,4.196,2941,4.196,2942,4.196,2943,5.58,2944,7.413,2945,4.196,2946,6.956,2947,5.58,2948,4.196,2949,4.196,2950,4.196,2951,4.196,2952,4.196,2953,4.196,2954,4.196,2955,4.196,2956,4.196,2957,4.196,2958,4.196,2959,4.196,2960,5.58,2961,5.58,2962,5.58,2963,4.196,2964,4.196,2965,4.196,2966,5.58,2967,4.196,2968,4.196,2969,5.58,2970,5.58,2971,4.196,2972,4.196,2973,5.58,2974,5.58,2975,4.196,2976,4.196,2977,5.58,2978,4.196,2979,4.196,2980,5.58,2981,4.196,2982,4.196,2983,4.196,2984,4.196,2985,3.257,2986,4.196]],["title/interfaces/Template.html",[5,0.715,572,0.493]],["body/interfaces/Template.html",[0,0.162,3,0.143,4,0.143,5,1.468,6,0.904,7,0.596,8,0.596,9,0.192,15,0.943,17,1.48,23,1.319,24,2.015,26,0.548,31,0.747,40,0.118,41,0.469,54,1.032,61,0.385,69,1.319,71,0.017,72,0.245,73,0.305,92,0.622,94,1.032,115,1.119,118,0.599,125,2.743,134,0.798,144,1.395,147,1.786,148,1,153,0.319,155,1.48,156,0.143,165,0.082,166,0.156,168,1.049,173,1.911,177,1.195,192,1.203,198,1.372,208,2.668,212,1.48,213,2.131,214,2.414,215,2.606,222,1.73,248,1.38,273,0.818,300,1.082,312,0.525,322,0.525,323,1.494,327,0.008,328,0.008,341,3.957,350,3.741,369,1.584,372,2.204,374,1.319,388,3.977,397,0.572,457,2.445,475,1.251,476,1.837,492,1.578,521,1.319,524,2.41,527,1.133,540,1.48,559,1.691,562,1.828,563,3.388,567,3.388,569,2.584,571,1.651,572,0.616,574,0.944,581,1.322,604,1.032,616,1.395,628,1.189,634,2.319,639,0.986,645,2.319,666,4.609,708,2.473,726,1.319,753,4.085,814,1.08,834,3.117,835,2.319,846,1.828,862,1.189,873,1.08,878,2.743,886,1.08,955,2.584,959,3.135,1014,1.251,1016,2.319,1020,2.531,1022,2.261,1039,1.38,1047,1.48,1050,1.251,1065,2.586,1077,3.717,1130,1.691,1145,1.395,1147,1.319,1159,2.584,1160,1.319,1161,1.48,1162,1.828,1163,1.999,1164,1.999,1165,1.999,1166,1.999,1167,1.999,1168,1.999,1169,1.999,1170,1.999,1171,1.999,1172,1.999,1173,1.999,1174,1.999,1175,1.999,1176,1.999,1177,1.999,1178,1.999,1179,1.999,1180,1.999,1181,1.999,1182,1.999,1183,1.999,1184,1.999,1185,3.054,1186,3.054,1187,2.131,1188,1.828,1189,2.131,1190,3.135,1191,1.828,1192,2.131,1193,1.578,1194,1.828,1195,3.78,1196,3.78,1197,3.054,1198,1.999,1199,1.48,1200,4.467,1201,2.261,1202,3.054,1203,1.999,1204,4.086,1205,3.135,1206,4.545,1207,2.584,1208,1.319,1209,2.261,1210,1.999,1211,1.691,1212,5.748,1213,1.48,1214,3.388,1215,2.41,1216,1.48,1217,1.691,1218,1.999,1219,1.828,1220,1.999,1221,1.999,1222,2.584,1223,1.999,1224,3.054,1225,1.999,1226,1.999,1227,1.578,1228,4.085,1229,3.054,1230,5.287,1231,3.705,1232,3.705,1233,1.999,1234,5.256,1235,2.584,1236,1.999,1237,1.828,1238,1.999,1239,1.999,1240,1.999,1241,1.828,1242,1.828,1243,3.388,1244,3.705,1245,3.866,1246,3.717,1247,3.419,1248,4.709,1249,4.147,1250,4.199,1251,4.147,1252,4.832,1253,3.509,1254,4.48,1255,4.48,1256,4.709,1257,1.999,1258,4.147,1259,5.282,1260,4.899,1261,4.467,1262,1.999,1263,2.261,1264,1.828,1265,4.467,1266,1.691,1267,3.705,1268,1.828,1269,5.177,1270,1.999,1271,3.054,1272,3.388,1273,1.999,1274,3.509,1275,3.388,1276,1.999,1277,2.41,1278,2.792,1279,1.999,1280,1.999,1281,1.999,1282,1.999,1283,3.866,1284,1.691,1285,1.828,1286,3.135,1287,1.999,1288,1.691,1289,3.135,1290,1.999,1291,3.705,1292,1.999,1293,3.705,1294,1.999,1295,1.999,1296,1.999,1297,2.924,1298,1.999,1299,1.999,1300,2.792,1301,2.792,1302,3.705,1303,1.828,1304,3.054,1305,1.999,1306,1.999,1307,3.388,1308,3.985,1309,3.054,1310,1.48,1311,4.709,1312,1.999,1313,3.792,1314,3.054,1315,1.999,1316,1.999,1317,1.999,1318,1.578,1319,1.828,1320,1.999,1321,1.999,1322,5.052,1323,1.999,1324,1.691,1325,3.054,1326,1.999,1327,1.999,1328,1.999,1329,1.999,1330,1.999,1331,1.999,1332,1.999,1333,1.999,1334,1.999,1335,1.999,1336,1.999,1337,1.999,1338,1.999,1339,1.999,1340,2.584,1341,1.999,1342,1.999,1343,1.999,1344,1.999,1345,1.999,1346,1.999,1347,1.578,1348,1.999,1349,1.999,1350,1.999,1351,1.999,1352,5.282,1353,1.999,1354,1.999,1355,1.999,1356,1.999,1357,1.999,1358,1.999,1359,1.999,1360,1.999,1361,1.999,1362,1.999,1363,3.705,1364,3.054,1365,1.999,1366,1.999,1367,4.147,1368,4.709,1369,1.999,1370,1.999,1371,1.999,1372,3.705,1373,3.705,1374,1.999,1375,1.999,1376,1.999,1377,1.999,1378,1.48,1379,1.999,1380,4.147,1381,1.999,1382,1.999,1383,1.999,1384,3.054,1385,1.999,1386,1.828,1387,1.999,1388,1.999,1389,1.999,1390,1.999,1391,1.999,1392,1.999,1393,1.999,1394,2.131,1395,1.999,1396,1.828,1397,1.999,1398,3.705,1399,1.999,1400,1.999,1401,1.999,1402,1.999,1403,1.999,1404,1.999,1405,1.999,1406,1.999,1407,1.999,1408,1.48,1409,1.999,1410,1.578,1411,1.999,1412,3.054,1413,1.999,1414,1.999,1415,3.054,1416,1.999,1417,1.691,1418,1.828,1419,1.999,1420,1.999,1421,1.999,1422,1.828,1423,1.999,1424,1.999,1425,1.999,1426,1.691,1427,1.999,1428,1.999,1429,1.999,1430,1.828,1431,1.999,1432,3.509,1433,1.999,1434,1.48,1435,1.828,1436,1.999,1437,1.578,1438,1.999,1439,1.999,1440,2.41,1441,1.999,1442,3.054,1443,1.999,1444,3.273,1445,1.999,1446,3.054,1447,1.999,1448,1.999,1449,1.999,1450,3.054,1451,1.999,1452,1.999,1453,0.83,1454,1.828,1455,1.999,1456,1.578,1457,1.828,1458,1.828,1459,1.828,1460,1.828,1461,1.828,1462,1.999,1463,1.999,1464,1.691,1465,1.999,1466,1.999,1467,1.999]],["title/injectables/TemplateEditorService.html",[590,0.468,1187,2.069]],["body/injectables/TemplateEditorService.html",[3,0.152,4,0.152,9,0.114,31,1.14,40,0.191,41,0.546,51,0.681,66,0.955,70,1.043,71,0.017,72,0.305,73,0.327,74,0.949,85,0.786,92,0.861,118,0.633,134,0.829,135,1.137,148,1.169,153,0.231,156,0.231,165,0.133,166,0.252,168,1.148,177,1.279,192,1.07,222,1.831,258,1.284,327,0.011,328,0.011,366,1.831,369,2.056,385,2.55,397,1.232,406,2.255,437,3.231,446,1.399,527,1.831,559,2.734,590,0.681,600,1.136,632,3.94,648,1.399,709,2.955,726,2.133,774,3.645,867,3.645,952,2.55,971,4.86,995,4.847,1020,1.831,1034,3.645,1080,2.393,1122,3.554,1160,3.838,1161,4.306,1187,3.007,1193,2.55,1308,2.734,1313,4.924,1318,2.55,1386,3.94,1394,3.758,1582,5.385,1653,3.231,1772,4.97,2099,3.645,2105,3.231,2161,2.734,2166,3.645,2335,2.955,2346,6.002,2934,3.602,2987,3.231,2988,6.245,2989,6.661,2990,5.551,2991,6.661,2992,5.551,2993,5.551,2994,4.164,2995,5.551,2996,4.164,2997,5.551,2998,4.164,2999,4.164,3000,5.551,3001,4.164,3002,5.551,3003,4.164,3004,5.551,3005,4.164,3006,4.164,3007,4.847,3008,4.164,3009,6.661,3010,4.164,3011,4.164,3012,4.164,3013,4.164,3014,4.164,3015,3.602,3016,4.164,3017,4.164,3018,4.164,3019,4.164,3020,4.164,3021,4.164,3022,4.164,3023,4.164,3024,5.551,3025,4.164,3026,4.164,3027,4.164,3028,4.164,3029,4.164,3030,4.164,3031,4.164,3032,4.164,3033,4.164,3034,5.551,3035,4.164,3036,4.164,3037,4.164,3038,4.164,3039,4.164,3040,4.164,3041,3.602,3042,3.602,3043,4.164,3044,4.164,3045,4.164,3046,4.164,3047,4.164,3048,4.164,3049,4.164,3050,5.551,3051,5.551,3052,4.164,3053,6.245,3054,6.245,3055,4.164,3056,4.164,3057,4.164,3058,4.164,3059,4.164,3060,5.551,3061,6.245,3062,6.245,3063,6.661,3064,3.602,3065,4.164,3066,4.164,3067,4.164,3068,4.164,3069,4.164,3070,4.164]],["title/modules/TemplatePlaygroundModule.html",[2362,2.711,3071,2.711]],["body/modules/TemplatePlaygroundModule.html",[3,0.202,4,0.202,5,1.245,9,0.152,32,1.391,34,2.142,69,2.834,71,0.016,153,0.437,156,0.307,158,2.688,163,1.71,165,0.176,166,0.335,257,1.228,322,1.63,327,0.013,328,0.013,343,3.821,344,5.751,374,2.834,375,4.295,376,1.783,564,4.295,1160,2.834,1161,3.18,1187,4.159,1188,3.927,1189,4.159,1190,3.634,1191,3.927,1192,4.159,1193,3.389,1194,3.927,1205,3.634,1548,3.927,2165,5.16,2362,3.927,2363,3.634,3071,5.688,3072,6.165,3073,5.058,3074,5.531,3075,4.787,3076,4.787,3077,4.787,3078,4.787,3079,5.534,3080,6.648,3081,6.648,3082,5.534]],["title/components/ToastComponent.html",[0,0.157,324,0.884]],["body/components/ToastComponent.html",[0,0.304,1,0.947,2,1.185,3,0.261,4,0.143,5,0.999,7,0.909,8,0.909,9,0.108,13,0.397,19,0.947,23,2.734,25,0.836,26,1.71,27,1.377,28,0.957,29,0.949,32,0.987,35,0.947,38,1.341,40,0.18,51,0.654,61,0.587,65,3.871,66,0.782,70,0.836,71,0.017,72,0.298,73,0.339,74,0.76,76,1.115,79,0.724,80,1.884,81,3.788,83,1.136,85,0.588,92,0.757,94,2.138,95,2.465,99,2.593,100,0.644,118,0.494,130,1.588,132,1.649,134,0.587,135,0.644,147,1.341,153,0.296,156,0.218,164,2.58,165,0.125,166,0.238,167,0.839,171,2.58,192,1.039,213,4.055,215,2.686,257,0.872,258,1.235,259,1.029,260,1.703,261,1.029,262,1.029,263,0.947,264,1.029,265,0.947,266,1.398,267,0.987,268,1.029,269,0.947,270,1.029,271,1.029,272,0.909,273,0.673,274,1.398,275,0.947,276,0.872,277,1.029,278,0.947,279,1.029,280,0.947,281,1.029,282,0.947,283,1.029,284,0.909,285,1.029,286,0.909,287,0.872,288,1.029,289,0.947,290,1.029,291,0.947,292,1.029,293,1.029,294,0.947,295,1.029,296,0.947,297,1.029,298,0.947,299,0.987,300,0.673,301,1.029,302,0.987,303,1.588,304,0.947,305,1.029,306,0.947,307,0.987,308,1.029,309,0.947,310,1.029,311,0.947,312,1.089,313,1.029,314,0.947,315,0.947,316,0.987,317,1.029,318,0.987,319,1.029,320,0.947,321,1.029,322,0.801,323,0.836,324,1.69,325,1.029,326,1.029,327,0.011,328,0.011,346,2.239,362,3.505,372,2.49,402,2.593,444,2.593,521,3.332,581,2.038,582,3.049,592,2.734,598,4.706,628,1.814,662,2.044,707,2.128,712,4.143,765,1.908,815,3.398,817,5.048,851,2.788,878,2.258,914,4.607,918,2.891,955,2.58,984,1.504,1014,3.487,1016,1.908,1020,2.347,1065,3.284,1086,3.516,1157,2.406,1230,2.788,1243,2.788,1246,2.406,1247,2.128,1289,3.981,1308,3.505,1318,2.406,1396,2.788,1488,3.984,1609,4.616,1675,2.58,1958,4.143,1975,2.406,2067,4.143,2078,4.617,2079,5.245,2085,3.788,2099,3.505,2289,4.143,2394,3.049,2415,3.049,2529,5.245,2549,5.245,2556,5.627,2569,4.617,2644,3.049,3064,4.617,3083,3.398,3084,5.338,3085,5.338,3086,5.338,3087,5.338,3088,6.063,3089,3.928,3090,3.928,3091,3.928,3092,5.338,3093,5.338,3094,5.338,3095,3.928,3096,3.928,3097,4.617,3098,5.338,3099,3.928,3100,5.338,3101,3.928,3102,3.928,3103,3.928,3104,3.398,3105,3.928,3106,3.398,3107,3.398,3108,3.928,3109,3.928,3110,3.928,3111,3.928,3112,3.398,3113,3.928,3114,3.928,3115,3.928,3116,3.928,3117,3.928,3118,3.928,3119,3.928,3120,3.928,3121,3.928,3122,3.928]],["title/injectables/ToastService.html",[65,1.956,590,0.468]],["body/injectables/ToastService.html",[0,0.314,3,0.271,4,0.176,9,0.132,13,0.44,27,1.049,40,0.221,41,0.601,51,0.75,65,3.613,66,0.866,70,0.958,71,0.017,72,0.28,73,0.356,74,0.871,76,1.309,79,0.83,80,1.902,85,0.674,92,0.82,118,0.546,128,3.516,132,1.89,134,1.003,135,0.792,147,1.537,153,0.339,156,0.268,165,0.154,166,0.292,167,0.91,168,1.003,213,4.206,215,2.785,324,1.825,327,0.012,328,0.012,372,2.342,397,1.489,398,2.566,443,4.017,444,3.426,479,4.017,480,3.747,537,2.814,581,2.256,590,0.75,600,1.32,648,1.625,662,2.342,745,4.748,772,4.748,914,4.631,918,3.314,1014,3.666,1050,2.972,1086,3.485,1209,3.516,1289,4.017,1488,3.747,1504,3.175,1609,5.005,1925,4.183,1974,5.292,2067,4.748,2085,4.342,2099,4.017,2105,4.748,2653,5.474,2936,4.748,3097,5.292,3123,4.183,3124,6.118,3125,6.118,3126,6.118,3127,6.118,3128,4.836,3129,4.836,3130,4.836,3131,4.836,3132,4.836,3133,4.836,3134,4.836]],["title/interfaces/User.html",[138,0.684,572,0.493]],["body/interfaces/User.html",[3,0.143,4,0.143,9,0.108,13,0.258,15,0.876,27,0.916,31,0.616,40,0.18,41,0.525,51,0.483,71,0.017,72,0.321,73,0.355,76,0.675,77,1.507,79,0.823,81,3.793,83,0.838,85,0.717,92,0.622,114,0.873,118,0.658,133,1.525,135,1.15,138,1.43,147,1.343,148,0.737,153,0.297,156,0.218,165,0.17,166,0.238,167,0.878,168,0.588,177,1.327,192,0.916,248,1.875,327,0.011,328,0.011,369,1.93,376,1.722,397,0.873,398,2.73,406,2.895,410,1.797,420,2.141,433,1.881,436,1.958,438,1.442,439,3.488,444,3.163,446,2.188,448,2.141,463,2.242,465,3.51,472,2.468,474,1.817,475,2.597,476,1.762,477,2.738,490,2.572,513,2.385,514,2.284,515,3.012,527,2.35,531,2.411,537,2.242,541,2.324,572,0.783,574,1.442,576,1.722,585,1.875,590,0.655,591,1.912,594,1.442,599,1.381,600,1.074,604,2.141,605,1.912,606,2.468,607,1.576,608,2.141,609,1.912,610,2.545,611,2.597,614,3.163,645,1.912,661,3.072,667,3.51,669,3.274,680,3.596,701,2.016,737,2.132,755,2.926,863,3.741,865,2.597,872,2.468,873,2.242,879,2.793,884,2.585,900,2.944,984,1.507,1013,2.016,1107,4.035,1157,2.411,1201,3.072,1417,3.51,1475,3.741,1482,3.51,1966,4.62,1999,4.148,2018,4.71,2166,3.51,2190,3.51,2527,3.055,2660,4.275,2670,4.62,2704,4.148,2730,4.62,2731,4.982,2732,4.62,2733,4.62,2734,4.62,2735,4.62,2736,4.62,2737,4.62,2884,3.274,2933,3.793,2985,3.055,3135,3.055,3136,4.624,3137,4.624,3138,4.624,3139,4.624,3140,5.632,3141,4.624,3142,4.624,3143,4.624,3144,4.624,3145,4.624,3146,4.624,3147,4.624,3148,4.624,3149,4.624,3150,3.405,3151,3.405,3152,3.405,3153,3.405,3154,5.25,3155,4.624,3156,4.624,3157,3.405,3158,3.405,3159,3.405,3160,3.405,3161,3.405,3162,3.405,3163,3.405,3164,3.405]],["title/interfaces/UserData.html",[572,0.493,1574,2.508]],["body/interfaces/UserData.html",[0,0.254,3,0.111,4,0.111,6,1.065,9,0.194,13,0.199,15,1.093,16,2.169,18,3.158,19,1.649,21,2.432,25,0.646,26,0.646,27,0.521,29,1.07,31,0.475,32,0.763,33,3.158,34,1.434,38,0.763,40,0.266,41,0.437,54,1.216,61,0.454,63,3.738,64,2.678,65,2.971,71,0.017,72,0.139,73,0.325,75,3.158,76,0.763,78,1.163,79,0.838,80,0.732,83,0.947,86,3.158,91,2.678,92,0.795,94,1.216,95,1.402,96,1.475,100,1.162,101,1.994,106,1.065,113,2.155,114,0.674,115,2.044,116,2.432,118,0.525,129,2.125,132,1.628,133,1.925,134,0.454,137,4.088,138,1.288,144,1.645,148,0.833,150,3.459,151,1.645,153,0.403,156,0.169,157,3.158,158,1.475,159,1.86,163,0.938,164,1.994,165,0.168,166,0.184,167,0.947,168,1.042,173,2.162,177,1.039,178,2.155,179,3.738,182,1.335,183,1.556,187,1.556,192,1.322,198,0.87,208,1.335,212,3.027,213,2.853,214,1.274,215,2.017,217,2.357,247,2.853,248,1.848,255,2.559,256,2.698,272,1.03,273,1.232,284,1.03,327,0.009,328,0.009,343,2.558,346,1.274,360,1.216,366,2.55,369,0.9,376,0.979,400,1.475,420,2.323,433,0.795,444,1.475,457,1.556,465,3.459,469,3.738,508,1.745,537,1.274,571,1.628,572,0.68,573,3.078,574,1.113,576,1.434,579,3.239,580,3.239,586,1.645,589,1.645,592,1.556,594,1.113,596,3.333,601,3.553,629,2.155,674,2.357,675,3.333,707,1.645,717,3.142,718,1.745,719,1.745,720,1.86,729,1.994,738,1.475,754,2.726,767,1.556,798,2.357,837,2.922,853,2.922,855,3.158,856,3.158,857,3.158,858,3.158,882,3.142,918,1.645,932,2.155,954,1.86,957,2.357,983,2.155,1019,3.158,1020,1.957,1039,1.561,1073,4.084,1080,1.745,1083,1.475,1084,2.155,1145,2.853,1146,1.994,1147,1.556,1199,1.745,1245,2.726,1247,3.142,1266,1.994,1274,1.994,1283,1.86,1310,3.333,1440,2.726,1444,2.726,1453,0.979,1456,1.86,1464,3.459,1481,2.155,1516,2.155,1517,2.357,1518,2.357,1519,2.155,1520,2.627,1521,4.792,1522,4.502,1523,1.994,1524,1.994,1525,2.627,1526,4.557,1527,2.357,1528,2.357,1529,2.627,1530,2.627,1531,2.627,1532,2.627,1533,2.627,1536,2.627,1539,2.357,1543,2.627,1544,2.627,1545,2.627,1546,2.627,1548,3.158,1549,3.85,1550,2.627,1552,4.557,1555,2.357,1556,2.627,1557,4.557,1558,4.557,1560,2.627,1561,4.088,1564,2.627,1565,1.994,1566,2.357,1567,2.155,1568,2.155,1569,2.627,1570,4.088,1571,3.454,1572,2.627,1573,2.558,1574,4.581,1575,2.28,1576,5.341,1577,5.582,1578,5.582,1579,2.627,1580,2.627,1581,2.627,1582,5.008,1583,2.627,1584,2.627,1585,2.627,1586,2.627,1587,2.155,1588,2.627,1589,2.627,1590,2.627,1591,2.627,1592,2.627,1593,2.627,1594,1.994,1595,2.627,1596,2.627,1597,1.86,1598,2.627,1599,2.627,1600,2.627,1601,2.627,1602,2.627,1603,2.627,1604,2.627,1605,2.627,1606,2.627,1607,4.557,1608,2.627,1609,3.738,1610,2.627,1611,2.627,1612,2.627,1613,2.627,1614,2.627,1615,2.627,1616,2.627,1617,2.357,1618,2.627,1619,4.557,1620,2.627,1621,2.627,1622,2.627,1623,2.627,1624,2.627,1625,2.357,1626,2.627,1627,2.627,1628,2.627,1629,3.85,1630,2.627,1631,2.627,1632,2.627,1633,2.627,1634,4.557,1635,2.627,1636,2.627,1637,2.627,1638,2.627,1639,2.627,1640,2.627,1641,3.85,1642,2.627,1643,5.017,1644,2.357,1645,3.85,1646,2.922,1647,3.454,1648,3.454,1649,2.627,1650,2.627,1651,2.627,1652,2.627,1653,2.357,1654,2.357,1655,2.627,1656,2.627,1657,2.627,1658,2.627,1659,2.627,1660,2.627,1661,5.341,1662,2.627,1663,2.627,1664,2.627,1665,2.627,1666,2.627,1667,3.454,1668,2.627,1669,2.627,1670,6.034,1671,2.627,1672,2.627,1673,1.86,1674,2.627,1675,1.994,1676,2.155,1677,2.627,1678,2.155,1679,2.627,1680,2.627,1681,2.357,1682,2.627,1683,2.627,1684,2.627,1685,3.85,1686,2.627,1687,2.627,1688,2.627,1689,2.627,1690,2.627,1691,2.627,1692,2.627,1693,2.627,1694,2.627,1695,3.85,1696,2.627,1697,2.627,1698,2.627,1699,2.627]],["title/injectables/UserLikedSongsService.html",[590,0.468,3165,2.964]],["body/injectables/UserLikedSongsService.html",[3,0.153,4,0.153,9,0.115,13,0.456,15,1.027,28,1.197,31,0.873,40,0.192,51,0.684,61,0.626,66,0.942,70,1.046,71,0.017,72,0.306,73,0.306,74,0.951,76,0.956,77,2.946,79,0.906,83,1.187,85,0.848,92,0.777,111,2.857,114,1.238,115,1.978,116,2.801,118,0.617,133,1.748,138,1.358,141,2.575,153,0.348,156,0.233,165,0.134,166,0.254,167,0.862,168,0.936,177,1.328,192,1.074,193,2.754,195,2.976,198,0.82,327,0.011,328,0.011,335,2.135,369,2.119,376,1.797,397,0.931,410,1.875,433,1.461,438,2.043,446,2.491,448,2.234,474,2.575,476,1.345,513,2.674,514,2.343,571,1.296,581,1.409,588,4.386,590,0.684,591,2.037,595,3.474,599,1.956,600,1.144,602,3.416,605,3.245,606,2.575,607,1.679,608,2.234,609,2.037,610,2.801,612,1.875,613,3.839,614,3.245,620,3.205,622,3.205,624,2.41,627,3.205,641,3.205,643,2.754,648,1.409,650,2.568,701,3.422,718,3.205,719,3.205,738,2.709,852,3.416,887,3.416,909,3.662,984,1.605,1013,2.857,1032,3.645,1052,4.764,1083,2.709,1119,3.897,1378,3.205,1453,1.797,1707,3.662,1709,4.329,1710,4.329,1711,5.184,1712,3.254,1713,3.254,1714,3.254,1715,3.254,1716,3.254,1718,4.329,1738,3.254,2740,4.26,3165,5.184,3166,6.412,3167,3.627,3168,5.577,3169,4.193,3170,4.193,3171,5.577,3172,4.193,3173,4.193,3174,5.577,3175,4.193,3176,4.193,3177,4.193,3178,4.193,3179,4.193,3180,5.577,3181,5.577]],["title/injectables/UserService.html",[420,1.53,590,0.468]],["body/injectables/UserService.html",[3,0.141,4,0.141,9,0.106,13,0.444,15,1.06,27,0.664,31,0.827,40,0.177,51,0.793,61,0.578,66,0.923,70,1.059,71,0.017,72,0.32,73,0.338,74,0.921,76,0.906,77,2.024,79,0.948,81,2.748,83,1.125,85,0.823,92,0.752,114,1.173,118,0.637,133,1.756,135,1.224,138,1.443,147,0.973,148,0.989,153,0.293,156,0.215,165,0.168,166,0.234,167,0.873,168,0.899,177,1.323,192,0.906,248,1.358,327,0.011,328,0.011,369,2.071,376,2.083,397,0.859,398,2.216,406,2.097,410,2.348,420,2.589,433,2.015,436,2.369,438,1.936,439,3.458,444,1.881,446,1.301,448,2.589,463,1.624,465,2.542,472,2.985,474,2.44,475,1.881,476,1.632,477,3.312,490,2.205,513,2.619,514,2.553,515,3.161,527,1.702,531,3.237,537,1.624,541,2.304,572,0.682,576,1.247,585,1.358,590,0.648,591,1.881,594,1.936,599,1.854,600,1.057,604,1.551,605,3.141,606,2.44,607,1.551,608,2.117,609,1.881,610,2.93,611,3.141,614,3.141,645,2.567,648,1.301,650,2.371,661,2.225,667,2.542,669,2.371,680,2.707,701,2.707,737,2.863,755,2.589,863,2.225,865,1.881,872,1.788,873,1.624,879,3.751,884,3.471,900,3.161,984,1.482,1013,2.707,1019,4.271,1107,3.458,1157,3.237,1201,2.225,1417,2.542,1475,3.037,1482,2.542,1966,5.166,1999,3.005,2018,5.253,2166,2.542,2190,2.542,2527,4.102,2660,2.542,2670,3.751,2704,4.102,2730,2.748,2731,3.751,2732,2.748,2733,2.748,2734,2.748,2735,2.748,2736,2.748,2737,2.748,2884,3.686,2933,2.748,2985,3.005,3135,3.005,3136,3.349,3137,3.349,3138,3.349,3139,3.349,3140,4.572,3141,3.349,3142,3.349,3143,3.349,3144,3.349,3145,3.349,3146,3.349,3147,3.349,3148,3.349,3149,3.349,3150,4.572,3151,4.572,3152,4.572,3153,4.572,3154,5.205,3155,4.572,3156,4.572,3157,3.349,3158,3.349,3159,3.349,3160,4.572,3161,5.593,3162,4.572,3163,4.572,3164,3.349,3182,5.285,3183,5.285,3184,3.872,3185,3.872,3186,3.872,3187,3.872,3188,3.872,3189,3.872,3190,3.872]],["title/injectables/ZipExportService.html",[590,0.468,1189,2.069]],["body/injectables/ZipExportService.html",[3,0.176,4,0.176,5,1.32,6,2.354,9,0.193,15,0.792,28,1.203,40,0.221,51,0.75,66,0.866,70,0.958,71,0.016,72,0.28,73,0.307,74,0.871,85,0.739,92,0.712,107,2.619,118,0.592,153,0.268,156,0.268,165,0.154,166,0.292,168,1.11,177,0.867,192,1.247,251,3.432,258,1.119,273,0.829,323,1.029,327,0.012,328,0.012,366,2.69,397,1.073,448,1.937,467,3.432,492,2.962,495,2.962,571,1.89,590,0.75,600,1.32,632,3.432,634,2.349,648,1.625,726,2.477,766,3.753,769,3.432,867,4.407,918,2.619,952,4.111,1039,2.146,1056,3.857,1072,3.175,1089,3.753,1135,4.017,1139,3.753,1148,3.432,1160,3.613,1189,3.314,1190,4.777,1193,2.962,1195,3.175,1206,5.13,1207,4.956,1215,2.962,1237,3.432,1297,2.962,1394,3.314,1408,3.857,1426,4.017,1440,4.552,1444,4.32,1456,2.962,1457,3.432,1458,3.432,1459,3.432,1460,3.432,1461,3.432,1573,3.516,1575,2.477,1617,3.753,1625,3.753,1673,2.962,1848,4.183,1997,4.183,2064,3.753,2335,3.432,2397,4.183,2670,4.342,2855,4.183,3041,5.292,3042,5.805,3112,4.183,3191,5.474,3192,3.753,3193,6.118,3194,6.118,3195,7.053,3196,6.118,3197,4.836,3198,6.118,3199,4.836,3200,7.636,3201,4.836,3202,4.748,3203,4.836,3204,4.836,3205,4.836,3206,5.805,3207,4.836,3208,4.836,3209,4.836,3210,4.836,3211,4.836,3212,4.836,3213,4.836,3214,4.836,3215,4.836,3216,4.836,3217,4.836,3218,6.118,3219,4.836,3220,6.118,3221,4.183,3222,7.053,3223,4.836,3224,4.836,3225,4.836,3226,4.836,3227,4.836,3228,4.836,3229,4.183,3230,4.836,3231,4.836,3232,4.836,3233,4.836,3234,4.836,3235,4.183,3236,4.836,3237,4.836,3238,4.836,3239,4.836]],["title/coverage.html",[1217,3.439]],["body/coverage.html",[0,0.329,1,0.958,5,0.744,9,0.109,10,3.437,11,3.084,12,3.437,15,0.651,27,1.045,29,0.622,35,0.958,64,1.835,65,2.035,71,0.017,73,0.182,100,0.651,138,0.712,161,2.82,198,1.467,253,4.706,263,0.958,265,0.958,267,0.998,269,0.958,272,0.919,275,0.958,276,1.194,278,0.958,280,0.958,282,0.958,284,0.919,286,0.919,289,0.958,291,0.958,294,0.958,296,0.958,298,1.297,299,0.998,302,0.998,304,0.958,306,0.958,309,0.958,311,0.958,314,0.958,315,0.958,318,0.998,320,0.958,322,0.81,324,0.919,327,0.011,328,0.011,329,3.437,353,2.82,379,3.084,396,3.437,407,2.283,420,1.591,429,2.035,430,2.82,431,2.82,502,2.913,504,3.084,512,3.084,513,1.456,572,1.001,573,1.835,575,4.175,585,1.394,590,0.959,599,1.394,601,2.434,658,3.437,683,2.82,767,2.035,859,4.175,877,1.591,882,2.152,930,3.437,931,3.437,1009,2.609,1010,4.175,1011,4.175,1029,2.82,1032,1.835,1119,1.93,1159,2.609,1160,3.843,1161,4.046,1162,4.638,1187,2.152,1189,2.152,1192,2.152,1196,2.609,1204,2.434,1216,2.283,1217,2.609,1394,2.152,1408,2.283,1468,2.283,1469,3.437,1516,4.328,1517,4.175,1518,4.175,1519,4.328,1568,2.82,1574,2.609,1701,4.175,1749,4.175,1750,4.175,1751,3.437,1752,3.437,1820,3.437,1821,3.437,1898,3.437,1899,3.084,1900,3.437,1909,2.283,1930,3.437,1941,3.437,1956,3.437,1957,3.437,1978,3.437,1979,4.175,2075,3.437,2076,3.437,2095,3.437,2096,3.437,2109,3.437,2143,2.609,2282,3.437,2283,3.084,2284,3.437,2321,4.175,2322,4.175,2405,3.437,2406,3.437,2418,3.437,2473,3.818,2509,3.437,2530,3.437,2545,4.175,2546,4.175,2638,4.175,2639,3.084,2640,3.084,2641,4.175,2649,3.437,2713,4.175,2786,3.437,2787,3.437,2788,3.437,2832,3.084,2833,3.084,2835,3.437,2851,3.437,2852,3.437,2853,3.437,2858,3.437,2872,4.292,2881,2.434,2882,2.434,2883,2.434,2928,3.437,2929,3.437,2987,4.175,3007,3.084,3073,2.82,3083,3.437,3123,3.437,3135,4.175,3165,3.084,3166,3.437,3167,3.437,3191,4.175,3192,4.175,3202,3.084,3240,3.973,3241,3.973,3242,7.821,3243,6.099,3244,3.973,3245,3.973,3246,3.973,3247,6.099,3248,6.099,3249,4.653,3250,7.821,3251,3.437,3252,3.437,3253,3.437,3254,3.437,3255,3.437,3256,3.437,3257,5.379,3258,6.829,3259,3.973,3260,5.379,3261,5.379,3262,7.199,3263,5.379,3264,5.379,3265,5.379,3266,3.973,3267,3.973,3268,3.973,3269,3.973,3270,3.973,3271,3.973,3272,3.973,3273,3.973,3274,3.973,3275,3.973,3276,3.973,3277,3.973,3278,7.199,3279,6.536,3280,5.379,3281,5.379,3282,3.437,3283,3.973,3284,3.973,3285,3.973,3286,3.437,3287,3.437,3288,5.907,3289,3.437,3290,3.437,3291,3.437,3292,3.437,3293,3.973]],["title/dependencies.html",[69,2.356,1432,2.087]],["body/dependencies.html",[69,2.994,71,0.016,156,0.324,158,2.84,163,1.806,327,0.014,328,0.014,360,2.341,375,5.661,376,2.213,377,5.057,500,5.057,1028,3.839,1434,3.36,1561,4.537,1570,5.331,1571,4.537,1944,5.057,2111,4.149,2173,5.942,2199,5.057,2572,4.537,3294,7.951,3295,5.846,3296,5.846,3297,5.846,3298,5.846,3299,5.846,3300,5.846,3301,5.846,3302,5.846,3303,5.846,3304,5.057,3305,5.846,3306,5.846,3307,5.846,3308,5.846,3309,5.846,3310,5.846,3311,5.846,3312,5.846,3313,5.846,3314,5.846,3315,5.846,3316,5.846,3317,5.846,3318,5.846,3319,5.846]],["title/index.html",[40,0.175,3206,3.304]],["body/index.html",[2,0.921,15,0.68,16,2.597,19,1.001,21,1.741,27,1.069,28,1.192,29,1.184,69,2.127,71,0.016,77,2.547,78,2.121,90,3.592,91,2.558,100,1.227,102,4.426,103,1.663,106,1.456,115,2.07,116,2.324,129,2.284,133,1.882,138,1.278,141,2.879,147,1.043,150,2.726,153,0.23,165,0.132,222,1.826,247,3.378,248,2.334,255,2.692,256,3.408,257,0.921,273,0.712,276,0.921,298,1.001,300,1.222,307,1.043,312,1.13,327,0.011,328,0.011,332,2.386,334,2.127,335,2.121,360,2.219,366,1.826,398,2.99,401,4.095,402,3.675,406,2.249,409,2.947,410,1.862,441,4.3,443,2.726,472,1.917,496,3.638,515,2.324,527,1.826,537,1.741,541,2.121,571,1.283,573,3.361,576,1.338,577,2.386,586,2.249,589,2.249,594,1.521,595,3.029,597,2.726,604,2.219,635,2.017,660,4.722,661,3.824,662,2.388,663,3.82,667,2.726,669,3.82,671,2.947,672,3.592,673,3.394,675,3.184,705,4.84,708,2.096,711,2.947,714,3.222,717,3.001,725,2.947,737,2.249,755,2.219,765,3.029,767,2.127,847,3.222,867,3.638,877,2.497,880,4.3,884,2.726,889,3.222,932,2.947,952,2.543,954,3.394,960,4.793,961,3.592,1012,2.947,1016,3.029,1050,3.029,1067,2.249,1069,3.222,1073,2.543,1107,2.386,1129,4.426,1138,2.947,1209,2.386,1211,4.369,1213,2.386,1214,3.932,1222,2.726,1277,3.82,1378,3.184,1408,3.584,1426,2.726,1434,2.386,1521,3.222,1522,3.222,1523,2.726,1566,3.222,1567,2.947,1644,3.222,1673,2.543,1675,2.726,1676,2.947,1678,2.947,1766,4.793,1772,3.638,1822,3.592,1824,3.932,1858,3.222,1901,3.592,1921,3.592,1983,3.592,2022,3.592,2024,3.592,2025,3.592,2039,3.592,2052,4.793,2053,3.592,2058,3.592,2097,2.947,2114,4.84,2141,4.3,2143,2.726,2161,3.638,2187,3.222,2190,2.726,2290,3.932,2382,3.592,2408,3.592,2419,3.592,2516,3.592,2525,3.592,2532,3.222,2544,4.793,2548,3.592,2624,5.394,2642,6.398,2644,3.222,2648,3.222,2650,3.592,2653,3.222,2854,3.592,2861,3.592,2890,2.543,2933,2.947,3104,3.592,3221,3.592,3229,4.793,3235,3.592,3320,4.152,3321,4.152,3322,4.152,3323,4.152,3324,5.541,3325,5.541,3326,4.152,3327,4.152,3328,4.152,3329,4.152,3330,5.541,3331,4.152,3332,4.152,3333,3.592,3334,4.152,3335,4.152,3336,4.152,3337,5.541,3338,4.152,3339,4.152,3340,4.152,3341,4.152,3342,4.152,3343,4.152,3344,4.152,3345,4.152,3346,4.152,3347,4.152,3348,5.541,3349,4.152,3350,4.152,3351,4.152,3352,4.152,3353,4.152,3354,3.592,3355,3.592,3356,3.592,3357,4.152,3358,4.152,3359,6.236,3360,5.541,3361,5.541,3362,4.152,3363,4.152,3364,4.152,3365,4.152,3366,4.152,3367,5.541,3368,4.152,3369,4.152,3370,4.152,3371,4.152,3372,4.152,3373,4.152,3374,4.152,3375,4.152,3376,4.152,3377,4.152,3378,4.152,3379,4.152,3380,4.152,3381,4.152,3382,4.152,3383,4.152,3384,4.152,3385,4.152,3386,4.152,3387,4.152,3388,4.152,3389,4.152,3390,4.152,3391,4.152,3392,4.152,3393,4.152,3394,4.152,3395,4.152,3396,4.152,3397,4.152,3398,4.152,3399,4.152,3400,4.152,3401,4.152,3402,4.152,3403,4.152,3404,4.152,3405,4.152,3406,4.152,3407,4.152,3408,4.152,3409,4.152,3410,5.541,3411,4.152,3412,4.152,3413,4.152,3414,4.152,3415,4.152]],["title/modules.html",[2363,3.439]],["body/modules.html",[71,0.014,327,0.014,328,0.014,376,2.037,2363,4.151,3071,4.486,3416,6.322,3417,6.322,3418,6.322]],["title/overview.html",[1213,3.009]],["body/overview.html",[2,1.33,69,3.07,71,0.016,198,1.172,257,1.33,322,1.609,327,0.014,328,0.014,564,4.652,571,1.852,574,2.196,648,2.015,1187,3.992,1189,3.992,1192,3.992,1205,3.936,1213,3.445,1548,4.254,2014,5.185,2165,5.409,2362,4.947,3071,5.707,3072,5.185,3073,4.254,3074,4.652,3075,5.185,3076,5.185,3077,5.185,3078,5.185,3419,5.185,3420,5.185]],["title/properties.html",[41,0.452,1432,2.087]],["body/properties.html",[41,0.623,71,0.015,327,0.014,328,0.014,1475,3.641,3421,6.335]],["title/routes.html",[1216,3.009]],["body/routes.html",[71,0.014,327,0.014,328,0.014,1216,3.653]],["title/miscellaneous/variables.html",[3422,2.749,3423,3.979]],["body/miscellaneous/variables.html",[9,0.095,15,0.57,21,1.46,27,1.059,31,1.218,40,0.159,71,0.017,72,0.355,73,0.338,76,0.597,78,1.333,114,1.262,132,1.076,134,1.123,135,1.232,148,0.652,182,3.398,198,1.51,222,1.531,248,1.722,250,2.702,327,0.01,328,0.01,330,2.001,333,2.286,334,3.462,360,2.278,362,3.224,366,1.531,376,1.582,398,3.154,403,2.702,433,0.912,448,1.394,475,1.691,494,2.763,495,2.132,514,2.285,550,2.702,571,1.076,599,2.285,607,1.394,611,1.691,708,2.597,726,1.783,737,2.659,746,3.011,765,1.691,862,3.568,863,4.441,864,4.733,877,2.278,900,2.059,918,1.885,1038,3.224,1039,1.722,1062,3.007,1067,1.885,1135,2.286,1160,2.913,1161,2.001,1195,4.56,1199,2.001,1204,3.484,1208,3.557,1216,3.884,1227,3.484,1235,2.286,1264,2.471,1394,2.659,1434,3.991,1435,3.484,1437,3.007,1471,2.702,1472,3.011,1473,3.011,1474,3.011,1475,2.821,1483,4.247,1484,4.247,1486,3.011,1501,6.134,1504,3.224,1506,5.634,1539,3.81,1654,2.702,1673,2.132,1675,2.286,1676,2.471,1678,2.471,1681,2.702,1754,2.471,1877,3.011,1899,2.702,1917,2.132,2136,3.011,2143,3.224,2166,2.286,2190,3.224,2321,2.702,2322,3.81,2363,2.286,2394,3.81,2415,4.414,2463,2.702,2473,2.471,2545,2.702,2546,3.81,2572,2.702,2639,2.702,2640,3.81,2714,2.702,2832,2.702,2833,3.81,2886,2.286,2890,2.132,2936,4.414,2987,3.81,3007,3.81,3015,3.011,3073,4.036,3074,3.81,3106,4.247,3107,3.011,3191,2.702,3192,3.81,3202,3.81,3249,3.011,3251,4.92,3252,3.011,3253,4.247,3254,3.011,3255,4.247,3256,3.011,3282,3.011,3286,3.011,3287,3.011,3288,3.011,3289,4.247,3290,4.247,3291,4.247,3292,4.247,3304,4.247,3333,3.011,3354,3.011,3355,3.011,3356,3.011,3419,3.011,3420,3.011,3422,4.247,3423,3.011,3424,6.513,3425,3.481,3426,3.481,3427,3.481,3428,3.481,3429,4.909,3430,3.481,3431,3.481,3432,3.481,3433,3.481,3434,3.481,3435,3.481,3436,3.481,3437,3.481,3438,3.481,3439,3.481,3440,3.481,3441,4.909,3442,4.909,3443,3.481,3444,3.481,3445,3.481,3446,3.481,3447,3.481,3448,3.481,3449,3.481,3450,3.481,3451,3.481,3452,4.909,3453,3.481,3454,3.481,3455,3.481,3456,3.481,3457,3.481,3458,3.481,3459,3.481,3460,3.481,3461,3.481,3462,3.481,3463,3.481,3464,3.481,3465,3.481,3466,3.481,3467,3.481,3468,3.481,3469,3.481,3470,4.909,3471,3.481,3472,3.481,3473,3.481,3474,3.481,3475,3.481,3476,3.481,3477,3.481,3478,3.481,3479,3.481,3480,4.909,3481,3.481,3482,3.481,3483,4.909,3484,3.481,3485,3.481,3486,3.481,3487,3.481,3488,4.909,3489,3.481,3490,4.909,3491,3.481,3492,3.481,3493,3.481,3494,3.481,3495,3.481,3496,3.481,3497,3.481,3498,3.481,3499,3.481,3500,3.481,3501,3.481,3502,3.481,3503,3.481,3504,3.481,3505,3.481,3506,3.481,3507,3.481,3508,3.481,3509,3.481,3510,3.481,3511,3.481,3512,3.481,3513,3.481,3514,3.481,3515,3.481,3516,3.481,3517,3.481,3518,3.481,3519,3.481,3520,3.481,3521,3.481,3522,3.481,3523,3.481,3524,3.481,3525,3.481,3526,3.481,3527,3.481,3528,6.177,3529,3.481,3530,3.481,3531,6.177,3532,3.481,3533,3.481,3534,3.481,3535,4.909,3536,4.909,3537,3.481,3538,3.481,3539,4.909,3540,3.481,3541,3.481,3542,3.481,3543,3.481,3544,3.481]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":803,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":3421,"title":{},"body":{"properties.html":{}}}],["0.125rem",{"_index":1316,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15.0",{"_index":3319,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":1304,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.18.5",{"_index":3317,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3",{"_index":2621,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.375rem",{"_index":1323,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.543.0",{"_index":3309,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":1296,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":1269,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":1309,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":1311,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":1260,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":3243,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":3246,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":3245,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3247,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3241,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3244,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":1330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":1329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":1307,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["009688",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":811,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":1882,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":1881,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0–1",{"_index":1846,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/ZipExportService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":801,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":807,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":3311,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1298,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1/1",{"_index":3250,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":3280,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["100,000,000",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["1000",{"_index":847,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["100px",{"_index":2506,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":1233,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":2392,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["10rem",{"_index":962,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":746,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["110",{"_index":1679,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["111",{"_index":2627,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1317,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["13",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":3248,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3015,"title":{},"body":{"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["143",{"_index":1658,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["145",{"_index":1659,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["15",{"_index":3420,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":3310,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3257,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1877,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":3269,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3419,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["17/17",{"_index":3261,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":3294,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":3299,"title":{},"body":{"dependencies.html":{}}}],["1c7430",{"_index":1337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":1336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":1282,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":1254,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":1248,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1st",{"_index":1853,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["2",{"_index":366,"title":{},"body":{"components/AiComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1045,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":3316,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3265,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":3263,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1273,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2025",{"_index":757,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{}}}],["20px",{"_index":2387,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["2196f3",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":3259,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":1660,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["23px",{"_index":2508,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":2654,"title":{},"body":{"injectables/PostApiService.html":{}}}],["25.9.21",{"_index":3525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25/25",{"_index":3268,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1287,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["255",{"_index":1666,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["28/28",{"_index":3277,"title":{},"body":{"coverage.html":{}}}],["28a745",{"_index":1267,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["29",{"_index":2014,"title":{},"body":{"injectables/GeminiApiService.html":{},"overview.html":{}}}],["29/29",{"_index":3283,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":1249,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1673,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":3306,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3279,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1667,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["30/31",{"_index":3275,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":846,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3000",{"_index":1609,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["300ms",{"_index":1349,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["31/31",{"_index":3267,"title":{},"body":{"coverage.html":{}}}],["320kbps",{"_index":2893,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["33",{"_index":1671,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["350",{"_index":2163,"title":{},"body":{"components/GraphsComponent.html":{}}}],["38/38",{"_index":3272,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1675,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.0.3",{"_index":3302,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":3305,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3303,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3300,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3278,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":957,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["46",{"_index":1672,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["48",{"_index":1682,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["495057",{"_index":1292,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4caf50",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e555b",{"_index":1334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":1303,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1676,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":3307,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3258,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3285,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["500",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/HeatmapSummary.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["5000",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["500x500",{"_index":2895,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["50x50",{"_index":2894,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["545b62",{"_index":1333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["55",{"_index":1674,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["58",{"_index":1641,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["59",{"_index":1747,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":1678,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6/6",{"_index":3281,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2684,"title":{},"body":{"injectables/PostApiService.html":{}}}],["600",{"_index":1291,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["607d8b",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c757d",{"_index":1261,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":1681,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3260,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1651,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8",{"_index":1199,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3262,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3284,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1677,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["8bc34a",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1654,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["9/9",{"_index":3264,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":3274,"title":{},"body":{"coverage.html":{}}}],["96kbps",{"_index":2892,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["999",{"_index":1748,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":2269,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.click",{"_index":1460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":1458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.expense_count",{"_index":906,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.href",{"_index":1457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.name.localecompare(b.name",{"_index":907,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.style.display",{"_index":3239,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a.time.split(\":\").map(number",{"_index":2243,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a4",{"_index":1633,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["ability",{"_index":3387,"title":{},"body":{"index.html":{}}}],["above",{"_index":1489,"title":{},"body":{"injectables/ConfigService.html":{}}}],["acc",{"_index":829,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accepted",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["accepts",{"_index":336,"title":{},"body":{"components/AiComponent.html":{}}}],["acceptsuggestiononenter",{"_index":3030,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":2527,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accessed",{"_index":598,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["accesses",{"_index":2659,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":2136,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1124,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["account",{"_index":3144,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["accurate",{"_index":1104,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":1422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":1268,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["activation",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["active",{"_index":873,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["activepath",{"_index":2866,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual",{"_index":2515,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["actual_component",{"_index":326,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":917,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/UserLikedSongsService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["add(data",{"_index":620,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["added",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["additional",{"_index":1139,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["addorupdateheatmapsummary",{"_index":690,"title":{},"body":{"components/CalendarComponent.html":{}}}],["addorupdateheatmapsummary(color",{"_index":703,"title":{},"body":{"components/CalendarComponent.html":{}}}],["address",{"_index":3143,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["adjusted",{"_index":1709,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["afterviewinit",{"_index":2549,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["again",{"_index":1430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["aggregates",{"_index":2562,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ahours",{"_index":2240,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":330,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":264,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":345,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":263,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasybkbmhcsvna6d8bpyjqqhbpdymn7_nvm2w",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1070,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["albumname",{"_index":1090,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1117,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albums",{"_index":2834,"title":{},"body":{"components/SearchMusicComponent.html":{}}}],["align",{"_index":1245,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["alignment",{"_index":1968,"title":{},"body":{"components/FormModelComponent.html":{}}}],["all.filter(c",{"_index":925,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":643,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["all.map(item",{"_index":637,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":624,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["all.some(c",{"_index":922,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allow",{"_index":2086,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["allowed/day",{"_index":3383,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":3332,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2097,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["alongside",{"_index":1943,"title":{},"body":{"components/FooterComponent.html":{}}}],["alphabetically",{"_index":891,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["already",{"_index":709,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":632,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["amber",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":2241,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":1834,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{}}}],["amt",{"_index":1878,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":1996,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["analyze",{"_index":1101,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":2007,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["anchor",{"_index":2308,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":360,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":374,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/compiler",{"_index":3295,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":375,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":3296,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":3298,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":3289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":3436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":3118,"title":{},"body":{"components/ToastComponent.html":{}}}],["animation",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":2168,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":2042,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":2027,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":2592,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2622,"title":{},"body":{"components/PieChartComponent.html":{}}}],["aoa",{"_index":1688,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(headerrow",{"_index":1692,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["aoa.push(object.values(row",{"_index":1694,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["apexaxischartseries",{"_index":2170,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":2162,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":2173,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":2180,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":2182,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexstroke",{"_index":2184,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":2189,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":2192,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":2194,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":2174,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":2178,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":334,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":380,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":1979,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:103",{"_index":1994,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2658,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:23",{"_index":1989,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:37",{"_index":2666,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:45",{"_index":2004,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:74",{"_index":2002,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:76",{"_index":2661,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":379,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2671,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service.ts",{"_index":1011,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:154",{"_index":2708,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:34",{"_index":2711,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:39",{"_index":2712,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:44",{"_index":2707,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:63",{"_index":2709,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:80",{"_index":2710,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":1353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["api_response_app_version",{"_index":2691,"title":{},"body":{"injectables/PostApiService.html":{}}}],["apiurl",{"_index":1984,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["app_current_version",{"_index":2693,"title":{},"body":{"injectables/PostApiService.html":{}}}],["app_version",{"_index":2735,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":265,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":3253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":2053,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["appearance",{"_index":3219,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":1236,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1146,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["applicationconfig",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":3524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["appname",{"_index":1471,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1481,"title":{},"body":{"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["appversion",{"_index":1947,"title":{},"body":{"components/FooterComponent.html":{}}}],["apr",{"_index":1863,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":2274,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":2110,"title":{},"body":{"components/GraphsComponent.html":{}}}],["args",{"_index":2367,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":2369,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":2368,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arguments",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["arial",{"_index":2386,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":612,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":2222,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":2266,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":2256,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1075,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artist.name).join",{"_index":1098,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artist_name",{"_index":2896,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artistname",{"_index":2743,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["artistnames",{"_index":2875,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artists",{"_index":1071,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"components/SearchMusicComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["artistsname",{"_index":1094,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artistsname)}${formatfield('is",{"_index":1118,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["aseconds",{"_index":2242,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":2059,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":2069,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":2040,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assign",{"_index":3152,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["assigned",{"_index":888,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["assist",{"_index":2066,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":394,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["associated",{"_index":865,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["associates",{"_index":908,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["async",{"_index":350,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["attached",{"_index":1717,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attaches",{"_index":1706,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["attempting",{"_index":919,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["attribute.name",{"_index":3061,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":3063,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attributes",{"_index":2874,"title":{},"body":{"interfaces/Song.html":{}}}],["aug",{"_index":1866,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":2277,"title":{},"body":{"components/GraphsComponent.html":{}}}],["authentication",{"_index":1042,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["auto",{"_index":1289,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["autoclosingbrackets",{"_index":3027,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":3068,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":3028,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatic",{"_index":3522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":616,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":3012,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autotable",{"_index":1571,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["autotable(doc",{"_index":1649,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["available",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["averages",{"_index":2032,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":3382,"title":{},"body":{"index.html":{}}}],["await",{"_index":388,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["axis",{"_index":2177,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":904,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":905,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":2247,"title":{},"body":{"components/GraphsComponent.html":{}}}],["back",{"_index":2533,"title":{},"body":{"components/NavbarComponent.html":{}}}],["backend",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1250,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backgroundcolor",{"_index":2617,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2606,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":2496,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":2439,"title":{},"body":{"components/HomeComponent.html":{}}}],["backup",{"_index":2670,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["backup_frequency",{"_index":2730,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["backups",{"_index":3138,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["badge",{"_index":1315,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bar",{"_index":2532,"title":{},"body":{"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1038,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseinstructions",{"_index":2019,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["bash",{"_index":3224,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":2385,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["before",{"_index":918,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2636,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":2054,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["behavior",{"_index":2309,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["behaviorsubject",{"_index":2837,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":2847,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":1919,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["belongs",{"_index":2879,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["below",{"_index":1644,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["best",{"_index":1137,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1129,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["between",{"_index":1016,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":817,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":2244,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":3108,"title":{},"body":{"components/ToastComponent.html":{}}}],["blinkmacsystemfont",{"_index":1238,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":1440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["blob([content",{"_index":1616,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["block",{"_index":2831,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockcomment",{"_index":3066,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["blockkey",{"_index":2426,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":2435,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":2046,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":3106,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":2245,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1147,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["bodystyles",{"_index":1668,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1266,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["boolean",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":3073,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1252,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bordercolor",{"_index":2611,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2618,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":1253,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["box",{"_index":373,"title":{},"body":{"components/AiComponent.html":{}}}],["boxes",{"_index":3381,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":3067,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":2347,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["brightness",{"_index":1844,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["broadcast",{"_index":2539,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["broadcasting",{"_index":2301,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["browse",{"_index":3418,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":376,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/SyncSchemaService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":3290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":3081,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["browser’s",{"_index":3403,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":2246,"title":{},"body":{"components/GraphsComponent.html":{}}}],["btn",{"_index":1322,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["budget",{"_index":573,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["budget'},{'name",{"_index":268,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget_id",{"_index":578,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcomponent",{"_index":267,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetdata",{"_index":1578,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["budgetkey",{"_index":2723,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgets",{"_index":593,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetschema",{"_index":2738,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":601,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["build",{"_index":1539,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":1768,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["bullet",{"_index":2047,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":1975,"title":{},"body":{"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["button'},{'name",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":2791,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":2792,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":2788,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":2813,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2814,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":2817,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":2798,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2810,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":2805,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":2800,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":2787,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":923,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculate",{"_index":2411,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["calculates",{"_index":670,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses",{"_index":691,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":715,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":661,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":677,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":676,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":269,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":678,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":679,"title":{},"body":{"components/CalendarComponent.html":{}}}],["call",{"_index":1433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":3004,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["callbacks",{"_index":2628,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/ToastService.html":{}}}],["calls",{"_index":1048,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["cancel",{"_index":1700,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["canvas",{"_index":2566,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvasref",{"_index":2552,"title":{},"body":{"components/PieChartComponent.html":{}}}],["canvg",{"_index":3301,"title":{},"body":{"dependencies.html":{}}}],["care",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2346,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["cash",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1722,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":2591,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":999,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":998,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1727,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1726,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1725,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["categories",{"_index":877,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1723,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1705,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":990,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1702,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1703,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1594,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["categorycolors",{"_index":2553,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydata",{"_index":1577,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":921,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2721,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":2554,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":937,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2727,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":947,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":882,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["categorytotals",{"_index":2598,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":2602,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":944,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":2600,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2609,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cellwidth",{"_index":1670,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["center",{"_index":1247,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["certain",{"_index":2440,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":726,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":2155,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changemonth",{"_index":692,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":721,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/ZipExportService.html":{}}}],["changes['currentdate",{"_index":2204,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":2203,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":2143,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":2474,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":2550,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":2551,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":2546,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:101",{"_index":2560,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:116",{"_index":2563,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:140",{"_index":2561,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:160",{"_index":2564,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:188",{"_index":2571,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:22",{"_index":2584,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":2578,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:28",{"_index":2576,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:31",{"_index":2583,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:34",{"_index":2579,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:37",{"_index":2577,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:40",{"_index":2582,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:43",{"_index":2575,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:46",{"_index":2559,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:49",{"_index":2558,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:69",{"_index":2568,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:85",{"_index":2565,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:94",{"_index":2567,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2572,"title":{},"body":{"components/PieChartComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart/pie",{"_index":2473,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":2118,"title":{},"body":{"components/GraphsComponent.html":{}}}],["charts",{"_index":2111,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":2119,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":2120,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":2121,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":2073,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1009,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/HbsRenderService.html":{}}}],["checks",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["choiceresult.outcome",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["chosen",{"_index":3359,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["classes",{"_index":815,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["clear",{"_index":1396,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["clears",{"_index":730,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleartimeout(this.savetimeout",{"_index":1364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cli",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["clickedinside",{"_index":2317,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicking",{"_index":2287,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":969,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close",{"_index":971,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["closed",{"_index":1776,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/SearchButtonComponent.html":{}}}],["closedownloaddatamodal",{"_index":1531,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["closemodal",{"_index":693,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["closemodel",{"_index":1962,"title":{},"body":{"components/FormModelComponent.html":{}}}],["closes",{"_index":729,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/UserData.html":{}}}],["closing",{"_index":1756,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_templateplaygroundmodule",{"_index":3075,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":3077,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":3076,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":3078,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":604,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/Session.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["coded",{"_index":3370,"title":{},"body":{"index.html":{}}}],["color",{"_index":708,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":2502,"title":{},"body":{"components/HomeComponent.html":{}}}],["colors",{"_index":769,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{}}}],["column",{"_index":1232,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":1279,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columnstyles",{"_index":1669,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["combining",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1092,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["comment",{"_index":3053,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":3024,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":2339,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["communicates",{"_index":2863,"title":{},"body":{"components/SidebarComponent.html":{}}}],["communicating",{"_index":1980,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["compact",{"_index":2285,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{}}}],["compare",{"_index":2342,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":2382,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["compliant",{"_index":2719,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["compodoc",{"_index":1207,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":1159,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component's",{"_index":3092,"title":{},"body":{"components/ToastComponent.html":{}}}],["component'},{'name",{"_index":274,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["component.component",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["component.component.css",{"_index":1528,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.html",{"_index":1527,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["component.component.ts",{"_index":1519,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component.component.ts:107",{"_index":1542,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:119",{"_index":1541,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:191",{"_index":1559,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:210",{"_index":1554,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:224",{"_index":1540,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:235",{"_index":1551,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:26",{"_index":2514,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:302",{"_index":1547,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:32",{"_index":2520,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:40",{"_index":2513,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:56",{"_index":1562,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:57",{"_index":2518,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:61",{"_index":1563,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:66",{"_index":2517,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["component.component.ts:67",{"_index":1538,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component.component.ts:94",{"_index":1553,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/download",{"_index":1518,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["component/graphs/graphs.component",{"_index":2471,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/install",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["component/pie",{"_index":2472,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/playlist",{"_index":2639,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component/search",{"_index":2832,"title":{},"body":{"components/SearchMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["components/download",{"_index":1517,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["components/setting",{"_index":2851,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["computed",{"_index":869,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["conditional",{"_index":2352,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditions",{"_index":1490,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config",{"_index":1204,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":2673,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{}}}],["configservice",{"_index":1468,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["configurable",{"_index":3085,"title":{},"body":{"components/ToastComponent.html":{}}}],["configuration",{"_index":1208,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm('are",{"_index":1419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirmanddownload",{"_index":1532,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["conforms",{"_index":2932,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["connects",{"_index":2098,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["consider",{"_index":1123,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["consistency",{"_index":881,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["console.error(\"chart.js",{"_index":2596,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2637,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":823,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('download",{"_index":1614,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('error",{"_index":834,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('gemini",{"_index":2012,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2960,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["console.error('no",{"_index":1429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('submit",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["console.log('backup",{"_index":2699,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":2820,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('creating",{"_index":1431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('posting",{"_index":2685,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('reset",{"_index":1427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":1370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":1463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('user",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["console.warn('user",{"_index":2701,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":924,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["construct",{"_index":1445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["constructor(categoryservice",{"_index":949,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(configservice",{"_index":1948,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["constructor(expenseservice",{"_index":699,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":352,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":2797,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":2083,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":1988,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":984,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["constructor(sectionservice",{"_index":1908,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":650,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":3089,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructors",{"_index":1221,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructs",{"_index":2134,"title":{},"body":{"components/GraphsComponent.html":{}}}],["contain",{"_index":1836,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["container",{"_index":1318,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1056,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["contains",{"_index":766,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"injectables/ZipExportService.html":{}}}],["content",{"_index":1020,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["contentdisposition",{"_index":1446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":1451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1148,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["context",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2631,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2630,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2629,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":2068,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":3414,"title":{},"body":{"index.html":{}}}],["control",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["controlled",{"_index":2078,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["conversation",{"_index":1036,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["converts",{"_index":339,"title":{},"body":{"components/AiComponent.html":{},"components/ExpenseListComponent.html":{}}}],["copyright",{"_index":2742,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["corresponding",{"_index":734,"title":{},"body":{"components/CalendarComponent.html":{}}}],["count",{"_index":711,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["counts",{"_index":892,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["coverage",{"_index":1217,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":878,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["created",{"_index":1371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["createnoderequesthandler(app",{"_index":3443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["createsession",{"_index":1365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["creation",{"_index":1436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crypto.randomuuid",{"_index":623,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":867,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["ctx",{"_index":2612,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":680,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":2131,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["currentmonth",{"_index":681,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":2212,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":2217,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":1904,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":3154,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":3156,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1068,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1091,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1096,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1097,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists?.all",{"_index":1095,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1116,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1113,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.isliked",{"_index":1120,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1114,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1115,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1110,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1111,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1112,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentyear",{"_index":682,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":2261,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":2262,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1300,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["curve",{"_index":2185,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":952,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["customfavicon",{"_index":1163,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customizable",{"_index":1959,"title":{},"body":{"components/FormModelComponent.html":{}}}],["customization",{"_index":3229,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["customization.html",{"_index":3238,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":3231,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":3214,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":3218,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["cyan",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":1876,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["daily",{"_index":669,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dark:text",{"_index":3115,"title":{},"body":{"components/ToastComponent.html":{}}}],["darken",{"_index":1823,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor",{"_index":1828,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":1837,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkened",{"_index":1847,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkens",{"_index":1840,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":2419,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["data.map((exp",{"_index":1645,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["data/categories",{"_index":2949,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["datablock",{"_index":2070,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":2122,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2616,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2619,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2620,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2623,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["date().getfullyear",{"_index":762,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":760,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().toisostring().replace(/[:.]/g",{"_index":1619,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date().toisostring().split('t')[0",{"_index":1580,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["date(`${a.date}t${a.time",{"_index":1729,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1731,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":1860,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1741,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1743,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2680,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":2481,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(todate",{"_index":1587,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{}}}],["date(value",{"_index":2488,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":800,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getdate",{"_index":1873,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["date.getfullyear",{"_index":1875,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{}}}],["date.now().tostring(36",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":2494,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:'short",{"_index":1203,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datea",{"_index":1728,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1733,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1730,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1732,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":1567,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["datestr",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":673,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":844,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":2232,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":2209,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":2221,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":2219,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":2220,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayname",{"_index":1871,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days",{"_index":663,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"interfaces/HeatmapSummary.html":{},"index.html":{}}}],["days.map(day",{"_index":2223,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[date.getday",{"_index":1872,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["days[value",{"_index":2226,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":802,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":720,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ddd",{"_index":2389,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["ddthh:mm:ss",{"_index":1710,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["debounce",{"_index":1350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":1388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dec",{"_index":1870,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":2280,"title":{},"body":{"components/GraphsComponent.html":{}}}],["decimal",{"_index":583,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["decimals",{"_index":618,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["declarations",{"_index":3072,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":2335,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":1326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["decreases",{"_index":1843,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dee2e6",{"_index":1256,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deep",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1488,"title":{},"body":{"injectables/ConfigService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defaultschema",{"_index":2944,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["defaultschema[key",{"_index":2977,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["defaultviewtype",{"_index":2422,"title":{},"body":{"components/HomeComponent.html":{}}}],["deferredprompt",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["define",{"_index":3104,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["defines",{"_index":2714,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["definitions",{"_index":2934,"title":{},"body":{"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{}}}],["delay",{"_index":2812,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["delegate",{"_index":3126,"title":{},"body":{"injectables/ToastService.html":{}}}],["delete",{"_index":595,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":2497,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":642,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":916,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1739,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["delete(song_id",{"_index":3171,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["deleted",{"_index":1778,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["deletes",{"_index":641,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["deleting",{"_index":1757,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["deletion",{"_index":920,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delimiter",{"_index":3062,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":2402,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1482,"title":{},"body":{"injectables/ConfigService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["deploying",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depth",{"_index":2357,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["describe",{"_index":2407,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["design",{"_index":3394,"title":{},"body":{"index.html":{}}}],["designed",{"_index":3325,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":3401,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":2989,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["detailed",{"_index":3410,"title":{},"body":{"index.html":{}}}],["details",{"_index":276,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["detection",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":2538,"title":{},"body":{"components/NavbarComponent.html":{}}}],["determines",{"_index":1485,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["dev",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":3413,"title":{},"body":{"index.html":{}}}],["development",{"_index":1506,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1472,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":1921,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"index.html":{}}}],["device's",{"_index":3362,"title":{},"body":{"index.html":{}}}],["devices",{"_index":3395,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1525,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["different",{"_index":2861,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["differentiation",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1231,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directive",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":325,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directory",{"_index":3222,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1212,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":1164,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":1165,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":1166,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":1167,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":1168,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":1169,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":1170,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":1171,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":1172,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":1173,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":1174,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":1175,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":1176,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":1177,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disables",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["disablesearch",{"_index":1178,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":1179,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":1180,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":1181,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disappears",{"_index":3098,"title":{},"body":{"components/ToastComponent.html":{}}}],["dismiss",{"_index":2529,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/ToastComponent.html":{}}}],["dismissed",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["dismisses",{"_index":1976,"title":{},"body":{"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["dismissinstall",{"_index":2511,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["displayed",{"_index":1965,"title":{},"body":{"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{}}}],["displaying",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displays",{"_index":662,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["disposition",{"_index":1448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["distinct",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":3353,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":3441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":1630,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1635,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.save(`expenses",{"_index":1683,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(10",{"_index":1639,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.setfontsize(14",{"_index":1637,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(sub",{"_index":1640,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doc.text(title",{"_index":1638,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["doctype",{"_index":3055,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":2303,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["document.body.appendchild(a",{"_index":1459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.appendchild(link",{"_index":1622,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["document.body.removechild(a",{"_index":1461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(link",{"_index":1624,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["document.createelement('a",{"_index":1456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('div",{"_index":3109,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":3101,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":948,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":966,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["documentation/.../hbs",{"_index":3431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":3433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":3432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":1160,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":2398,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":355,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2573,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["downloadblob",{"_index":3193,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":3196,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadcomponentcomponent",{"_index":272,"title":{"components/DownloadComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["downloaddata",{"_index":1533,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaddataform",{"_index":1529,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["downloaded",{"_index":1464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["downloading",{"_index":1465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloadurl",{"_index":2745,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["downloadurls",{"_index":2876,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["drinks",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":271,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":935,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":936,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":931,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":977,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":967,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":965,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":963,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":958,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":953,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":979,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":981,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":950,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":973,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":972,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":978,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":945,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":1086,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["during",{"_index":2936,"title":{},"body":{"injectables/SyncSchemaService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1944,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":3084,"title":{},"body":{"components/ToastComponent.html":{}}}],["e",{"_index":822,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1724,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":755,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["e9ecef",{"_index":1271,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":765,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["easily",{"_index":3326,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1766,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["edited",{"_index":1780,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editform",{"_index":1759,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editing",{"_index":1753,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["editor",{"_index":1313,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":1188,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":2987,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":3006,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":2998,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":2994,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":3001,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":3003,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":2996,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":2999,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":3005,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":1341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":1354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["education",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["email",{"_index":2731,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":933,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitted",{"_index":1775,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["emitting",{"_index":2821,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":2045,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":3327,"title":{},"body":{"index.html":{}}}],["empty",{"_index":611,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":2166,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3146,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":589,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["endpoint",{"_index":1437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":3439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhances",{"_index":1106,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["enhancing",{"_index":1128,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["ensures",{"_index":2931,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["ensuring",{"_index":597,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["enter",{"_index":2807,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":2815,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":2886,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"miscellaneous/variables.html":{}}}],["entire",{"_index":3162,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["entries",{"_index":3357,"title":{},"body":{"index.html":{}}}],["entry",{"_index":577,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/HeatmapSummary.html":{},"index.html":{}}}],["environment",{"_index":599,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":1507,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.appname",{"_index":1494,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.developmentenvironment",{"_index":1497,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.liveapiurl",{"_index":1502,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.localapiurl",{"_index":1505,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":3527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":1026,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":833,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["error('failed",{"_index":1373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":2396,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["etc",{"_index":1072,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["event",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":994,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":2319,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.value",{"_index":2483,"title":{},"body":{"components/HomeComponent.html":{}}}],["eventcoalescing",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":964,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["events",{"_index":1755,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{}}}],["example",{"_index":1504,"title":{},"body":{"injectables/ConfigService.html":{},"components/ExpenseListComponent.html":{},"injectables/HbsRenderService.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["excel",{"_index":1522,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["exceldata",{"_index":1685,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exceldata.length",{"_index":1689,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exchanged",{"_index":1015,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["excluding",{"_index":909,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["exist",{"_index":913,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["existing",{"_index":628,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["existing.amount",{"_index":842,"title":{},"body":{"components/CalendarComponent.html":{}}}],["existing.days",{"_index":841,"title":{},"body":{"components/CalendarComponent.html":{}}}],["exists",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["exp",{"_index":828,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":837,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.category_icon",{"_index":1886,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":853,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.date",{"_index":1646,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["exp.isextraspending",{"_index":1647,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.location",{"_index":857,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.note",{"_index":856,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.payment_mode",{"_index":858,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["exp.time",{"_index":855,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/UserData.html":{}}}],["expands",{"_index":2790,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expected",{"_index":3159,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":262,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.amount",{"_index":1588,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_id",{"_index":1596,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.category_name",{"_index":1595,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.component",{"_index":1927,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.date",{"_index":1589,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.expense_id",{"_index":1598,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.isextraspending",{"_index":1599,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.location",{"_index":1591,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.note",{"_index":1592,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.payment_mode",{"_index":1593,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense.service",{"_index":875,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense.time",{"_index":1590,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":861,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1597,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["expensecountmap",{"_index":896,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":902,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedata",{"_index":1576,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["expensedetailsmodalcomponent",{"_index":275,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2722,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":278,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":1931,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["expenses.component.ts",{"_index":3271,"title":{},"body":{"coverage.html":{}}}],["expenses.filter(exp",{"_index":2238,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":2213,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1720,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":897,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1750,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":1930,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2728,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":1831,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["expensewise",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expensewisecomponent",{"_index":280,"title":{"components/ExpenseWiseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["experience",{"_index":1108,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{}}}],["explains",{"_index":3372,"title":{},"body":{"index.html":{}}}],["explanation",{"_index":1140,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":3366,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["export.service",{"_index":1191,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":3192,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":3199,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":3201,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":3197,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporting",{"_index":1520,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exports",{"_index":1548,"title":{},"body":{"components/DownloadComponentComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["exporttemplates",{"_index":3194,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":3198,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttoexcel",{"_index":1534,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttoexcel(data",{"_index":1546,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exporttopdf",{"_index":1535,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["exporttopdf(data",{"_index":1550,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["exportzip",{"_index":1428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":3304,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extension",{"_index":1558,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["externally",{"_index":3094,"title":{},"body":{"components/ToastComponent.html":{}}}],["extra",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["extract",{"_index":1089,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{}}}],["exwise",{"_index":1487,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{}}}],["f0f8ff",{"_index":2391,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f44336",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f87171",{"_index":2414,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["f8f9fa",{"_index":1251,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fade",{"_index":3119,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fall",{"_index":2416,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1235,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":3405,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["feature",{"_index":3541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":335,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["features/add",{"_index":1926,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/ai/ai.component",{"_index":1935,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/budget/budget.component",{"_index":1934,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/calendar/calendar.component",{"_index":1933,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/home/home.component",{"_index":1932,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/list",{"_index":1929,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["features/settings/settings.component",{"_index":1928,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["feb",{"_index":1862,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":2272,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":596,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fetched",{"_index":2521,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["fetches",{"_index":1981,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["fetching",{"_index":1156,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff0000",{"_index":1845,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["ff4081",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":1264,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2626,"title":{},"body":{"components/PieChartComponent.html":{}}}],["fff5f5",{"_index":2395,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":870,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{}}}],["fieldname",{"_index":1082,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":635,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.content",{"_index":3205,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":1444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":1450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":1452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":3200,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":3203,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1582,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fillcolor",{"_index":1657,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter",{"_index":954,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["filter(loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredexpensedata",{"_index":1603,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2966,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["filtering",{"_index":2139,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["final",{"_index":1601,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finaldata",{"_index":1602,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["finalize",{"_index":1024,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finance",{"_index":3334,"title":{},"body":{"index.html":{}}}],["financial",{"_index":2022,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["firstday",{"_index":799,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstvaluefrom",{"_index":1027,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":2011,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["firstvaluefrom(this.http.post(this.geminiapiurl",{"_index":1151,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fit",{"_index":1130,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fits",{"_index":1105,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["flag",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":2460,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1046,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":1230,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["flexibility",{"_index":3388,"title":{},"body":{"index.html":{}}}],["floating",{"_index":2789,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2516,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["focus",{"_index":2809,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":2065,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":2811,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["folder",{"_index":3442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":1234,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":3233,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1653,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["fontstyle",{"_index":1664,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["food",{"_index":3354,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1942,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":283,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":1946,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1945,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":282,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":2466,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":2423,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":2167,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["format",{"_index":738,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["formatdateforinput",{"_index":2427,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":2442,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1085,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1109,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":2428,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":2445,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1523,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["formatted",{"_index":1083,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["formattedexpense",{"_index":1719,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":2225,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formatting",{"_index":1141,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["formmodelcomponent",{"_index":284,"title":{"components/FormModelComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["forms",{"_index":1769,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{}}}],["formsmodule",{"_index":343,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/UserData.html":{}}}],["forwards",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":852,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["frame",{"_index":1321,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":3338,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":3137,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fri",{"_index":782,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["friendly",{"_index":2039,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1745,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":579,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":2013,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":3337,"title":{},"body":{"index.html":{}}}],["full",{"_index":1157,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fullnames",{"_index":2270,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":2281,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fully",{"_index":3093,"title":{},"body":{"components/ToastComponent.html":{}}}],["function",{"_index":1080,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/UserData.html":{}}}],["functionality",{"_index":1426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["functions",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":1566,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["g",{"_index":1879,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gap",{"_index":1258,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gathers",{"_index":2662,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":333,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":353,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["geminiapiurl",{"_index":1043,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["generate",{"_index":3209,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["generateexpenseanalysisprompt",{"_index":1985,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":1991,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generatereadme",{"_index":3195,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generates",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{}}}],["generateuserid",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["generating",{"_index":3216,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":3215,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":1210,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generic",{"_index":2715,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getall",{"_index":613,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["getallbudgets",{"_index":2749,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":2747,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":2753,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallsongs",{"_index":2755,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiurl",{"_index":1476,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappname",{"_index":1477,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":2761,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbudgetschema",{"_index":2782,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":1887,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1737,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getbysongid",{"_index":3168,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["getbysongid(song_id",{"_index":3174,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["getcategorykey",{"_index":2757,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getcategoryschema",{"_index":2776,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":2429,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":2759,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getexpenseschema",{"_index":2778,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":1829,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":1849,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getheatclass",{"_index":694,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getheatclass(amount",{"_index":731,"title":{},"body":{"components/CalendarComponent.html":{}}}],["gethistory",{"_index":1158,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlanguagefromfiletype",{"_index":2990,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":2995,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlast30daysexpenses",{"_index":1986,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlikedsongschema",{"_index":2784,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getlocalisostring",{"_index":1711,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["getmockdata",{"_index":2324,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getresponse",{"_index":1987,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":2003,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["gets",{"_index":733,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":893,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["gettotalamount",{"_index":695,"title":{},"body":{"components/CalendarComponent.html":{}}}],["gettotalamount(datestr",{"_index":735,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getuser",{"_index":2751,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdata",{"_index":3161,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2656,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":2763,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserlikedsongskey",{"_index":2765,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserschema",{"_index":2780,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":3182,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":3160,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":1478,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gifts",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":707,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["global",{"_index":287,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":2799,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":286,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":429,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["globally",{"_index":2079,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["go",{"_index":3335,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":2430,"title":{},"body":{"components/HomeComponent.html":{}}}],["google",{"_index":1033,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["goprevious",{"_index":2431,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1214,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["graphs",{"_index":2114,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":290,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":2116,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":2117,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":289,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":816,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":2415,"title":{},"body":{"interfaces/HeatmapSummary.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":3349,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":2035,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1278,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["groceries",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":860,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/HeatmapSummary.html":{}}}],["grouped",{"_index":2147,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":848,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":956,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["h3",{"_index":1290,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":1314,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["halign",{"_index":1661,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["hamburger",{"_index":292,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":291,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":883,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{}}}],["handlebars",{"_index":1394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":2338,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":3052,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":2323,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handler",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseListComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["handling",{"_index":3151,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hashed",{"_index":3148,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["hbs",{"_index":1193,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":1192,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":1356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["head",{"_index":1652,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["header",{"_index":753,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headerrow",{"_index":1690,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["headers",{"_index":1145,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["headstyles",{"_index":1656,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["health",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heat",{"_index":713,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{}}}],["heatmap",{"_index":667,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["heatmapsummary",{"_index":683,"title":{"interfaces/HeatmapSummary.html":{}},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"coverage.html":{}}}],["height",{"_index":959,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hello",{"_index":2037,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":2025,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":1079,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/HbsRenderService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{}}}],["helpers",{"_index":2340,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpful",{"_index":2021,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["helps",{"_index":2410,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["here",{"_index":2058,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hex",{"_index":866,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{}}}],["hh:mm:ss",{"_index":1704,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["hi",{"_index":2036,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hidden",{"_index":1275,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hiddeninput",{"_index":2504,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":2507,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1209,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["hidedarkmodetoggle",{"_index":1182,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":1183,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hides",{"_index":2088,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["hiding",{"_index":1971,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["highlight",{"_index":3369,"title":{},"body":{"index.html":{}}}],["highlights",{"_index":2862,"title":{},"body":{"components/SidebarComponent.html":{}}}],["history",{"_index":1037,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["holding",{"_index":2849,"title":{},"body":{"injectables/SectionService.html":{}}}],["holds",{"_index":2869,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home",{"_index":1917,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":295,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":2420,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":2421,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":294,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["hooks",{"_index":1220,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":3020,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":2830,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":975,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":1916,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["hostlisteners",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":2250,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2655,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":2254,"title":{},"body":{"components/GraphsComponent.html":{}}}],["href",{"_index":2404,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":995,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["htmlinputelement",{"_index":2453,"title":{},"body":{"components/HomeComponent.html":{}}}],["http",{"_index":1047,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["http://localhost:8000",{"_index":1483,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1022,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":344,"title":{},"body":{"components/AiComponent.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["httpheaders",{"_index":1023,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://compodoc.app/guides/template",{"_index":3237,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1484,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1044,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1041,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":1851,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":2057,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":862,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":585,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identifying",{"_index":2029,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ignores",{"_index":364,"title":{},"body":{"components/AiComponent.html":{}}}],["image",{"_index":2744,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["images",{"_index":2877,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["immediately",{"_index":3364,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":1417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["import('./features/expense",{"_index":3529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./features/music/music",{"_index":3535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./features/music/music.component')\\r\\n",{"_index":3533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["include",{"_index":1138,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["included",{"_index":2409,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/NavbarComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":1184,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["including",{"_index":1754,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":3393,"title":{},"body":{"index.html":{}}}],["increments",{"_index":710,"title":{},"body":{"components/CalendarComponent.html":{}}}],["independent",{"_index":3341,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2716,"title":{},"body":{"interfaces/Schema.html":{}}}],["india",{"_index":2887,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["indicate",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicates",{"_index":872,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["indicating",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/NavbarComponent.html":{}}}],["indicator",{"_index":1263,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indicators",{"_index":1990,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["indigo",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1063,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":1575,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FooterComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["informative",{"_index":3380,"title":{},"body":{"index.html":{}}}],["init",{"_index":2464,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["initform",{"_index":1760,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initial",{"_index":1555,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/UserData.html":{}}}],["initialization",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/SyncSchemaService.html":{},"injectables/ToastService.html":{}}}],["initialize",{"_index":3008,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initialized",{"_index":712,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/SectionService.html":{},"components/ToastComponent.html":{}}}],["initializeeditor",{"_index":1386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":2997,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":2325,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["initializing",{"_index":1361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/PieChartComponent.html":{}}}],["inject(platform_id",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["injectable",{"_index":590,"title":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":648,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injected",{"_index":2135,"title":{},"body":{"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["input[type=\"date",{"_index":2499,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":2501,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":2444,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":2447,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":2452,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":2485,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":943,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["inr",{"_index":3142,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":2522,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":1983,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["install",{"_index":297,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["installapp",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installapppopupcomponentcomponent",{"_index":296,"title":{"components/InstallAppPopupComponentComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["installation",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["installing",{"_index":2528,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":2318,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["instances",{"_index":2580,"title":{},"body":{"components/PieChartComponent.html":{}}}],["instructions",{"_index":1997,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/ZipExportService.html":{}}}],["integrates",{"_index":2289,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/ToastComponent.html":{}}}],["integrating",{"_index":1030,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["intended",{"_index":2650,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["intensity",{"_index":714,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"index.html":{}}}],["interacting",{"_index":602,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{}}}],["interaction",{"_index":331,"title":{},"body":{"components/AiComponent.html":{}}}],["interactive",{"_index":3350,"title":{},"body":{"index.html":{}}}],["interface",{"_index":572,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/HeatmapSummary.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":574,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["internal",{"_index":1219,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["intersect",{"_index":2196,"title":{},"body":{"components/GraphsComponent.html":{}}}],["intuitive",{"_index":3396,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1084,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{}}}],["invoked",{"_index":2935,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["is_active",{"_index":863,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_app_updated",{"_index":2736,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_backup",{"_index":2732,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_show_heatmap",{"_index":2737,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isappupdated",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["isbrowser",{"_index":605,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":938,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":819,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isdarkmode",{"_index":2555,"title":{},"body":{"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditopen",{"_index":1764,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["isinitial",{"_index":2379,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":2377,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isliked",{"_index":2746,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["ismenuopen",{"_index":2294,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":1905,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["ismusicroute",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":2493,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":2489,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":2492,"title":{},"body":{"components/HomeComponent.html":{}}}],["iso",{"_index":588,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["isopen",{"_index":2793,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["isshowheatmap",{"_index":684,"title":{},"body":{"components/CalendarComponent.html":{}}}],["istabenabled",{"_index":2371,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":2082,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{}}}],["italic",{"_index":1312,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":639,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{}}}],["item'},{'name",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":850,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":638,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":912,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.color",{"_index":840,"title":{},"body":{"components/CalendarComponent.html":{}}}],["item.component.html",{"_index":2856,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":2853,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":2857,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":2214,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.days",{"_index":849,"title":{},"body":{"components/CalendarComponent.html":{}}}],["item.expense_id",{"_index":1736,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.name",{"_index":1467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.note?.trim",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.song_id",{"_index":3181,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["item.time.split",{"_index":2253,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2968,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["item/setting",{"_index":2852,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":2976,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["itemdate",{"_index":1742,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1744,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":1246,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["jan",{"_index":1861,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":2271,"title":{},"body":{"components/GraphsComponent.html":{}}}],["javascript",{"_index":3042,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["job",{"_index":1100,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["js",{"_index":3041,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json",{"_index":1073,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2962,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":2750,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2748,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":2754,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.storageservice.getcategorykey",{"_index":2965,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":2752,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userlikedsongskey",{"_index":2756,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":627,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["json.stringify(budgets",{"_index":2772,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(categories",{"_index":2769,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(currentsettings",{"_index":3157,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(finaldata",{"_index":1605,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["json.stringify(last15daysexpenses",{"_index":2071,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":2986,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.stringify(updated",{"_index":926,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":2979,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["json.stringify(user",{"_index":2775,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsondata",{"_index":1604,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jspdf",{"_index":1570,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1631,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["jszip",{"_index":3202,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jul",{"_index":1865,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":2276,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":1864,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":2275,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":1243,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["keep",{"_index":2064,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SidebarComponent.html":{},"injectables/ZipExportService.html":{}}}],["key",{"_index":900,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":2441,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":2436,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyed",{"_index":2581,"title":{},"body":{"components/PieChartComponent.html":{}}}],["keyframes",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":603,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/HomeComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["keyword",{"_index":3051,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":3376,"title":{},"body":{"index.html":{}}}],["label",{"_index":814,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{}}}],["labelalignment",{"_index":1963,"title":{},"body":{"components/FormModelComponent.html":{}}}],["labels",{"_index":786,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["lang.id",{"_index":3046,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1122,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{}}}],["laptop",{"_index":3400,"title":{},"body":{"index.html":{}}}],["last",{"_index":1201,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["last15daysexpenses",{"_index":1992,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2660,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2679,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2683,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2677,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastsaved",{"_index":1202,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["latest",{"_index":2933,"title":{},"body":{"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["launch",{"_index":3348,"title":{},"body":{"index.html":{}}}],["layout",{"_index":3234,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["lazy",{"_index":3540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leave",{"_index":3521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1310,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["legend",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["length",{"_index":2803,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["letter",{"_index":1294,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["let’s",{"_index":2063,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":2408,"title":{},"body":{"interfaces/HeatmapSummary.html":{},"index.html":{}}}],["leverages",{"_index":3336,"title":{},"body":{"index.html":{}}}],["lg",{"_index":3114,"title":{},"body":{"components/ToastComponent.html":{}}}],["li",{"_index":1299,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":1306,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":1305,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["light",{"_index":2190,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":3340,"title":{},"body":{"index.html":{}}}],["liked",{"_index":1119,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["likedsongschema",{"_index":2739,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["line",{"_index":2187,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["linebreak",{"_index":1655,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linenumbers",{"_index":3017,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":1453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["link.click",{"_index":1623,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["link.download",{"_index":1620,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["link.href",{"_index":1618,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["linked",{"_index":868,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["links",{"_index":2859,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":300,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":1827,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":1826,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":1821,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":1835,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:28",{"_index":1833,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:33",{"_index":1832,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:49",{"_index":1857,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:60",{"_index":1850,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:95",{"_index":1839,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1820,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SidebarComponent.html":{}}}],["listener",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["listening",{"_index":1102,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":968,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["listexpensescomponent",{"_index":299,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":3365,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1019,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["live",{"_index":1227,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["liveapiurl",{"_index":1473,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["loadcategories",{"_index":939,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loadcomponent",{"_index":3528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaddata",{"_index":2125,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":2126,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":2144,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":2463,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":288,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":2081,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":2080,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":2076,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:23",{"_index":2091,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:28",{"_index":2084,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":2090,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:55",{"_index":2087,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":2096,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:17",{"_index":2104,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2102,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:33",{"_index":2103,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:40",{"_index":2100,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loading",{"_index":835,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadmonthdata",{"_index":2127,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":2148,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadsessionconfig",{"_index":1382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":1374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":2128,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":2150,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["localapiurl",{"_index":1474,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1486,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":2978,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["localstorage.setitem(this.budgetkey",{"_index":2771,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.categorykey",{"_index":2768,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":626,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":910,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1734,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":2985,"title":{},"body":{"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.storageservice.getuserlikedsongskey",{"_index":3180,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":2774,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":2005,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2674,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2675,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":3411,"title":{},"body":{"index.html":{}}}],["logged",{"_index":915,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["logic",{"_index":3345,"title":{},"body":{"index.html":{}}}],["long",{"_index":810,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":845,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ltd",{"_index":2889,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["lucide",{"_index":3308,"title":{},"body":{"dependencies.html":{}}}],["m.expensewisecomponent",{"_index":3532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.musiccomponent",{"_index":3534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.playlistmusiccomponent",{"_index":3538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.searchmusiccomponent",{"_index":3537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":1215,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["maintains",{"_index":2836,"title":{},"body":{"injectables/SectionService.html":{}}}],["making",{"_index":3235,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["manage",{"_index":951,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{}}}],["management",{"_index":3324,"title":{},"body":{"index.html":{}}}],["manages",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseWiseComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["managing",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PlaylistMusicComponent.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["manually",{"_index":3360,"title":{},"body":{"index.html":{}}}],["map",{"_index":899,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["map((category",{"_index":901,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1721,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":2215,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":898,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":393,"title":{},"body":{"components/AiComponent.html":{}}}],["mapping",{"_index":2360,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{}}}],["mar",{"_index":1854,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":2273,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":1283,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["mark",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":340,"title":{},"body":{"components/AiComponent.html":{}}}],["marked",{"_index":377,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":389,"title":{},"body":{"components/AiComponent.html":{}}}],["marks",{"_index":1544,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["match",{"_index":1131,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matches",{"_index":629,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["matching",{"_index":328,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.max(b",{"_index":1885,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":1884,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.random().tostring(36).substring(2",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["math.round(data.amount",{"_index":625,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":640,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":955,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":2804,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2633,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":2542,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":2292,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":2293,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":2284,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:26",{"_index":2314,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":2299,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":2311,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":2302,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:75",{"_index":2306,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":2283,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merged",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merges",{"_index":630,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["message",{"_index":1014,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":2067,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["met",{"_index":1491,"title":{},"body":{"injectables/ConfigService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["metatag",{"_index":3057,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":3056,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":1973,"title":{},"body":{"components/FormModelComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["middle",{"_index":1663,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["milliseconds",{"_index":3097,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mime",{"_index":1560,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["mimetype",{"_index":1557,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["minimal",{"_index":1185,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":3013,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minimumfractiondigits",{"_index":2632,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minmax(200px",{"_index":1281,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minute",{"_index":2251,"title":{},"body":{"components/GraphsComponent.html":{}}}],["miscellaneous",{"_index":3422,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":2702,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{}}}],["mm",{"_index":719,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["mobile",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["mock",{"_index":2393,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["modal",{"_index":675,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["modal'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1758,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1752,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":1787,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:112",{"_index":1781,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:117",{"_index":1786,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1773,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1770,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1771,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1774,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:36",{"_index":1777,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1779,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:42",{"_index":1791,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:45",{"_index":1767,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:57",{"_index":1784,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:62",{"_index":1783,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:80",{"_index":1785,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:88",{"_index":1789,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/expense",{"_index":1751,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":685,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modaltitle",{"_index":686,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":385,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["model'},{'name",{"_index":285,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["model.component",{"_index":1569,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["model.component.css",{"_index":1961,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.html",{"_index":1960,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts",{"_index":1957,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["model.component.ts:23",{"_index":1964,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:29",{"_index":1967,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:37",{"_index":1969,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model.component.ts:45",{"_index":1972,"title":{},"body":{"components/FormModelComponent.html":{}}}],["model/form",{"_index":1568,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["modelreply",{"_index":1153,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["models/heatmap",{"_index":787,"title":{},"body":{"components/CalendarComponent.html":{}}}],["models/song.model",{"_index":3178,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["modern",{"_index":3339,"title":{},"body":{"index.html":{}}}],["modify",{"_index":3232,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":2362,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["modules",{"_index":2363,"title":{"modules.html":{}},"body":{"injectables/HbsRenderService.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["mon",{"_index":778,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["monaco",{"_index":3007,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":3010,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":3038,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":3045,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":3047,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":3065,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":3048,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["money",{"_index":3321,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":3412,"title":{},"body":{"index.html":{}}}],["monospace",{"_index":1262,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["month",{"_index":664,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":809,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":3409,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":2112,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":2260,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":2268,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":2265,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":2264,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":660,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["monthname",{"_index":2228,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":2227,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":2263,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":2229,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":725,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":2267,"title":{},"body":{"components/GraphsComponent.html":{}}}],["months[date.getmonth",{"_index":1874,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["monthstr",{"_index":805,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1064,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{},"injectables/ZipExportService.html":{}}}],["mouse",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["mouseevent",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["msg",{"_index":390,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":387,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":384,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":3378,"title":{},"body":{"index.html":{}}}],["music",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchMusicComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"miscellaneous/variables.html":{}}}],["music'},{'name",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component')\\r\\n",{"_index":3536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music.component.css",{"_index":2647,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{}}}],["music.component.html",{"_index":2646,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{}}}],["music.component.ts",{"_index":2641,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"coverage.html":{}}}],["music/playlist",{"_index":2640,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["music/search",{"_index":2833,"title":{},"body":{"components/SearchMusicComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["musiccomponent",{"_index":302,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1713,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["n.tostring().padstart(2",{"_index":1714,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2880,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["navbar",{"_index":2531,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":305,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":2534,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":2535,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":304,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2290,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["navigateandclose",{"_index":2296,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":2305,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":2307,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{}}}],["navigating",{"_index":2860,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navigation",{"_index":2286,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navtabs",{"_index":2373,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":2375,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":2380,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":2381,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["need",{"_index":3404,"title":{},"body":{"index.html":{}}}],["negative",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":633,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["newest",{"_index":1718,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["next",{"_index":1034,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/TemplateEditorService.html":{}}}],["ng",{"_index":2199,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":3312,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":2556,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":2115,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngmodule",{"_index":3080,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngonchanges",{"_index":2129,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":2152,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["node.js",{"_index":3438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1297,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notice",{"_index":2390,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["notify",{"_index":1782,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["nov",{"_index":1869,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":2279,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"injectables/UserLikedSongsService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2682,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2697,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":369,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["num",{"_index":1880,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":581,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{}}}],["number(item.amount",{"_index":821,"title":{},"body":{"components/CalendarComponent.html":{}}}],["object",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2604,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2607,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2970,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["object.keys(exceldata[0",{"_index":1691,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["object.values(categorytotals",{"_index":2605,"title":{},"body":{"components/PieChartComponent.html":{}}}],["objects",{"_index":751,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["observable",{"_index":1055,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{}}}],["observe",{"_index":1441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["occurs",{"_index":2304,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["oct",{"_index":1868,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":2278,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offline",{"_index":2526,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["offset",{"_index":724,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":621,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2653,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["onchangecallback",{"_index":2988,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onchanges",{"_index":2113,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":2297,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":2310,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{}}}],["onclickinstallapp",{"_index":2512,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["ondelete",{"_index":1761,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1186,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ondocumentclick",{"_index":940,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":974,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["one",{"_index":706,"title":{},"body":{"components/CalendarComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninputchange",{"_index":2432,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":2451,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":2433,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":2456,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":1906,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["onresize(event",{"_index":1915,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["onrightclick",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":2795,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onselect",{"_index":1830,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":1856,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["opacity",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1772,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["open/closed",{"_index":2312,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["opendownloaddatamodal",{"_index":1536,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["opened",{"_index":1790,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["openmodal",{"_index":696,"title":{},"body":{"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":740,"title":{},"body":{"components/CalendarComponent.html":{}}}],["opens",{"_index":674,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["operations",{"_index":884,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["operator",{"_index":2344,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimized",{"_index":3398,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":1277,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["options.fn(this",{"_index":2348,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":2349,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["orange",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1642,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["organization",{"_index":3391,"title":{},"body":{"index.html":{}}}],["original",{"_index":1848,"title":{},"body":{"components/ExpenseListComponent.html":{},"injectables/ZipExportService.html":{}}}],["orlength",{"_index":2365,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["others",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["outline",{"_index":2503,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":982,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":946,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":970,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":3351,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":1274,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1213,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":3022,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["owns",{"_index":874,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["p",{"_index":3112,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["p.text).join('\\n\\n",{"_index":1155,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":1432,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pad",{"_index":1712,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1716,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["pad(now.getmonth",{"_index":1715,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["padding",{"_index":666,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":3227,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":2855,"title":{},"body":{"components/SettingItemComponent.html":{},"injectables/ZipExportService.html":{}}}],["pagewidth",{"_index":1634,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["pairs",{"_index":2718,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["panel",{"_index":1270,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":1276,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["paragraph",{"_index":2050,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["parameterhints",{"_index":3026,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["parent",{"_index":934,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FormModelComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{}}}],["parsed",{"_index":2487,"title":{},"body":{"components/HomeComponent.html":{}}}],["parseint(exp.amount",{"_index":830,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":2218,"title":{},"body":{"components/GraphsComponent.html":{}}}],["part",{"_index":871,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":634,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":3228,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["parts",{"_index":1017,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1154,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2668,"title":{},"body":{"injectables/PostApiService.html":{}}}],["password",{"_index":3147,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2964,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["pastdata.filter((item",{"_index":2967,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["path",{"_index":1195,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["path/section",{"_index":2870,"title":{},"body":{"components/SidebarComponent.html":{}}}],["path/to/custom/templates",{"_index":3226,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["patterns",{"_index":2031,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["payment",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["payment_mode",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["pdf",{"_index":1521,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["per",{"_index":672,"title":{},"body":{"components/CalendarComponent.html":{},"index.html":{}}}],["percent",{"_index":1838,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":1841,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["perform",{"_index":1970,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/PostApiService.html":{}}}],["performed",{"_index":3145,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["period",{"_index":587,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["persist",{"_index":3150,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["persistent",{"_index":3346,"title":{},"body":{"index.html":{}}}],["personal",{"_index":3333,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":3389,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1993,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":2455,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":307,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["pie/doughnut",{"_index":2547,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartcomponent",{"_index":306,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["places",{"_index":584,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["plain",{"_index":3149,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["platform_id",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["platformid",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["play",{"_index":2645,"title":{},"body":{"components/PlaylistMusicComponent.html":{}}}],["playground",{"_index":323,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":3082,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":1162,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":3079,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":2321,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":1161,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":3191,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playing",{"_index":1069,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["playlist",{"_index":310,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["playlistmusiccomponent",{"_index":309,"title":{"components/PlaylistMusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["playlists",{"_index":2643,"title":{},"body":{"components/PlaylistMusicComponent.html":{}}}],["please",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["plugins",{"_index":2625,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1301,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["points",{"_index":2048,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":2020,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":2033,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":2056,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["pop",{"_index":3054,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["popup",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":1319,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["positive",{"_index":727,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1500,"title":{},"body":{"injectables/ConfigService.html":{}}}],["post",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":430,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2690,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2698,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2667,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2657,"title":{},"body":{"injectables/PostApiService.html":{}}}],["predefined",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predict",{"_index":2026,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":2028,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preferences",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["preferred",{"_index":3140,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prepare",{"_index":1600,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["presses",{"_index":2806,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevent",{"_index":1565,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["preventing",{"_index":2541,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["prevents",{"_index":2438,"title":{},"body":{"components/HomeComponent.html":{}}}],["preview",{"_index":1228,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":1343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":1351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["previous/next",{"_index":665,"title":{},"body":{"components/CalendarComponent.html":{}}}],["prevmonthdays",{"_index":804,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":1327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":1328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["privacy",{"_index":3408,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["process",{"_index":2061,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["processes",{"_index":2146,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/SearchButtonComponent.html":{}}}],["production",{"_index":1501,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":3136,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["progress",{"_index":3377,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1077,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["prompt",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":2072,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompting",{"_index":2510,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["prompts",{"_index":1982,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":2597,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"properties.html":{}}}],["property",{"_index":1966,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["protected",{"_index":1218,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provide",{"_index":1133,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":631,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{}}}],["providedin",{"_index":600,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["providehttpclient",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3074,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":594,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/FormModelComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1470,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{}}}],["pt",{"_index":1632,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["public",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":2024,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["purposes",{"_index":1825,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["pvt",{"_index":2888,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["pwa",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["quality",{"_index":2891,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["query",{"_index":1053,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":2000,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":2062,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quick",{"_index":3371,"title":{},"body":{"index.html":{}}}],["quickly",{"_index":3374,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":3023,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":1302,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["random",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":717,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["raw",{"_index":386,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["re",{"_index":749,"title":{},"body":{"components/CalendarComponent.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["reactively",{"_index":2846,"title":{},"body":{"injectables/SectionService.html":{}}}],["read",{"_index":879,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["read/write",{"_index":3406,"title":{},"body":{"index.html":{}}}],["readable",{"_index":1852,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["readme",{"_index":3206,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":1347,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["ready",{"_index":2001,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recent",{"_index":2060,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommend",{"_index":1125,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["recommendation",{"_index":1035,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":2884,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["records",{"_index":1549,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":2394,"title":{},"body":{"injectables/HbsRenderService.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":3539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/ToastService.html":{}}}],["reflected",{"_index":3363,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1229,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":1413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":1409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":2099,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":2101,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":3127,"title":{},"body":{"injectables/ToastService.html":{}}}],["registered",{"_index":2105,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{}}}],["registerhandlebarslanguage",{"_index":2991,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":2326,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registering",{"_index":3125,"title":{},"body":{"injectables/ToastService.html":{}}}],["registers",{"_index":2085,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":885,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/SettingItemComponent.html":{}}}],["relative",{"_index":1320,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":2355,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["release",{"_index":2890,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2663,"title":{},"body":{"injectables/PostApiService.html":{}}}],["reloads",{"_index":2160,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["remaining",{"_index":3386,"title":{},"body":{"index.html":{}}}],["remove",{"_index":2644,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["removes",{"_index":2808,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["render",{"_index":745,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"injectables/ToastService.html":{}}}],["render.service",{"_index":1194,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":2322,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":2333,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":2330,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":2329,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":2331,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":2328,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendercalendar",{"_index":697,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":742,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":2557,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":2570,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendered",{"_index":370,"title":{},"body":{"components/AiComponent.html":{},"injectables/HbsRenderService.html":{}}}],["rendering",{"_index":362,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["rendermode",{"_index":3543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":3544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renders",{"_index":659,"title":{},"body":{"components/CalendarComponent.html":{},"components/PieChartComponent.html":{}}}],["rendertemplate",{"_index":2327,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":2332,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rent",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat",{"_index":1142,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["repeat(auto",{"_index":1280,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["replace",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaced",{"_index":3526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":644,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["reply",{"_index":2043,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["report",{"_index":1552,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["represent",{"_index":2413,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["representing",{"_index":576,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["represents",{"_index":1012,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/HeatmapSummary.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["reqhandler",{"_index":3291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":359,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["required",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/PieChartComponent.html":{}}}],["requires",{"_index":3124,"title":{},"body":{"injectables/ToastService.html":{}}}],["res",{"_index":1150,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["res.app_version",{"_index":2692,"title":{},"body":{"injectables/PostApiService.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1152,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":1954,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":1205,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["resetting",{"_index":1418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":1416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resize",{"_index":1913,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["resolve(serverdistfolder",{"_index":3440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":2034,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":1442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":1385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":1447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":1369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":1368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":1377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsehtml",{"_index":348,"title":{},"body":{"components/AiComponent.html":{}}}],["responsetype",{"_index":1439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsibilities",{"_index":1121,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":592,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["responsive",{"_index":2624,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restricts",{"_index":2802,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["result",{"_index":2345,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":327,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.map(exp",{"_index":2017,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["ret",{"_index":2354,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["retrieve",{"_index":701,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":1496,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{}}}],["retrieves",{"_index":610,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":2137,"title":{},"body":{"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["returned",{"_index":367,"title":{},"body":{"components/AiComponent.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["reusable",{"_index":1958,"title":{},"body":{"components/FormModelComponent.html":{},"components/SettingItemComponent.html":{},"components/ToastComponent.html":{}}}],["rgb",{"_index":1842,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["rgb(${math.max(r",{"_index":1883,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["rights",{"_index":1953,"title":{},"body":{"components/FooterComponent.html":{}}}],["roboto",{"_index":1240,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":1018,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["root'},{'name",{"_index":266,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":582,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/ToastComponent.html":{}}}],["roundedselection",{"_index":3018,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["rounds",{"_index":617,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["route",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["routeroutlet",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":1216,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1693,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["rows",{"_index":1643,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["run",{"_index":2651,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":2569,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["rxjs",{"_index":1028,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1025,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavn",{"_index":1031,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1029,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safe",{"_index":361,"title":{},"body":{"components/AiComponent.html":{}}}],["safehtml",{"_index":368,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1081,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["same",{"_index":890,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["sample",{"_index":2399,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":2400,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sanitized",{"_index":342,"title":{},"body":{"components/AiComponent.html":{}}}],["sanitizer",{"_index":354,"title":{},"body":{"components/AiComponent.html":{}}}],["sans",{"_index":1241,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sat",{"_index":783,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["save",{"_index":645,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["save_delay",{"_index":1348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveddata",{"_index":2961,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["saveddata.map((item",{"_index":2972,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["savedsettings",{"_index":2980,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["savedsettings[key",{"_index":2983,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["savedtheme",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["savetemplate(content",{"_index":1404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":1346,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":1200,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savvanapiurl",{"_index":1040,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["scales",{"_index":2634,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schedule",{"_index":1399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":1395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":407,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["schema.service",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["schema.service.ts",{"_index":2929,"title":{},"body":{"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["schema.service.ts:13",{"_index":2940,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:30",{"_index":2941,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:34",{"_index":2942,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:50",{"_index":2948,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schema.service.ts:82",{"_index":2945,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schemakeys",{"_index":2969,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["schemakeys.foreach((key",{"_index":2974,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["screen",{"_index":2077,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["screens",{"_index":2854,"title":{},"body":{"components/SettingItemComponent.html":{},"index.html":{}}}],["screenshots",{"_index":3415,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":3220,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollable",{"_index":961,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":3019,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":3014,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":3040,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seamless",{"_index":2525,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"index.html":{}}}],["search",{"_index":312,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["searchbuttoncomponent",{"_index":311,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":1888,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1740,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searches",{"_index":1051,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{}}}],["searching",{"_index":1708,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/SearchMusicComponent.html":{}}}],["searchinput",{"_index":2794,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchmusiccomponent",{"_index":314,"title":{"components/SearchMusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchsongs",{"_index":2705,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1057,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["second",{"_index":2252,"title":{},"body":{"components/GraphsComponent.html":{}}}],["secondary",{"_index":1331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":1332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["seconds\\n",{"_index":1087,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sections",{"_index":2291,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":1909,"title":{"injectables/SectionService.html":{}},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionservice.currentsection",{"_index":2300,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sectionsource",{"_index":2840,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":3323,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":1239,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["selectcategory",{"_index":941,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":976,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1765,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1813,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1814,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1815,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1819,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1817,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1818,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1816,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedfile",{"_index":1344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":1225,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":1226,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":1391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selecting",{"_index":932,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"interfaces/UserData.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":351,"title":{},"body":{"components/AiComponent.html":{}}}],["sender",{"_index":1021,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sendmessage(message",{"_index":2074,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sends",{"_index":337,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2664,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":2049,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":1867,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1093,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["september",{"_index":756,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["series",{"_index":2172,"title":{},"body":{"components/GraphsComponent.html":{}}}],["serif",{"_index":1242,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":1434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":3251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":3292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":3542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":3255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["service/backend",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["service/config/config.service",{"_index":1950,"title":{},"body":{"components/FooterComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["service/gemini",{"_index":378,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":1572,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/category.service",{"_index":983,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/localstorage/sync",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["service/section/section.service",{"_index":1936,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["services",{"_index":357,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["session",{"_index":1196,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":1197,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":1198,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseWiseComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["seteditorcontent",{"_index":2992,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":3000,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback",{"_index":2993,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":3002,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["sets",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["setsection",{"_index":2839,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":2841,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":315,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["settings'},{'name",{"_index":319,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":2434,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":2458,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":3113,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":2195,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":1924,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["shared/global",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":1922,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":1923,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["shared/toast/toast.component",{"_index":1925,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":3356,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":2038,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shorter",{"_index":365,"title":{},"body":{"components/AiComponent.html":{}}}],["shouldbackup",{"_index":2681,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/SettingItemComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["show(message",{"_index":3129,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":2089,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["show/hide",{"_index":1049,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{}}}],["showaibutton",{"_index":2295,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":2536,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showconfigpanel",{"_index":1345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["showdownloaddatamodal",{"_index":1530,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["showing",{"_index":772,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["showinstallbutton",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":687,"title":{},"body":{"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["shows",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{}}}],["shows/hides",{"_index":2288,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showtoast",{"_index":3088,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":3095,"title":{},"body":{"components/ToastComponent.html":{}}}],["side",{"_index":1435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":1285,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["sidebar'},{'name",{"_index":321,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":2864,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2865,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":320,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signature",{"_index":2403,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["silently",{"_index":2652,"title":{},"body":{"injectables/PostApiService.html":{}}}],["similar",{"_index":1127,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/HeatmapSummary.html":{},"injectables/SaavnService.html":{}}}],["simple",{"_index":2358,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["simplechanges",{"_index":2153,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["single",{"_index":1013,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/HeatmapSummary.html":{},"injectables/SaavnService.html":{},"components/SettingItemComponent.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["size",{"_index":1259,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skipped",{"_index":2700,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2703,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["sm",{"_index":1338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["small",{"_index":3399,"title":{},"body":{"index.html":{}}}],["smart",{"_index":1099,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":3331,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":1134,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":2829,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":2188,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sole",{"_index":2023,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["solid",{"_index":1255,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["something",{"_index":1126,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["song",{"_index":1032,"title":{"interfaces/Song.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["song.service.ts",{"_index":3167,"title":{},"body":{"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["song.service.ts:12",{"_index":3169,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:26",{"_index":3177,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:35",{"_index":3176,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:46",{"_index":3173,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:56",{"_index":3170,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:70",{"_index":3175,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song.service.ts:80",{"_index":3172,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["song_id",{"_index":2740,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{}}}],["song_name",{"_index":2741,"title":{},"body":{"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["song_type",{"_index":2878,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["songartists",{"_index":2881,"title":{"interfaces/SongArtists.html":{}},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["songdownloadurl",{"_index":2882,"title":{"interfaces/SongDownloadUrl.html":{}},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["songimage",{"_index":2883,"title":{"interfaces/SongImage.html":{}},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["songname",{"_index":1143,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1052,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PlaylistMusicComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/UserLikedSongsService.html":{}}}],["song’s",{"_index":1136,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sony",{"_index":2885,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["sort",{"_index":880,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["sort((a",{"_index":903,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":3373,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":887,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["space",{"_index":1244,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":1295,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specific",{"_index":737,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":3330,"title":{},"body":{"index.html":{}}}],["specified",{"_index":723,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{}}}],["specify",{"_index":3223,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["spending",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/HeatmapSummary.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["spent",{"_index":3379,"title":{},"body":{"index.html":{}}}],["spent/day",{"_index":3384,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":3429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":3425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":3435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":3434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.ts",{"_index":3427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":3430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":3426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":3428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":3424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:122",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:130",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:140",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:147",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":3249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":3252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":3254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":3256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":930,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/form",{"_index":1956,"title":{},"body":{"components/FormModelComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":2109,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":2193,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":2191,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":2197,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":2133,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":2198,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":2156,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":2154,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":2158,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":2142,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":2149,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":2145,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":2140,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":2138,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":2151,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":2171,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":2179,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":2183,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":2169,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":2175,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":2181,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":2186,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/install",{"_index":2509,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1749,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":2545,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":2786,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/settings",{"_index":1516,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/SettingItemComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":329,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:27",{"_index":371,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:30",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:48",{"_index":363,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":3266,"title":{},"body":{"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":658,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:108",{"_index":743,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:164",{"_index":716,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:179",{"_index":741,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:194",{"_index":728,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:205",{"_index":732,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:228",{"_index":736,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:235",{"_index":747,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:251",{"_index":704,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:26",{"_index":763,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:29",{"_index":761,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:32",{"_index":752,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:35",{"_index":775,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:38",{"_index":750,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:41",{"_index":773,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:44",{"_index":771,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:47",{"_index":770,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:50",{"_index":758,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:53",{"_index":784,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:56",{"_index":768,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:63",{"_index":700,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:74",{"_index":776,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:81",{"_index":739,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:90",{"_index":722,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/expense",{"_index":1898,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts",{"_index":2418,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":2448,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":2454,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":2457,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":2443,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":2446,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":2437,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":2462,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":2468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":2469,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":2470,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":2461,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":2465,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":2459,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":2450,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":2449,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":3270,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music",{"_index":2638,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":3273,"title":{},"body":{"coverage.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":3276,"title":{},"body":{"coverage.html":{}}}],["src/app/models/heatmap",{"_index":2405,"title":{},"body":{"interfaces/HeatmapSummary.html":{},"coverage.html":{}}}],["src/app/models/song.model.ts",{"_index":2872,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"coverage.html":{}}}],["src/app/sample/sample.component.ts",{"_index":2401,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/app/service/backend",{"_index":2649,"title":{},"body":{"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts",{"_index":1469,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/config/config.service.ts:19",{"_index":1498,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:24",{"_index":1495,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:29",{"_index":1508,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:36",{"_index":1503,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:43",{"_index":1479,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:61",{"_index":1480,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:84",{"_index":1492,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/config/config.service.ts:93",{"_index":1493,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/gemini",{"_index":1978,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":2095,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":575,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:109",{"_index":657,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":651,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:43",{"_index":655,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:52",{"_index":654,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:63",{"_index":652,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:79",{"_index":656,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:97",{"_index":653,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":859,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:103",{"_index":1002,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:119",{"_index":1007,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:132",{"_index":1003,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:152",{"_index":1008,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:41",{"_index":1001,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:60",{"_index":1006,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:70",{"_index":1005,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:92",{"_index":1004,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":3282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1701,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:119",{"_index":1890,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:133",{"_index":1897,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:147",{"_index":1893,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:157",{"_index":1891,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:171",{"_index":1896,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:55",{"_index":1889,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:69",{"_index":1895,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:78",{"_index":1894,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:89",{"_index":1892,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2713,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:107",{"_index":2901,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:116",{"_index":2900,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:125",{"_index":2911,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:134",{"_index":2902,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:143",{"_index":2903,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:148",{"_index":2906,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:151",{"_index":2908,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:154",{"_index":2904,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:157",{"_index":2912,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:160",{"_index":2913,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:167",{"_index":2916,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:176",{"_index":2915,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:185",{"_index":2917,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:193",{"_index":2907,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:201",{"_index":2909,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:209",{"_index":2914,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:217",{"_index":2905,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:225",{"_index":2910,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:24",{"_index":2920,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:27",{"_index":2922,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:30",{"_index":2918,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:33",{"_index":2925,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:36",{"_index":2926,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:39",{"_index":2921,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:49",{"_index":2923,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:62",{"_index":2927,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:7",{"_index":2717,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:80",{"_index":2919,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:88",{"_index":2924,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/sync",{"_index":2928,"title":{},"body":{"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user",{"_index":3166,"title":{},"body":{"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":3135,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:105",{"_index":3187,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:115",{"_index":3186,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:125",{"_index":3190,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:56",{"_index":3184,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:71",{"_index":3188,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:80",{"_index":3185,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:91",{"_index":3189,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1010,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":2835,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:21",{"_index":2848,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:27",{"_index":2844,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:34",{"_index":2842,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":3123,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:19",{"_index":3132,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:27",{"_index":3128,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:39",{"_index":3130,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1941,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:22",{"_index":1949,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":2075,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":2282,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":2530,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:25",{"_index":2537,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:48",{"_index":2540,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2858,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:25",{"_index":2867,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:48",{"_index":2868,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":3083,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:17",{"_index":3090,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:30",{"_index":3091,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:41",{"_index":3096,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":3286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":3287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":3288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":3343,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":586,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["starty",{"_index":1650,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["state",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData.html":{}}}],["statements",{"_index":3240,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/FooterComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["status",{"_index":1257,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["stays",{"_index":3407,"title":{},"body":{"index.html":{}}}],["stops",{"_index":3322,"title":{},"body":{"index.html":{}}}],["storage",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storage.service",{"_index":591,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2946,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["storageservice",{"_index":513,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["store",{"_index":927,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"injectables/SyncSchemaService.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["stores",{"_index":764,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/SearchButtonComponent.html":{}}}],["stream",{"_index":2845,"title":{},"body":{"injectables/SectionService.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["string(date.getmonth",{"_index":2495,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":806,"title":{},"body":{"components/CalendarComponent.html":{}}}],["strings",{"_index":3025,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["stroke",{"_index":2123,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1573,"title":{},"body":{"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["structured",{"_index":1995,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["style",{"_index":1065,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":3217,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["styleurl",{"_index":346,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":1824,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["sub",{"_index":1636,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["submitedit",{"_index":1762,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["subscribe",{"_index":2838,"title":{},"body":{"injectables/SectionService.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["success:hover",{"_index":1335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":2669,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["such",{"_index":702,"title":{},"body":{"components/CalendarComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["suffix",{"_index":1855,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["suggest",{"_index":1103,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":1074,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested/day",{"_index":3385,"title":{},"body":{"index.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestnextsong",{"_index":2706,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1076,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggestontriggercharacters",{"_index":3029,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["suggests",{"_index":1061,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suitable",{"_index":1066,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":820,"title":{},"body":{"components/CalendarComponent.html":{}}}],["summary",{"_index":705,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/HeatmapSummary.html":{},"index.html":{}}}],["summary.service",{"_index":788,"title":{},"body":{"components/CalendarComponent.html":{}}}],["summary.service.ts",{"_index":2406,"title":{},"body":{"interfaces/HeatmapSummary.html":{},"coverage.html":{}}}],["sun",{"_index":777,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["support",{"_index":3416,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1707,"title":{},"body":{"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/UserLikedSongsService.html":{}}}],["sure",{"_index":1420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surface",{"_index":818,"title":{},"body":{"components/CalendarComponent.html":{}}}],["surroundingpairs",{"_index":3069,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":3417,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2161,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["switches",{"_index":2159,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":2130,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":2157,"title":{},"body":{"components/GraphsComponent.html":{}}}],["symbol",{"_index":759,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["sync",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"injectables/SyncSchemaService.html":{}}}],["syncallschema",{"_index":2937,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["synced",{"_index":2973,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["synced[key",{"_index":2975,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncedsettings",{"_index":2981,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncedsettings['app_version",{"_index":2984,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncedsettings[key",{"_index":2982,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["synchronize",{"_index":2930,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncing",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["syncschemaservice",{"_index":431,"title":{"injectables/SyncSchemaService.html":{}},"body":{"components/AppComponent.html":{},"injectables/SyncSchemaService.html":{},"coverage.html":{}}}],["syncuser",{"_index":2938,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncuser(storagekey",{"_index":2943,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncwithschema",{"_index":2939,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syncwithschema(storagekey",{"_index":2947,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["syntax",{"_index":2397,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":1237,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":2018,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["t.id",{"_index":2376,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":3059,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":1222,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["tabcompletion",{"_index":3031,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":2374,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":767,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3293,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3058,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tailored",{"_index":3329,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":960,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["tailwind/hex",{"_index":2412,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["take",{"_index":2672,"title":{},"body":{"injectables/PostApiService.html":{}}}],["taken",{"_index":1499,"title":{},"body":{"injectables/ConfigService.html":{}}}],["tap",{"_index":3367,"title":{},"body":{"index.html":{}}}],["target",{"_index":993,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["teal",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":3342,"title":{},"body":{"index.html":{}}}],["technology",{"_index":3344,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{"interfaces/Template.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":1223,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":1224,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":2334,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":1187,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":322,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":3071,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":1206,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":3213,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/UserData.html":{}}}],["term",{"_index":1054,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["text",{"_index":372,"title":{},"body":{"components/AiComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["textcolor",{"_index":1665,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["that's",{"_index":2051,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["theme_mode",{"_index":2734,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["then((content",{"_index":3211,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["then(m",{"_index":3531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thinking",{"_index":395,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":2871,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.addorupdateheatmapsummary('bg",{"_index":836,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.appname",{"_index":1514,"title":{},"body":{"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.appversion",{"_index":1951,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.budgetkey",{"_index":2762,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetschema",{"_index":2783,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":812,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":796,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":813,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":808,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2613,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":986,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":989,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":2588,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2608,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":2590,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2758,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":2589,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":2601,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":996,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":997,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryschema",{"_index":2777,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categoryselected.emit(category",{"_index":992,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":2586,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":987,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":988,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2614,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2615,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":2233,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":2231,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.close.emit",{"_index":1977,"title":{},"body":{"components/FormModelComponent.html":{}}}],["this.closedownloaddatamodal",{"_index":1607,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.closemodal.emit",{"_index":1811,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.config",{"_index":1384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.getapiurl",{"_index":2686,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.configservice.getappname",{"_index":2523,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.configservice.getversion",{"_index":1952,"title":{},"body":{"components/FooterComponent.html":{},"injectables/SyncSchemaService.html":{}}}],["this.confirmanddownload",{"_index":1585,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.createsession",{"_index":1357,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.currency",{"_index":789,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate",{"_index":2475,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":2236,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":2210,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":2211,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":2478,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":2480,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":2479,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":2482,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":794,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":1938,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["this.currentyear",{"_index":795,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":2467,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.deferredprompt",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.prompt",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["this.deferredprompt.userchoice.then((choiceresult",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1812,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1509,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.downloadblob(content",{"_index":3212,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.downloaddataform",{"_index":1581,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.invalid",{"_index":1583,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markallastouched",{"_index":1584,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markaspristine",{"_index":1627,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.markasuntouched",{"_index":1628,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.reset",{"_index":1626,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.downloaddataform.value",{"_index":1586,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1809,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1793,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1802,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1805,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1808,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editor",{"_index":3009,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":3070,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":3033,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":3039,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":1387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":1393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":1389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":2760,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":2587,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2610,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":2599,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseschema",{"_index":2779,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenseselected.emit(expense",{"_index":1859,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":825,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":2015,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.exporttoexcel(filteredexpensedata",{"_index":1612,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.exporttopdf(filteredexpensedata",{"_index":1610,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["this.filteredlocationsuggestions",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":2486,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":2490,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":2010,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generatereadme",{"_index":3207,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.generateuserid",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":3155,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":622,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["this.getall().find(item",{"_index":1738,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/UserLikedSongsService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":3037,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.getlast30daysexpenses",{"_index":2008,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2687,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":2826,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":2825,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":2106,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":2108,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":2107,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1060,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":2092,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":2006,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1058,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1078,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.handlebarsinstance",{"_index":2337,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":2383,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":2343,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":2353,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":2378,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":2372,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":2366,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":2356,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":2351,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.heatmapsummary",{"_index":797,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.heatmapsummary.find(item",{"_index":839,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.heatmapsummary.push",{"_index":843,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.history",{"_index":1149,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1144,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.savvanapiurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1059,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":1383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":1392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":1375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":1366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":1407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":1438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":1405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(url",{"_index":2688,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1792,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.initializeeditor",{"_index":1360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":2336,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.installapp.emit",{"_index":2524,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["this.isappupdated",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isbrowser",{"_index":614,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":991,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.isdarkmode",{"_index":2585,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.iseditopen",{"_index":1803,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.ismenuopen",{"_index":2316,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":1939,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["this.isopen",{"_index":2818,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isshowheatmap",{"_index":791,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.isvisible",{"_index":2094,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.lastsaved",{"_index":1402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.likedsongschema",{"_index":2785,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.liveapiurl",{"_index":1511,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.loadcategories",{"_index":985,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":2202,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":2595,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":2207,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loader.show",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmonthdata",{"_index":2593,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":2206,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsessionconfig",{"_index":1359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":1358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":2594,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":2208,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.localapiurl",{"_index":1510,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.locationsuggestions",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":2093,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":392,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":826,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":827,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":831,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onchangecallback",{"_index":3034,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":3035,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["this.previewframe.nativeelement.src",{"_index":1415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":1414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.query",{"_index":2822,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":2828,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim().length",{"_index":2827,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.registerhandlebarslanguage",{"_index":3036,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":2341,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":793,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2603,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":391,"title":{},"body":{"components/AiComponent.html":{}}}],["this.save_delay",{"_index":1403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":1401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":1363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":1398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":1390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.search.emit(this.query",{"_index":2823,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":2824,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":2819,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":1937,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":2320,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":2843,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":2850,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1807,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1804,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1794,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1795,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1796,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1801,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1800,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1798,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1799,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1797,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedfile",{"_index":1380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":1381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":1352,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":1449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showaibutton",{"_index":2315,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":2543,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showconfigpanel",{"_index":1412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showdownloaddatamodal",{"_index":1629,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.showinstallbutton",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppPopupComponentComponent.html":{}}}],["this.showlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":832,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":615,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":895,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":894,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallsongs",{"_index":3179,"title":{},"body":{"injectables/UserLikedSongsService.html":{}}}],["this.storageservice.getbudgetschema",{"_index":2957,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getcategorykey",{"_index":2963,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getcategoryschema",{"_index":2953,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getexpenseschema",{"_index":2955,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getlikedsongschema",{"_index":2959,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.getuser",{"_index":2704,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.getuserschema",{"_index":2951,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.storageservice.updatebudgets(budgets",{"_index":647,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["this.storageservice.updatecategories(categories",{"_index":929,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.storageservice.updateuser(user",{"_index":3164,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.syncschemaservice.syncallschema",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["this.syncuser(this.storageservice.getuserkey",{"_index":2950,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getbudgetkey",{"_index":2956,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getcategorykey",{"_index":2952,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getexpensekey",{"_index":2954,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.syncwithschema(this.storageservice.getuserlikedsongskey",{"_index":2958,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["this.templates",{"_index":1376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":1379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.theme.mode",{"_index":2201,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":2230,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":3133,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":3134,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":3099,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["this.toastservice.show('error",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('excel",{"_index":1613,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('expense",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toastservice.show('failed",{"_index":1615,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('json",{"_index":1608,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toastservice.show('pdf",{"_index":1611,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.today",{"_index":1579,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.toggleedit",{"_index":1810,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":2224,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":824,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.triggerdownload(jsondata",{"_index":1606,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["this.userinput.trim",{"_index":382,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":2764,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userlikedsongskey",{"_index":2766,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userschema",{"_index":2781,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('app_version",{"_index":2694,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('currency",{"_index":790,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('is_app_updated",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.getvalue('is_show_heatmap",{"_index":792,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2678,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('is_app_updated",{"_index":2695,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.update('is_show_heatmap",{"_index":838,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.userservice.update('last_backup",{"_index":2696,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":1515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.viewtype",{"_index":2205,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":2476,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":2477,"title":{},"body":{"components/HomeComponent.html":{}}}],["though",{"_index":3402,"title":{},"body":{"index.html":{}}}],["through",{"_index":3358,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["thu",{"_index":781,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["ticks",{"_index":2635,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"index.html":{}}}],["timeamountmap",{"_index":2234,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":2258,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":2248,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":2255,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeout",{"_index":1397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["times",{"_index":851,"title":{},"body":{"components/CalendarComponent.html":{},"components/FormModelComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":2257,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":2259,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["timestamp}.${extension",{"_index":1621,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.pdf",{"_index":1684,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestamp}.xlsx",{"_index":1698,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["timestr",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["tips",{"_index":3230,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":754,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"interfaces/UserData.html":{}}}],["titlecase",{"_index":2498,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1746,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{}}}],["toast.classname",{"_index":3110,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":3087,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":3086,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":3120,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":3122,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.service",{"_index":2676,"title":{},"body":{"injectables/PostApiService.html":{}}}],["toastcomponent",{"_index":324,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":3100,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":3121,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":3103,"title":{},"body":{"components/ToastComponent.html":{}}}],["toasts",{"_index":3102,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["todate",{"_index":580,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/UserData.html":{}}}],["todate.toisostring",{"_index":2016,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":798,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["todaysexpenses",{"_index":2237,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":2249,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":2239,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":2235,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todo",{"_index":1424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":1211,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":942,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleconfigpanel",{"_index":1411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleedit",{"_index":1763,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["toggleheatmap",{"_index":698,"title":{},"body":{"components/CalendarComponent.html":{}}}],["togglemenu",{"_index":2298,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":748,"title":{},"body":{"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":2796,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["token",{"_index":3050,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":3049,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tomato",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":2044,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":2164,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":2124,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":1284,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":1367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":671,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"interfaces/HeatmapSummary.html":{},"index.html":{}}}],["totalamount",{"_index":2216,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalexpenses",{"_index":688,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":3397,"title":{},"body":{"index.html":{}}}],["touched",{"_index":1545,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":1067,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/ExpenseWiseComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trackbyname(index",{"_index":1466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tracker",{"_index":2544,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseWiseComponent.html":{}}}],["tracks",{"_index":2313,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{}}}],["transform",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transition",{"_index":1272,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["translatey(0",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":2359,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":2361,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":2364,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":1324,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["travel",{"_index":3355,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":2030,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["trigger",{"_index":1454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/InstallAppPopupComponentComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["triggerdownload",{"_index":1537,"title":{},"body":{"components/DownloadComponentComponent.html":{}}}],["triggerdownload(content",{"_index":1556,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggered",{"_index":2519,"title":{},"body":{"components/InstallAppPopupComponentComponent.html":{}}}],["triggering",{"_index":1543,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/DownloadComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["trimmedinput",{"_index":381,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":383,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{}}}],["ts",{"_index":3043,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":3225,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["tslib",{"_index":3315,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":779,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["two",{"_index":889,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeclasses",{"_index":3105,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":3117,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":3116,"title":{},"body":{"components/ToastComponent.html":{}}}],["typed",{"_index":3361,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":606,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["typeparam",{"_index":3158,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":3044,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["typically",{"_index":1974,"title":{},"body":{"components/FormModelComponent.html":{},"injectables/ToastService.html":{}}}],["typing",{"_index":3375,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1050,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/GlobalLoaderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["ui/ux",{"_index":3328,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":854,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":608,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":2417,"title":{},"body":{"interfaces/HeatmapSummary.html":{}}}],["undone",{"_index":1423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unique",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["universal",{"_index":3437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2350,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unrelated",{"_index":2041,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":3392,"title":{},"body":{"index.html":{}}}],["up",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":636,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":911,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1735,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":3153,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateallbudgets",{"_index":649,"title":{},"body":{"injectables/BudgetService.html":{}}}],["updateallbudgets(budgets",{"_index":646,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["updateallcategories",{"_index":1000,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateallcategories(categories",{"_index":928,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["updatebudgets",{"_index":2897,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatebudgets(budgets",{"_index":2770,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatecategories",{"_index":2898,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatecategories(categories",{"_index":2767,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateconfig",{"_index":1406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2971,"title":{},"body":{"injectables/SyncSchemaService.html":{}}}],["updatedexpense",{"_index":1806,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":2009,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":2899,"title":{},"body":{"injectables/StorageService.html":{}}}],["updateuser(user",{"_index":2773,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updateuserdata",{"_index":3183,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdata(user",{"_index":3163,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updating",{"_index":1410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"interfaces/Template.html":{}}}],["upi",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":3390,"title":{},"body":{"index.html":{}}}],["upon",{"_index":3347,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1293,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":1039,"title":{},"body":{"interfaces/ChatMessage.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/HbsRenderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Session.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"interfaces/Template.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["url.createobjecturl(zipblob",{"_index":1455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":1462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["usage",{"_index":3221,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["usd",{"_index":3141,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1135,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"interfaces/HeatmapSummary.html":{},"components/NavbarComponent.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/DownloadComponentComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":1107,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.service",{"_index":876,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2665,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":864,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_liked_songs",{"_index":2726,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["user_password",{"_index":2733,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":1574,"title":{"interfaces/UserData.html":{}},"body":{"components/DownloadComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2689,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2724,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userlikedsongskey",{"_index":2725,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userlikedsongsservice",{"_index":3165,"title":{"injectables/UserLikedSongsService.html":{}},"body":{"injectables/UserLikedSongsService.html":{},"coverage.html":{}}}],["userquery",{"_index":1998,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":2642,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"index.html":{}}}],["userschema",{"_index":2729,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":420,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/DownloadComponentComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":2200,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":1999,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uses",{"_index":1062,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":332,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"index.html":{}}}],["utilities",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":1822,"title":{},"body":{"components/ExpenseListComponent.html":{},"index.html":{}}}],["val?.tolowercase().trim",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1788,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["validates",{"_index":1526,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validation",{"_index":1564,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["validators.max(100000000",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(100",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["valign",{"_index":1662,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2370,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["value.split",{"_index":2491,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":2484,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":886,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"injectables/HbsRenderService.html":{},"components/InstallAppPopupComponentComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"interfaces/Session.html":{},"injectables/StorageService.html":{},"interfaces/Template.html":{}}}],["value}\\n",{"_index":1088,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":260,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":3242,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3423,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2873,"title":{},"body":{"interfaces/Song.html":{}}}],["version",{"_index":1475,"title":{},"body":{"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":3523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":3021,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["via",{"_index":1858,"title":{},"body":{"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"index.html":{}}}],["vibe",{"_index":1132,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/CompoDocConfig.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":2574,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":980,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('editorcontainer",{"_index":1339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":1342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('searchinput",{"_index":2816,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":1920,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["views",{"_index":2548,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["viewtype",{"_index":2132,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":2424,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":2425,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/UserData.html":{}}}],["visible",{"_index":774,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":3236,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["visualization",{"_index":668,"title":{},"body":{"components/CalendarComponent.html":{}}}],["visualizes",{"_index":3352,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2052,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/CompoDocConfig.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"interfaces/Session.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":3011,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["v{{appversion",{"_index":1955,"title":{},"body":{"components/FooterComponent.html":{}}}],["w",{"_index":3064,"title":{},"body":{"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["w+)(\\s*=\\s",{"_index":3060,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":1421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":914,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["warning)defaults",{"_index":3131,"title":{},"body":{"injectables/ToastService.html":{}}}],["way",{"_index":2720,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":2055,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":2500,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":780,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["weekday",{"_index":785,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":689,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekly",{"_index":3139,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":1265,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["whenever",{"_index":2801,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/HbsRenderService.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["white",{"_index":1308,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"components/ToastComponent.html":{}}}],["whole",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1286,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window",{"_index":607,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/ExpenseWiseComponent.html":{},"components/PieChartComponent.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('beforeinstallprompt",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["window.innerwidth",{"_index":1940,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["window.localstorage",{"_index":609,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SyncSchemaService.html":{},"interfaces/User.html":{},"injectables/UserLikedSongsService.html":{},"injectables/UserService.html":{}}}],["window.location.href.includes(\"exwise",{"_index":1513,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.location.href.includes(\"localhost",{"_index":1512,"title":{},"body":{"injectables/ConfigService.html":{}}}],["window.settimeout(async",{"_index":1400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1617,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1625,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"injectables/ZipExportService.html":{}}}],["window:resize",{"_index":1907,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["window:resize(event",{"_index":1911,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise",{"_index":1901,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"index.html":{}}}],["wise'},{'name",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/ExpenseWiseComponent.html":{},"components/FooterComponent.html":{},"components/FormModelComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InstallAppPopupComponentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PlaylistMusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchMusicComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["wise.component')\\r\\n",{"_index":3530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wise.component.css",{"_index":1903,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.html",{"_index":1902,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts",{"_index":1900,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{}}}],["wise.component.ts:39",{"_index":1918,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts:44",{"_index":1910,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts:65",{"_index":1914,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise.component.ts:75",{"_index":1912,"title":{},"body":{"components/ExpenseWiseComponent.html":{}}}],["wise/expense",{"_index":1899,"title":{},"body":{"components/ExpenseWiseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisely",{"_index":3320,"title":{},"body":{"index.html":{}}}],["within",{"_index":1524,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/UserData.html":{}}}],["without",{"_index":619,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["wordbasedsuggestions",{"_index":3032,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":3016,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["workbook",{"_index":1686,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["worker",{"_index":3297,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":2648,"title":{},"body":{"components/PlaylistMusicComponent.html":{},"components/SearchMusicComponent.html":{},"index.html":{}}}],["worksheet",{"_index":1695,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["wrap",{"_index":2384,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":2388,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wraps",{"_index":1680,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":2176,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xlsx",{"_index":1561,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["xlsx.utils.aoa_to_sheet(aoa",{"_index":1696,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_append_sheet(workbook",{"_index":1697,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.utils.book_new",{"_index":1687,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xlsx.writefile(workbook",{"_index":1699,"title":{},"body":{"components/DownloadComponentComponent.html":{},"interfaces/UserData.html":{}}}],["xs",{"_index":3111,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1288,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["year",{"_index":744,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"interfaces/Song.html":{},"interfaces/SongArtists.html":{},"interfaces/SongDownloadUrl.html":{},"interfaces/SongImage.html":{},"injectables/StorageService.html":{}}}],["yearly",{"_index":2141,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["years",{"_index":3368,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":3107,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1648,"title":{},"body":{"components/DownloadComponentComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"interfaces/UserData.html":{}}}],["yyyy",{"_index":718,"title":{},"body":{"components/CalendarComponent.html":{},"components/DownloadComponentComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserLikedSongsService.html":{}}}],["z",{"_index":2505,"title":{},"body":{"components/HomeComponent.html":{}}}],["zip",{"_index":1190,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":3208,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":3204,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":3210,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":1443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":1189,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":1355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zone.js",{"_index":3318,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2165,"title":{},"body":{"components/GraphsComponent.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0), Validators.max(100000000)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n\n                \n                    Amount cannot exceed 100,000,000\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount cannot exceed 100,000,000                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for AI interaction using Gemini API.\nFeatures:\n\nAccepts user input.\nSends input to Gemini API for processing.\nConverts AI Markdown response to sanitized HTML for display.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor to inject services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles AI requests.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular sanitizer for safe HTML rendering.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sends the user input to the Gemini API.\n\nIgnores input shorter than 2 characters.\nConverts returned Markdown to sanitized HTML.\n\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:30\n                        \n                    \n\n            \n                \n                    AI response rendered as sanitized HTML\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:27\n                        \n                    \n\n            \n                \n                    User input from the text box\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n/**\n * Component for AI interaction using Gemini API.\n * \n * Features:\n * - Accepts user input.\n * - Sends input to Gemini API for processing.\n * - Converts AI Markdown response to sanitized HTML for display.\n */\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n\n  /** User input from the text box */\n  userInput = '';\n\n  /** AI response rendered as sanitized HTML */\n  responseHtml: SafeHtml | null = null;\n\n  /**\n   * Constructor to inject services.\n   * \n   * @param geminiApi Service that handles AI requests.\n   * @param sanitizer Angular sanitizer for safe HTML rendering.\n   */\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Sends the user input to the Gemini API.\n   * - Ignores input shorter than 2 characters.\n   * - Converts returned Markdown to sanitized HTML.\n   */\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GlobalLoaderComponent\n                            CommonModule\n                                InstallAppPopupComponentComponent\n                            RouterOutlet\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deferredPrompt\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                showInstallButton\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                installApp\n                            \n                            \n                                isAppUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, postApiService: PostApiService, toastService: ToastService, syncSchemaService: SyncSchemaService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:47\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying toast notifications\n\n                                                        \n                                                \n                                                \n                                                        syncSchemaService\n                                                  \n                                                        \n                                                                        SyncSchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installApp\n                        \n                    \n                \n            \n            \n                \ninstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Triggers the PWA installation prompt if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppUpdated\n                        \n                    \n                \n            \n            \n                \nisAppUpdated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Checks if the application is updated.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the app is updated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deferredPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:42\n                        \n                    \n\n            \n                \n                     PWA installation prompt event\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:37\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInstallButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                     Flag to control the display of the installation prompt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:61\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { InstallAppPopupComponentComponent } from './component/install-app-popup-component/install-app-popup-component.component';\n\nimport { SyncSchemaService } from './service/localStorage/sync-schema.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\nimport { ToastService } from './service/toast/toast.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    GlobalLoaderComponent, CommonModule, InstallAppPopupComponentComponent, RouterOutlet\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   *  PWA installation prompt event\n   */\n  deferredPrompt: any;\n\n  /**\n   *  Flag to control the display of the installation prompt\n   */\n  showInstallButton = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param storageService Local storage schema sync service\n   * @param postApiService Backend API post service\n   * @param toastService Service for displaying toast notifications\n   * @param platformId Angular platform ID to check if running in browser\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private postApiService: PostApiService,\n    private toastService: ToastService,\n    private syncSchemaService: SyncSchemaService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n\n      this.loader.show();\n      setTimeout(() => {\n        this.loader.hide();\n      }, 500);\n\n      this.syncSchemaService.syncAllSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n\n      // Show update toast if app is not updated\n      if (!this.isAppUpdated()) {\n        setTimeout(() => {\n          this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n        }, 500);\n      }\n\n      // Listen for PWA installation prompt\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.deferredPrompt = event;\n        this.showInstallButton = true;\n      });\n    }\n  }\n\n  /**\n   * Disables the context menu on right-click for the whole app.\n   * @param event Mouse event object\n   */\n  @HostListener('document:contextmenu', ['$event'])\n  onRightClick(event: MouseEvent) {\n    event.preventDefault();\n  }\n\n  /**\n   * Generates a unique user ID by combining timestamp and random string.\n   * @returns Generated user ID string\n   */\n  private generateUserId(): string {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substring(2, 10);\n    return `${timestamp}-${random}`;\n  }\n\n  /**\n   * Checks if the application is updated.\n   * @returns True if the app is updated, false otherwise.\n   */\n  isAppUpdated(): boolean {\n    return this.userService.getValue('is_app_updated') ?? false;\n  }\n\n  /**\n   * Triggers the PWA installation prompt if available.\n   */\n  installApp() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt();\n      this.deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.showInstallButton = false;\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n        this.deferredPrompt = null;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a budget entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget amount (rounded to 2 decimal places).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the budget.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End date of the budget period (ISO string).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing budgets in local storage.\nProvides methods to add, update, delete, and fetch budgets,\nwhile ensuring data is only accessed in the browser environment.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllBudgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of BudgetService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Adds a new budget entry to local storage.\nAutomatically generates a unique budget_id and rounds the amount to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The budget data (without budget_id) to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Deletes a budget entry from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets stored in local storage.\n\n\n                        \n                            Returns :         Budget[]\n\n                        \n                            \n                                A list of all saved budgets, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Updates an existing budget entry in local storage.\nMatches by budget_id and merges with the provided data.\nThe amount is always rounded to 2 decimals.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the budget to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial budget fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllBudgets\n                        \n                    \n                \n            \n            \n                \nupdateAllBudgets(budgets: Budget[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Replaces all budgets in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                            Budget[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a budget entry.\n */\nexport interface Budget {\n  /** Unique identifier for the budget. */\n  budget_id: string;\n\n  /** Budget amount (rounded to 2 decimal places). */\n  amount: number;\n\n  /** Start date of the budget period (ISO string). */\n  fromDate: string;\n\n  /** End date of the budget period (ISO string). */\n  toDate: string;\n};\n\n/**\n * Service responsible for managing budgets in local storage.\n * Provides methods to add, update, delete, and fetch budgets,\n * while ensuring data is only accessed in the browser environment.\n */\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  /**\n   * Creates an instance of BudgetService.\n   *\n   * @param storageService A service for interacting with local storage keys and data.\n   */\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all budgets stored in local storage.\n   *\n   * @returns {Budget[]} A list of all saved budgets, or an empty array if not in the browser.\n   */\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  /**\n   * Adds a new budget entry to local storage.\n   * Automatically generates a unique `budget_id` and rounds the amount to 2 decimals.\n   *\n   * @param data The budget data (without `budget_id`) to add.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing budget entry in local storage.\n   * Matches by `budget_id` and merges with the provided data.\n   * The amount is always rounded to 2 decimals.\n   *\n   * @param budget_id The ID of the budget to update.\n   * @param newData Partial budget fields to update.\n   */\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a budget entry from local storage.\n   *\n   * @param budget_id The ID of the budget to delete.\n   */\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Replaces all budgets in local storage with the provided list.\n   *\n   * @param budgets The new list of budgets to save.\n   */\n  updateAllBudgets(budgets: Budget[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateBudgets(budgets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that renders a monthly calendar view with expense tracking.\nFeatures:\n\nDisplays days of the current month with previous/next month padding.\nHeatmap visualization based on daily expenses.\nCalculates total expenses per month and per day.\nOpens modal to view daily expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                heatmapSummary\n                            \n                            \n                                isShowHeatmap\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOrUpdateHeatMapSummary\n                            \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                    Private\n                                getHeatClass\n                            \n                            \n                                getTotalAmount\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                            \n                                toggleHeatmap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:63\n                            \n                        \n\n                \n                    \n                            Creates an instance of CalendarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve expenses from local storage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user settings such as currency.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOrUpdateHeatMapSummary\n                        \n                    \n                \n            \n            \n                \naddOrUpdateHeatMapSummary(color: string, amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:251\n                        \n                    \n\n\n            \n                \n                        Adds a new entry to the heatmap summary or updates an existing one.\nIf an entry with the given color already exists in heatmapSummary,\nit increments the days count by 1 and adds the amount to the existing total.\nOtherwise, it creates a new entry with days initialized to 1 and amount as provided.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe color representing the heat intensity for the day.\n\n\n                                            \n                                        \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expense amount to be added for that color.\n\nIf an entry with the given color already exists in heatmapSummary, \nit increments the days count by 1 and adds the amount to the existing total.\nOtherwise, it creates a new entry with days initialized to 1 and amount as provided.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Calculates the total expenses for a given date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date (YYYY-MM-DD)\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Changes the calendar month by a specified offset.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of months to change (positive or negative)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Closes the daily expenses modal and clears modal data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeatClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeatClass(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:205\n                        \n                    \n\n\n            \n                \n                        Gets the heatmap class for a given expense amount and update the heatmapSummary\n.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The total expense amount for the day.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The corresponding heatmap class.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalAmount\n                        \n                    \n                \n            \n            \n                \ngetTotalAmount(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Gets the total expenses for a specific date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date string in YYYY-MM-DD format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The total expense amount for the date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that initializes the calendar view\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Opens the modal to show expenses for a specific day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date string (YYYY-MM-DD)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Renders the calendar for a given year and month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Year to render\n\n                                            \n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Month to render (0-11)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHeatmap\n                        \n                    \n                \n            \n            \n                \ntoggleHeatmap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Toggles the heatmap display and re-renders the calendar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:38\n                        \n                    \n\n            \n                \n                    Array of calendar day objects for rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:32\n                        \n                    \n\n            \n                \n                    Calendar header title (e.g., \"September 2025\")\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:50\n                        \n                    \n\n            \n                \n                    Currency symbol from user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:29\n                        \n                    \n\n            \n                \n                    Current month of the calendar (0-11)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:26\n                        \n                    \n\n            \n                \n                    Current year of the calendar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heatmapSummary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HeatmapSummary[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:63\n                        \n                    \n\n            \n                \n                    Stores the generated heatmap summary data for the current month.\nEach item contains the color category, total days, and total amount\nused to render the heatmap legend and summary table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowHeatmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:56\n                        \n                    \n\n            \n                \n                    Whether to show heatmap colors on the calendar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:47\n                        \n                    \n\n            \n                \n                    List of expenses for the selected day in the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:44\n                        \n                    \n\n            \n                \n                    Title of the modal showing daily expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:41\n                        \n                    \n\n            \n                \n                    Whether the daily expense modal is visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:35\n                        \n                    \n\n            \n                \n                    Total expenses in the current month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:74\n                        \n                    \n\n            \n                \n                    Service to retrieve user settings such as currency.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:53\n                        \n                    \n\n            \n                \n                    Weekday labels\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { FormsModule } from '@angular/forms';\nimport { HeatmapSummary } from '../../models/heatMap-summary.service';\n\n/**\n * Component that renders a monthly calendar view with expense tracking.\n *\n * Features:\n * - Displays days of the current month with previous/next month padding.\n * - Heatmap visualization based on daily expenses.\n * - Calculates total expenses per month and per day.\n * - Opens modal to view daily expenses.\n */\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\nexport class CalendarComponent implements OnInit {\n\n  /** Current year of the calendar */\n  currentYear = new Date().getFullYear();\n\n  /** Current month of the calendar (0-11) */\n  currentMonth = new Date().getMonth();\n\n  /** Calendar header title (e.g., \"September 2025\") */\n  calendarTitle = '';\n\n  /** Total expenses in the current month */\n  totalExpenses = 0;\n\n  /** Array of calendar day objects for rendering */\n  calendarDays: any[] = [];\n\n  /** Whether the daily expense modal is visible */\n  showModal = false;\n\n  /** Title of the modal showing daily expenses */\n  modalTitle = '';\n\n  /** List of expenses for the selected day in the modal */\n  modalExpenses: any[] = [];\n\n  /** Currency symbol from user settings */\n  currency: string | null;\n\n  /** Weekday labels */\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  /** Whether to show heatmap colors on the calendar */\n  isShowHeatmap: boolean = false;\n\n  /** \n   * Stores the generated heatmap summary data for the current month.\n   * Each item contains the color category, total days, and total amount\n   * used to render the heatmap legend and summary table.\n   */\n  heatmapSummary: HeatmapSummary[] = [];\n\n\n  /**\n   * Creates an instance of CalendarComponent.\n   *\n   * @param expenseService Service to retrieve expenses from local storage.\n   * @param userService Service to retrieve user settings such as currency.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n    this.isShowHeatmap = this.userService.getValue('is_show_heatmap') ?? false;\n  }\n\n  /** Angular lifecycle hook that initializes the calendar view */\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Changes the calendar month by a specified offset.\n   *\n   * @param offset Number of months to change (positive or negative)\n   */\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Renders the calendar for a given year and month.\n   *\n   * @param year Year to render\n   * @param month Month to render (0-11)\n   */\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    this.heatmapSummary = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Render previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Render current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  /**\n   * Opens the modal to show expenses for a specific day.\n   *\n   * @param dateStr Date string (YYYY-MM-DD)\n   */\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  /**\n   * Closes the daily expenses modal and clears modal data.\n   */\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n\n  /**\n   * Gets the heatmap class for a given expense amount and update the heatmapSummary\n .\n   * @param amount The total expense amount for the day.\n   * @returns The corresponding heatmap class.\n   */\n  private getHeatClass(amount: number): string {\n    if (this.isShowHeatmap === false) return 'bg-[var(--color-surface)]';\n    if (amount === 0) {\n      this.addOrUpdateHeatMapSummary('bg-[var(--color-gray)]', amount)\n      return 'bg-[var(--color-gray)]';\n    }\n    if (amount  acc + exp.amount || 0, 0);\n  }\n\n  /**\n   * Toggles the heatmap display and re-renders the calendar.\n   */\n  toggleHeatmap(): void {\n    this.isShowHeatmap = !this.isShowHeatmap;\n    this.userService.update('is_show_heatmap', this.isShowHeatmap);\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  /**\n   * Adds a new entry to the heatmap summary or updates an existing one.\n   *\n   * @param color - The color representing the heat intensity for the day.\n   * @param amount - The expense amount to be added for that color.\n   *\n   * If an entry with the given color already exists in `heatmapSummary`, \n   * it increments the `days` count by 1 and adds the `amount` to the existing total.\n   * Otherwise, it creates a new entry with `days` initialized to 1 and `amount` as provided.\n   */\n  addOrUpdateHeatMapSummary(color: string, amount: number) {\n    const existing = this.heatmapSummary.find(item => item.color === color);\n    if (existing) {\n      existing.days += 1;\n      existing.amount += amount;\n    } else {\n      this.heatmapSummary.push({\n        color: color,\n        days: 1,\n        amount: amount\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            Show HeatMap\n            \n                \n                \n                \n                \n            \n        \n\n        \n            \n                \n            \n\n            \n                Total Expenses: \n                {{currency}} {{ totalExpenses }}\n            \n\n            \n                \n            \n        \n\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                \n                No expense\n            \n            \n                \n                &lt; 300\n            \n            \n                \n                300 – 1000\n            \n            \n                \n                &gt; 1000\n            \n        \n    \n\n    \n     0\">\n        \n\n            \n            \n                Color\n                Days\n                Amount\n            \n\n            \n            \n                \n                    \n                \n                {{ item.days }}\n                {{ currency }} {{ item.amount}}\n            \n            \n            \n            \n                Total\n                {{ currency }} {{ totalExpenses }}\n            \n\n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount\n                            }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Show HeatMap                                                                                                                                                                            Total Expenses:                 {{currency}} {{ totalExpenses }}                                                                                                        {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                                        No expense                                                                                                                300 – 1000                                                        > 1000                                 0\">                                                Color                Days                Amount                                                                                                        {{ item.days }}                {{ currency }} {{ item.amount}}                                                                Total                {{ currency }} {{ totalExpenses }}                                                                    {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount                            }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a category used to group expenses.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category (e.g., hex or CSS color).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of expenses linked to this category.\n(This is a computed field and not part of the stored table.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon representing the category (e.g., from an icon set).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the category is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display name of the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user ID that owns this category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for managing categories in local storage.\nProvides methods to create, read, update, delete, and sort categories,\nensuring data consistency with associated expenses.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateAllCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle local storage operations.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to retrieve user-related values (like user ID).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Adds a new category to local storage.\nGenerates a unique category_id and associates it with the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Category data excluding category_id and user_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Deletes a category from local storage by its ID.\nIf the category does not exist, a warning is logged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from local storage.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                List of all categories, or an empty array if not in the browser.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories sorted by the number of expenses assigned to each.\nIf two categories have the same count, they are sorted alphabetically by name.\n\n\n                        \n                            Returns :         Category[]\n\n                        \n                            \n                                Sorted list of categories with expense counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment\nwith localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Updates an existing category in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial category fields to update.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllCategories\n                        \n                    \n                \n            \n            \n                \nupdateAllCategories(categories: Category[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Replaces all categories in local storage with the provided list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                            Category[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new list of categories to store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\n/**\n * Interface representing a category used to group expenses.\n */\nexport interface Category {\n  /** Unique identifier for the category. */\n  category_id: string;\n\n  /** The display name of the category. */\n  name: string;\n\n  /** Icon representing the category (e.g., from an icon set). */\n  icon: string;\n\n  /** Color associated with the category (e.g., hex or CSS color). */\n  color: string;\n\n  /** The user ID that owns this category. */\n  user_id: string;\n\n  /** Indicates whether the category is active. */\n  is_active: string;\n\n  /** \n   * Number of expenses linked to this category.  \n   * (This is a computed field and not part of the stored table.)\n   */\n  expense_count: number;\n}\n\n/**\n * Service responsible for managing categories in local storage.\n * Provides methods to create, read, update, delete, and sort categories,\n * ensuring data consistency with associated expenses.\n */\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  /**\n   * Creates an instance of CategoryService.\n   *\n   * @param storageService Service to handle local storage operations.\n   * @param userService Service to retrieve user-related values (like user ID).\n   */\n  constructor(\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Checks if the code is running in a browser environment\n   * with `localStorage` available.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves all categories sorted by the number of expenses assigned to each.\n   * If two categories have the same count, they are sorted alphabetically by name.\n   *\n   * @returns {Category[]} Sorted list of categories with expense counts.\n   */\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Retrieves all categories from local storage.\n   *\n   * @returns {Category[]} List of all categories, or an empty array if not in the browser.\n   */\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  /**\n   * Adds a new category to local storage.\n   * Generates a unique `category_id` and associates it with the current user.\n   *\n   * @param data Category data excluding `category_id` and `user_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing category in local storage.\n   *\n   * @param category_id The ID of the category to update.\n   * @param newData Partial category fields to update.\n   */\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Deletes a category from local storage by its ID.\n   * If the category does not exist, a warning is logged.\n   *\n   * @param category_id The ID of the category to delete.\n   */\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n\n    // Check if the category actually exists before attempting deletion\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n\n  /**\n   * Replaces all categories in local storage with the provided list.\n   *\n   * @param categories The new list of categories to store.\n   */\n  updateAllCategories(categories: Category[]): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateCategories(categories);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ChatMessage interface\nRepresents a single message exchanged between the user and the model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text content of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role of the message sender (user or model).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private savvanApiUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private geminiApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) { }\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.savvanApiUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.geminiApiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      this.globalLoaderService.hide();\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appName\n                            \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                            \n                                    Private\n                                    Readonly\n                                liveAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                localAPIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                            \n                                getAppName\n                            \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/config/config.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL depending on the environment.\n\n\"local\" → http://localhost:8000\n\"live\" → https://exwiseapi.onrender.com\nAny other value → Determines based on current window location.\nIf the URL contains \"localhost\", returns http://localhost:8000.\nIf the URL contains \"exwise\", returns https://exwiseapi.onrender.com.\nDefaults to http://localhost:8000 if none of the above conditions are met.\n\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Returns the application name defined in environment settings.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The application name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/config/config.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:24\n                        \n                    \n\n            \n                \n                    The application name, retrieved from environment settings.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:19\n                        \n                    \n\n            \n                \n                    The current environment setting taken from environment configuration.\nPossible values:\n\n\"local\" → Uses localhost API endpoint.\n\"live\" → Uses production API endpoint.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        liveAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.liveAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:36\n                        \n                    \n\n            \n                \n                    The production (live) API base URL.\nExample: https://exwiseapi.onrender.com\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        localAPIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.localAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:43\n                        \n                    \n\n            \n                \n                    The local development API base URL.\nExample: http://localhost:8000\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/config/config.service.ts:29\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting taken from environment configuration.\n   * \n   * Possible values:\n   * - `\"local\"` → Uses localhost API endpoint.\n   * - `\"live\"` → Uses production API endpoint.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n\n  /** \n   * The application name, retrieved from environment settings. \n   */\n  private readonly appName: string = environment.appName;\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  private readonly liveAPIUrl: string = environment.liveAPIUrl;\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  private readonly localAPIUrl: string = environment.localAPIUrl;\n\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL depending on the environment.\n   *\n   * - `\"local\"` → `http://localhost:8000`\n   * - `\"live\"` → `https://exwiseapi.onrender.com`\n   * - Any other value → Determines based on current window location.\n   * - If the URL contains `\"localhost\"`, returns `http://localhost:8000`.\n   * - If the URL contains `\"exwise\"`, returns `https://exwiseapi.onrender.com`.\n   * - Defaults to `http://localhost:8000` if none of the above conditions are met.\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return this.localAPIUrl;\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return this.liveAPIUrl;\n    }\n    else {\n      if (window.location.href.includes(\"localhost\")) {\n        return this.localAPIUrl;\n      }\n      else if (window.location.href.includes(\"exwise\")) {\n        return this.liveAPIUrl;\n      }\n      return this.localAPIUrl;\n    }\n  }\n\n  /**\n   * Returns the application name defined in environment settings.\n   *\n   * @returns {string} The application name.\n   */\n  getAppName(): string {\n    return this.appName;\n  }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadComponentComponent.html":{"url":"components/DownloadComponentComponent.html","title":"component - DownloadComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DownloadComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/download-component/download-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for exporting user expenses\ninto JSON, PDF, or Excel formats within a given date range.\nThis component provides a modal dialog with a form\nto select a date range and file type, validates the input,\nand triggers the download of filtered expense data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-component\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            ReactiveFormsModule\n                                FormModelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./download-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                downloadDataForm\n                            \n                            \n                                showDownloadDataModal\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDownloadDataModal\n                            \n                            \n                                confirmAndDownload\n                            \n                            \n                                downloadData\n                            \n                            \n                                    Private\n                                exportToExcel\n                            \n                            \n                                    Private\n                                exportToPDF\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDownloadDataModal\n                            \n                            \n                                    Private\n                                triggerDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, fb: FormBuilder, toastService: ToastService, categoryService: CategoryService, userService: UserService, budgetService: BudgetService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadComponentComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch and filter expenses.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder to build the reactive form.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to show toast notifications.\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch category data.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch user data.\n\n                                                        \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch budget data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDownloadDataModal\n                        \n                    \n                \n            \n            \n                \ncloseDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Closes the download modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmAndDownload\n                        \n                    \n                \n            \n            \n                \nconfirmAndDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Validates date range and triggers the appropriate\nexport function (JSON, PDF, Excel) based on user selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadData\n                        \n                    \n                \n            \n            \n                \ndownloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Validates the form before triggering data download.\nMarks all controls as touched if the form is invalid.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToExcel(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:302\n                        \n                    \n\n\n            \n                \n                        Exports expense data to an Excel file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exportToPDF\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportToPDF(data: any[], fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Exports expense data to a formatted PDF file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtered expense records.\n\n                                            \n                                        \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date of the report.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date of the report.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the form\nwith default controls and validators.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDownloadDataModal\n                        \n                    \n                \n            \n            \n                \nopenDownloadDataModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Opens the modal and resets the download form\nto its initial state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        triggerDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerDownload(content: string, mimeType: string, extension: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/settings-components/download-component/download-component.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Creates a file blob and triggers the browser to download it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File content to download.\n\n                                            \n                                        \n                                        \n                                                mimeType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    MIME type of the file.\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File extension (json, pdf, xlsx).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadDataForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:56\n                        \n                    \n\n            \n                \n                    Reactive form instance for selecting date range and file type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDownloadDataModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:61\n                        \n                    \n\n            \n                \n                    Controls the visibility of the download data modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/settings-components/download-component/download-component.component.ts:67\n                        \n                    \n\n            \n                \n                    Current date in yyyy-MM-dd format,\nused for validation to prevent future dates.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n\n    \n        From Date\n        \n        \n            From Date is required\n        \n\n        To Date\n        \n\n        \n            To Date is required\n        \n\n        File Type\n        \n            JSON\n            PDF\n            EXCEL\n        \n\n        \n            Cancel\n            Download\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                From Date                            From Date is required                To Date                            To Date is required                File Type                    JSON            PDF            EXCEL                            Cancel            Download            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an expense entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense amount\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category color (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category icon (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category ID associated with this expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category name (not part of stored table)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the expense in YYYY-MM-DD format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this is extra spending\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional location of the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional note about the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Payment mode used for the expense\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the expense in HH:MM:SS format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal component for displaying and editing expense details.\nFeatures:\n\nShows details of a selected expense.\nSupports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\nEmits events to parent components for closing, deleting, or editing expenses.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseDetailsModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder service for building reactive forms.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Currency symbol to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:30\n                            \n                        \n                \n                    \n                        Whether the edit mode is currently open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:24\n                            \n                        \n                \n                    \n                        The currently selected expense object\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when the modal should be closed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:36\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense should be deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:39\n                            \n                        \n                \n                    \n                        Event emitted when the selected expense has been edited\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Emits the closeModal event to notify parent to close the modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the reactive edit form with default or selected expense values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called on component initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Updates the form when a new category is selected from the dropdown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Emits the delete event with the selected expense ID\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Submits the edited expense if the form is valid.\nEmits the edit event with the updated expense data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Toggles the edit mode of the modal.\nInitializes the form with current expense values if edit mode is opened.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    Form group for editing the expense\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:42\n                        \n                    \n\n            \n                \n                    Name of the currently selected category for editing\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n/**\n * Modal component for displaying and editing expense details.\n *\n * Features:\n * - Shows details of a selected expense.\n * - Supports editing expense fields including category, amount, date, time, note, location, payment mode, and extra spending.\n * - Emits events to parent components for closing, deleting, or editing expenses.\n */\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n\n  /** The currently selected expense object */\n  @Input() selectedExpense: any;\n\n  /** Currency symbol to display in the modal */\n  @Input() currency: string | null = '';\n\n  /** Whether the edit mode is currently open */\n  @Input() isEditOpen: boolean = false;\n\n  /** Event emitted when the modal should be closed */\n  @Output() closeModal = new EventEmitter();\n\n  /** Event emitted when the selected expense should be deleted */\n  @Output() delete = new EventEmitter();\n\n  /** Event emitted when the selected expense has been edited */\n  @Output() edit = new EventEmitter();\n\n  /** Name of the currently selected category for editing */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Form group for editing the expense */\n  editForm!: FormGroup;\n\n  /**\n   * Creates an instance of ExpenseDetailsModalComponent.\n   *\n   * @param fb FormBuilder service for building reactive forms.\n   */\n  constructor(private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  /** Angular lifecycle hook called on component initialization */\n  ngOnInit(): void {}\n\n  /**\n   * Initializes the reactive edit form with default or selected expense values.\n   */\n  initForm(): void {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  /**\n   * Updates the form when a new category is selected from the dropdown.\n   *\n   * @param category The selected category object.\n   */\n  onCategorySelected(category: any): void {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  /**\n   * Toggles the edit mode of the modal.\n   * Initializes the form with current expense values if edit mode is opened.\n   */\n  toggleEdit(): void {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  /**\n   * Submits the edited expense if the form is valid.\n   * Emits the `edit` event with the updated expense data.\n   */\n  submitEdit(): void {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  /** Emits the `closeModal` event to notify parent to close the modal */\n  close(): void {\n    this.closeModal.emit();\n  }\n\n  /** Emits the `delete` event with the selected expense ID */\n  onDelete(): void {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        ExpenseListComponent\nDisplays a list of expenses with formatted dates and emits\nevents when an expense is selected. Also provides a utility\nto darken colors for styling purposes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseListComponent.\nInitializes the currency to an empty string.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:28\n                            \n                        \n                \n                    \n                        The currency symbol or code to display with expense amounts.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                            \n                        \n                \n                    \n                        The list of expense objects to display.\nEach expense should contain at least a date field.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:33\n                            \n                        \n                \n                    \n                        Event emitted when an expense is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Darkens a given HEX color by a percentage.\nConverts the color to RGB and decreases brightness.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HEX color string (e.g., #FF0000).\n\n                                            \n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The percentage (0–1) to darken the color.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The darkened color as an RGB string, or the original color on error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Formats the date of an expense into a human-readable string.\nExample: Mon 1st Mar 2025\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object containing a date field.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string with day, suffix, month, and year.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an expense.\nEmits the selected expense via the expenseSelected output.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expense object that was selected.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * ExpenseListComponent\n *\n * Displays a list of expenses with formatted dates and emits\n * events when an expense is selected. Also provides a utility\n * to darken colors for styling purposes.\n */\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\nexport class ExpenseListComponent {\n  /**\n   * The list of expense objects to display.\n   * Each expense should contain at least a `date` field.\n   */\n  @Input() expenses: any[] = [];\n\n  /**\n   * The currency symbol or code to display with expense amounts.\n   */\n  @Input() currency: string | null;\n\n  /**\n   * Event emitted when an expense is selected.\n   */\n  @Output() expenseSelected = new EventEmitter();\n\n  /**\n   * Creates an instance of ExpenseListComponent.\n   * Initializes the currency to an empty string.\n   */\n  constructor() {\n    this.currency = '';\n  }\n\n  /**\n   * Handles the selection of an expense.\n   * Emits the selected expense via the `expenseSelected` output.\n   *\n   * @param expense The expense object that was selected.\n   */\n  onSelect(expense: any): void {\n    this.expenseSelected.emit(expense);\n  }\n\n  /**\n   * Formats the date of an expense into a human-readable string.\n   * Example: `Mon 1st Mar 2025`\n   *\n   * @param exp The expense object containing a `date` field.\n   * @returns A formatted date string with day, suffix, month, and year.\n   */\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const months = [\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n\n    const dayName = days[date.getDay()];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n\n    const suffix = (d: number): string => {\n      if (d > 3 && d > 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing expenses stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve expenses.\nAutomatically attaches category metadata to each expense.\nSupports searching expenses by date range.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of ExpenseService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Adds a new expense to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Expense data excluding expense_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Deletes an expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage with category metadata attached.\n\n\n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of formatted {@link Expense} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Retrieves a single expense by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                The expense object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Searches expenses within a date range.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    End date in YYYY-MM-DD format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                Array of expenses within the specified date range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Updates an existing expense by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the expense to update.\n\n                                            \n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partial data to update the expense with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing an expense entry.\n */\nexport interface Expense {\n  /** Unique identifier */\n  expense_id: string;\n\n  /** Expense amount */\n  amount: number;\n\n  /** Category ID associated with this expense */\n  category_id: string;\n\n  /** Date of the expense in YYYY-MM-DD format */\n  date: string;\n\n  /** Time of the expense in HH:MM:SS format */\n  time: string;\n\n  /** Optional note about the expense */\n  note?: string;\n\n  /** Payment mode used for the expense */\n  payment_mode: string;\n\n  /** Optional location of the expense */\n  location?: string;\n\n  /** Indicates if this is extra spending */\n  isExtraSpending?: boolean;\n\n  /** Category name (not part of stored table) */\n  category_name: string;\n\n  /** Category icon (not part of stored table) */\n  category_icon: string;\n\n  /** Category color (not part of stored table) */\n  category_color: string;\n}\n\n/**\n * Service for managing expenses stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve expenses.\n * - Automatically attaches category metadata to each expense.\n * - Supports searching expenses by date range.\n */\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  /**\n   * Creates an instance of ExpenseService.\n   *\n   * @param storageService Service for interacting with localStorage.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the environment supports localStorage.\n   *\n   * @returns True if running in a browser with localStorage.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Returns the current date and time in ISO format adjusted for local time.\n   *\n   * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n   */\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  /**\n   * Retrieves all expenses from localStorage with category metadata attached.\n   *\n   * @returns Array of formatted {@link Expense} sorted by date (newest first).\n   */\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  /**\n   * Adds a new expense to localStorage.\n   *\n   * @param data Expense data excluding `expense_id`.\n   */\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Updates an existing expense by ID.\n   *\n   * @param expense_id The ID of the expense to update.\n   * @param newData Partial data to update the expense with.\n   */\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Retrieves a single expense by its ID.\n   *\n   * @param expense_id The ID of the expense to retrieve.\n   * @returns The expense object or null if not found.\n   */\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  /**\n   * Deletes an expense by its ID.\n   *\n   * @param expense_id The ID of the expense to delete.\n   */\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  /**\n   * Searches expenses within a date range.\n   *\n   * @param fromDate Start date in YYYY-MM-DD format.\n   * @param toDate End date in YYYY-MM-DD format.\n   * @returns Array of expenses within the specified date range.\n   */\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseWiseComponent.html":{"url":"components/ExpenseWiseComponent.html","title":"component - ExpenseWiseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ExpenseWiseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/expense-wise/expense-wise.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-wise\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                CalendarComponent\n                                AiComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-wise.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-wise.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                isMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/expense-wise/expense-wise.component.ts:44\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/expense-wise/expense-wise.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/expense-wise/expense-wise.component.ts:65\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to set initial mobile view detection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/features/expense-wise/expense-wise.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/expense-wise/expense-wise.component.ts:39\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/expense-wise/expense-wise.component.ts:44\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\n\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\nimport { SidebarComponent } from '../../shared/sidebar/sidebar.component';\nimport { FooterComponent } from '../../shared/footer/footer.component';\nimport { ToastComponent } from '../../shared/toast/toast.component';\nimport { AddExpenseComponent } from '../../features/add-expense/add-expense.component';\nimport { SettingsComponent } from '../../features/settings/settings.component';\nimport { ListExpensesComponent } from '../../features/list-expenses/list-expenses.component';\nimport { HomeComponent } from '../../features/home/home.component';\nimport { CalendarComponent } from '../../features/calendar/calendar.component';\nimport { BudgetComponent } from '../../features/budget/budget.component';\nimport { AiComponent } from '../../features/ai/ai.component';\n\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-expense-wise',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent, CommonModule, AddExpenseComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent, CalendarComponent, AiComponent\n  ],\n  templateUrl: './expense-wise.component.html',\n  styleUrl: './expense-wise.component.css'\n})\nexport class ExpenseWiseComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param sectionService Service to track current section changes\n   * @param platformId Angular platform ID to check if running in browser\n   */\n  constructor(\n    private sectionService: SectionService,\n    @Inject(PLATFORM_ID) private platformId: Object\n\n  ) {\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n  }\n  /**\n   * OnInit lifecycle hook to set initial mobile view detection.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth \n    \n\n    \n        \n    \n    \n        \n        \n            \n                \n                \n                    \n                \n                \n                \n                \n                \n                \n                \n            \n        \n    \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseWiseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer component that displays application information such as version.\nFeatures:\n\nRetrieves the app version from ConfigService.\nDisplays static footer content alongside dynamic version info.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of FooterComponent.\nRetrieves the current app version from ConfigService and\nstores it in appVersion for display in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service providing configuration and version info.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the current application version retrieved from ConfigService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Footer component that displays application information such as version.\n *\n * Features:\n * - Retrieves the app version from {@link ConfigService}.\n * - Displays static footer content alongside dynamic version info.\n */\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n  /**\n   * Stores the current application version retrieved from {@link ConfigService}.\n   */\n  appVersion: string = '';\n\n  /**\n   * Creates an instance of FooterComponent.\n   *\n   * Retrieves the current app version from {@link ConfigService} and\n   * stores it in {@link appVersion} for display in the template.\n   *\n   * @param configService Service providing configuration and version info.\n   */\n  constructor(private configService: ConfigService) {\n    this.appVersion = this.configService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormModelComponent.html":{"url":"components/FormModelComponent.html","title":"component - FormModelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FormModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/form-model/form-model.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable modal component for forms.\nThis component displays a modal with a customizable label\nand provides an output event to notify when the modal is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-model\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-model.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-model.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelAlignment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:23\n                            \n                        \n                \n                    \n                        The label text displayed in the form modal.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelAlignment\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"center\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:29\n                            \n                        \n                \n                    \n                        Alignment of the label text: 'left', 'center', or 'right'.\nDefault is 'left'.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/form-model/form-model.component.ts:37\n                            \n                        \n                \n                    \n                        Event emitted when the modal is closed.\nThe parent component can listen to this event\nto perform actions such as hiding the modal.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModel\n                        \n                    \n                \n            \n            \n                \ncloseModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/form-model/form-model.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Closes the modal and emits the close event.\nThis method is typically called when the user\nclicks a close button or dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * A reusable modal component for forms.\n * \n * This component displays a modal with a customizable label\n * and provides an output event to notify when the modal is closed.\n */\n@Component({\n  selector: 'app-form-model',\n  imports: [CommonModule],\n  templateUrl: './form-model.component.html',\n  styleUrl: './form-model.component.css'\n})\nexport class FormModelComponent {\n\n  /**\n   * The label text displayed in the form modal.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label: string = '';\n\n  /** Alignment of the label text: 'left', 'center', or 'right'.\n   * \n   * Default is 'left'.\n   */\n  @Input() labelAlignment: 'left' | 'center' | 'right' = 'left';\n\n  /**\n   * Event emitted when the modal is closed.\n   * \n   * The parent component can listen to this event\n   * to perform actions such as hiding the modal.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Closes the modal and emits the `close` event.\n   * \n   * This method is typically called when the user\n   * clicks a close button or dismisses the modal.\n   */\n  closeModel(): void {\n    this.close.emit();\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ label }}\n            \n        \n\n        \n        \n            &times;\n        \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ label }}                                                ×                    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GeminiApiService\nThis service is responsible for communicating with the\nGoogle Gemini API to analyze the user's expense data.\nIt fetches the last 30 days of expenses, generates prompts,\nand retrieves AI-generated insights for the user.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of GeminiApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API requests.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to show/hide global loading indicators.\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch expense data from local storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Generates a structured AI prompt for expense analysis.\nIncludes instructions for the model and the last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s input or question.\n\n                                            \n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of expense objects from the last 30 days.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string prompt ready for Gemini API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Fetches the user's expenses from the last 30 days.\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n\n                        \n                            Returns :     Pick[]\n\n                        \n                            \n                                An array of expense objects with selected fields:\namount, note, location, date, category_name, payment_mode, isExtraSpending.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Sends a prompt to the Gemini API and returns the generated response.\nEnhances the prompt with the user's last 30 days of expenses.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user’s query or message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A string response from Gemini with analysis or insights.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:23\n                        \n                    \n\n            \n                \n                    API URL for the Gemini model including the environment API key.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n/**\n * GeminiApiService\n *\n * This service is responsible for communicating with the\n * Google Gemini API to analyze the user's expense data.\n * It fetches the last 30 days of expenses, generates prompts,\n * and retrieves AI-generated insights for the user.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  /**\n   * API URL for the Gemini model including the environment API key.\n   */\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of GeminiApiService.\n   *\n   * @param http Angular HttpClient for API requests.\n   * @param globalLoaderService Service to show/hide global loading indicators.\n   * @param expenseService Service to fetch expense data from local storage.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService,\n    private expenseService: ExpenseService\n  ) {}\n\n  /**\n   * Sends a prompt to the Gemini API and returns the generated response.\n   * Enhances the prompt with the user's last 30 days of expenses.\n   *\n   * @param prompt The user’s query or message.\n   * @returns A string response from Gemini with analysis or insights.\n   */\n  async getResponse(prompt: string): Promise {\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  /**\n   * Fetches the user's expenses from the last 30 days.\n   *\n   * @returns An array of expense objects with selected fields:\n   * amount, note, location, date, category_name, payment_mode, isExtraSpending.\n   */\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  /**\n   * Generates a structured AI prompt for expense analysis.\n   * Includes instructions for the model and the last 30 days of expenses.\n   *\n   * @param userQuery The user’s input or question.\n   * @param last15DaysExpenses Array of expense objects from the last 30 days.\n   * @returns A formatted string prompt ready for Gemini API.\n   */\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Global loader component to display a full-screen loading indicator.\nFeatures:\n\nShows a loading message with optional custom text.\nCan be controlled globally via GlobalLoaderService.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of GlobalLoaderComponent.\nRegisters this component with the GlobalLoaderService\nto allow global show/hide control.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing the global loader state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional custom message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Loading...'\n                                            \n\n                                            \n                                                    Optional message to display; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates whether the loader is currently visible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:28\n                        \n                    \n\n            \n                \n                    Text message displayed on the loader.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Global loader component to display a full-screen loading indicator.\n *\n * Features:\n * - Shows a loading message with optional custom text.\n * - Can be controlled globally via {@link GlobalLoaderService}.\n */\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n\n  /**\n   * Indicates whether the loader is currently visible.\n   */\n  isVisible = false;\n\n  /**\n   * Text message displayed on the loader.\n   */\n  message = '';\n\n  /**\n   * Creates an instance of GlobalLoaderComponent.\n   *\n   * Registers this component with the {@link GlobalLoaderService}\n   * to allow global show/hide control.\n   *\n   * @param globalLoaderService Service for managing the global loader state.\n   */\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  /**\n   * Shows the global loader with an optional custom message.\n   *\n   * @param text Optional message to display; defaults to \"Loading...\".\n   */\n  show(text: string = 'Loading...'): void {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.isVisible = false;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to control the global loading indicator component.\nFeatures:\n\nAllows showing and hiding a global loader with optional custom message.\nConnects with GlobalLoaderComponent to display the loader UI.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Hides the global loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Registers the global loader component instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The GlobalLoaderComponent instance to control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Shows the global loader with an optional message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                            \n                                                    Optional loading message; defaults to \"Loading...\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:17\n                        \n                    \n\n            \n                \n                    Reference to the registered global loader component\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n/**\n * Service to control the global loading indicator component.\n *\n * Features:\n * - Allows showing and hiding a global loader with optional custom message.\n * - Connects with {@link GlobalLoaderComponent} to display the loader UI.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  /** Reference to the registered global loader component */\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  /**\n   * Registers the global loader component instance.\n   *\n   * @param component The {@link GlobalLoaderComponent} instance to control.\n   */\n  register(component: GlobalLoaderComponent): void {\n    this.globalLoaderComponent = component;\n  }\n  \n  /**\n   * Shows the global loader with an optional message.\n   *\n   * @param text Optional loading message; defaults to \"Loading...\".\n   */\n  show(text: string = \"Loading...\"): void {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  /**\n   * Hides the global loader.\n   */\n  hide(): void {\n    this.globalLoaderComponent?.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hamburger menu component for mobile or compact navigation.\nFeatures:\n\nToggles visibility of the menu.\nCloses menu when clicking outside of it.\nShows/hides AI button depending on the current section.\nIntegrates with SectionService to navigate between sections.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of HamburgerMenuComponent.\nSubscribes to SectionService.currentSection$ to manage the\nvisibility of the AI button based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the selected section and closes the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default anchor behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Listens for clicks on the document to close the menu\nif the click occurs outside the hamburger menu container.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Toggles the hamburger menu open/closed state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Tracks whether the hamburger menu is currently open.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:26\n                        \n                    \n\n            \n                \n                    Determines whether the AI button should be displayed.\nHidden when the current section is 'ai'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Hamburger menu component for mobile or compact navigation.\n *\n * Features:\n * - Toggles visibility of the menu.\n * - Closes menu when clicking outside of it.\n * - Shows/hides AI button depending on the current section.\n * - Integrates with {@link SectionService} to navigate between sections.\n */\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  /**\n   * Determines whether the AI button should be displayed.\n   * Hidden when the current section is 'ai'.\n   */\n  showAIButton = false;\n\n  /**\n   * Tracks whether the hamburger menu is currently open.\n   */\n  isMenuOpen = false;\n\n  /**\n   * Creates an instance of HamburgerMenuComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to manage the\n   * visibility of the AI button based on the current section.\n   *\n   * @param sectionService Service for managing and broadcasting the active section.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n\n  /**\n   * Toggles the hamburger menu open/closed state.\n   */\n  toggleMenu(): void {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  /**\n   * Listens for clicks on the document to close the menu\n   * if the click occurs outside the hamburger menu container.\n   *\n   * @param event The mouse click event.\n   */\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent): void {\n    const clickedInside = event.target instanceof HTMLElement \n      && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  /**\n   * Navigates to the selected section and closes the menu.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default anchor behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapSummary.html":{"url":"interfaces/HeatmapSummary.html","title":"interface - HeatmapSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HeatmapSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/heatMap-summary.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a single heatmap summary entry.\nThis interface is used to describe the color intensity, total days,\nand total expense amount for a specific heat level in the calendar heatmap.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            days\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total amount of expenses for all days included in this heat level.\nHelps calculate and display the spending range for the legend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Tailwind/hex color code used to represent the heat level\n(e.g. \"#f87171\" or \"bg-green-500\").\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        days:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of days that fall under this heat level.\nUsed to group days with similar spending intensity.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface HeatmapSummary {\n    /**\n     * The Tailwind/hex color code used to represent the heat level\n     * (e.g. \"#f87171\" or \"bg-green-500\").\n     */\n    color: string;\n\n    /**\n     * The total number of days that fall under this heat level.\n     * Used to group days with similar spending intensity.\n     */\n    days: number;\n\n    /**\n     * The total amount of expenses for all days included in this heat level.\n     * Helps calculate and display the spending range for the legend.\n     */\n    amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstallAppPopupComponentComponent.html":{"url":"components/InstallAppPopupComponentComponent.html","title":"component - InstallAppPopupComponentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  InstallAppPopupComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that displays a popup prompting the user to install the app as a PWA.\nThis component shows a modal with the app name and an install button when\nshowInstallButton is set to true. It uses the ConfigService to retrieve\nthe application name and emits an event when the user clicks install.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-install-app-popup-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./install-app-popup-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./install-app-popup-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissInstall\n                            \n                            \n                                onClickinstallApp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showInstallButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                installApp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of the install popup component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch configuration values such as the app name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showInstallButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:26\n                            \n                        \n                \n                    \n                        Controls the visibility of the install popup.\nWhen set to true, the popup will be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        installApp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when the user clicks on the \"Install\" button.\nThe parent component can listen to this event to trigger\nthe actual PWA installation flow.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissInstall\n                        \n                    \n                \n            \n            \n                \ndismissInstall()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Dismisses the install popup.\nSets showInstallButton to false, hiding the popup from view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickinstallApp\n                        \n                    \n                \n            \n            \n                \nonClickinstallApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Handles the click event of the \"Install\" button.\nEmits the installApp event to notify the parent component\nthat the installation process should be triggered.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/install-app-popup-component/install-app-popup-component.component.ts:32\n                        \n                    \n\n            \n                \n                    The application name fetched from ConfigService.\nDisplayed inside the popup UI.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConfigService } from '../../service/config/config.service';\n\n/**\n * Component that displays a popup prompting the user to install the app as a PWA.\n * \n * This component shows a modal with the app name and an install button when \n * `showInstallButton` is set to true. It uses the `ConfigService` to retrieve \n * the application name and emits an event when the user clicks install.\n */\n@Component({\n  selector: 'app-install-app-popup-component',\n  imports: [CommonModule],\n  templateUrl: './install-app-popup-component.component.html',\n  styleUrl: './install-app-popup-component.component.css',\n  standalone: true,\n})\nexport class InstallAppPopupComponentComponent {\n\n  /**\n   * Controls the visibility of the install popup.\n   * \n   * When set to true, the popup will be displayed.\n   */\n  @Input() showInstallButton: boolean = false;\n\n  /**\n   * The application name fetched from `ConfigService`.\n   * Displayed inside the popup UI.\n   */\n  appName: string;\n\n  /**\n   * Event emitted when the user clicks on the \"Install\" button.\n   * \n   * The parent component can listen to this event to trigger\n   * the actual PWA installation flow.\n   */\n  @Output() installApp = new EventEmitter();\n\n  /**\n   * Creates an instance of the install popup component.\n   *\n   * @param configService Service to fetch configuration values such as the app name.\n   */\n  constructor(private configService: ConfigService) {\n    this.appName = this.configService.getAppName();\n  }\n\n  /**\n   * Handles the click event of the \"Install\" button.\n   * \n   * Emits the `installApp` event to notify the parent component\n   * that the installation process should be triggered.\n   */\n  onClickinstallApp() {\n    this.installApp.emit();\n  }\n\n  /**\n   * Dismisses the install popup.\n   * \n   * Sets `showInstallButton` to false, hiding the popup from view.\n   */\n  dismissInstall() {\n    this.showInstallButton = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ✕\n\n    \n    Install {{ appName }}\n    \n    \n      Get a seamless experience and offline access by installing this app.\n    \n\n    \n    \n      \n        Install\n      \n      \n        Dismiss\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ✕        Install {{ appName }}              Get a seamless experience and offline access by installing this app.                          Install                    Dismiss            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstallAppPopupComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navbar component that displays the top navigation bar.\nFeatures:\n\nShows a back button when the current section is not 'home'.\nIntegrates with SectionService to track and update the current section.\nIncludes the HamburgerMenuComponent for mobile or compact navigation.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavbarComponent.\nSubscribes to SectionService.currentSection$ to determine\nwhether the back button should be visible based on the current section.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage and broadcast the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles navigation link clicks by updating the current section\nand preventing default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default behavior).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Flag indicating whether the back button should be displayed.\nTrue when the current section is not 'home'.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n/**\n * Navbar component that displays the top navigation bar.\n *\n * Features:\n * - Shows a back button when the current section is not 'home'.\n * - Integrates with {@link SectionService} to track and update the current section.\n * - Includes the {@link HamburgerMenuComponent} for mobile or compact navigation.\n */\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  /**\n   * Flag indicating whether the back button should be displayed.\n   * True when the current section is not 'home'.\n   */\n  showBackButton = false;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to determine\n   * whether the back button should be visible based on the current section.\n   *\n   * @param sectionService Service used to manage and broadcast the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  /**\n   * Handles navigation link clicks by updating the current section\n   * and preventing default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default behavior).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to render a pie/doughnut chart of expenses by category.\nSupports monthly, daily, and yearly views.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject required services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get category data\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get expense data\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to get user preferences\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:49\n                            \n                        \n                \n                    \n                        Current date to filter expenses\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:46\n                            \n                        \n                \n                    \n                        View type: 'month' | 'day' | 'year'\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the selected view type\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders daily expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders monthly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Aggregates and renders yearly expense data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook after view initialization.\nLoads chart data after canvas element is available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook for input changes.\nReloads chart if viewType or currentDate changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed inputs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook runs on component init.\nInitializes theme, categories, expenses, and category mapping.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Renders a Chart.js chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart ID\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chart type ('doughnut', 'line', 'bar', etc.)\n\n                                            \n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:43\n                        \n                    \n\n            \n                \n                    Reference to the canvas element for Chart.js\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:28\n                        \n                    \n\n            \n                \n                    List of all categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Map of category name to its color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Map of category_id to category name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:34\n                        \n                    \n\n            \n                \n                    Chart instances keyed by chart ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:40\n                        \n                    \n\n            \n                \n                    User-selected currency\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:31\n                        \n                    \n\n            \n                \n                    List of all expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    Dark mode flag from user settings\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/** Chart.js instance */\ndeclare const Chart: any;\n\n/**\n * Component to render a pie/doughnut chart of expenses by category.\n * Supports monthly, daily, and yearly views.\n */\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /** Dark mode flag from user settings */\n  isDarkMode: boolean = false;\n\n  /** Map of category_id to category name */\n  categoryMap: any = {};\n\n  /** List of all categories */\n  categories: Category[] = [];\n\n  /** List of all expenses */\n  expenses: Expense[] = [];\n\n  /** Chart instances keyed by chart ID */\n  charts: { [key: string]: any } = {};\n\n  /** Map of category name to its color */\n  categoryColors: { [key: string]: string } = {};\n\n  /** User-selected currency */\n  currency: string | null;\n\n  /** Reference to the canvas element for Chart.js */\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n\n  /** View type: 'month' | 'day' | 'year' */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /** Current date to filter expenses */\n  @Input() currentDate!: Date;\n\n  /**\n   * Constructor to inject required services.\n   * @param categoryService Service to get category data\n   * @param expenseService Service to get expense data\n   * @param userService Service to get user preferences\n   */\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  /**\n   * Lifecycle hook runs on component init.\n   * Initializes theme, categories, expenses, and category mapping.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  /**\n   * Lifecycle hook after view initialization.\n   * Loads chart data after canvas element is available.\n   */\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook for input changes.\n   * Reloads chart if viewType or currentDate changes.\n   * @param changes Object containing changed inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /** Loads chart data based on the selected view type */\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  /** Aggregates and renders monthly expense data */\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders daily expense data */\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /** Aggregates and renders yearly expense data */\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  /**\n   * Renders a Chart.js chart\n   * @param id Chart ID\n   * @param type Chart type ('doughnut', 'line', 'bar', etc.)\n   * @param config Chart configuration containing labels, data, colors, etc.\n   */\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistMusicComponent.html":{"url":"components/PlaylistMusicComponent.html","title":"component - PlaylistMusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlaylistMusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music-component/playlist-music/playlist-music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying and managing a music playlist.\nThis component allows users to view their music playlists,\nadd or remove tracks, and play selected songs.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playlist-music\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./playlist-music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist-music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component for displaying and managing a music playlist.\n * \n * This component allows users to view their music playlists,\n * add or remove tracks, and play selected songs.\n */\n@Component({\n  selector: 'app-playlist-music',\n  imports: [],\n  templateUrl: './playlist-music.component.html',\n  styleUrl: './playlist-music.component.css'\n})\nexport class PlaylistMusicComponent {\n\n}\n\n    \n\n    \n        playlist-music works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'playlist-music works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistMusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\nimport { ToastService } from '../../toast/toast.service';\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   * @param toastService Displays notifications to the user\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService,\n    private toastService: ToastService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      // console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: (res: any) => {\n          console.log('User data posted successfully. Response:', res);\n          const api_response_app_version = res.app_version;\n          const app_current_version = this.userService.getValue('app_version');\n          if (api_response_app_version != app_current_version) {\n            this.userService.update('is_app_updated', false);\n            setTimeout(() => {\n              this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n            }, 500);\n          }\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SaavnService\nService for integrating with Saavn API (song search) and\nGoogle Gemini API (next song recommendation).\nIt manages search, AI-based suggestions, and conversation history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geminiApiUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                            \n                                    Private\n                                savvanApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of SaavnService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient for API calls.\n\n                                                        \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader service to show/hide loading UI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Returns the full conversation history between user and model.\n\n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                            \n                                An array of ChatMessage objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Searches for songs using the Saavn API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search term provided by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable containing the list of matching songs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Suggests the next song based on the current song metadata.\nUses Gemini API to infer mood and style, and returns the most suitable next track.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently playing song object with metadata (name, album, artists, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A JSON string with the suggested song name and artist.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        geminiApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:44\n                        \n                    \n\n            \n                \n                    Gemini API URL with authentication key from environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:34\n                        \n                    \n\n            \n                \n                    Conversation history between user and AI model.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        savvanApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:39\n                        \n                    \n\n            \n                \n                    Base URL for Saavn song search API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * ChatMessage interface\n *\n * Represents a single message exchanged between the user and the model.\n */\nexport interface ChatMessage {\n  /** Role of the message sender (user or model). */\n  role: 'user' | 'model';\n  /** The text content of the message. */\n  parts: { text: string }[];\n}\n\n/**\n * SaavnService\n *\n * Service for integrating with Saavn API (song search) and\n * Google Gemini API (next song recommendation).\n * It manages search, AI-based suggestions, and conversation history.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  /**\n   * Conversation history between user and AI model.\n   */\n  private history: ChatMessage[] = [];\n\n  /**\n   * Base URL for Saavn song search API.\n   */\n  private savvanApiUrl = 'https://saavn.dev/api/search/songs';\n\n  /**\n   * Gemini API URL with authentication key from environment.\n   */\n  private geminiApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  /**\n   * Creates an instance of SaavnService.\n   *\n   * @param http Angular HttpClient for API calls.\n   * @param globalLoaderService Global loader service to show/hide loading UI.\n   */\n  constructor(\n    private http: HttpClient,\n    private globalLoaderService: GlobalLoaderService\n  ) { }\n\n  /**\n   * Searches for songs using the Saavn API.\n   *\n   * @param query The search term provided by the user.\n   * @returns An observable containing the list of matching songs.\n   */\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.savvanApiUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  /**\n   * Suggests the next song based on the current song metadata.\n   * Uses Gemini API to infer mood and style, and returns the most suitable next track.\n   *\n   * @param currentSong The currently playing song object with metadata (name, album, artists, etc.).\n   * @returns A JSON string with the suggested song name and artist.\n   */\n  async suggestNextSong(currentSong: any): Promise {\n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    /**\n     * Helper function to format metadata fields safely.\n     *\n     * @param fieldName The name of the metadata field.\n     * @param value The field value to format.\n     * @returns Formatted string or empty string if invalid.\n     */\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Extract album name safely\n    const albumName = currentSong.album?.name || '';\n\n    // Extract artists as a comma-separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Prompt for Gemini API\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}${formatField('Is User Liked', currentSong.isLiked)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details (name, album name, language, artist, year, etc.).\n- Consider whether the user liked the song or not to suggest the next song accordingly. If the user liked the song, recommend something similar or enhancing the mood; if not, suggest a song that may better fit the user's preferences.\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n- Do not repeat the already suggested song.\n\nProvide only the JSON object and no extra text, no formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n\n`;\n\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { contents: this.history };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.geminiApiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n      this.globalLoaderService.hide();\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n  }\n\n  /**\n   * Returns the full conversation history between user and model.\n   *\n   * @returns An array of ChatMessage objects.\n   */\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema interface for local storage items.\nDefines a generic structure for syncing data with default values.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:7\n                            \n                        \n                \n                    \n                        Key-value pairs representing item properties\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\nexport interface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Provides helper methods to get and update local storage items.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /** LocalStorage key for user Liked songs */\n  private readonly userLikedSongsKey = 'user_liked_songs';\n\n  /** Schema for categories */\n  private readonly categorySchema: Schema = {\n    category_id: \"\",\n    name: \"\",\n    icon: \"\",\n    color: \"\",\n    is_active: \"\",\n    user_id: \"\"\n  };\n\n  /** Schema for expenses */\n  private readonly expenseSchema: Schema = {\n    expense_id: \"\",\n    category_id: \"\",\n    amount: \"\",\n    date: \"\",\n    location: \"\",\n    note: \"\",\n    payment_mode: \"\",\n    time: \"\",\n    isExtraSpending: false\n  };\n\n  /** Schema for user */\n  private readonly userSchema: Schema = {\n    id: \"\",\n    backup_frequency: \"\",\n    email: \"\",\n    is_active: \"\",\n    is_backup: \"\",\n    last_backup: \"\",\n    name: \"\",\n    notifications: \"\",\n    user_password: \"\",\n    theme_mode: \"dark\",\n    currency: \"₹\",\n    app_version: \"0\",\n    is_app_updated: true,\n    is_show_heatmap: false\n  };\n\n  /** Schema for budget */\n  private readonly budgetSchema: Schema = {\n    budget_id: \"\",\n    amount: 0,\n    fromDate: \"\",\n    toDate: \"\"\n  };\n\n  /** Schema for Liked song */\n  private readonly likedSongSchema: Schema = {\n    song_id: '',\n    song_name: '',\n    year: '',\n    duration: 0,\n    language: '',\n    copyright: '',\n    albumName: '',\n    artistName: '',\n    image: '',\n    downloadUrl: '',\n    isLiked: false,\n  };\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /**\n   * Retrieves all liked songs from localStorage.\n   *\n   * @returns Array of liked songs objects.\n   */\n  getAllSongs(): any[] {\n    return JSON.parse(localStorage.getItem(this.userLikedSongsKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /** Returns the localStorage key used for user liked songs */\n  getUserLikedSongsKey(): string { return this.userLikedSongsKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n\n  /** Returns the schema for categories\n   * \n   * @returns Schema object for categories\n   */\n  getcategorySchema(): Schema {\n    return this.categorySchema;\n  }\n\n  /** Returns the schema for expenses\n   * \n   * @returns Schema object for expenses  \n   */\n  getexpenseSchema(): Schema {\n    return this.expenseSchema;\n  }\n\n  /** Returns the schema for user \n   * \n   * @returns Schema object for user\n  */\n  getuserSchema(): Schema {\n    return this.userSchema;\n  }\n\n  /** Returns the schema for budgets \n   * \n   * @returns Schema object for  budgets\n  */\n  getbudgetSchema(): Schema {\n    return this.budgetSchema;\n  }\n\n  /** Returns the schema for liked songs \n   * \n   * @returns Schema object for Liked Song\n  */\n  getlikedSongSchema(): Schema {\n    return this.likedSongSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchMusicComponent.html":{"url":"components/SearchMusicComponent.html","title":"component - SearchMusicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SearchMusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music-component/search-music/search-music.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for searching music.\nThis component provides a user interface for searching music tracks,\nalbums, or artists. It includes a search input field and displays\nthe search results.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-music\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search-music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component for searching music.\n * \n * This component provides a user interface for searching music tracks,\n * albums, or artists. It includes a search input field and displays\n * the search results.\n */\n@Component({\n  selector: 'app-search-music',\n  imports: [],\n  templateUrl: './search-music.component.html',\n  styleUrl: './search-music.component.css'\n})\nexport class SearchMusicComponent {\n\n}\n\n    \n\n    \n        search-music works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'search-music works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchMusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage and broadcast the current active section of the application.\nFeatures:\n\nMaintains the currently selected section using a BehaviorSubject.\nProvides an observable currentSection$ to subscribe to section changes.\nAllows updating the current section with setSection.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Updates the current active section.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new section identifier to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable stream of the current section.\nComponents can subscribe to reactively track section changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:21\n                        \n                    \n\n            \n                \n                    Internal BehaviorSubject holding the current section.\nInitialized with 'home'.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service to manage and broadcast the current active section of the application.\n *\n * Features:\n * - Maintains the currently selected section using a {@link BehaviorSubject}.\n * - Provides an observable {@link currentSection$} to subscribe to section changes.\n * - Allows updating the current section with {@link setSection}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n\n  /**\n   * Internal BehaviorSubject holding the current section.\n   * Initialized with 'home'.\n   */\n  private sectionSource = new BehaviorSubject('home');\n\n  /**\n   * Observable stream of the current section.\n   * Components can subscribe to reactively track section changes.\n   */\n  currentSection$ = this.sectionSource.asObservable();\n\n  /**\n   * Updates the current active section.\n   *\n   * @param section The new section identifier to set.\n   */\n  setSection(section: string): void {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/settings-components/setting-item/setting-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        A reusable component to display a single setting item.\nThis component can be used inside settings screens or\npreferences pages to show a label or related content.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/settings-components/setting-item/setting-item.component.ts:22\n                            \n                        \n                \n                    \n                        The text label for the setting item.\nThis property should be provided by the parent component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * A reusable component to display a single setting item.\n * \n * This component can be used inside settings screens or\n * preferences pages to show a label or related content.\n */\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n\n  /**\n   * The text label for the setting item.\n   * \n   * This property should be provided by the parent component.\n   */\n  @Input() label!: string;\n\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidebar navigation component.\nThis component:\n\nDisplays sidebar links for navigating between different application sections.\nHighlights the currently active section.\nCommunicates with SectionService to update and listen to the current active section.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of SidebarComponent.\nSubscribes to SectionService.currentSection$ to keep track of\nthe currently selected section and update the UI accordingly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing and broadcasting the active section state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Handles sidebar link clicks by updating the current section\nand preventing the default anchor navigation behavior.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The section identifier to navigate to.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object (used to prevent default navigation).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:25\n                        \n                    \n\n            \n                \n                    Holds the name of the currently active navigation path/section.\nUsed to apply active styling to the sidebar item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n/**\n * Sidebar navigation component.\n *\n * This component:\n * - Displays sidebar links for navigating between different application sections.\n * - Highlights the currently active section.\n * - Communicates with {@link SectionService} to update and listen to the current active section.\n */\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  /**\n   * Holds the name of the currently active navigation path/section.\n   * Used to apply active styling to the sidebar item.\n   */\n  activePath: string = '';\n\n  /**\n   * Creates an instance of SidebarComponent.\n   *\n   * Subscribes to {@link SectionService.currentSection$} to keep track of\n   * the currently selected section and update the UI accordingly.\n   *\n   * @param sectionService Service for managing and broadcasting the active section state.\n   */\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  /**\n   * Handles sidebar link clicks by updating the current section\n   * and preventing the default anchor navigation behavior.\n   *\n   * @param section The section identifier to navigate to.\n   * @param event The click event object (used to prevent default navigation).\n   */\n  navigateAndClose(section: string, event: Event): void {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Song.html":{"url":"interfaces/Song.html","title":"interface - Song","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a Song object with various attributes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            albumName\n                                        \n                                \n                                \n                                        \n                                            artistName\n                                        \n                                \n                                \n                                        \n                                            artistNames\n                                        \n                                \n                                \n                                        \n                                            copyright\n                                        \n                                \n                                \n                                        \n                                            downloadUrl\n                                        \n                                \n                                \n                                        \n                                            downloadUrls\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            isLiked\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            song_id\n                                        \n                                \n                                \n                                        \n                                            song_name\n                                        \n                                \n                                \n                                        \n                                            song_type\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        albumName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumName:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Name of the album the song belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artistName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistName:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Comma-separated names of the artists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     SongArtists[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SongArtists[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comma-separated names of the artists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        copyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        copyright:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Copyright information for the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloadUrl:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    URL to download the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downloadUrls:     SongDownloadUrl[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SongDownloadUrl[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to download the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Duration of the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Array of images associated with the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     SongImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SongImage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of images associated with the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLiked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLiked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if the song is liked by the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Language of the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Name of the song\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type of the song (e.g., song, album)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Release year of the song\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongArtists.html":{"url":"interfaces/SongArtists.html","title":"interface - SongArtists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongArtists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing song artists.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist_name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Name of the artist\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongDownloadUrl.html":{"url":"interfaces/SongDownloadUrl.html","title":"interface - SongDownloadUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongDownloadUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a download URL with quality and link.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Quality of the download (e.g., 96kbps, 320kbps)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    URL to download the song in the specified quality\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongImage.html":{"url":"interfaces/SongImage.html","title":"interface - SongImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an image associated with a song.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Quality of the image (e.g., 50x50, 500x500)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    URL of the image\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n    /** Unique identifier for the song */\n    song_id: '';\n\n    /** Name of the song */\n    song_name: '';\n\n    /** Type of the song (e.g., song, album) */\n    song_type: '';\n\n    /** Release year of the song */\n    year: '';\n\n    /** Duration of the song */\n    duration: 0;\n\n    /** Record label of the song (e.g., Sony Music Entertainment India Pvt. Ltd.) */\n    label: '';\n\n    /** Language of the song */\n    language: '';\n\n    /** Copyright information for the song */\n    copyright: '';\n\n    /** Name of the album the song belongs to */\n    albumName: '';\n\n    /** Comma-separated names of the artists */\n    artistName: '';\n\n    /** Array of images associated with the song */\n    image: '';\n\n    /** URL to download the song */\n    downloadUrl: '';\n\n    /** Comma-separated names of the artists */\n    artistNames: SongArtists[];\n\n    /** Array of images associated with the song */\n    images: SongImage[];\n\n    /** URL to download the song */\n    downloadUrls: SongDownloadUrl[];\n\n    /** Indicates if the song is liked by the user */\n    isLiked: boolean;\n\n}\n\n/**\n * Interface representing a download URL with quality and link.\n */\nexport interface SongDownloadUrl {\n    /** Quality of the download (e.g., 96kbps, 320kbps) */\n    quality: '';\n\n    /** URL to download the song in the specified quality   */\n    url: '';\n\n}\n\n/**\n * Interface representing an image associated with a song.\n */\nexport interface SongImage {\n    /** Quality of the image (e.g., 50x50, 500x500) */\n    quality: '';\n\n    /** URL of the image */\n    url: '';\n\n}\n\n/**\n * Interface representing song artists.\n */\nexport interface SongArtists {\n    /** Name of the artist */\n    \"artist_name\": ''\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing LocalStorage data in a structured and schema-compliant way.\nFeatures:\n\nProvides helper methods to get and update local storage items.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                budgetSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categorySchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                likedSongSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userLikedSongsKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getAllSongs\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getbudgetSchema\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getcategorySchema\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getexpenseSchema\n                            \n                            \n                                getlikedSongSchema\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                getUserLikedSongsKey\n                            \n                            \n                                getuserSchema\n                            \n                            \n                                updateBudgets\n                            \n                            \n                                updateCategories\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Retrieves all budgets from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of budget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Retrieves all categories from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of category objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Retrieves all expenses from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of expense objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSongs\n                        \n                    \n                \n            \n            \n                \ngetAllSongs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Retrieves all liked songs from localStorage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of liked songs objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for budgets\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getbudgetSchema\n                        \n                    \n                \n            \n            \n                \ngetbudgetSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Returns the schema for budgets\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for  budgets\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for categories\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getcategorySchema\n                        \n                    \n                \n            \n            \n                \ngetcategorySchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Returns the schema for categories\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for categories\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for expenses\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getexpenseSchema\n                        \n                    \n                \n            \n            \n                \ngetexpenseSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:201\n                        \n                    \n\n\n            \n                \n                        Returns the schema for expenses\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for expenses\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getlikedSongSchema\n                        \n                    \n                \n            \n            \n                \ngetlikedSongSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:225\n                        \n                    \n\n\n            \n                \n                        Returns the schema for liked songs\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for Liked Song\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Retrieves user data from localStorage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                User object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserLikedSongsKey\n                        \n                    \n                \n            \n            \n                \ngetUserLikedSongsKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Returns the localStorage key used for user liked songs\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getuserSchema\n                        \n                    \n                \n            \n            \n                \ngetuserSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:209\n                        \n                    \n\n\n            \n                \n                        Returns the schema for user\n\n\n                        \n                            Returns :         Schema\n\n                        \n                            \n                                Schema object for user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBudgets\n                        \n                    \n                \n            \n            \n                \nupdateBudgets(budgets: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Updates the budgets in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                budgets\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of budgets to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategories\n                        \n                    \n                \n            \n            \n                \nupdateCategories(categories: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Updates the categories in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of categories to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:185\n                        \n                    \n\n\n            \n                \n                        Updates the user data in localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:30\n                        \n                    \n\n            \n                \n                    LocalStorage key for budgets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    budget_id: \"\",\n    amount: 0,\n    fromDate: \"\",\n    toDate: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:80\n                        \n                    \n\n            \n                \n                    Schema for budget\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:24\n                        \n                    \n\n            \n                \n                    LocalStorage key for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    category_id: \"\",\n    name: \"\",\n    icon: \"\",\n    color: \"\",\n    is_active: \"\",\n    user_id: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:39\n                        \n                    \n\n            \n                \n                    Schema for categories\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:27\n                        \n                    \n\n            \n                \n                    LocalStorage key for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    expense_id: \"\",\n    category_id: \"\",\n    amount: \"\",\n    date: \"\",\n    location: \"\",\n    note: \"\",\n    payment_mode: \"\",\n    time: \"\",\n    isExtraSpending: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:49\n                        \n                    \n\n            \n                \n                    Schema for expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        likedSongSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    song_id: '',\n    song_name: '',\n    year: '',\n    duration: 0,\n    language: '',\n    copyright: '',\n    albumName: '',\n    artistName: '',\n    image: '',\n    downloadUrl: '',\n    isLiked: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:88\n                        \n                    \n\n            \n                \n                    Schema for Liked song\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:33\n                        \n                    \n\n            \n                \n                    LocalStorage key for user settings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userLikedSongsKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user_liked_songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:36\n                        \n                    \n\n            \n                \n                    LocalStorage key for user Liked songs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schema\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: \"\",\n    backup_frequency: \"\",\n    email: \"\",\n    is_active: \"\",\n    is_backup: \"\",\n    last_backup: \"\",\n    name: \"\",\n    notifications: \"\",\n    user_password: \"\",\n    theme_mode: \"dark\",\n    currency: \"₹\",\n    app_version: \"0\",\n    is_app_updated: true,\n    is_show_heatmap: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:62\n                        \n                    \n\n            \n                \n                    Schema for user\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Schema interface for local storage items.\n * Defines a generic structure for syncing data with default values.\n */\nexport interface Schema {\n  /** Key-value pairs representing item properties */\n  [key: string]: any;\n}\n\n/**\n * Service for managing LocalStorage data in a structured and schema-compliant way.\n *\n * Features:\n * - Provides helper methods to get and update local storage items.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n\n  /** LocalStorage key for categories */\n  private readonly categoryKey = 'categories';\n\n  /** LocalStorage key for expenses */\n  private readonly expenseKey = 'expenses';\n\n  /** LocalStorage key for budgets */\n  private readonly budgetKey = 'budget';\n\n  /** LocalStorage key for user settings */\n  private readonly userKey = 'user';\n\n  /** LocalStorage key for user Liked songs */\n  private readonly userLikedSongsKey = 'user_liked_songs';\n\n  /** Schema for categories */\n  private readonly categorySchema: Schema = {\n    category_id: \"\",\n    name: \"\",\n    icon: \"\",\n    color: \"\",\n    is_active: \"\",\n    user_id: \"\"\n  };\n\n  /** Schema for expenses */\n  private readonly expenseSchema: Schema = {\n    expense_id: \"\",\n    category_id: \"\",\n    amount: \"\",\n    date: \"\",\n    location: \"\",\n    note: \"\",\n    payment_mode: \"\",\n    time: \"\",\n    isExtraSpending: false\n  };\n\n  /** Schema for user */\n  private readonly userSchema: Schema = {\n    id: \"\",\n    backup_frequency: \"\",\n    email: \"\",\n    is_active: \"\",\n    is_backup: \"\",\n    last_backup: \"\",\n    name: \"\",\n    notifications: \"\",\n    user_password: \"\",\n    theme_mode: \"dark\",\n    currency: \"₹\",\n    app_version: \"0\",\n    is_app_updated: true,\n    is_show_heatmap: false\n  };\n\n  /** Schema for budget */\n  private readonly budgetSchema: Schema = {\n    budget_id: \"\",\n    amount: 0,\n    fromDate: \"\",\n    toDate: \"\"\n  };\n\n  /** Schema for Liked song */\n  private readonly likedSongSchema: Schema = {\n    song_id: '',\n    song_name: '',\n    year: '',\n    duration: 0,\n    language: '',\n    copyright: '',\n    albumName: '',\n    artistName: '',\n    image: '',\n    downloadUrl: '',\n    isLiked: false,\n  };\n\n  /**\n   * Retrieves all categories from localStorage.\n   *\n   * @returns Array of category objects.\n   */\n  getAllCategories(): any[] {\n    return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n  }\n\n  /**\n   * Retrieves all budgets from localStorage.\n   *\n   * @returns Array of budget objects.\n   */\n  getAllBudgets(): any[] {\n    return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n  }\n\n  /**\n   * Retrieves user data from localStorage.\n   *\n   * @returns User object.\n   */\n  getUser(): any {\n    return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n  }\n\n  /**\n   * Retrieves all expenses from localStorage.\n   *\n   * @returns Array of expense objects.\n   */\n  getAllExpenses(): any[] {\n    return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n  }\n\n  /**\n   * Retrieves all liked songs from localStorage.\n   *\n   * @returns Array of liked songs objects.\n   */\n  getAllSongs(): any[] {\n    return JSON.parse(localStorage.getItem(this.userLikedSongsKey) || '[]');\n  }\n\n  /** Returns the localStorage key used for categories */\n  getCategoryKey(): string { return this.categoryKey; }\n\n  /** Returns the localStorage key used for expenses */\n  getExpenseKey(): string { return this.expenseKey; }\n\n  /** Returns the localStorage key used for budgets */\n  getBudgetKey(): string { return this.budgetKey; }\n\n  /** Returns the localStorage key used for user */\n  getUserKey(): string { return this.userKey; }\n\n  /** Returns the localStorage key used for user liked songs */\n  getUserLikedSongsKey(): string { return this.userLikedSongsKey; }\n\n  /**\n   * Updates the categories in localStorage.\n   *\n   * @param categories Array of categories to save.\n   */\n  updateCategories(categories: any[]): void {\n    localStorage.setItem(this.categoryKey, JSON.stringify(categories));\n  }\n\n  /**\n   * Updates the budgets in localStorage.\n   *\n   * @param budgets Array of budgets to save.\n   */\n  updateBudgets(budgets: any[]): void {\n    localStorage.setItem(this.budgetKey, JSON.stringify(budgets));\n  }\n\n  /**\n   * Updates the user data in localStorage.\n   *\n   * @param user User object to save.\n   */\n  updateUser(user: any): void {\n    localStorage.setItem(this.userKey, JSON.stringify(user));\n  }\n\n  /** Returns the schema for categories\n   * \n   * @returns Schema object for categories\n   */\n  getcategorySchema(): Schema {\n    return this.categorySchema;\n  }\n\n  /** Returns the schema for expenses\n   * \n   * @returns Schema object for expenses  \n   */\n  getexpenseSchema(): Schema {\n    return this.expenseSchema;\n  }\n\n  /** Returns the schema for user \n   * \n   * @returns Schema object for user\n  */\n  getuserSchema(): Schema {\n    return this.userSchema;\n  }\n\n  /** Returns the schema for budgets \n   * \n   * @returns Schema object for  budgets\n  */\n  getbudgetSchema(): Schema {\n    return this.budgetSchema;\n  }\n\n  /** Returns the schema for liked songs \n   * \n   * @returns Schema object for Liked Song\n  */\n  getlikedSongSchema(): Schema {\n    return this.likedSongSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SyncSchemaService.html":{"url":"injectables/SyncSchemaService.html","title":"injectable - SyncSchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SyncSchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/sync-schema.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to synchronize local storage data with the current application schema.\nEnsures that stored data conforms to the latest schema definitions.\nThis service should be invoked during application initialization.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                syncAllSchema\n                            \n                            \n                                    Private\n                                syncUser\n                            \n                            \n                                    Private\n                                syncWithSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/sync-schema.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of SyncSchemaService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for interacting with local storage keys and data.\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Checks if the code is running in a browser environment with localStorage available.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncAllSchema\n                        \n                    \n                \n            \n            \n                \nsyncAllSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Syncs user data in localStorage with a schema and updates the app version.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key for the user.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/sync-schema.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Helper function to sync any localStorage data array with a given schema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The localStorage key to sync.\n\n                                            \n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default schema to apply to missing properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { ConfigService } from '../config/config.service';\nimport { Categories } from './data/categories';\nimport { Schema } from './storage.service';\n\n/**\n * Service to synchronize local storage data with the current application schema.\n * Ensures that stored data conforms to the latest schema definitions.\n * This service should be invoked during application initialization.\n */\n@Injectable({ providedIn: 'root' })\nexport class SyncSchemaService {\n\n    /**\n     * Creates an instance of SyncSchemaService.\n     *\n     * @param storageService A service for interacting with local storage keys and data.\n     */\n    constructor(\n        private storageService: StorageService,\n        private configService: ConfigService\n    ) { }\n\n    /**\n     * Checks if the code is running in a browser environment with `localStorage` available.\n     *\n     * @returns {boolean} True if running in the browser, false otherwise.\n     */\n    private isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    syncAllSchema(): void {\n        if (this.isBrowser()) {\n            this.syncUser(this.storageService.getUserKey(), this.storageService.getuserSchema());\n            this.syncWithSchema(this.storageService.getCategoryKey(), this.storageService.getcategorySchema());\n            this.syncWithSchema(this.storageService.getExpenseKey(), this.storageService.getexpenseSchema());\n            this.syncWithSchema(this.storageService.getBudgetKey(), this.storageService.getbudgetSchema());\n            this.syncWithSchema(this.storageService.getUserLikedSongsKey(), this.storageService.getlikedSongSchema());\n        }\n    }\n\n    /**\n     * Helper function to sync any localStorage data array with a given schema.\n     *\n     * @param storageKey The localStorage key to sync.\n     * @param defaultSchema The default schema to apply to missing properties.\n     */\n    private syncWithSchema(storageKey: string, defaultSchema: Schema): void {\n        if (!this.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n        if (storageKey === this.storageService.getCategoryKey()) {\n            const pastData = JSON.parse(localStorage.getItem(this.storageService.getCategoryKey()) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    /**\n     * Syncs user data in localStorage with a schema and updates the app version.\n     *\n     * @param storageKey The localStorage key for the user.\n     * @param defaultSchema The default schema to apply.\n     */\n    private syncUser(storageKey: string, defaultSchema: Schema): void {\n        if (!this.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.configService.getVersion();\n\n        localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(syncedSettings));\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        ToastComponent\nA reusable component responsible for rendering toast notifications.\nIt integrates with ToastService to display messages dynamically\nand handles auto-dismiss after a configurable duration.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of ToastComponent.\nso that it can be accessed globally.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to register this component instance\nso that it can be accessed globally.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component's view has been fully initialized.\nRegisters this component with the ToastService so it can be controlled externally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with a message, style, and duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text content of the toast\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning), defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before the toast disappears, defaults to 3000\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n * ToastComponent\n *\n * A reusable component responsible for rendering toast notifications.\n * It integrates with `ToastService` to display messages dynamically\n * and handles auto-dismiss after a configurable duration.\n */\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent implements AfterViewInit {\n\n  /**\n   * Creates an instance of ToastComponent.\n   * @param toastService Service used to register this component instance\n   * so that it can be accessed globally.\n   */\n  constructor(private toastService: ToastService) { }\n\n  /**\n   * Lifecycle hook that runs after component's view has been fully initialized.\n   * Registers this component with the `ToastService` so it can be controlled externally.\n   */\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n\n  /**\n   * Displays a toast notification with a message, style, and duration.\n   *\n   * @param message The text content of the toast\n   * @param type The type of toast (`success` | `error` | `info` | `warning`), defaults to `'success'`\n   * @param duration Duration in milliseconds before the toast disappears, defaults to `3000`\n   */\n  showToast(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      // Clear any existing toasts\n      toastContainer.innerHTML = '';\n\n      // Define style classes for each toast type\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      // Create toast element\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      // Add message and dismiss button\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      // Auto-remove toast after the given duration\n      setTimeout(() => {\n        toast.remove();\n      }, duration);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'DownloadComponentComponent', 'selector': 'app-download-component'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'ExpenseWiseComponent', 'selector': 'app-expense-wise'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModelComponent', 'selector': 'app-form-model'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InstallAppPopupComponentComponent', 'selector': 'app-install-app-popup-component'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PlaylistMusicComponent', 'selector': 'app-playlist-music'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchMusicComponent', 'selector': 'app-search-music'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TemplatePlaygroundComponent', 'selector': 'template-playground-root'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ToastService\nA service for displaying toast notifications in the application.\nIt requires registering a ToastComponent instance so it can delegate\nshowing messages to the UI component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Registers the toast component instance.\nMust be called once, typically from the root component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Instance of ToastComponent used to render notifications\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Displays a toast message.\nExample :        Defaults to `'success'`\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The message text to display\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning)Defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before auto-hide (default: 3000)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:19\n                        \n                    \n\n            \n                \n                    Reference to the toast component instance.\nThis is registered once during app initialization.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n/**\n * ToastService\n *\n * A service for displaying toast notifications in the application.\n * It requires registering a `ToastComponent` instance so it can delegate\n * showing messages to the UI component.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  /**\n   * Reference to the toast component instance.\n   * This is registered once during app initialization.\n   */\n  private toastComponent!: ToastComponent;\n\n  /**\n   * Registers the toast component instance.\n   * Must be called once, typically from the root component.\n   *\n   * @param toast Instance of `ToastComponent` used to render notifications\n   */\n  register(toast: ToastComponent): void {\n    this.toastComponent = toast;\n  }\n\n  /**\n   * Displays a toast message.\n   *\n   * @param message The message text to display\n   * @param type The type of toast (`success` | `error` | `info` | `warning`)  \n   *             Defaults to `'success'`\n   * @param duration Duration in milliseconds before auto-hide (default: `3000`)\n   */\n  show(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    this.toastComponent?.showToast(message, type, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user profile and application settings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_app_updated\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            is_show_heatmap\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Application version associated with the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Frequency of backups (e.g., daily, weekly).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred currency code (e.g., USD, INR).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_app_updated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_app_updated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user’s app has been updated to the latest version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates if backup is enabled for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_show_heatmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_show_heatmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to show heatmap on calendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last performed backup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's display name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification preferences (e.g., enabled/disabled).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Preferred theme mode (e.g., light, dark).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password (hashed or plain depending on storage implementation).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n\n  /** Whether to show heatmap on calendar. */\n  is_show_heatmap: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/settings-components/download-component/download-component.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the structure of user data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            budgetData\n                                        \n                                \n                                \n                                        \n                                            categoryData\n                                        \n                                \n                                \n                                        \n                                            expenseData\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        budgetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budgetData:         Budget[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Budget[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Budget data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryData:         Category[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[] | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Category data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expenseData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expenseData:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Expense data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         User | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../../service/toast/toast.service';\nimport { FormModelComponent } from '../../form-model/form-model.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport { ExpenseService, Expense } from '../../../service/localStorage/expense.service';\nimport { Category, CategoryService } from '../../../service/localStorage/category.service';\nimport { UserService, User } from '../../../service/localStorage/user.service';\nimport { Budget, BudgetService } from '../../../service/localStorage/budget.service';\n\n/**\n * Interface representing the structure of user data\n */\nexport interface UserData {\n  /** User information */\n  userData: User | {},\n\n  /** Expense data */\n  expenseData: any[],\n\n  /** Category data */\n  categoryData: Category[] | [],\n  \n  /** Budget data */\n  budgetData: Budget[] | []\n};\n\n/**\n * Component responsible for exporting user expenses\n * into JSON, PDF, or Excel formats within a given date range.\n *\n * This component provides a modal dialog with a form\n * to select a date range and file type, validates the input,\n * and triggers the download of filtered expense data.\n */\n@Component({\n  selector: 'app-download-component',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormModelComponent,\n  ],\n  templateUrl: './download-component.component.html',\n  styleUrl: './download-component.component.css'\n})\nexport class DownloadComponentComponent {\n\n  /**\n   * Reactive form instance for selecting date range and file type.\n   */\n  downloadDataForm!: FormGroup;\n\n  /**\n   * Controls the visibility of the download data modal.\n   */\n  showDownloadDataModal = false;\n\n  /**\n   * Current date in `yyyy-MM-dd` format,\n   * used for validation to prevent future dates.\n   */\n  today: string;\n\n  /**\n   * Creates an instance of `DownloadComponentComponent`.\n   *\n   * @param expenseService Service used to fetch and filter expenses.\n   * @param fb Angular `FormBuilder` to build the reactive form.\n   * @param toastService Service used to show toast notifications.\n   * @param categoryService Service to fetch category data.\n   * @param userService Service to fetch user data.\n   * @param budgetService Service to fetch budget data.\n   */\n  constructor(\n    private expenseService: ExpenseService,\n    private fb: FormBuilder,\n    private toastService: ToastService,\n    private categoryService: CategoryService,\n    private userService: UserService,\n    private budgetService: BudgetService,\n  ) {\n    this.today = new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Lifecycle hook that initializes the form\n   * with default controls and validators.\n   */\n  ngOnInit(): void {\n    this.downloadDataForm = this.fb.group({\n      fromDate: ['', [Validators.required]],\n      toDate: ['', [Validators.required]],\n      fileType: ['JSON', [Validators.required]],\n    });\n  }\n\n  /**\n   * Validates the form before triggering data download.\n   *\n   * Marks all controls as touched if the form is invalid.\n   */\n  downloadData(): void {\n    if (this.downloadDataForm.invalid) {\n      this.downloadDataForm.markAllAsTouched();\n      return;\n    }\n    this.confirmAndDownload();\n  }\n\n  /**\n   * Validates date range and triggers the appropriate\n   * export function (JSON, PDF, Excel) based on user selection.\n   */\n  confirmAndDownload(): void {\n    const { fromDate, toDate, fileType } = this.downloadDataForm.value;\n\n    if (new Date(toDate)  ({\n      amount: expense.amount,\n      date: expense.date,\n      time: expense.time,\n      location: expense.location,\n      note: expense.note,\n      payment_mode: expense.payment_mode,\n      category_name: expense.category_name,\n      category_id: expense.category_id,\n      expense_id: expense.expense_id,\n      isExtraSpending: expense.isExtraSpending\n    }));\n    \n    // Prepare final data object\n    const finalData: UserData = {\n      userData: userData || {},\n      expenseData: filteredExpenseData || [],\n      categoryData: categoryData || [],\n      budgetData: budgetData || []\n    };\n\n    try {\n      if (fileType === 'JSON') {\n        const jsonData = JSON.stringify(finalData, null, 2);\n        this.triggerDownload(jsonData, 'application/json', 'json');\n        this.closeDownloadDataModal();\n        this.toastService.show('JSON downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'PDF') {\n        this.exportToPDF(filteredExpenseData, fromDate, toDate);\n        this.closeDownloadDataModal();\n        this.toastService.show('PDF downloaded successfully!', 'success', 3000);\n        return;\n      } else if (fileType === 'EXCEL') {\n        this.exportToExcel(filteredExpenseData);\n        this.closeDownloadDataModal();\n        this.toastService.show('Excel downloaded successfully!', 'success', 3000);\n        return;\n      }\n    } catch (error) {\n      console.error('Download failed', error);\n      this.toastService.show('Failed to download data', 'error');\n    }\n  }\n\n  /**\n   * Creates a file blob and triggers the browser to download it.\n   *\n   * @param content File content to download.\n   * @param mimeType MIME type of the file.\n   * @param extension File extension (json, pdf, xlsx).\n   */\n  private triggerDownload(content: string, mimeType: string, extension: string): void {\n    const blob = new Blob([content], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    link.download = `expenses-${timestamp}.${extension}`;\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens the modal and resets the download form\n   * to its initial state.\n   */\n  openDownloadDataModal(): void {\n    this.downloadDataForm.reset({\n      fromDate: '',\n      toDate: '',\n      fileType: 'JSON'\n    });\n    this.downloadDataForm.markAsPristine();\n    this.downloadDataForm.markAsUntouched();\n    this.showDownloadDataModal = true;\n  }\n\n  /**\n   * Closes the download modal.\n   */\n  closeDownloadDataModal(): void {\n    this.showDownloadDataModal = false;\n  }\n\n  /**\n   * Exports expense data to a formatted PDF file.\n   *\n   * @param data Filtered expense records.\n   * @param fromDate Start date of the report.\n   * @param toDate End date of the report.\n   */\n  private exportToPDF(data: any[], fromDate: string, toDate: string): void {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title + metadata\n    const title = 'Expenses Report';\n    const sub = `From: ${fromDate}  —  To: ${toDate}`;\n    doc.setFontSize(14);\n    doc.text(title, pageWidth / 2, 40, { align: 'center' });\n    doc.setFontSize(10);\n    doc.text(sub, pageWidth / 2, 58, { align: 'center' });\n\n    // Table headers (order matches rows below)\n    const headers = ['Index', 'Category', 'Amount', 'Date', 'Time', 'Location', 'Note', 'Payment Mode', 'Extra Spending'];\n\n    // Rows\n    const rows = data.map((exp, i) => [\n      i + 1,\n      exp.category_name,\n      exp.amount,\n      exp.date,\n      exp.time,\n      exp.location,\n      exp.note,\n      exp.payment_mode,\n      exp.isExtraSpending ? 'Yes' : 'No'\n    ]);\n\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: rows,\n      styles: { fontSize: 9, overflow: 'linebreak' },\n      headStyles: {\n        fillColor: [143, 145, 234],\n        halign: 'center',\n        valign: 'middle',\n        fontStyle: 'bold',\n        textColor: 255\n      },\n      margin: { left: 30, right: 30 },\n      bodyStyles: {\n        halign: 'center'\n      },\n      columnStyles: {\n        0: { cellWidth: 33 },                      // Index\n        1: { cellWidth: 58, halign: 'left' },      // Category\n        2: { cellWidth: 46 },                      // Amount\n        3: { cellWidth: 55 },                      // Date\n        4: { cellWidth: 50 },                      // Time\n        5: { cellWidth: 85, halign: 'left' },      // Location\n        6: { cellWidth: 110, halign: 'left' },     // Note (wraps)\n        7: { cellWidth: 48 },                      // Payment Mode\n        8: { cellWidth: 50 }                       // Extra Spending\n      }\n    });\n\n    // file name\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    doc.save(`expenses-${timestamp}.pdf`);\n  }\n\n  /**\n   * Exports expense data to an Excel file.\n   *\n   * @param data Filtered expense records.\n   */\n  private exportToExcel(data: any[]): void {\n    const excelData = data.map((exp, i) => ({\n      'Index': i + 1,\n      Category: exp.category_name,\n      Amount: exp.amount,\n      Date: exp.date,\n      Time: exp.time,\n      Location: exp.location,\n      Note: exp.note,\n      'Payment Mode': exp.payment_mode,\n      'Extra Spending': exp.isExtraSpending ? 'Yes' : 'No'\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const aoa: any[][] = [];\n\n    if (excelData.length > 0) {\n      const headerRow = Object.keys(excelData[0]);\n      aoa.push(headerRow);\n\n      for (const row of excelData) {\n        aoa.push(Object.values(row));\n      }\n    }\n\n    const worksheet = XLSX.utils.aoa_to_sheet(aoa);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Expenses');\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `expenses-${timestamp}.xlsx`;\n    XLSX.writeFile(workbook, filename);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLikedSongsService.html":{"url":"injectables/UserLikedSongsService.html","title":"injectable - UserLikedSongsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserLikedSongsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user-liked-song.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user liked songs stored in localStorage.\nFeatures:\n\nAdd, update, delete, and retrieve user liked songs.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBySongId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user-liked-song.service.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserLikedSongsService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for interacting with localStorage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Adds a new liked song to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Liked song data excluding song_id.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(song_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Deletes an user liked songs by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the user liked songs to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Retrieves all liked songs from localStorage.\n\n\n                        \n                            Returns :         Song[]\n\n                        \n                            \n                                Array of formatted {@link Song} sorted by date (newest first).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBySongId\n                        \n                    \n                \n            \n            \n                \ngetBySongId(song_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves a single liked song by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                song_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the songs to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Song | null\n\n                        \n                            \n                                The user liked songs object or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Returns the current date and time in ISO format adjusted for local time.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Local ISO string (YYYY-MM-DDTHH:MM:SS)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user-liked-song.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Checks if the environment supports localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in a browser with localStorage.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { Song } from '../../models/song.model';\n\n/**\n * Service for managing user liked songs stored in localStorage.\n *\n * Features:\n * - Add, update, delete, and retrieve user liked songs.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserLikedSongsService {\n\n    /**\n     * Creates an instance of UserLikedSongsService.\n     *\n     * @param storageService Service for interacting with localStorage.\n     */\n    constructor(private storageService: StorageService) { }\n\n    /**\n     * Checks if the environment supports localStorage.\n     *\n     * @returns True if running in a browser with localStorage.\n     */\n    private isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    /**\n     * Returns the current date and time in ISO format adjusted for local time.\n     *\n     * @returns Local ISO string (YYYY-MM-DDTHH:MM:SS)\n     */\n    getLocalISOString(): string {\n        const now = new Date();\n        const pad = (n: number) => n.toString().padStart(2, '0');\n        return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n    }\n\n    /**\n     * Retrieves all liked songs from localStorage.\n     *\n     * @returns Array of formatted {@link Song} sorted by date (newest first).\n     */\n    getAll(): Song[] {\n        if (!this.isBrowser()) return [];\n        return this.storageService.getAllSongs();\n    }\n\n    /**\n     * Adds a new liked song to localStorage.\n     *\n     * @param data Liked song data excluding `song_id`.\n     */\n    add(data: Song): void {\n        if (!this.isBrowser()) return;\n        const all: Song[] = this.getAll();\n        all.push({ ...data });\n        localStorage.setItem(this.storageService.getUserLikedSongsKey(), JSON.stringify(all));\n    }\n\n\n    /**\n     * Retrieves a single liked song by its ID.\n     *\n     * @param song_id The ID of the songs to retrieve.\n     * @returns The user liked songs object or null if not found.\n     */\n    getBySongId(song_id: string): Song | null {\n        if (!this.isBrowser()) return null;\n        return this.getAll().find(item => item.song_id === song_id) || null;\n    }\n\n    /**\n     * Deletes an user liked songs by its ID.\n     *\n     * @param song_id The ID of the user liked songs to delete.\n     */\n    delete(song_id: string): void {\n        if (!this.isBrowser()) return;\n        let all: Song[] = this.getAll();\n        all = all.filter(item => item.song_id !== song_id);\n        localStorage.setItem(this.storageService.getUserLikedSongsKey(), JSON.stringify(all));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user data and preferences in local storage.\nProvides methods to read, update, and persist user settings.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getUserData\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                            \n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for handling local storage operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user object from storage.\n\n\n                        \n                            Returns :     Record\n\n                        \n                            \n                                User data object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Retrieves full user data.\n\n\n                        \n                            Returns :         User | literal type\n\n                        \n                            \n                                The user object, or empty object if not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:105\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a specific user property by key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The value if it exists, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Checks if the service is running in a browser environment\nwith access to localStorage.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if running in the browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Updates a single user property in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The property key to update.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value to assign.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserData\n                        \n                    \n                \n            \n            \n                \nupdateUserData(user: User | literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Updates the entire user object in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new user object to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Interface representing a user profile and application settings.\n */\nexport interface User {\n  /** Unique identifier for the user. */\n  id: string;\n\n  /** Frequency of backups (e.g., daily, weekly). */\n  backup_frequency: string;\n\n  /** User's email address. */\n  email: string;\n\n  /** Whether the user account is active. */\n  is_active: string;\n\n  /** Indicates if backup is enabled for the user. */\n  is_backup: string;\n\n  /** Timestamp of the last performed backup. */\n  last_backup: string;\n\n  /** User's display name. */\n  name: string;\n\n  /** Notification preferences (e.g., enabled/disabled). */\n  notifications: string;\n\n  /** User's password (hashed or plain depending on storage implementation). */\n  user_password: string;\n\n  /** Preferred theme mode (e.g., light, dark). */\n  theme_mode: string;\n\n  /** Preferred currency code (e.g., USD, INR). */\n  currency: string;\n\n  /** Application version associated with the user. */\n  app_version: string;\n\n  /** Whether the user’s app has been updated to the latest version. */\n  is_app_updated: boolean;\n\n  /** Whether to show heatmap on calendar. */\n  is_show_heatmap: boolean;\n}\n\n/**\n * Service for managing user data and preferences in local storage.\n * Provides methods to read, update, and persist user settings.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  /**\n   * Creates an instance of UserService.\n   *\n   * @param storageService Service for handling local storage operations.\n   */\n  constructor(private storageService: StorageService) { }\n\n  /**\n   * Checks if the service is running in a browser environment\n   * with access to `localStorage`.\n   *\n   * @returns {boolean} True if running in the browser, false otherwise.\n   */\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  /**\n   * Retrieves the current user object from storage.\n   *\n   * @returns {Record} User data object, or empty object if not available.\n   */\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates a single user property in local storage.\n   *\n   * @param key The property key to update.\n   * @param value The new value to assign.\n   */\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  /**\n   * Retrieves a specific user property by key.\n   *\n   * @typeParam T The expected return type of the value.\n   * @param key The property key to retrieve.\n   * @returns {T | null} The value if it exists, otherwise `null`.\n   */\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n\n  /**\n   * Retrieves full user data.\n   *\n   * @returns {User | {}} The user object, or empty object if not available.\n   */\n  getUserData(): User | {} {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  /**\n   * Updates the entire user object in local storage.\n   *\n   * @param user The new user object to save.\n   */\n  updateUserData(user: User | {}): void {\n    if (!this.isBrowser()) return;\n    this.storageService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/component/form-model/form-model.component.ts\n            \n            component\n            FormModelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                        src/app/component/install-app-popup-component/install-app-popup-component.component.ts\n            \n            component\n            InstallAppPopupComponentComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            component\n            DownloadComponentComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/download-component/download-component.component.ts\n            \n            interface\n            UserData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/component/settings-components/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                        src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                        src/app/features/expense-wise/expense-wise.component.ts\n            \n            component\n            ExpenseWiseComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                        src/app/features/music/music-component/playlist-music/playlist-music.component.ts\n            \n            component\n            PlaylistMusicComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/features/music/music-component/search-music/search-music.component.ts\n            \n            component\n            SearchMusicComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                        src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                        src/app/models/heatMap-summary.service.ts\n            \n            interface\n            HeatmapSummary\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            Song\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            SongArtists\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            SongDownloadUrl\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/models/song.model.ts\n            \n            interface\n            SongImage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/sync-schema.service.ts\n            \n            injectable\n            SyncSchemaService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user-liked-song.service.ts\n            \n            injectable\n            UserLikedSongsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            canvg : ^4.0.3\n        \n            chart.js : ^4.5.0\n        \n            express : ^4.18.2\n        \n            jspdf : ^3.0.2\n        \n            jspdf-autotable : ^5.0.2\n        \n            lucide-angular : ^0.543.0\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            xlsx : ^0.18.5\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location (chosen from a dropdown list or manually typed)\n📝 Note (chosen from a dropdown list or manually typed)\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\nToggle the Show HeatMap switch to highlight each day based on spending intensity.\nDays are color-coded (e.g. No expense,  ₹1000) for quick insights.\nA legend below the calendar explains each color category.\nA summary table displays color, days count, and total amount for each category.\n\n\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).\n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data in pdf, json, excel formats. between the selected date range)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage (though it works as PWA).\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:\n👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n            \n                \n                    Angular Universal Node.js app engine\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n            \n                \n                    Express server\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n            \n                \n                    Browser distribution folder\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n            \n                \n                    Server distribution folder\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Application configuration\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Bootstrap the Angular application with server-specific configuration\n\n                \n            \n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n            \n                \n                    Predefined categories for the application\n\n                \n            \n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Chart.js instance\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Merged application configuration for server-side rendering\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n            \n                \n                    Server-specific application configuration\n\n                \n            \n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** \n   * Name of the application. \n   */\n  appName: 'ExpenseWise',\n\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyBkBmHCsVna6d8bPYjQQhbpdymn7_Nvm2w',\n\n  /**\n   * Current environment type.\n   * - 'local' for local development (uses localhost API endpoint)\n   * - 'live' for production (uses production API endpoint)\n   * - leave empty for automatic detection based on current window location\n   */\n  developmentEnvironment: '', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.9.21', // Current application version\n\n  /**\n   * The production (live) API base URL.\n   *\n   * Example: `https://exwiseapi.onrender.com`\n   */\n  liveAPIUrl: \"https://exwiseapi.onrender.com\",\n\n  /**\n   * The local development API base URL.\n   *\n   * Example: `http://localhost:8000`\n   */\n  localAPIUrl: \"http://localhost:8000\"\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        path: '',\n        loadComponent: () =>\n            \"import('./features/expense-wise/expense-wise.component')\\r\\n\\\n                .then(m => m.ExpenseWiseComponent)\"\n    },\n    {\n        path: 'music',\n        loadComponent: () =>\n            \"import('./features/music/music.component')\\r\\n\\\n                .then(m => m.MusicComponent)\",\n    },\n    {\n        path: 'music/search',\n        loadComponent: () =>\n            \"import('./features/music/music-component/search-music/search-music.component')\\r\\n\\\n                .then(m => m.SearchMusicComponent)\"\n    },\n    {\n        path: 'music/playlist',\n        loadComponent: () =>\n            \"import('./features/music/music-component/playlist-music/playlist-music.component')\\r\\n\\\n                .then(m => m.PlaylistMusicComponent)\"\n    },\n    { path: '**', redirectTo: '' },\n    { path: 'music/**', redirectTo: '../music' }\n]\n                    \n                \n\n            \n                \n                    Application routes configuration.\nThis configuration defines the routes for the application, including\nlazy-loaded feature modules.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n            \n                \n                    Application routes for server-side rendering\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
